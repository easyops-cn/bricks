{"version":3,"file":"chunks/eo-markdown-editor.651cb155.js","mappings":"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","sources":["webpack:///./src/markdown-editor/index.tsx"],"sourcesContent":["import React, { FC, useEffect, useMemo, useState } from \"react\";\nimport { createDecorators, type EventEmitter } from \"@next-core/element\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./markdown-editor.shadow.css\";\nimport { ObjectStoreApi_putObject } from \"@next-api-sdk/object-store-sdk\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport type { CmdKey } from \"@milkdown/core\";\nimport {\n  defaultValueCtx,\n  Editor,\n  editorViewOptionsCtx,\n  rootCtx,\n} from \"@milkdown/core\";\nimport { Milkdown, MilkdownProvider, useEditor } from \"@milkdown/react\";\nimport {\n  commonmark,\n  toggleStrongCommand,\n  toggleEmphasisCommand,\n  wrapInBulletListCommand,\n  wrapInOrderedListCommand,\n  wrapInBlockquoteCommand,\n  codeBlockSchema,\n} from \"@milkdown/preset-commonmark\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { nord } from \"@milkdown/theme-nord\";\nimport { history, redoCommand, undoCommand } from \"@milkdown/plugin-history\";\nimport { upload, uploadConfig, Uploader } from \"@milkdown/plugin-upload\";\nimport { callCommand, $view, replaceAll } from \"@milkdown/utils\";\nimport type { Node } from \"@milkdown/prose/model\";\nimport { listener, listenerCtx } from \"@milkdown/plugin-listener\";\nimport {\n  gfm,\n  toggleStrikethroughCommand,\n  insertTableCommand,\n} from \"@milkdown/preset-gfm\";\nimport { indent } from \"@milkdown/plugin-indent\";\nimport { Ctx, MilkdownPlugin } from \"@milkdown/ctx\";\nimport { prism, prismConfig } from \"@milkdown/plugin-prism\";\nimport {\n  usePluginViewFactory,\n  ProsemirrorAdapterProvider,\n  useWidgetViewFactory,\n  useNodeViewFactory,\n} from \"@prosemirror-adapter/react\";\nimport { refractor } from \"refractor/lib/common\";\nimport {\n  tableSelectorPlugin,\n  TableTooltip,\n  tableTooltip,\n  tableTooltipCtx,\n} from \"./components/TableWidget.js\";\nimport { CodeBlock } from \"./components/CodeBlock.js\";\nimport type { FormItem, FormItemProps } from \"@next-bricks/form/form-item\";\nimport { FormItemElementBase } from \"@next-shared/form\";\nimport classNames from \"classnames\";\n\nconst WrappedFormItem = wrapBrick<FormItem, FormItemProps>(\"eo-form-item\");\n\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\n\nconst MenuButton: FC<MenuButtonProps> = ({ icon, onClick, tooltip }) => {\n  return (\n    <div\n      className=\"menu-btn-box\"\n      onMouseDown={(e) => {\n        onClick?.();\n        e.preventDefault();\n      }}\n    >\n      <WrappedIcon style={{ verticalAlign: \"middle\" }} {...icon} />\n      {tooltip && <div className=\"menuIconTooltip\">{tooltip}</div>}\n    </div>\n  );\n};\n\nexport interface MenuButtonProps {\n  icon: GeneralIconProps;\n  onClick?: () => void;\n  tooltip?: string;\n}\n\nexport interface MarkdownEditorProps extends FormItemProps {\n  value?: string;\n  bucketName?: string;\n  containerStyle?: React.CSSProperties;\n  readonly?: boolean;\n  onUploadImage?: (value: ImageInfo) => void;\n  onMarkdownValueChange?: (value: string) => void;\n}\n\nexport interface ImageInfo {\n  name: string;\n  src: string;\n}\n\nconst { defineElement, property, event } = createDecorators();\n\n@defineElement(\"eo-markdown-editor\", {\n  styleTexts: [styleText],\n  alias: [\"markdown.markdown-editor\"],\n})\n\n/**\n * markdown编辑器\n * @docKind brick\n * @author kehua\n * @noInheritDoc\n * @category form-input-advanced\n */\nclass MarkdownEditor extends FormItemElementBase {\n  /**\n   * 字段名称\n   */\n  @property() accessor name: string | undefined;\n\n  /**\n   * 标签文字\n   */\n  @property() accessor label: string | undefined;\n\n  /**\n   * 是否必填\n   */\n  @property({ type: Boolean })\n  accessor required: boolean | undefined;\n\n  /**\n   * 初始值\n   * @group basic\n   */\n  @property() accessor value: string | undefined;\n\n  /**\n   * 对象存储桶名字，请在业务编排的时候与后台同学商量创建，一般一个业务需求对应一个存储桶名称。如不传则默认以base64格式转换图片\n   * @group advanced\n   */\n  @property() accessor bucketName: string | undefined;\n\n  /**\n   * 只读模式\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor readonly: boolean | undefined;\n\n  /**\n   * 外层容器样式\n   */\n  @property({\n    attribute: false,\n  })\n  accessor containerStyle: React.CSSProperties | undefined;\n\n  /**\n   * 上传图片时触发的事件\n   * @detail\n   */\n  @event({ type: \"image.upload\" })\n  accessor #uploadImage!: EventEmitter<ImageInfo>;\n\n  private handleUploadImage = (value: ImageInfo): void => {\n    this.#uploadImage.emit(value);\n  };\n\n  /**\n   * 编辑markdown触发的变化事件\n   * @detail\n   */\n  @event({ type: \"markdown.value.change\" })\n  accessor #markdownValueChange!: EventEmitter<string>;\n\n  handleMarkdownValueChange = (value: string): void => {\n    this.getFormElement()?.formStore.onChange(this.name!, value);\n    this.value = value;\n    this.#markdownValueChange.emit(value);\n  };\n\n  render() {\n    return (\n      <MilkdownProvider>\n        <ProsemirrorAdapterProvider>\n          <MarkdownEditorComponent\n            formElement={this.getFormElement()}\n            name={this.name}\n            label={this.label}\n            required={this.required}\n            curElement={this}\n            bucketName={this.bucketName}\n            value={this.value}\n            readonly={this.readonly}\n            containerStyle={this.containerStyle}\n            onUploadImage={this.handleUploadImage}\n            onMarkdownValueChange={this.handleMarkdownValueChange}\n          />\n        </ProsemirrorAdapterProvider>\n      </MilkdownProvider>\n    );\n  }\n}\n\nexport { MarkdownEditor };\n\nexport function MarkdownEditorComponent(props: MarkdownEditorProps) {\n  const {\n    bucketName,\n    containerStyle,\n    value,\n    formElement,\n    readonly,\n    onUploadImage,\n    onMarkdownValueChange,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const transformResponseToUrl = (objectName: string): string => {\n    return `/next/api/gateway/object_store.object_store.GetObject/api/v1/objectStore/bucket/${props.bucketName}/object/${objectName}`;\n  };\n\n  const uploader: Uploader = async (files: FileList, schema: any) => {\n    const images: File[] = [];\n    let nodes: Node[] = [];\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files.item(i);\n\n      if (!file) {\n        continue;\n      }\n\n      // Only handle image\n      if (!file.type.includes(\"image\")) {\n        continue;\n      }\n\n      images.push(file);\n    }\n\n    // upload file\n    try {\n      nodes = await Promise.all(\n        images.map(async (image) => {\n          const response: any = await ObjectStoreApi_putObject(\n            bucketName as string,\n            {\n              file: image,\n              width: 0,\n              height: 0,\n            }\n          );\n          const src = transformResponseToUrl(response?.objectName as string);\n          const alt = image.name;\n          onUploadImage && onUploadImage({ name: alt, src });\n          return schema.nodes.image.createAndFill({\n            src,\n            alt,\n          }) as Node;\n        })\n      );\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\"upload failed:\", err);\n    }\n\n    return nodes;\n  };\n\n  const pluginViewFactory = usePluginViewFactory();\n  const widgetViewFactory = useWidgetViewFactory();\n  const nodeViewFactory = useNodeViewFactory();\n\n  const gfmPlugins: MilkdownPlugin[] = useMemo(() => {\n    return readonly\n      ? []\n      : [\n          gfm,\n          tableTooltip,\n          tableTooltipCtx,\n          (ctx: Ctx) => async () => {\n            ctx.set(tableTooltip.key, {\n              view: pluginViewFactory({\n                component: TableTooltip,\n              }),\n            });\n          },\n          tableSelectorPlugin(widgetViewFactory),\n        ].flat();\n  }, [readonly, pluginViewFactory, widgetViewFactory]);\n\n  const { get } = useEditor((root: any) => {\n    return Editor.make()\n      .config((ctx: any) => {\n        // 配置root\n        ctx.set(rootCtx, root);\n        ctx.update(editorViewOptionsCtx, (prev: any) => ({\n          ...prev,\n          editable: () => !readonly,\n        }));\n        // 配置默认值\n        value && ctx.set(defaultValueCtx, value);\n        // 配置事件监听\n        ctx\n          .get(listenerCtx)\n          .markdownUpdated(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (ctx: any, markdown: string, prevMarkdown: string) => {\n              onMarkdownValueChange && onMarkdownValueChange(markdown);\n            }\n          )\n          .focus(() => {\n            setIsFocus(true);\n          })\n          .blur(() => {\n            setIsFocus(false);\n          });\n        // 配置文件上传,不传bucketName则默认把图片转为base64格式\n        bucketName &&\n          ctx.update(uploadConfig.key, (prev: any) => ({\n            ...prev,\n            uploader,\n          }));\n        // 支持code代码高亮\n        ctx.update(prismConfig.key, (prev: any) => ({\n          ...prev,\n          configureRefractor: () => refractor,\n        }));\n      })\n      .config(nord)\n      .use(listener)\n      .use(commonmark)\n      .use(history)\n      .use(gfm)\n      .use(indent)\n      .use(upload)\n      .use(gfmPlugins)\n      .use(prism)\n      .use(\n        readonly\n          ? []\n          : $view(codeBlockSchema.node, () =>\n              nodeViewFactory({ component: CodeBlock })\n            )\n      );\n  }, []);\n\n  useEffect(() => {\n    // 当编辑器没有处在focus状态，即初始化或者通过其他构件重置值时，才允许调用replaceAll修改其值\n    // 防止与用户输入动作起冲突\n    if (formElement && value !== undefined && !isFocus) {\n      get()?.action(replaceAll(value));\n    }\n  }, [get(), value]);\n\n  function call<T>(command: CmdKey<T>, payload?: T) {\n    return get()?.action(callCommand(command, payload));\n  }\n\n  const MenuBtnData: MenuButtonProps[] = [\n    {\n      icon: { lib: \"antd\", icon: \"undo\" },\n      onClick: () => call(undoCommand.key),\n      tooltip: \"撤销\",\n    },\n    {\n      icon: { lib: \"antd\", icon: \"redo\" },\n      onClick: () => call(redoCommand.key),\n      tooltip: \"重做\",\n    },\n    {\n      icon: { lib: \"antd\", icon: \"bold\" },\n      onClick: () => call(toggleStrongCommand.key),\n      tooltip: \"粗体\",\n    },\n    {\n      icon: { lib: \"antd\", icon: \"italic\" },\n      onClick: () => call(toggleEmphasisCommand.key),\n      tooltip: \"斜体\",\n    },\n    {\n      icon: { lib: \"antd\", icon: \"strikethrough\" },\n      onClick: () => call(toggleStrikethroughCommand.key),\n      tooltip: \"删除线\",\n    },\n    {\n      icon: { lib: \"antd\", icon: \"table\" },\n      onClick: () => call(insertTableCommand.key),\n      tooltip: \"表格\",\n    },\n    {\n      icon: { lib: \"antd\", icon: \"unordered-list\" },\n      onClick: () => call(wrapInBulletListCommand.key),\n      tooltip: \"无序列表\",\n    },\n    {\n      icon: { lib: \"antd\", icon: \"ordered-list\" },\n      onClick: () => call(wrapInOrderedListCommand.key),\n      tooltip: \"有序列表\",\n    },\n    {\n      icon: { lib: \"fa\", icon: \"quote-right\" },\n      onClick: () => call(wrapInBlockquoteCommand.key),\n      tooltip: \"块引用\",\n    },\n  ];\n\n  return (\n    <WrappedFormItem exportparts=\"message\" {...props}>\n      <div\n        className={classNames(\"markdown-container\", {\n          readonly,\n        })}\n        style={containerStyle}\n      >\n        {!readonly && (\n          <div className=\"menu-container-outter\">\n            <div className=\"menu-container-inner prose\">\n              {MenuBtnData.map((item) => (\n                <MenuButton {...item} key={JSON.stringify(item.icon)} />\n              ))}\n            </div>\n          </div>\n        )}\n        <div className=\"editor-container\">\n          <Milkdown />\n        </div>\n      </div>\n    </WrappedFormItem>\n  );\n}\n"],"names":["WrappedFormItem","wrapBrick","WrappedIcon","MenuButton","_ref","icon","onClick","tooltip","React","className","onMouseDown","e","preventDefault","_extends","style","verticalAlign","defineElement","property","event","createDecorators","_MarkdownEditor","_A","WeakMap","_B","_C","_D","_E","_F","_G","_H","_MarkdownEditor_brand","WeakSet","_I","MarkdownEditor","FormItemElementBase","constructor","arguments","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_init_name","_init_extra_name","_init_label","_init_extra_label","_init_required","_init_extra_required","_init_value","_init_extra_value","_init_bucketName","_init_extra_bucketName","_init_readonly","_init_extra_readonly","_init_containerStyle","_init_extra_containerStyle","_init_uploadImage","_defineProperty","_init_extra_uploadImage","value","_classPrivateGetter","this","_get_uploadImage","emit","_init_markdownValueChange","_init_extra_markdownValueChange","_this$getFormElement","getFormElement","formStore","onChange","name","_get_markdownValueChange","_classPrivateFieldGet","v","_classPrivateFieldSet","label","required","bucketName","readonly","containerStyle","render","MilkdownProvider","ProsemirrorAdapterProvider","MarkdownEditorComponent","formElement","curElement","onUploadImage","handleUploadImage","onMarkdownValueChange","handleMarkdownValueChange","props","isFocus","setIsFocus","useState","uploader","async","files","schema","images","nodes","i","length","file","item","type","includes","push","Promise","all","map","response","ObjectStoreApi_putObject","image","width","height","src","objectName","alt","createAndFill","err","console","error","pluginViewFactory","usePluginViewFactory","widgetViewFactory","useWidgetViewFactory","nodeViewFactory","useNodeViewFactory","gfmPlugins","useMemo","gfm","tableTooltip","tableTooltipCtx","ctx","set","key","view","component","TableTooltip","tableSelectorPlugin","flat","get","useEditor","root","Editor","make","config","rootCtx","update","editorViewOptionsCtx","prev","editable","defaultValueCtx","listenerCtx","markdownUpdated","markdown","prevMarkdown","focus","blur","uploadConfig","prismConfig","configureRefractor","refractor","nord","use","listener","commonmark","history","indent","upload","prism","$view","codeBlockSchema","node","CodeBlock","call","command","payload","_get2","action","callCommand","useEffect","_get","undefined","replaceAll","MenuBtnData","lib","undoCommand","redoCommand","toggleStrongCommand","toggleEmphasisCommand","toggleStrikethroughCommand","insertTableCommand","wrapInBulletListCommand","wrapInOrderedListCommand","wrapInBlockquoteCommand","exportparts","classNames","JSON","stringify","Milkdown","_MarkdownEditor2","_set_uploadImage","_set_markdownValueChange","c","_initClass","_applyDecs","styleTexts","styleText","alias","Boolean","attribute","o","_","has","_checkInRHS"],"sourceRoot":""}
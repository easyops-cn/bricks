{"version":3,"file":"chunks/661.eb38763e.js","mappings":"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","sources":["webpack:///../../node_modules/css-loader/dist/runtime/api.js","webpack:///../../node_modules/css-loader/dist/runtime/noSourceMaps.js","webpack:///../../node_modules/extend/index.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/setFunctionName.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/applyDecs2311.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/assertClassBrand.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/checkInRHS.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/checkPrivateRedeclaration.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///../../node_modules/bail/index.js","webpack:///../../node_modules/comma-separated-tokens/index.js","webpack:///../../node_modules/decode-named-character-reference/index.dom.js","webpack:///../../node_modules/property-information/lib/util/schema.js","webpack:///../../node_modules/property-information/lib/util/merge.js","webpack:///../../node_modules/property-information/lib/util/create.js","webpack:///../../node_modules/property-information/lib/xlink.js","webpack:///../../node_modules/property-information/lib/xml.js","webpack:///../../node_modules/property-information/lib/util/case-sensitive-transform.js","webpack:///../../node_modules/property-information/lib/util/case-insensitive-transform.js","webpack:///../../node_modules/property-information/lib/xmlns.js","webpack:///../../node_modules/property-information/lib/aria.js","webpack:///../../node_modules/property-information/lib/html.js","webpack:///../../node_modules/property-information/lib/svg.js","webpack:///../../node_modules/property-information/index.js","webpack:///../../node_modules/property-information/lib/find.js","webpack:///../../node_modules/property-information/lib/normalize.js","webpack:///../../node_modules/property-information/lib/util/defined-info.js","webpack:///../../node_modules/property-information/lib/util/info.js","webpack:///../../node_modules/property-information/lib/util/types.js","webpack:///../../node_modules/refractor/lang/clike.js","webpack:///../../node_modules/refractor/lang/c.js","webpack:///../../node_modules/refractor/lang/cpp.js","webpack:///../../node_modules/refractor/lang/arduino.js","webpack:///../../node_modules/refractor/lang/bash.js","webpack:///../../node_modules/refractor/lang/csharp.js","webpack:///../../node_modules/refractor/lang/markup.js","webpack:///../../node_modules/refractor/lang/css.js","webpack:///../../node_modules/refractor/lang/diff.js","webpack:///../../node_modules/refractor/lang/go.js","webpack:///../../node_modules/refractor/lang/ini.js","webpack:///../../node_modules/refractor/lang/java.js","webpack:///../../node_modules/refractor/lang/regex.js","webpack:///../../node_modules/refractor/lang/javascript.js","webpack:///../../node_modules/refractor/lang/json.js","webpack:///../../node_modules/refractor/lang/kotlin.js","webpack:///../../node_modules/refractor/lang/less.js","webpack:///../../node_modules/refractor/lang/lua.js","webpack:///../../node_modules/refractor/lang/makefile.js","webpack:///../../node_modules/refractor/lang/yaml.js","webpack:///../../node_modules/refractor/lang/markdown.js","webpack:///../../node_modules/refractor/lang/objectivec.js","webpack:///../../node_modules/refractor/lang/perl.js","webpack:///../../node_modules/refractor/lang/markup-templating.js","webpack:///../../node_modules/refractor/lang/php.js","webpack:///../../node_modules/refractor/lang/python.js","webpack:///../../node_modules/refractor/lang/r.js","webpack:///../../node_modules/refractor/lang/ruby.js","webpack:///../../node_modules/refractor/lang/rust.js","webpack:///../../node_modules/refractor/lang/sass.js","webpack:///../../node_modules/refractor/lang/scss.js","webpack:///../../node_modules/refractor/lang/sql.js","webpack:///../../node_modules/refractor/lang/swift.js","webpack:///../../node_modules/refractor/lang/typescript.js","webpack:///../../node_modules/refractor/lang/basic.js","webpack:///../../node_modules/refractor/lang/vbnet.js","webpack:///../../node_modules/hast-util-parse-selector/lib/index.js","webpack:///../../node_modules/hastscript/lib/core.js","webpack:///../../node_modules/hastscript/lib/html.js","webpack:///../../node_modules/character-entities-legacy/index.js","webpack:///../../node_modules/character-reference-invalid/index.js","webpack:///../../node_modules/is-decimal/index.js","webpack:///../../node_modules/is-hexadecimal/index.js","webpack:///../../node_modules/is-alphanumerical/index.js","webpack:///../../node_modules/is-alphabetical/index.js","webpack:///../../node_modules/parse-entities/lib/index.js","webpack:///../../node_modules/refractor/lib/prism-core.js","webpack:///../../node_modules/refractor/lib/core.js","webpack:///../../node_modules/refractor/lib/common.js","webpack:///../../node_modules/space-separated-tokens/index.js","webpack:///../../node_modules/trough/index.js"],"sourcesContent":["\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (i) {\n  return i[1];\n};","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import _typeof from \"./typeof.js\";\nexport default function setFunctionName(e, t, n) {\n  \"symbol\" == _typeof(t) && (t = (t = t.description) ? \"[\" + t + \"]\" : \"\");\n  try {\n    Object.defineProperty(e, \"name\", {\n      configurable: !0,\n      value: n ? n + \" \" + t : t\n    });\n  } catch (e) {}\n  return e;\n}","import _typeof from \"./typeof.js\";\nimport checkInRHS from \"./checkInRHS.js\";\nimport setFunctionName from \"./setFunctionName.js\";\nimport toPropertyKey from \"./toPropertyKey.js\";\nexport default function applyDecs2311(e, t, n, r, o, i) {\n  var a,\n    c,\n    u,\n    s,\n    f,\n    l,\n    p,\n    d = Symbol.metadata || Symbol[\"for\"](\"Symbol.metadata\"),\n    m = Object.defineProperty,\n    h = Object.create,\n    y = [h(null), h(null)],\n    v = t.length;\n  function g(t, n, r) {\n    return function (o, i) {\n      n && (i = o, o = e);\n      for (var a = 0; a < t.length; a++) i = t[a].apply(o, r ? [i] : []);\n      return r ? i : o;\n    };\n  }\n  function b(e, t, n, r) {\n    if (\"function\" != typeof e && (r || void 0 !== e)) throw new TypeError(t + \" must \" + (n || \"be\") + \" a function\" + (r ? \"\" : \" or undefined\"));\n    return e;\n  }\n  function applyDec(e, t, n, r, o, i, u, s, f, l, p) {\n    function d(e) {\n      if (!p(e)) throw new TypeError(\"Attempted to access private element on non-instance\");\n    }\n    var h = [].concat(t[0]),\n      v = t[3],\n      w = !u,\n      D = 1 === o,\n      S = 3 === o,\n      j = 4 === o,\n      E = 2 === o;\n    function I(t, n, r) {\n      return function (o, i) {\n        return n && (i = o, o = e), r && r(o), P[t].call(o, i);\n      };\n    }\n    if (!w) {\n      var P = {},\n        k = [],\n        F = S ? \"get\" : j || D ? \"set\" : \"value\";\n      if (f ? (l || D ? P = {\n        get: setFunctionName(function () {\n          return v(this);\n        }, r, \"get\"),\n        set: function set(e) {\n          t[4](this, e);\n        }\n      } : P[F] = v, l || setFunctionName(P[F], r, E ? \"\" : F)) : l || (P = Object.getOwnPropertyDescriptor(e, r)), !l && !f) {\n        if ((c = y[+s][r]) && 7 != (c ^ o)) throw Error(\"Decorating two elements with the same name (\" + P[F].name + \") is not supported yet\");\n        y[+s][r] = o < 3 ? 1 : o;\n      }\n    }\n    for (var N = e, O = h.length - 1; O >= 0; O -= n ? 2 : 1) {\n      var z = b(h[O], \"A decorator\", \"be\", !0),\n        A = n ? h[O - 1] : void 0,\n        H = {},\n        K = {\n          kind: [\"field\", \"accessor\", \"method\", \"getter\", \"setter\", \"class\"][o],\n          name: r,\n          metadata: a,\n          addInitializer: function (e, t) {\n            if (e.v) throw Error(\"attempted to call addInitializer after decoration was finished\");\n            b(t, \"An initializer\", \"be\", !0), i.push(t);\n          }.bind(null, H)\n        };\n      if (w) c = z.call(A, N, K), H.v = 1, b(c, \"class decorators\", \"return\") && (N = c);else if (K[\"static\"] = s, K[\"private\"] = f, c = K.access = {\n        has: f ? p.bind() : function (e) {\n          return r in e;\n        }\n      }, j || (c.get = f ? E ? function (e) {\n        return d(e), P.value;\n      } : I(\"get\", 0, d) : function (e) {\n        return e[r];\n      }), E || S || (c.set = f ? I(\"set\", 0, d) : function (e, t) {\n        e[r] = t;\n      }), N = z.call(A, D ? {\n        get: P.get,\n        set: P.set\n      } : P[F], K), H.v = 1, D) {\n        if (\"object\" == _typeof(N) && N) (c = b(N.get, \"accessor.get\")) && (P.get = c), (c = b(N.set, \"accessor.set\")) && (P.set = c), (c = b(N.init, \"accessor.init\")) && k.unshift(c);else if (void 0 !== N) throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or undefined\");\n      } else b(N, (l ? \"field\" : \"method\") + \" decorators\", \"return\") && (l ? k.unshift(N) : P[F] = N);\n    }\n    return o < 2 && u.push(g(k, s, 1), g(i, s, 0)), l || w || (f ? D ? u.splice(-1, 0, I(\"get\", s), I(\"set\", s)) : u.push(E ? P[F] : b.call.bind(P[F])) : m(e, r, P)), N;\n  }\n  function w(e) {\n    return m(e, d, {\n      configurable: !0,\n      enumerable: !0,\n      value: a\n    });\n  }\n  return void 0 !== i && (a = i[d]), a = h(null == a ? null : a), f = [], l = function l(e) {\n    e && f.push(g(e));\n  }, p = function p(t, r) {\n    for (var i = 0; i < n.length; i++) {\n      var a = n[i],\n        c = a[1],\n        l = 7 & c;\n      if ((8 & c) == t && !l == r) {\n        var p = a[2],\n          d = !!a[3],\n          m = 16 & c;\n        applyDec(t ? e : e.prototype, a, m, d ? \"#\" + p : toPropertyKey(p), l, l < 2 ? [] : t ? s = s || [] : u = u || [], f, !!t, d, r, t && d ? function (t) {\n          return checkInRHS(t) === e;\n        } : o);\n      }\n    }\n  }, p(8, 0), p(0, 0), p(8, 1), p(0, 1), l(u), l(s), c = f, v || w(e), {\n    e: c,\n    get c() {\n      var n = [];\n      return v && [w(e = applyDec(e, [t], r, e.name, 5, n)), g(n, 1)];\n    }\n  };\n}","export default function _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}","import _typeof from \"./typeof.js\";\nexport default function _checkInRHS(e) {\n  if (Object(e) !== e) throw TypeError(\"right-hand side of 'in' should be an object, got \" + (null !== e ? _typeof(e) : \"null\"));\n  return e;\n}","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}","import assertClassBrand from \"./assertClassBrand.js\";\nexport default function _classPrivateFieldGet2(s, a) {\n  return s.get(assertClassBrand(s, a));\n}","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nexport default function _classPrivateFieldInitSpec(obj, privateMap, value) {\n  checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}","import assertClassBrand from \"./assertClassBrand.js\";\nexport default function _classPrivateFieldSet2(s, a, r) {\n  return s.set(assertClassBrand(s, a), r), r;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","// @ts-nocheck\nclike.displayName = 'clike'\nclike.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword:\n      /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nc.displayName = 'c'\nc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function c(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern:\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    string: {\n      // https://en.cppreference.com/w/c/language/string_literal\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    char: {\n      // https://en.cppreference.com/w/c/language/character_constant\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern:\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [\n          {\n            // highlight the path of the include statement as a string\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\n            lookbehind: true\n          },\n          Prism.languages.c['string']\n        ],\n        char: Prism.languages.c['char'],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n            lookbehind: true\n          },\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n            lookbehind: true,\n            alias: 'function'\n          }\n        ],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('c', 'function', {\n    // highlight predefined macros as constants\n    constant:\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n  })\n  delete Prism.languages.c['boolean']\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\ncpp.displayName = 'cpp'\ncpp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        },\n        // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n        // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n        // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:false|true)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:import|module)\\s+)/.source +\n            '(?:' +\n            // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' +\n            // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCpp from './cpp.js'\narduino.displayName = 'arduino'\narduino.aliases = ['ino']\n\n/** @type {import('../core.js').Syntax} */\nexport default function arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword:\n      /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n    constant:\n      /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n    builtin:\n      /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n  })\n  Prism.languages.ino = Prism.languages.arduino\n}\n","// @ts-nocheck\nbash.displayName = 'bash'\nbash.aliases = ['sh', 'shell']\n\n/** @type {import('../core.js').Syntax} */\nexport default function bash(Prism) {\n  ;(function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars =\n      '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b'\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n    }\n\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [\n        // [0]: Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          greedy: true,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [\n              {\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                lookbehind: true\n              },\n              /^\\$\\(\\(/\n            ],\n            number:\n              /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator:\n              /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        },\n        // [1]: Command Substitution\n        {\n          pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        },\n        // [2]: Brace expansion\n        {\n          pattern: /\\$\\{[^}]+\\}/,\n          greedy: true,\n          inside: {\n            operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n            punctuation: /[\\[\\]]/,\n            environment: {\n              pattern: RegExp('(\\\\{)' + envVars),\n              lookbehind: true,\n              alias: 'constant'\n            }\n          }\n        },\n        /\\$(?:\\w+|[#?*!@$])/\n      ],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity:\n        /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n    }\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [\n        // a) function foo {\n        // b) foo() {\n        // c) function foo() {\n        // but not “foo {”\n        {\n          // a) and c)\n          pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n          lookbehind: true,\n          alias: 'function'\n        },\n        {\n          // b)\n          pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n          alias: 'function'\n        }\n      ],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight parameter names as variables\n      parameter: {\n        pattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [\n        // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        // Here-document with quotes around the tag\n        // → No expansion (so no “inside”).\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            bash: commandAfterHeredoc\n          }\n        },\n        // “Normal” string\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n          pattern:\n            /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n          pattern: /(^|[^$\\\\])'[^']*'/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n          pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n          greedy: true,\n          inside: {\n            entity: insideString.entity\n          }\n        }\n      ],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern:\n          /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    }\n    commandAfterHeredoc.inside = Prism.languages.bash\n\n    /* Patterns in command substitution. */\n    var toBeCopied = [\n      'comment',\n      'function-name',\n      'for-or-select',\n      'assign-left',\n      'parameter',\n      'string',\n      'environment',\n      'function',\n      'keyword',\n      'builtin',\n      'boolean',\n      'file-descriptor',\n      'operator',\n      'punctuation',\n      'number'\n    ]\n    var inside = insideString.variable[1].inside\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]]\n    }\n    Prism.languages.sh = Prism.languages.bash\n    Prism.languages.shell = Prism.languages.bash\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['cs', 'dotnet']\n\n/** @type {import('../core.js').Syntax} */\nexport default function csharp(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    }\n\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    }\n\n    // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    )\n\n    // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    }\n\n    // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    })\n\n    // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n\n    // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    })\n\n    // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source\n    // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ])\n    // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ],\n      char: {\n        pattern: RegExp(character),\n        greedy: true\n      }\n    })\n    Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n  })(Prism)\n}\n","// @ts-nocheck\nmarkup.displayName = 'markup'\nmarkup.aliases = ['atom', 'html', 'mathml', 'rss', 'ssml', 'svg', 'xml']\n\n/** @type {import('../core.js').Syntax} */\nexport default function markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup\n\n  // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","// @ts-nocheck\ncss.displayName = 'css'\ncss.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: RegExp(\n          '@[\\\\w-](?:' +\n            /[^;{\\s\"']|\\s+(?!\\s)/.source +\n            '|' +\n            string.source +\n            ')*?' +\n            /(?:;|(?=\\s*\\{))/.source\n        ),\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          }\n          // See rest below\n        }\n      },\n\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n","// @ts-nocheck\ndiff.displayName = 'diff'\ndiff.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n        // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m,\n        // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ]\n\n      // deleted, inserted, unchanged, diff\n    }\n\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    }\n\n    // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    })\n\n    // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngo.displayName = 'go'\ngo.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function go(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n    number: [\n      // binary and octal integers\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n      // hexadecimal integers and floats\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      // decimal integers and floats\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n    ],\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n  })\n  Prism.languages.insertBefore('go', 'string', {\n    char: {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","// @ts-nocheck\nini.displayName = 'ini'\nini.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njava.displayName = 'java'\njava.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function java(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/\n\n    // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source\n\n    // based on the java naming conventions\n    var className = {\n      pattern: RegExp(\n        /(^|[^\\w.])/.source +\n          classNamePrefix +\n          /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source\n      ),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [\n        className,\n        {\n          // variables, parameters, and constructor references\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            /(^|[^\\w.])/.source +\n              classNamePrefix +\n              /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/\n                .source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        },\n        {\n          // class names based on keyword\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/\n              .source +\n              classNamePrefix +\n              /[A-Z]\\w*\\b/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      },\n      constant: /\\b[A-Z][A-Z_\\d]+\\b/\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      import: [\n        {\n          pattern: RegExp(\n            /(\\bimport\\s+)/.source +\n              classNamePrefix +\n              /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source\n          ),\n          lookbehind: true,\n          inside: {\n            namespace: className.inside.namespace,\n            punctuation: /\\./,\n            operator: /\\*/,\n            'class-name': /\\w+/\n          }\n        },\n        {\n          pattern: RegExp(\n            /(\\bimport\\s+static\\s+)/.source +\n              classNamePrefix +\n              /(?:\\w+|\\*)(?=\\s*;)/.source\n          ),\n          lookbehind: true,\n          alias: 'static',\n          inside: {\n            namespace: className.inside.namespace,\n            static: /\\b\\w+$/,\n            punctuation: /\\./,\n            operator: /\\*/,\n            'class-name': /\\w+/\n          }\n        }\n      ],\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nregex.displayName = 'regex'\nregex.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar)\n\n    // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\n\n/** @type {import('../core.js').Syntax} */\nexport default function javascript(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: {\n      pattern: RegExp(\n        /(^|[^\\w$])/.source +\n          '(?:' +\n          // constant\n          (/NaN|Infinity/.source +\n            '|' +\n            // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source +\n            '|' +\n            // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n            '|' +\n            // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n            '|' +\n            // decimal bigint\n            /\\d+(?:_\\d+)*n/.source +\n            '|' +\n            // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n              .source) +\n          ')' +\n          /(?![\\w$])/.source\n      ),\n      lookbehind: true\n    },\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: RegExp(\n        // lookbehind\n        // eslint-disable-next-line regexp/no-dupe-characters-character-class\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n          // Regex pattern:\n          // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n          // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n          // with the only syntax, so we have to define 2 different regex patterns.\n          /\\//.source +\n          '(?:' +\n          /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/\n            .source +\n          '|' +\n          // `v` flag syntax. This supports 3 levels of nested character classes.\n          /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/\n            .source +\n          ')' +\n          // lookahead\n          /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/\n            .source\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'string-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    }\n  })\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'literal-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n      lookbehind: true,\n      alias: 'property'\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript')\n\n    // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","// @ts-nocheck\njson.displayName = 'json'\njson.aliases = ['webmanifest']\n\n/** @type {import('../core.js').Syntax} */\nexport default function json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\n\n/** @type {import('../core.js').Syntax} */\nexport default function kotlin(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nless.displayName = 'less'\nless.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function less(Prism) {\n  Prism.register(refractorCss)\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      },\n      // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","// @ts-nocheck\nlua.displayName = 'lua'\nlua.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","// @ts-nocheck\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","// @ts-nocheck\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\n\n/** @type {import('../core.js').Syntax} */\nexport default function yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/\n    // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/\n    // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)'\n    // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\n\n/** @type {import('../core.js').Syntax} */\nexport default function markdown(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'front-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\n        inside\n      ) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] =\n            Prism.languages.markdown[inside]\n        }\n      })\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp')\n            // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang\n\n            // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(env.content.value, grammar, codeLang)\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    }\n\n    // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '')\n\n      // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          }\n\n          // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = ['objc']\n\n/** @type {import('../core.js').Syntax} */\nexport default function objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string: {\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n  delete Prism.languages.objectivec['class-name']\n  Prism.languages.objc = Prism.languages.objectivec\n}\n","// @ts-nocheck\nperl.displayName = 'perl'\nperl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function perl(Prism) {\n  ;(function (Prism) {\n    var brackets =\n      /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/\n        .source\n    Prism.languages.perl = {\n      comment: [\n        {\n          // POD\n          pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n        {\n          pattern: RegExp(\n            /\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // q/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                // q a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                // q(...)\n                // q{...}\n                // q[...]\n                // q<...>\n                brackets\n              ].join('|') +\n              ')'\n          ),\n          greedy: true\n        },\n        // \"...\", `...`\n        {\n          pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true\n        },\n        // '...'\n        // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n        {\n          pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n          greedy: true\n        }\n      ],\n      regex: [\n        {\n          pattern: RegExp(\n            /\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // m/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                // m a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                // m(...)\n                // m{...}\n                // m[...]\n                // m<...>\n                brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngc]*/.source\n          ),\n          greedy: true\n        },\n        // The lookbehinds prevent -s from breaking\n        {\n          pattern: RegExp(\n            /(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // s/.../.../\n                // eslint-disable-next-line regexp/strict\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/\n                  .source,\n                // s a...a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/\n                  .source,\n                // s(...)(...)\n                // s{...}{...}\n                // s[...][...]\n                // s<...><...>\n                // s(...)[...]\n                brackets + /\\s*/.source + brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngcer]*/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        },\n        // /.../\n        // The look-ahead tries to prevent two divisions on\n        // the same line from being highlighted as regex.\n        // This does not support multi-line regex.\n        {\n          pattern:\n            /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n          greedy: true\n        }\n      ],\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n        // ${^POSTMATCH}\n        /[&*$@%]\\{\\^[A-Z]+\\}/,\n        // $^V\n        /[&*$@%]\\^[A-Z_]/,\n        // ${...}\n        /[&*$@%]#?(?=\\{)/,\n        // $foo\n        /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/,\n        // $1\n        /[&*$@%]\\d+/,\n        // $_, @_, %!\n        // The negative lookahead prevents from breaking the %= operator\n        /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n      ],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      'v-string': {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /(\\bsub[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator:\n        /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nmarkupTemplating.displayName = 'markup-templating'\nmarkupTemplating.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function markupTemplating(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder\n\n            // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            }\n\n            // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          })\n\n          // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          }\n\n          // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nphp.displayName = 'php'\nphp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */\n  ;(function (Prism) {\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\n    var constant = [\n      {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'boolean'\n      },\n      {\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n        greedy: true,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n        greedy: true,\n        lookbehind: true\n      },\n      /\\b(?:null)\\b/i,\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n    ]\n    var number =\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    var operator =\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\n    var punctuation = /[{}\\[\\](),:;]/\n    Prism.languages.php = {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      },\n      comment: comment,\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n      package: {\n        pattern:\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      'class-name-definition': {\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'function-definition': {\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n          alias: 'type-casting',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|never|object|self|static|string|void)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n          alias: 'type-declaration',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          // yield from\n          pattern: /(\\byield\\s+)from\\b/i,\n          lookbehind: true\n        },\n        // `class` is always a keyword unlike other keywords\n        /\\bclass\\b/i,\n        {\n          // https://www.php.net/manual/en/reserved.keywords.php\n          //\n          // keywords cannot be preceded by \"->\"\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n          pattern:\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n          lookbehind: true\n        }\n      ],\n      'argument-name': {\n        pattern: /([(,]\\s*)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-declaration'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n          alias: ['class-name-fully-qualified', 'static-context'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-hint'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: ['class-name-fully-qualified', 'return-type'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      ],\n      constant: constant,\n      function: {\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      property: {\n        pattern: /(->\\s*)\\w+/,\n        lookbehind: true\n      },\n      number: number,\n      operator: operator,\n      punctuation: punctuation\n    }\n    var string_interpolation = {\n      pattern:\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n      lookbehind: true,\n      inside: Prism.languages.php\n    }\n    var string = [\n      {\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n        alias: 'nowdoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      {\n        pattern:\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation\n        }\n      },\n      {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        alias: 'backtick-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        alias: 'single-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        alias: 'double-quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: string_interpolation\n        }\n      }\n    ]\n    Prism.languages.insertBefore('php', 'variable', {\n      string: string,\n      attribute: {\n        pattern:\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n        greedy: true,\n        inside: {\n          'attribute-content': {\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n            lookbehind: true,\n            // inside can appear subset of php\n            inside: {\n              comment: comment,\n              string: string,\n              'attribute-class-name': [\n                {\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                  alias: 'class-name',\n                  greedy: true,\n                  lookbehind: true\n                },\n                {\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                  alias: ['class-name', 'class-name-fully-qualified'],\n                  greedy: true,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\\\/\n                  }\n                }\n              ],\n              constant: constant,\n              number: number,\n              operator: operator,\n              punctuation: punctuation\n            }\n          },\n          delimiter: {\n            pattern: /^#\\[|\\]$/,\n            alias: 'punctuation'\n          }\n        }\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern =\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\npython.displayName = 'python'\npython.aliases = ['py']\n\n/** @type {import('../core.js').Syntax} */\nexport default function python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n","// @ts-nocheck\nr.displayName = 'r'\nr.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\n\n/** @type {import('../core.js').Syntax} */\nexport default function ruby(Prism) {\n  Prism.register(refractorClike)\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern:\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator:\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    })\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n    delete Prism.languages.ruby.function\n    var percentExpression =\n      '(?:' +\n      [\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n      ].join('|') +\n      ')'\n    var symbolName =\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\n        .source\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [\n        {\n          pattern: RegExp(\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [\n        {\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [\n        {\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?/\n              }\n            },\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?'|'$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      'command-literal': [\n        {\n          pattern: RegExp(/%x/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        },\n        {\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        }\n      ]\n    })\n    delete Prism.languages.ruby.string\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    })\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","// @ts-nocheck\nrust.displayName = 'rust'\nrust.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function rust(Prism) {\n  ;(function (Prism) {\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\n    for (var i = 0; i < 2; i++) {\n      // support 4 levels of nested comments\n      multilineComment = multilineComment.replace(/<self>/g, function () {\n        return multilineComment\n      })\n    }\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return /[^\\s\\S]/.source\n    })\n    Prism.languages.rust = {\n      comment: [\n        {\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      string: {\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n        greedy: true\n      },\n      attribute: {\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          string: null // see below\n        }\n      },\n\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'closure-punctuation': {\n            pattern: /^\\||\\|$/,\n            alias: 'punctuation'\n          },\n          rest: null // see below\n        }\n      },\n\n      'lifetime-annotation': {\n        pattern: /'\\w+/,\n        alias: 'symbol'\n      },\n      'fragment-specifier': {\n        pattern: /(\\$\\w+:)[a-z]+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      variable: /\\$\\w+/,\n      'function-definition': {\n        pattern: /(\\bfn\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'type-definition': {\n        pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'module-declaration': [\n        {\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n          lookbehind: true,\n          alias: 'namespace'\n        },\n        {\n          pattern:\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /::/\n          }\n        }\n      ],\n      keyword: [\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n        /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n        // primitives and str\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n        /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n      ],\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n      // and Rust's naming conventions recommend snake_case anyway.\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n      macro: {\n        pattern: /\\b\\w+!/,\n        alias: 'property'\n      },\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n      'class-name': /\\b[A-Z]\\w*\\b/,\n      namespace: {\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n    }\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\n    Prism.languages.rust['attribute'].inside['string'] =\n      Prism.languages.rust['string']\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nsass.displayName = 'sass'\nsass.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function sass(Prism) {\n  Prism.register(refractorCss)\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important\n\n    // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nscss.displayName = 'scss'\nscss.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function scss(Prism) {\n  Prism.register(refractorCss)\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/\n        // See rest below\n      }\n    },\n\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern:\n        /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n      {\n        pattern: /( )(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    'module-modifier': {\n      pattern: /\\b(?:as|hide|show|with)\\b/i,\n      alias: 'keyword'\n    },\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n","// @ts-nocheck\nsql.displayName = 'sql'\nsql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [\n      {\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n        greedy: true\n      },\n      /@[\\w.$]+/\n    ],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    identifier: {\n      pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        punctuation: /^`|`$/\n      }\n    },\n    function:\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword:\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","// @ts-nocheck\nswift.displayName = 'swift'\nswift.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function swift(Prism) {\n  Prism.languages.swift = {\n    comment: {\n      // Nested comments are supported up to 2 levels\n      pattern:\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-literal': [\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n      {\n        pattern: RegExp(\n          /(^|[^\"#])/.source +\n            '(?:' +\n            // single-line string\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\n              .source +\n            '|' +\n            // multi-line string\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\n              .source +\n            ')' +\n            /(?![\"#])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\\\($/,\n            alias: 'punctuation'\n          },\n          punctuation: /\\\\(?=[\\r\\n])/,\n          string: /[\\s\\S]+/\n        }\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\"#])(#+)/.source +\n            '(?:' +\n            // single-line string\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\n              .source +\n            '|' +\n            // multi-line string\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\n            ')' +\n            '\\\\2'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\#+\\($/,\n            alias: 'punctuation'\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    ],\n    directive: {\n      // directives with conditions\n      pattern: RegExp(\n        /#/.source +\n          '(?:' +\n          (/(?:elseif|if)\\b/.source +\n            '(?:[ \\t]*' +\n            // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\n              .source +\n            ')+') +\n          '|' +\n          /(?:else|endif)\\b/.source +\n          ')'\n      ),\n      alias: 'property',\n      inside: {\n        'directive-name': /^#\\w+/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        operator: /!|&&|\\|\\||[<>]=?/,\n        punctuation: /[(),]/\n      }\n    },\n    literal: {\n      pattern:\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n      alias: 'constant'\n    },\n    'other-directive': {\n      pattern: /#\\w+\\b/,\n      alias: 'property'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'atrule'\n    },\n    'function-definition': {\n      pattern: /(\\bfunc\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    label: {\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n      pattern:\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n      lookbehind: true,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    nil: {\n      pattern: /\\bnil\\b/,\n      alias: 'constant'\n    },\n    'short-argument': /\\$\\d+\\b/,\n    omit: {\n      pattern: /\\b_\\b/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n    // This regex only supports ASCII operators.\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n    punctuation: /[{}[\\]();,.:\\\\]/\n  }\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\n    rule.inside['interpolation'].inside = Prism.languages.swift\n  })\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\n\n/** @type {import('../core.js').Syntax} */\nexport default function typescript(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern:\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n\n      builtin:\n        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n    })\n\n    // The keywords TypeScript adds to JavaScript\n    Prism.languages.typescript.keyword.push(\n      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n      // keywords that have to be followed by an identifier\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n      // This is for `import type *, {}`\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n    )\n\n    // doesn't work with TS because TS is too complex\n    delete Prism.languages.typescript['parameter']\n    delete Prism.languages.typescript['literal-property']\n\n    // a version of typescript specifically for highlighting types\n    var typeInside = Prism.languages.extend('typescript', {})\n    delete typeInside['class-name']\n    Prism.languages.typescript['class-name'].inside = typeInside\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern:\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    })\n    Prism.languages.ts = Prism.languages.typescript\n  })(Prism)\n}\n","// @ts-nocheck\nbasic.displayName = 'basic'\nbasic.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","// @ts-nocheck\nimport refractorBasic from './basic.js'\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    punctuation: /[,;:(){}]/\n  })\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","// @ts-nocheck\n\n// This is a slimmed down version of `prism-core.js`, to remove globals,\n// document, workers, `util.encode`, `Token.stringify`\n\n// Private helper vars\nvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i\nvar uniqueId = 0\n\n// The grammar object for plaintext\nvar plainTextGrammar = {}\n\nvar _ = {\n  /**\n   * A namespace for utility methods.\n   *\n   * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n   * change or disappear at any time.\n   *\n   * @namespace\n   * @memberof Prism\n   */\n  util: {\n    /**\n     * Returns the name of the type of the given value.\n     *\n     * @param {any} o\n     * @returns {string}\n     * @example\n     * type(null)      === 'Null'\n     * type(undefined) === 'Undefined'\n     * type(123)       === 'Number'\n     * type('foo')     === 'String'\n     * type(true)      === 'Boolean'\n     * type([1, 2])    === 'Array'\n     * type({})        === 'Object'\n     * type(String)    === 'Function'\n     * type(/abc+/)    === 'RegExp'\n     */\n    type: function (o) {\n      return Object.prototype.toString.call(o).slice(8, -1)\n    },\n\n    /**\n     * Returns a unique number for the given object. Later calls will still return the same number.\n     *\n     * @param {Object} obj\n     * @returns {number}\n     */\n    objId: function (obj) {\n      if (!obj['__id']) {\n        Object.defineProperty(obj, '__id', {value: ++uniqueId})\n      }\n      return obj['__id']\n    },\n\n    /**\n     * Creates a deep clone of the given object.\n     *\n     * The main intended use of this function is to clone language definitions.\n     *\n     * @param {T} o\n     * @param {Record<number, any>} [visited]\n     * @returns {T}\n     * @template T\n     */\n    clone: function deepClone(o, visited) {\n      visited = visited || {}\n\n      var clone\n      var id\n      switch (_.util.type(o)) {\n        case 'Object':\n          id = _.util.objId(o)\n          if (visited[id]) {\n            return visited[id]\n          }\n          clone = /** @type {Record<string, any>} */ ({})\n          visited[id] = clone\n\n          for (var key in o) {\n            if (o.hasOwnProperty(key)) {\n              clone[key] = deepClone(o[key], visited)\n            }\n          }\n\n          return /** @type {any} */ (clone)\n\n        case 'Array':\n          id = _.util.objId(o)\n          if (visited[id]) {\n            return visited[id]\n          }\n          clone = []\n          visited[id] = clone\n\n          o.forEach(function (v, i) {\n            clone[i] = deepClone(v, visited)\n          })\n\n          return /** @type {any} */ (clone)\n\n        default:\n          return o\n      }\n    }\n  },\n\n  /**\n   * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n   *\n   * @namespace\n   * @memberof Prism\n   * @public\n   */\n  languages: {\n    /**\n     * The grammar for plain, unformatted text.\n     */\n    plain: plainTextGrammar,\n    plaintext: plainTextGrammar,\n    text: plainTextGrammar,\n    txt: plainTextGrammar,\n\n    /**\n     * Creates a deep copy of the language with the given id and appends the given tokens.\n     *\n     * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n     * will be overwritten at its original position.\n     *\n     * ## Best practices\n     *\n     * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n     * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n     * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n     *\n     * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n     * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n     *\n     * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n     * @param {Grammar} redef The new tokens to append.\n     * @returns {Grammar} The new language created.\n     * @public\n     * @example\n     * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n     *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n     *     // at its original position\n     *     'comment': { ... },\n     *     // CSS doesn't have a 'color' token, so this token will be appended\n     *     'color': /\\b(?:red|green|blue)\\b/\n     * });\n     */\n    extend: function (id, redef) {\n      var lang = _.util.clone(_.languages[id])\n\n      for (var key in redef) {\n        lang[key] = redef[key]\n      }\n\n      return lang\n    },\n\n    /**\n     * Inserts tokens _before_ another token in a language definition or any other grammar.\n     *\n     * ## Usage\n     *\n     * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n     * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n     * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n     * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n     * this:\n     *\n     * ```js\n     * Prism.languages.markup.style = {\n     *     // token\n     * };\n     * ```\n     *\n     * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n     * before existing tokens. For the CSS example above, you would use it like this:\n     *\n     * ```js\n     * Prism.languages.insertBefore('markup', 'cdata', {\n     *     'style': {\n     *         // token\n     *     }\n     * });\n     * ```\n     *\n     * ## Special cases\n     *\n     * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n     * will be ignored.\n     *\n     * This behavior can be used to insert tokens after `before`:\n     *\n     * ```js\n     * Prism.languages.insertBefore('markup', 'comment', {\n     *     'comment': Prism.languages.markup.comment,\n     *     // tokens after 'comment'\n     * });\n     * ```\n     *\n     * ## Limitations\n     *\n     * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n     * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n     * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n     * deleting properties which is necessary to insert at arbitrary positions.\n     *\n     * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n     * Instead, it will create a new object and replace all references to the target object with the new one. This\n     * can be done without temporarily deleting properties, so the iteration order is well-defined.\n     *\n     * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n     * you hold the target object in a variable, then the value of the variable will not change.\n     *\n     * ```js\n     * var oldMarkup = Prism.languages.markup;\n     * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n     *\n     * assert(oldMarkup !== Prism.languages.markup);\n     * assert(newMarkup === Prism.languages.markup);\n     * ```\n     *\n     * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n     * object to be modified.\n     * @param {string} before The key to insert before.\n     * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n     * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n     * object to be modified.\n     *\n     * Defaults to `Prism.languages`.\n     * @returns {Grammar} The new grammar object.\n     * @public\n     */\n    insertBefore: function (inside, before, insert, root) {\n      root = root || /** @type {any} */ (_.languages)\n      var grammar = root[inside]\n      /** @type {Grammar} */\n      var ret = {}\n\n      for (var token in grammar) {\n        if (grammar.hasOwnProperty(token)) {\n          if (token == before) {\n            for (var newToken in insert) {\n              if (insert.hasOwnProperty(newToken)) {\n                ret[newToken] = insert[newToken]\n              }\n            }\n          }\n\n          // Do not insert token which also occur in insert. See #1525\n          if (!insert.hasOwnProperty(token)) {\n            ret[token] = grammar[token]\n          }\n        }\n      }\n\n      var old = root[inside]\n      root[inside] = ret\n\n      // Update references in other language definitions\n      _.languages.DFS(_.languages, function (key, value) {\n        if (value === old && key != inside) {\n          this[key] = ret\n        }\n      })\n\n      return ret\n    },\n\n    // Traverse a language definition with Depth First Search\n    DFS: function DFS(o, callback, type, visited) {\n      visited = visited || {}\n\n      var objId = _.util.objId\n\n      for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n          callback.call(o, i, o[i], type || i)\n\n          var property = o[i]\n          var propertyType = _.util.type(property)\n\n          if (propertyType === 'Object' && !visited[objId(property)]) {\n            visited[objId(property)] = true\n            DFS(property, callback, null, visited)\n          } else if (propertyType === 'Array' && !visited[objId(property)]) {\n            visited[objId(property)] = true\n            DFS(property, callback, i, visited)\n          }\n        }\n      }\n    }\n  },\n\n  plugins: {},\n\n  /**\n   * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n   * and the language definitions to use, and returns a string with the HTML produced.\n   *\n   * The following hooks will be run:\n   * 1. `before-tokenize`\n   * 2. `after-tokenize`\n   * 3. `wrap`: On each {@link Token}.\n   *\n   * @param {string} text A string with the code to be highlighted.\n   * @param {Grammar} grammar An object containing the tokens to use.\n   *\n   * Usually a language definition like `Prism.languages.markup`.\n   * @param {string} language The name of the language definition passed to `grammar`.\n   * @returns {string} The highlighted HTML.\n   * @memberof Prism\n   * @public\n   * @example\n   * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n   */\n  highlight: function (text, grammar, language) {\n    var env = {\n      code: text,\n      grammar: grammar,\n      language: language\n    }\n    _.hooks.run('before-tokenize', env)\n    if (!env.grammar) {\n      throw new Error('The language \"' + env.language + '\" has no grammar.')\n    }\n    env.tokens = _.tokenize(env.code, env.grammar)\n    _.hooks.run('after-tokenize', env)\n    return Token.stringify(_.util.encode(env.tokens), env.language)\n  },\n\n  /**\n   * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n   * and the language definitions to use, and returns an array with the tokenized code.\n   *\n   * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n   *\n   * This method could be useful in other contexts as well, as a very crude parser.\n   *\n   * @param {string} text A string with the code to be highlighted.\n   * @param {Grammar} grammar An object containing the tokens to use.\n   *\n   * Usually a language definition like `Prism.languages.markup`.\n   * @returns {TokenStream} An array of strings and tokens, a token stream.\n   * @memberof Prism\n   * @public\n   * @example\n   * let code = `var foo = 0;`;\n   * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n   * tokens.forEach(token => {\n   *     if (token instanceof Prism.Token && token.type === 'number') {\n   *         console.log(`Found numeric literal: ${token.content}`);\n   *     }\n   * });\n   */\n  tokenize: function (text, grammar) {\n    var rest = grammar.rest\n    if (rest) {\n      for (var token in rest) {\n        grammar[token] = rest[token]\n      }\n\n      delete grammar.rest\n    }\n\n    var tokenList = new LinkedList()\n    addAfter(tokenList, tokenList.head, text)\n\n    matchGrammar(text, tokenList, grammar, tokenList.head, 0)\n\n    return toArray(tokenList)\n  },\n\n  /**\n   * @namespace\n   * @memberof Prism\n   * @public\n   */\n  hooks: {\n    all: {},\n\n    /**\n     * Adds the given callback to the list of callbacks for the given hook.\n     *\n     * The callback will be invoked when the hook it is registered for is run.\n     * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n     *\n     * One callback function can be registered to multiple hooks and the same hook multiple times.\n     *\n     * @param {string} name The name of the hook.\n     * @param {HookCallback} callback The callback function which is given environment variables.\n     * @public\n     */\n    add: function (name, callback) {\n      var hooks = _.hooks.all\n\n      hooks[name] = hooks[name] || []\n\n      hooks[name].push(callback)\n    },\n\n    /**\n     * Runs a hook invoking all registered callbacks with the given environment variables.\n     *\n     * Callbacks will be invoked synchronously and in the order in which they were registered.\n     *\n     * @param {string} name The name of the hook.\n     * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n     * @public\n     */\n    run: function (name, env) {\n      var callbacks = _.hooks.all[name]\n\n      if (!callbacks || !callbacks.length) {\n        return\n      }\n\n      for (var i = 0, callback; (callback = callbacks[i++]); ) {\n        callback(env)\n      }\n    }\n  },\n\n  Token: Token\n}\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n  /**\n   * The type of the token.\n   *\n   * This is usually the key of a pattern in a {@link Grammar}.\n   *\n   * @type {string}\n   * @see GrammarToken\n   * @public\n   */\n  this.type = type\n  /**\n   * The strings or tokens contained by this token.\n   *\n   * This will be a token stream if the pattern matched also defined an `inside` grammar.\n   *\n   * @type {string | TokenStream}\n   * @public\n   */\n  this.content = content\n  /**\n   * The alias(es) of the token.\n   *\n   * @type {string|string[]}\n   * @see GrammarToken\n   * @public\n   */\n  this.alias = alias\n  // Copy of the full string this token was created from\n  this.length = (matchedStr || '').length | 0\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n  pattern.lastIndex = pos\n  var match = pattern.exec(text)\n  if (match && lookbehind && match[1]) {\n    // change the match to remove the text matched by the Prism lookbehind group\n    var lookbehindLength = match[1].length\n    match.index += lookbehindLength\n    match[0] = match[0].slice(lookbehindLength)\n  }\n  return match\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n  for (var token in grammar) {\n    if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n      continue\n    }\n\n    var patterns = grammar[token]\n    patterns = Array.isArray(patterns) ? patterns : [patterns]\n\n    for (var j = 0; j < patterns.length; ++j) {\n      if (rematch && rematch.cause == token + ',' + j) {\n        return\n      }\n\n      var patternObj = patterns[j]\n      var inside = patternObj.inside\n      var lookbehind = !!patternObj.lookbehind\n      var greedy = !!patternObj.greedy\n      var alias = patternObj.alias\n\n      if (greedy && !patternObj.pattern.global) {\n        // Without the global flag, lastIndex won't work\n        var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0]\n        patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g')\n      }\n\n      /** @type {RegExp} */\n      var pattern = patternObj.pattern || patternObj\n\n      for (\n        // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos;\n        currentNode !== tokenList.tail;\n        pos += currentNode.value.length, currentNode = currentNode.next\n      ) {\n        if (rematch && pos >= rematch.reach) {\n          break\n        }\n\n        var str = currentNode.value\n\n        if (tokenList.length > text.length) {\n          // Something went terribly wrong, ABORT, ABORT!\n          return\n        }\n\n        if (str instanceof Token) {\n          continue\n        }\n\n        var removeCount = 1 // this is the to parameter of removeBetween\n        var match\n\n        if (greedy) {\n          match = matchPattern(pattern, pos, text, lookbehind)\n          if (!match || match.index >= text.length) {\n            break\n          }\n\n          var from = match.index\n          var to = match.index + match[0].length\n          var p = pos\n\n          // find the node that contains the match\n          p += currentNode.value.length\n          while (from >= p) {\n            currentNode = currentNode.next\n            p += currentNode.value.length\n          }\n          // adjust pos (and p)\n          p -= currentNode.value.length\n          pos = p\n\n          // the current node is a Token, then the match starts inside another Token, which is invalid\n          if (currentNode.value instanceof Token) {\n            continue\n          }\n\n          // find the last node which is affected by this match\n          for (\n            var k = currentNode;\n            k !== tokenList.tail && (p < to || typeof k.value === 'string');\n            k = k.next\n          ) {\n            removeCount++\n            p += k.value.length\n          }\n          removeCount--\n\n          // replace with the new match\n          str = text.slice(pos, p)\n          match.index -= pos\n        } else {\n          match = matchPattern(pattern, 0, str, lookbehind)\n          if (!match) {\n            continue\n          }\n        }\n\n        // eslint-disable-next-line no-redeclare\n        var from = match.index\n        var matchStr = match[0]\n        var before = str.slice(0, from)\n        var after = str.slice(from + matchStr.length)\n\n        var reach = pos + str.length\n        if (rematch && reach > rematch.reach) {\n          rematch.reach = reach\n        }\n\n        var removeFrom = currentNode.prev\n\n        if (before) {\n          removeFrom = addAfter(tokenList, removeFrom, before)\n          pos += before.length\n        }\n\n        removeRange(tokenList, removeFrom, removeCount)\n\n        var wrapped = new Token(\n          token,\n          inside ? _.tokenize(matchStr, inside) : matchStr,\n          alias,\n          matchStr\n        )\n        currentNode = addAfter(tokenList, removeFrom, wrapped)\n\n        if (after) {\n          addAfter(tokenList, currentNode, after)\n        }\n\n        if (removeCount > 1) {\n          // at least one Token object was removed, so we have to do some rematching\n          // this can only happen if the current pattern is greedy\n\n          /** @type {RematchOptions} */\n          var nestedRematch = {\n            cause: token + ',' + j,\n            reach: reach\n          }\n          matchGrammar(\n            text,\n            tokenList,\n            grammar,\n            currentNode.prev,\n            pos,\n            nestedRematch\n          )\n\n          // the reach might have been extended because of the rematching\n          if (rematch && nestedRematch.reach > rematch.reach) {\n            rematch.reach = nestedRematch.reach\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n  /** @type {LinkedListNode<T>} */\n  var head = {value: null, prev: null, next: null}\n  /** @type {LinkedListNode<T>} */\n  var tail = {value: null, prev: head, next: null}\n  head.next = tail\n\n  /** @type {LinkedListNode<T>} */\n  this.head = head\n  /** @type {LinkedListNode<T>} */\n  this.tail = tail\n  this.length = 0\n}\n\n/**\n * Adds a new node with the given value to the list.\n *\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n  // assumes that node != list.tail && values.length >= 0\n  var next = node.next\n\n  var newNode = {value: value, prev: node, next: next}\n  node.next = newNode\n  next.prev = newNode\n  list.length++\n\n  return newNode\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n *\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n  var next = node.next\n  for (var i = 0; i < count && next !== list.tail; i++) {\n    next = next.next\n  }\n  node.next = next\n  next.prev = node\n  list.length -= i\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n  var array = []\n  var node = list.head.next\n  while (node !== list.tail) {\n    array.push(node.value)\n    node = node.next\n  }\n  return array\n}\n\nexport const Prism = _\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","/**\n * @typedef _Token A hidden Prism token\n * @property {string} type\n * @property {string} content\n * @property {string} alias\n * @property {number} length\n *\n * @typedef _Env A hidden Prism environment\n * @property {string} type\n * @property {string} tag\n * @property {Text|RefractorElement|Array<Text|RefractorElement>} content\n * @property {Array<string>} classes\n * @property {Record<string, string>} attributes\n * @property {string} language\n *\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {Omit<Element, 'children'> & {children: Array<RefractorElement|Text>}} RefractorElement\n * @typedef {Omit<Root, 'children'> & {children: Array<RefractorElement|Text>}} RefractorRoot\n *\n * @typedef {import('prismjs').Languages} Languages\n * @typedef {import('prismjs').Grammar} Grammar Whatever this is, Prism handles it.\n * @typedef {((prism: unknown) => void) & {displayName: string, aliases?: Array<string>}} Syntax A refractor syntax function\n *\n * @typedef Refractor Virtual syntax highlighting\n * @property {highlight} highlight\n * @property {alias} alias\n * @property {register} register\n * @property {registered} registered\n * @property {listLanguages} listLanguages\n * @property {Languages} languages\n */\n\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nimport {h} from 'hastscript'\nimport {parseEntities} from 'parse-entities'\nimport {Prism} from './prism-core.js'\n\nconst own = {}.hasOwnProperty\n\n// Inherit.\nfunction Refractor() {}\n\nRefractor.prototype = Prism\n\n/** @type {Refractor} */\n// @ts-expect-error: TS is wrong.\nexport const refractor = new Refractor()\n\n// Create.\nrefractor.highlight = highlight\nrefractor.register = register\nrefractor.alias = alias\nrefractor.registered = registered\nrefractor.listLanguages = listLanguages\n\n// @ts-expect-error Overwrite Prism.\nrefractor.util.encode = encode\n// @ts-expect-error Overwrite Prism.\nrefractor.Token.stringify = stringify\n\n/**\n * Highlight `value` (code) as `language` (programming language).\n *\n * @param {string} value\n *   Code to highlight.\n * @param {string|Grammar} language\n *   Programming language name, alias, or grammar.\n * @returns {RefractorRoot}\n *   Node representing highlighted code.\n */\nfunction highlight(value, language) {\n  if (typeof value !== 'string') {\n    throw new TypeError('Expected `string` for `value`, got `' + value + '`')\n  }\n\n  /** @type {Grammar} */\n  let grammar\n  /** @type {string|undefined} */\n  let name\n\n  // `name` is a grammar object.\n  // This was called internally by Prism.js before 1.28.0.\n  /* c8 ignore next 2 */\n  if (language && typeof language === 'object') {\n    grammar = language\n  } else {\n    name = language\n\n    if (typeof name !== 'string') {\n      throw new TypeError('Expected `string` for `name`, got `' + name + '`')\n    }\n\n    if (own.call(refractor.languages, name)) {\n      grammar = refractor.languages[name]\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered')\n    }\n  }\n\n  return {\n    type: 'root',\n    // @ts-expect-error: we hacked Prism to accept and return the things we want.\n    children: Prism.highlight.call(refractor, value, grammar, name)\n  }\n}\n\n/**\n * Register a syntax.\n *\n * @param {Syntax} syntax\n *   Language function made for refractor, as in, the files in\n *   `refractor/lang/*.js`.\n * @returns {void}\n */\nfunction register(syntax) {\n  if (typeof syntax !== 'function' || !syntax.displayName) {\n    throw new Error('Expected `function` for `syntax`, got `' + syntax + '`')\n  }\n\n  // Do not duplicate registrations.\n  if (!own.call(refractor.languages, syntax.displayName)) {\n    syntax(refractor)\n  }\n}\n\n/**\n * Register aliases for already registered languages.\n *\n * @param {Record<string, string|Array<string>>|string} language\n * @param {string|Array<string>} [alias]\n * @returns {void}\n */\nfunction alias(language, alias) {\n  const languages = refractor.languages\n  /** @type {Record<string, string|Array<string>>} */\n  let map = {}\n\n  if (typeof language === 'string') {\n    if (alias) {\n      map[language] = alias\n    }\n  } else {\n    map = language\n  }\n\n  /** @type {string} */\n  let key\n\n  for (key in map) {\n    if (own.call(map, key)) {\n      const value = map[key]\n      const list = typeof value === 'string' ? [value] : value\n      let index = -1\n\n      while (++index < list.length) {\n        languages[list[index]] = languages[key]\n      }\n    }\n  }\n}\n\n/**\n * Check whether an `alias` or `language` is registered.\n *\n * @param {string} aliasOrLanguage\n * @returns {boolean}\n */\nfunction registered(aliasOrLanguage) {\n  if (typeof aliasOrLanguage !== 'string') {\n    throw new TypeError(\n      'Expected `string` for `aliasOrLanguage`, got `' + aliasOrLanguage + '`'\n    )\n  }\n\n  return own.call(refractor.languages, aliasOrLanguage)\n}\n\n/**\n * List all registered languages (names and aliases).\n *\n * @returns {Array<string>}\n */\nfunction listLanguages() {\n  const languages = refractor.languages\n  /** @type {Array<string>} */\n  const list = []\n  /** @type {string} */\n  let language\n\n  for (language in languages) {\n    if (\n      own.call(languages, language) &&\n      typeof languages[language] === 'object'\n    ) {\n      list.push(language)\n    }\n  }\n\n  return list\n}\n\n/**\n * @param {string|_Token|Array<string|_Token>} value\n * @param {string} language\n * @returns {Text|RefractorElement|Array<Text|RefractorElement>}\n */\nfunction stringify(value, language) {\n  if (typeof value === 'string') {\n    return {type: 'text', value}\n  }\n\n  if (Array.isArray(value)) {\n    /** @type {Array<Text|RefractorElement>} */\n    const result = []\n    let index = -1\n\n    while (++index < value.length) {\n      if (\n        value[index] !== '' &&\n        value[index] !== null &&\n        value[index] !== undefined\n      ) {\n        // @ts-expect-error Assume no sub-arrays.\n        result.push(stringify(value[index], language))\n      }\n    }\n\n    return result\n  }\n\n  /** @type {_Env} */\n  const env = {\n    type: value.type,\n    content: stringify(value.content, language),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language\n  }\n\n  if (value.alias) {\n    env.classes.push(\n      ...(typeof value.alias === 'string' ? [value.alias] : value.alias)\n    )\n  }\n\n  // @ts-expect-error Prism.\n  refractor.hooks.run('wrap', env)\n\n  // @ts-expect-error Hush, it’s fine.\n  return h(\n    env.tag + '.' + env.classes.join('.'),\n    attributes(env.attributes),\n    env.content\n  )\n}\n\n/**\n * @template {unknown} T\n * @param {T} tokens\n * @returns {T}\n */\nfunction encode(tokens) {\n  return tokens\n}\n\n/**\n * @param {Record<string, string>} attrs\n * @returns {Record<string, string>}\n */\nfunction attributes(attrs) {\n  /** @type {string} */\n  let key\n\n  for (key in attrs) {\n    if (own.call(attrs, key)) {\n      attrs[key] = parseEntities(attrs[key])\n    }\n  }\n\n  return attrs\n}\n","/**\n * @typedef {import('./core.js').RefractorRoot} RefractorRoot\n * @typedef {import('./core.js').RefractorElement} RefractorElement\n * @typedef {import('./core.js').Text} Text\n * @typedef {import('./core.js').Grammar} Grammar\n * @typedef {import('./core.js').Syntax} Syntax\n */\nimport clike from '../lang/clike.js'\nimport c from '../lang/c.js'\nimport cpp from '../lang/cpp.js'\nimport arduino from '../lang/arduino.js'\nimport bash from '../lang/bash.js'\nimport csharp from '../lang/csharp.js'\nimport markup from '../lang/markup.js'\nimport css from '../lang/css.js'\nimport diff from '../lang/diff.js'\nimport go from '../lang/go.js'\nimport ini from '../lang/ini.js'\nimport java from '../lang/java.js'\nimport regex from '../lang/regex.js'\nimport javascript from '../lang/javascript.js'\nimport json from '../lang/json.js'\nimport kotlin from '../lang/kotlin.js'\nimport less from '../lang/less.js'\nimport lua from '../lang/lua.js'\nimport makefile from '../lang/makefile.js'\nimport yaml from '../lang/yaml.js'\nimport markdown from '../lang/markdown.js'\nimport objectivec from '../lang/objectivec.js'\nimport perl from '../lang/perl.js'\nimport markupTemplating from '../lang/markup-templating.js'\nimport php from '../lang/php.js'\nimport python from '../lang/python.js'\nimport r from '../lang/r.js'\nimport ruby from '../lang/ruby.js'\nimport rust from '../lang/rust.js'\nimport sass from '../lang/sass.js'\nimport scss from '../lang/scss.js'\nimport sql from '../lang/sql.js'\nimport swift from '../lang/swift.js'\nimport typescript from '../lang/typescript.js'\nimport basic from '../lang/basic.js'\nimport vbnet from '../lang/vbnet.js'\nimport {refractor} from './core.js'\n\nrefractor.register(clike)\nrefractor.register(c)\nrefractor.register(cpp)\nrefractor.register(arduino)\nrefractor.register(bash)\nrefractor.register(csharp)\nrefractor.register(markup)\nrefractor.register(css)\nrefractor.register(diff)\nrefractor.register(go)\nrefractor.register(ini)\nrefractor.register(java)\nrefractor.register(regex)\nrefractor.register(javascript)\nrefractor.register(json)\nrefractor.register(kotlin)\nrefractor.register(less)\nrefractor.register(lua)\nrefractor.register(makefile)\nrefractor.register(yaml)\nrefractor.register(markdown)\nrefractor.register(objectivec)\nrefractor.register(perl)\nrefractor.register(markupTemplating)\nrefractor.register(php)\nrefractor.register(python)\nrefractor.register(r)\nrefractor.register(ruby)\nrefractor.register(rust)\nrefractor.register(sass)\nrefractor.register(scss)\nrefractor.register(sql)\nrefractor.register(swift)\nrefractor.register(typescript)\nrefractor.register(basic)\nrefractor.register(vbnet)\n\nexport {refractor} from './core.js'\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n"],"names":["module","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","id","_k","push","hasOwn","Object","prototype","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","deep","setFunctionName","e","t","n","description","applyDecs2311","r","o","a","c","u","s","f","l","p","d","Symbol","metadata","m","h","create","y","v","g","apply","b","TypeError","applyDec","w","D","S","j","E","I","P","F","get","set","Error","N","O","z","A","H","K","kind","addInitializer","bind","access","has","init","unshift","splice","toPropertyKey","checkInRHS","_assertClassBrand","_checkInRHS","_checkPrivateRedeclaration","privateCollection","_classPrivateFieldGet2","_classPrivateFieldInitSpec","privateMap","_classPrivateFieldSet2","toPrimitive","String","_typeof","iterator","bail","error","parse","tokens","input","index","indexOf","start","end","token","slice","trim","stringify","values","settings","padRight","padLeft","element","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","charCodeAt","Schema","property","normal","space","merge","definitions","assign","own","definition","prop","properties","info","transform","attributes","mustUseProperty","includes","normalize","attribute","xlink","_","toLowerCase","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","number","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","label","lang","language","loading","loop","low","manifest","max","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","style","tabIndex","title","translate","type","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","valid","dash","cap","find","schema","Type","test","charAt","rest","replace","camelcase","toUpperCase","dashes","kebab","$0","checks","keys","DefinedInfo","super","mark","check","defined","Info","powers","increment","clike","Prism","languages","comment","lookbehind","greedy","inside","punctuation","keyword","function","register","insertBefore","macro","alias","directive","expression","constant","cpp","modName","source","RegExp","generic","arduino","builtin","ino","bash","envVars","commandAfterHeredoc","insideString","environment","variable","entity","shebang","parameter","toBeCopied","sh","shell","csharp","replacements","re","flags","nested","depthLog2","keywordKinds","keywordsToPattern","words","typeDeclarationKeywords","keywords","nonTypeKeywords","nonContextualKeywords","nestedRound","genericName","identifier","array","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","character","regularString","verbatimString","range","namespace","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolation","interpolationRound","dotnet","cs","markup","prolog","doctype","cdata","tag","hooks","add","env","tagName","includedCdataInside","def","attrName","mathml","ssml","atom","rss","css","atrule","rule","url","selector","important","addInlined","addAttribute","diff","coord","PREFIXES","unchanged","forEach","exec","line","go","ini","section","java","classNamePrefix","annotation","generics","import","static","regex","specialEscape","escape","rangeChar","groupName","backreference","anchor","group","quantifier","alternation","javascript","hashbang","js","json","null","webmanifest","kotlin","interpolationInside","kt","kts","less","lua","makefile","yaml","anchorOrAlias","plainKey","createValuePattern","scalar","datetime","yml","markdown","inner","createInline","tableCell","tableRow","tableLine","blockquote","table","hr","bold","italic","strike","walkTokens","codeLang","codeBlock","classes","cls","match","grammar","highlight","plugins","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","getElementById","fromCodePoint","fromCharCode","md","objectivec","objc","perl","brackets","filehandle","markupTemplating","getPlaceholder","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","before","substring","middle","Token","tokenize","after","replacement","php","delimiter","package","string_interpolation","python","decorator","py","ellipsis","ruby","percentExpression","symbolName","symbol","command","rb","rust","multilineComment","sass","scss","parent","statement","sql","swift","literal","nil","omit","typescript","at","ts","basic","vbnet","displayName","aliases","search","buttonTypes","Set","addProperty","Number","isNaN","parsePrimitive","finalResult","addChild","nodes","children","node","defaultTagName","props","previous","lastIndex","subvalue","parseSelector","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","messages","parseEntities","additional","point","indent","lines","queue","position","column","now","following","characterReferenceCharacters","characters","terminated","namedReference","reference","nonTerminated","warning","reason","referenceCode","parseInt","output","disallowed","flush","next","referenceContext","warningContext","textContext","uniqueId","plainTextGrammar","util","objId","deepClone","visited","plain","plaintext","txt","redef","insert","root","ret","newToken","old","DFS","callback","propertyType","run","encode","tokenList","LinkedList","addAfter","head","matchGrammar","tail","toArray","all","callbacks","matchedStr","matchPattern","pos","lookbehindLength","startNode","startPos","rematch","patterns","cause","patternObj","global","currentNode","reach","str","removeCount","matchStr","removeFrom","prev","removeRange","nestedRematch","newNode","count","Refractor","refractor","syntax","registered","aliasOrLanguage","listLanguages","attrs","split","trough","fns","pipeline","middlewareIndex","pop","fn","middleware","called","parameters","fnExpectsCallback","done","Promise","then","use","middelware"],"sourceRoot":""}
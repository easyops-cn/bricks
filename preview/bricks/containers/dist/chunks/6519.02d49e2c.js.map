{"version":3,"file":"chunks/6519.02d49e2c.js","mappings":"mOAEA,MAAMA,EAAe,IAAIC,IAAIC,MAAMC,KAAKC,OAAOC,QAAQ,EAAAC,SAGhD,SAASC,EAAaC,EAAOF,GAClC,GAAqB,IAAjBA,EAAMG,OACR,OAAOD,EAET,IAAIE,EAASF,EACb,IAAK,MAAMG,KAAQL,EAAO,CACxB,MAAMM,EAAiBZ,EAAaa,IAAIF,EAAKG,YAC7C,IAAKF,EAGH,YADAG,QAAQC,KAAK,iBAAiBL,EAAKG,cAGrCJ,EAASE,EAAeF,KAAWC,EAAKM,WAC1C,CACA,OAAOP,CACT,C","sources":["webpack:///../../node_modules/@next-core/pipes/dist/esm/index.js"],"sourcesContent":["import { pipes } from \"@easyops-cn/brick-next-pipes\";\nexport { pipes, utils } from \"@easyops-cn/brick-next-pipes\";\nconst PipeRegistry = new Map(Array.from(Object.entries(pipes)));\n\n/** For next-core internal usage only. */\nexport function processPipes(value, pipes) {\n  if (pipes.length === 0) {\n    return value;\n  }\n  let result = value;\n  for (const pipe of pipes) {\n    const registeredPipe = PipeRegistry.get(pipe.identifier);\n    if (!registeredPipe) {\n      // eslint-disable-next-line no-console\n      console.warn(`Unknown pipe: ${pipe.identifier}`);\n      return;\n    }\n    result = registeredPipe(result, ...pipe.parameters);\n  }\n  return result;\n}\n//# sourceMappingURL=index.js.map"],"names":["PipeRegistry","Map","Array","from","Object","entries","pipes","processPipes","value","length","result","pipe","registeredPipe","get","identifier","console","warn","parameters"],"sourceRoot":""}
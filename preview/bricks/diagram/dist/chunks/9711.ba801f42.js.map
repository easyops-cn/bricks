{"version":3,"file":"chunks/9711.ba801f42.js","mappings":"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","sources":["webpack:///./src/diagram/index.tsx","webpack:///./src/editable-label/index.tsx","webpack:///./src/experimental-node/index.tsx","webpack:///./src/display-canvas/index.tsx","webpack:///./src/draw-canvas/index.tsx","webpack:///./src/editable-label/styles.shadow.css","webpack:///./src/experimental-node/styles.shadow.css"],"sourcesContent":["import React, {\n  createRef,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { EventEmitter, createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport { select } from \"d3-selection\";\nimport { ZoomTransform, zoom } from \"d3-zoom\";\nimport classNames from \"classnames\";\nimport { uniqueId } from \"lodash\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport type {\n  DiagramEdge,\n  DiagramNode,\n  LayoutOptions,\n  LineConf,\n  NodeBrickConf,\n  PositionTuple,\n  RefRepository,\n  RenderedLineLabel,\n  TransformLiteral,\n  LineTarget,\n  ConnectLineDetail,\n  ConnectNodesOptions,\n  ConnectLineState,\n  ActiveTarget,\n  RangeTuple,\n  LineLabel,\n  LineLabelConf,\n  TextOptions,\n  DragNodesOptions,\n  NodeMovement,\n  ManualLayoutStatus,\n  LineMaskRects,\n} from \"./interfaces\";\nimport { NodeComponentGroup } from \"./NodeComponent\";\nimport { handleKeyboard } from \"./processors/handleKeyboard\";\nimport { transformToCenter } from \"./processors/transformToCenter\";\nimport { getRenderedLines } from \"./processors/getRenderedLines\";\nimport { normalizeLinesAndMarkers } from \"./processors/normalizeLinesAndMarkers\";\nimport { LineLabelComponentGroup } from \"./LineLabelComponent\";\nimport { LineComponent } from \"./LineComponent\";\nimport { MarkerComponent } from \"./MarkerComponent\";\nimport { LineMaskComponent } from \"./LineMaskComponent\";\nimport { ConnectLineComponent } from \"./ConnectLineComponent\";\nimport { getRenderedLineLabels } from \"./processors/getRenderedLineLabels\";\nimport { handleNodesMouseDown } from \"./processors/handleNodesMouseDown\";\nimport { DEFAULT_SCALE_RANGE_MAX, DEFAULT_SCALE_RANGE_MIN } from \"./constants\";\nimport { useRenderedDiagram } from \"./hooks/useRenderedDiagram\";\nimport { adjustLineLabels } from \"./processors/adjustLineLabels\";\nimport styleText from \"./styles.shadow.css\";\nimport { useUserView } from \"./hooks/useUserView\";\nimport { sameTarget } from \"./processors/sameTarget\";\nimport { getLineMaskRects } from \"./processors/getLineMaskRects\";\n\nconst { defineElement, property, event, method } = createDecorators();\n\nexport interface EoDiagramProps {\n  layout?: \"dagre\" | \"force\";\n  nodes?: DiagramNode[];\n  edges?: DiagramEdge[];\n  nodeBricks?: NodeBrickConf[];\n  lines?: LineConf[];\n  layoutOptions?: LayoutOptions;\n  connectNodes?: ConnectNodesOptions;\n  dragNodes?: DragNodesOptions;\n  activeTarget?: ActiveTarget | null;\n  disableKeyboardAction?: boolean;\n  zoomable?: boolean;\n  scrollable?: boolean;\n  pannable?: boolean;\n  scaleRange?: RangeTuple;\n}\n\nexport interface DiagramRef {\n  callOnLineLabel(id: string, method: string, ...args: unknown[]): void;\n}\n\nexport const EoDiagramComponent = forwardRef(LegacyEoDiagramComponent);\n\n/**\n * 构件 `eo-diagram`\n */\nexport\n@defineElement(\"eo-diagram\", {\n  styleTexts: [styleText],\n})\nclass EoDiagram extends ReactNextElement implements EoDiagramProps {\n  /**\n   * @required\n   */\n  @property({ type: String })\n  accessor layout: \"dagre\" | \"force\" | undefined;\n\n  @property({ attribute: false })\n  accessor nodes: DiagramNode[] | undefined;\n\n  @property({ attribute: false })\n  accessor edges: DiagramEdge[] | undefined;\n\n  @property({ attribute: false })\n  accessor nodeBricks: NodeBrickConf[] | undefined;\n\n  @property({ attribute: false })\n  accessor lines: LineConf[] | undefined;\n\n  @property({ attribute: false })\n  accessor layoutOptions: LayoutOptions | undefined;\n\n  @property({ attribute: false })\n  accessor activeTarget: ActiveTarget | null | undefined;\n\n  @property({ type: Boolean })\n  accessor disableKeyboardAction: boolean | undefined;\n\n  @property({ attribute: false })\n  accessor connectNodes: ConnectNodesOptions | undefined;\n\n  @property({ attribute: false })\n  accessor dragNodes: DragNodesOptions | undefined;\n\n  @property({ type: Boolean })\n  accessor zoomable: boolean | undefined = true;\n\n  @property({ type: Boolean })\n  accessor scrollable: boolean | undefined = true;\n\n  @property({ type: Boolean })\n  accessor pannable: boolean | undefined = true;\n\n  @property({ attribute: false })\n  accessor scaleRange: RangeTuple | undefined;\n\n  @event({ type: \"activeTarget.change\" })\n  accessor #activeTargetChangeEvent!: EventEmitter<ActiveTarget | null>;\n\n  #handleActiveTargetChange = (target: ActiveTarget | null) => {\n    this.#activeTargetChangeEvent.emit(target);\n  };\n\n  @event({ type: \"node.delete\" })\n  accessor #nodeDelete!: EventEmitter<DiagramNode>;\n\n  #handleNodeDelete = (node: DiagramNode) => {\n    this.#nodeDelete.emit(node);\n  };\n\n  @event({ type: \"edge.delete\" })\n  accessor #edgeDelete!: EventEmitter<DiagramEdge>;\n\n  #handleEdgeDelete = (edge: DiagramEdge) => {\n    this.#edgeDelete.emit(edge);\n  };\n\n  @event({ type: \"line.click\" })\n  accessor #lineClick!: EventEmitter<LineTarget>;\n\n  #handleLineClick = (line: LineTarget) => {\n    this.#lineClick.emit(line);\n  };\n\n  @event({ type: \"line.dblclick\" })\n  accessor #lineDoubleClick!: EventEmitter<LineTarget>;\n\n  #handleLineDoubleClick = (line: LineTarget) => {\n    this.#lineDoubleClick.emit(line);\n  };\n\n  @event({ type: \"nodes.connect\" })\n  accessor #connectNodes!: EventEmitter<ConnectLineDetail>;\n\n  #handleNodesConnect = (detail: ConnectLineDetail) => {\n    this.#connectNodes.emit(detail);\n  };\n\n  #handleSwitchActiveTarget = (target: ActiveTarget | null) => {\n    if (!sameTarget(target, this.activeTarget)) {\n      this.activeTarget = target;\n    }\n  };\n\n  #diagramRef = createRef<DiagramRef>();\n\n  @method()\n  callOnLineLabel(id: string, method: string, ...args: unknown[]) {\n    this.#diagramRef.current?.callOnLineLabel(id, method, ...args);\n  }\n\n  render() {\n    return (\n      <EoDiagramComponent\n        ref={this.#diagramRef}\n        layout={this.layout}\n        nodes={this.nodes}\n        edges={this.edges}\n        nodeBricks={this.nodeBricks}\n        lines={this.lines}\n        layoutOptions={this.layoutOptions}\n        connectNodes={this.connectNodes}\n        dragNodes={this.dragNodes}\n        activeTarget={this.activeTarget}\n        disableKeyboardAction={this.disableKeyboardAction}\n        zoomable={this.zoomable}\n        scrollable={this.scrollable}\n        pannable={this.pannable}\n        scaleRange={this.scaleRange}\n        onActiveTargetChange={this.#handleActiveTargetChange}\n        onSwitchActiveTarget={this.#handleSwitchActiveTarget}\n        onNodeDelete={this.#handleNodeDelete}\n        onEdgeDelete={this.#handleEdgeDelete}\n        onLineClick={this.#handleLineClick}\n        onLineDoubleClick={this.#handleLineDoubleClick}\n        onNodesConnect={this.#handleNodesConnect}\n      />\n    );\n  }\n}\n\nexport interface EoDiagramComponentProps extends EoDiagramProps {\n  onActiveTargetChange?(target: ActiveTarget | null): void;\n  onSwitchActiveTarget?(target: ActiveTarget | null): void;\n  onNodeDelete?(node: DiagramNode): void;\n  onEdgeDelete?(edge: DiagramEdge): void;\n  onLineClick?(line: LineTarget): void;\n  onLineDoubleClick?(line: LineTarget): void;\n  onNodesConnect?(detail: ConnectLineDetail): void;\n}\n\nexport function LegacyEoDiagramComponent(\n  {\n    layout,\n    nodes,\n    edges,\n    nodeBricks,\n    lines,\n    layoutOptions,\n    connectNodes,\n    dragNodes,\n    activeTarget: _activeTarget,\n    disableKeyboardAction,\n    zoomable,\n    scrollable,\n    pannable,\n    scaleRange: _scaleRange,\n    onActiveTargetChange,\n    onSwitchActiveTarget,\n    onNodeDelete,\n    onEdgeDelete,\n    onLineClick,\n    onLineDoubleClick,\n    onNodesConnect,\n  }: EoDiagramComponentProps,\n  ref: React.Ref<DiagramRef>\n) {\n  const [nodesReady, setNodesReady] = useState(false);\n  const [nodesRenderId, setNodesRenderId] = useState(0);\n  const [nodesRefRepository, setNodesRefRepository] =\n    useState<RefRepository | null>(null);\n  const [lineLabelsReady, setLineLabelsReady] = useState(false);\n  const [lineLabelsRenderId, setLineLabelsRenderId] = useState(0);\n  const [lineLabelsRefRepository, setLineLabelsRefRepository] =\n    useState<RefRepository | null>(null);\n  const [renderedLineLabels, setRenderedLineLabels] = useState<\n    RenderedLineLabel[]\n  >([]);\n\n  const [grabbing, setGrabbing] = useState(false);\n  const [transform, setTransform] = useState<TransformLiteral>({\n    k: 1,\n    x: 0,\n    y: 0,\n  });\n\n  const linePathsRef = useRef(new Map<string, SVGPathElement | null>());\n\n  const rootRef = useRef<HTMLDivElement>(null);\n  const nodesRef = useRef<HTMLDivElement>(null);\n  const [centered, setCentered] = useState(false);\n\n  const { userViewReady, userViewNodesMap, saveUserView } = useUserView(\n    dragNodes?.save\n  );\n\n  const [connectLineTo, setConnectLineTo] = useState<PositionTuple>([0, 0]);\n  const [connectLineState, setConnectLineState] =\n    useState<ConnectLineState | null>(null);\n  const [manualLayoutStatus, setManualLayoutStatus] =\n    useState<ManualLayoutStatus>(\"initial\");\n  const [nodeMovement, setNodeMovement] = useState<NodeMovement | null>(null);\n\n  useImperativeHandle(ref, () => ({\n    callOnLineLabel(id, method, ...args) {\n      (\n        lineLabelsRefRepository?.get(id)\n          ?.firstElementChild as unknown as Record<string, Function>\n      )?.[method](...args);\n    },\n  }));\n\n  useEffect(() => {\n    const onNodesMouseDown = (event: MouseEvent) => {\n      handleNodesMouseDown(event, {\n        nodes,\n        nodesRefRepository,\n        connectNodes,\n        dragNodes,\n        scale: transform.k,\n        setConnectLineState,\n        setConnectLineTo,\n        setManualLayoutStatus,\n        setNodeMovement,\n        onSwitchActiveTarget,\n        onNodesConnect,\n      });\n    };\n    // Bind mousedown event manually, since the React event handler can't work with\n    // d3-zoom inside shadow DOM.\n    const nodesContainer = nodesRef.current;\n    nodesContainer?.addEventListener(\"mousedown\", onNodesMouseDown);\n    return () => {\n      nodesContainer?.removeEventListener(\"mousedown\", onNodesMouseDown);\n    };\n  }, [\n    nodes,\n    connectNodes,\n    dragNodes,\n    transform.k,\n    nodesRefRepository,\n    onNodesConnect,\n    onSwitchActiveTarget,\n  ]);\n\n  const { normalizedLines, normalizedLinesMap, markers } = useMemo(\n    () => normalizeLinesAndMarkers(edges, lines),\n    [edges, lines]\n  );\n\n  const lineLabels = useMemo(() => {\n    return normalizedLines.flatMap(({ line: { text, label, $id }, edge }) => {\n      if (!text && !label) {\n        return [] as LineLabel[];\n      }\n\n      let key: \"label\" | \"text\";\n      let list: LineLabelConf[] | TextOptions[];\n      if (label) {\n        key = \"label\";\n        list = ([] as LineLabelConf[]).concat(label);\n      } else {\n        key = \"text\";\n        list = ([] as TextOptions[]).concat(text!);\n      }\n\n      return list.map<LineLabel>((item) => ({\n        [key as \"label\"]: item as LineLabelConf,\n        id: `${$id}-${item.placement ?? \"center\"}`,\n        edge,\n      }));\n    });\n  }, [normalizedLines]);\n\n  const { nodes: renderedNodes, edges: renderedEdges } = useRenderedDiagram({\n    layout,\n    nodes,\n    edges,\n    manualLayoutStatus,\n    userViewReady,\n    userViewNodesMap,\n    nodeMovement,\n    nodesRefRepository,\n    lineLabelsRefRepository,\n    normalizedLinesMap,\n    layoutOptions,\n    nodesRenderId,\n    lineLabelsRenderId,\n  });\n\n  useEffect(\n    () => {\n      if (manualLayoutStatus === \"finished\") {\n        saveUserView(\n          renderedNodes.map((node) => ({\n            id: node.id,\n            x: node.x,\n            y: node.y,\n          }))\n        );\n      }\n    },\n    // Only save user view when manual layout is just finished.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [manualLayoutStatus]\n  );\n\n  const renderedLines = useMemo(\n    () => getRenderedLines(renderedEdges, renderedNodes, normalizedLines),\n    [normalizedLines, renderedNodes, renderedEdges]\n  );\n\n  const newActiveTarget = _activeTarget ?? null;\n  const [activeTarget, setActiveTarget] = useState<ActiveTarget | null>(\n    newActiveTarget\n  );\n\n  useEffect(() => {\n    setActiveTarget((previous) =>\n      sameTarget(previous, newActiveTarget) ? previous : newActiveTarget\n    );\n  }, [newActiveTarget]);\n\n  const activeTargetChangeInitialized = useRef(false);\n  useEffect(() => {\n    if (!activeTargetChangeInitialized.current) {\n      activeTargetChangeInitialized.current = true;\n      return;\n    }\n    onActiveTargetChange?.(activeTarget);\n  }, [activeTarget, onActiveTargetChange]);\n\n  useEffect(() => {\n    const root = rootRef.current;\n    if (!root || disableKeyboardAction) {\n      return;\n    }\n    const onKeydown = (event: KeyboardEvent) => {\n      const action = handleKeyboard(event, {\n        renderedNodes,\n        activeTarget,\n      });\n\n      if (action?.action === \"delete-node\") {\n        onNodeDelete?.(action.node);\n      } else if (action?.action === \"delete-edge\") {\n        onEdgeDelete?.(action.edge);\n      } else if (action?.action === \"switch-active-node\" && action.node) {\n        onSwitchActiveTarget?.({ type: \"node\", nodeId: action.node.id });\n      }\n    };\n    root.addEventListener(\"keydown\", onKeydown);\n    return () => {\n      root.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, [\n    activeTarget,\n    renderedNodes,\n    disableKeyboardAction,\n    onSwitchActiveTarget,\n    onNodeDelete,\n    onEdgeDelete,\n  ]);\n\n  const handleNodesRendered = useCallback(\n    (refRepository: RefRepository | null) => {\n      if (refRepository) {\n        setNodesRenderId((previous) => previous + 1);\n        setNodesRefRepository(refRepository);\n      }\n      setNodesReady((previous) => previous || !!refRepository);\n    },\n    []\n  );\n\n  const handleLineLabelsRendered = useCallback(\n    (refRepository: RefRepository | null) => {\n      if (refRepository) {\n        setLineLabelsRenderId((previous) => previous + 1);\n        setLineLabelsRefRepository(refRepository);\n      }\n      setLineLabelsReady((previous) => previous || !!refRepository);\n    },\n    []\n  );\n\n  const scaleRange = useMemo(\n    () =>\n      _scaleRange ??\n      ([DEFAULT_SCALE_RANGE_MIN, DEFAULT_SCALE_RANGE_MAX] as RangeTuple),\n    [_scaleRange]\n  );\n\n  const zoomer = useMemo(() => zoom<HTMLDivElement, unknown>(), []);\n\n  useEffect(() => {\n    let moved = false;\n    zoomer\n      .scaleExtent(zoomable ? scaleRange : [1, 1])\n      .on(\"start\", () => {\n        moved = false;\n        setGrabbing(true);\n      })\n      .on(\"zoom\", (e: { transform: TransformLiteral }) => {\n        moved = true;\n        setTransform(e.transform);\n      })\n      .on(\"end\", () => {\n        setGrabbing(false);\n        if (!moved) {\n          onSwitchActiveTarget?.(null);\n        }\n      });\n  }, [onSwitchActiveTarget, scaleRange, zoomable, zoomer]);\n\n  useEffect(() => {\n    const root = rootRef.current;\n    if (!root) {\n      return;\n    }\n\n    const rootSelection = select(root);\n\n    const unsetZoom = () => {\n      rootSelection\n        .on(\".zoom\", null)\n        .on(\".zoom.custom\", null)\n        .on(\"wheel\", null);\n    };\n\n    if (!(zoomable || scrollable || pannable)) {\n      unsetZoom();\n      return;\n    }\n\n    if (zoomable || scrollable) {\n      // Do not override default d3 zoom handler.\n      // Only handles *panning*\n      rootSelection.on(\n        \"wheel.zoom.custom\",\n        (e: WheelEvent & { wheelDeltaX: number; wheelDeltaY: number }) => {\n          // Mac OS trackpad pinch event is emitted as a wheel.zoom and d3.event.ctrlKey set to true\n          if (!e.ctrlKey) {\n            // Stop immediate propagation for default d3 zoom handler\n            e.stopImmediatePropagation();\n            if (scrollable) {\n              e.preventDefault();\n              zoomer.translateBy(\n                rootSelection,\n                e.wheelDeltaX / 5,\n                e.wheelDeltaY / 5\n              );\n            }\n          }\n          // zoomer.scaleBy(rootSelection, Math.pow(2, defaultWheelDelta(e)))\n        }\n      );\n    }\n\n    rootSelection\n      .call(zoomer)\n      .on(\"wheel\", (e: WheelEvent) => e.preventDefault())\n      .on(\"dblclick.zoom\", null);\n\n    if (!pannable) {\n      rootSelection\n        .on(\"mousedown.zoom\", null)\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n    }\n\n    return unsetZoom;\n  }, [pannable, scrollable, zoomable, zoomer]);\n\n  useEffect(() => {\n    const root = rootRef.current;\n    if (renderedNodes.length === 0 || !root || centered) {\n      return;\n    }\n    const { k, x, y } = transformToCenter(renderedNodes, {\n      canvasWidth: root.clientWidth,\n      canvasHeight: root.clientHeight,\n      scaleRange: zoomable ? scaleRange : undefined,\n    });\n    zoomer.transform(select(root), new ZoomTransform(k, x, y));\n    setCentered(true);\n  }, [centered, renderedNodes, scaleRange, zoomable, zoomer]);\n\n  const defPrefix = useMemo(() => `${uniqueId(\"diagram-\")}-`, []);\n  const markerPrefix = `${defPrefix}line-arrow-`;\n  const maskPrefix = `${defPrefix}mask-`;\n  const activeLineMarkerPrefix = `${defPrefix}active-line-`;\n\n  useEffect(() => {\n    setRenderedLineLabels((previous) =>\n      getRenderedLineLabels(previous, renderedLines, linePathsRef.current)\n    );\n  }, [renderedLines]);\n\n  const [lineMaskRects, setLineMaskRects] = React.useState<LineMaskRects>(\n    new Map()\n  );\n\n  useEffect(() => {\n    if (!lineLabelsRefRepository) {\n      return;\n    }\n    const updateLineMaskRects = () => {\n      setLineMaskRects(\n        getLineMaskRects(renderedLineLabels, lineLabelsRefRepository)\n      );\n    };\n\n    adjustLineLabels(renderedLineLabels, lineLabelsRefRepository);\n\n    const observer = new ResizeObserver(updateLineMaskRects);\n    for (const lineLabel of lineLabelsRefRepository.values()) {\n      observer.observe(lineLabel);\n    }\n    return () => {\n      observer.disconnect();\n    };\n  }, [lineLabelsRenderId, lineLabelsRefRepository, renderedLineLabels]);\n\n  if (layout !== \"dagre\" && layout !== \"force\") {\n    return <div>{`Diagram layout not supported: \"${layout}\"`}</div>;\n  }\n\n  return (\n    <div\n      className={classNames(\"diagram\", {\n        ready: nodesReady && centered,\n        grabbing,\n        pannable,\n      })}\n      tabIndex={-1}\n      ref={rootRef}\n    >\n      <svg width=\"100%\" height=\"100%\" className=\"lines\">\n        <defs>\n          {markers.map(({ type, strokeColor }, index) => (\n            <MarkerComponent\n              key={index}\n              id={`${markerPrefix}${index}`}\n              type={type}\n              strokeColor={strokeColor}\n            />\n          ))}\n          {[...lineMaskRects].map(([lineId, rects]) => (\n            <LineMaskComponent\n              key={lineId}\n              lineId={lineId}\n              rects={rects}\n              maskPrefix={maskPrefix}\n              renderedLineLabels={renderedLineLabels}\n            />\n          ))}\n          <marker\n            id={`${activeLineMarkerPrefix}start`}\n            viewBox=\"0 0 8 8\"\n            refX={4}\n            refY={4}\n            markerWidth={8}\n            markerHeight={8}\n            orient=\"auto\"\n          >\n            <path\n              d=\"M 0.5 0.5 H 7.5 V 7.5 H 0.5 Z\"\n              stroke=\"var(--palette-gray-7)\"\n              strokeWidth={1}\n              fill=\"var(--palette-gray-1)\"\n            />\n          </marker>\n          <marker\n            id={`${activeLineMarkerPrefix}end`}\n            viewBox=\"0 0 14 8\"\n            refX={3}\n            refY={4}\n            markerWidth={14}\n            markerHeight={8}\n            orient=\"auto\"\n          >\n            <path\n              d=\"M 0.5 1.5 L 5.5 4 L 0.5 6.5 z\"\n              stroke=\"var(--palette-blue-3)\"\n              strokeWidth={1}\n              fill=\"var(--palette-blue-3)\"\n            />\n            <path\n              d=\"M 6.5 0.5 H 13.5 V 7.5 H 6.5 Z\"\n              stroke=\"var(--palette-gray-7)\"\n              strokeWidth={1}\n              fill=\"var(--palette-gray-1)\"\n            />\n          </marker>\n        </defs>\n        <g\n          transform={`translate(${transform.x} ${transform.y}) scale(${transform.k})`}\n        >\n          {renderedLines.map((line) => (\n            <LineComponent\n              key={line.line.$id}\n              line={line}\n              linePaths={linePathsRef.current}\n              lineMaskRects={lineMaskRects}\n              maskPrefix={maskPrefix}\n              markerPrefix={markerPrefix}\n              activeLineMarkerPrefix={activeLineMarkerPrefix}\n              active={\n                activeTarget?.type === \"edge\" &&\n                activeTarget.edge.source === line.edge.source &&\n                activeTarget.edge.target === line.edge.target\n              }\n              activeRelated={\n                activeTarget?.type === \"node\" &&\n                (line.edge.source === activeTarget.nodeId ||\n                  line.edge.target === activeTarget.nodeId)\n              }\n              onLineClick={onLineClick}\n              onLineDoubleClick={onLineDoubleClick}\n            />\n          ))}\n        </g>\n      </svg>\n      <div\n        className={classNames(\"line-labels\", { ready: lineLabelsReady })}\n        style={{\n          left: transform.x,\n          top: transform.y,\n          transform: `scale(${transform.k})`,\n        }}\n      >\n        <LineLabelComponentGroup\n          labels={lineLabels}\n          onRendered={handleLineLabelsRendered}\n        />\n      </div>\n      <div\n        className=\"nodes\"\n        ref={nodesRef}\n        style={{\n          left: transform.x,\n          top: transform.y,\n          transform: `scale(${transform.k})`,\n        }}\n      >\n        <NodeComponentGroup\n          nodes={nodes}\n          nodeBricks={nodeBricks}\n          // nodePositions={nodePositions}\n          onRendered={handleNodesRendered}\n        />\n      </div>\n      <ConnectLineComponent\n        connectLineState={connectLineState}\n        connectLineTo={connectLineTo}\n        markerPrefix={markerPrefix}\n      />\n    </div>\n  );\n}\n","import React, {\n  createRef,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { EventEmitter, createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport classNames from \"classnames\";\nimport styleText from \"./styles.shadow.css\";\n\nconst { defineElement, property, event, method } = createDecorators();\n\nexport interface EditableLabelProps {\n  label?: string;\n  type?: LabelType;\n}\n\nexport type LabelType = \"line\" | \"default\";\n\nexport interface EditableLabelRef {\n  enableEditing(): void;\n}\n\nexport const EditableLabelComponent = forwardRef(LegacyEditableLabelComponent);\n\n/**\n * 构件 `diagram.editable-label`\n */\nexport\n@defineElement(\"diagram.editable-label\", {\n  styleTexts: [styleText],\n})\nclass EditableLabel extends ReactNextElement implements EditableLabelProps {\n  @property()\n  accessor label: string | undefined;\n\n  @property({ render: false })\n  accessor type: LabelType | undefined;\n\n  @event({ type: \"label.editing.change\" })\n  accessor #labelEditingChange!: EventEmitter<boolean>;\n\n  #handleLabelEditingChange = (value: boolean) => {\n    this.#labelEditingChange.emit(value);\n  };\n\n  @event({ type: \"label.change\" })\n  accessor #labelChange!: EventEmitter<string>;\n\n  #handleLabelChange = (value: string) => {\n    this.#labelChange.emit(value);\n  };\n\n  @method()\n  enableEditing() {\n    this.#editableLabelRef.current?.enableEditing();\n  }\n\n  #editableLabelRef = createRef<EditableLabelRef>();\n\n  render() {\n    return (\n      <EditableLabelComponent\n        ref={this.#editableLabelRef}\n        label={this.label}\n        onLabelEditingChange={this.#handleLabelEditingChange}\n        onLabelChange={this.#handleLabelChange}\n      />\n    );\n  }\n}\n\nexport interface EditableLabelComponentProps extends EditableLabelProps {\n  onLabelEditingChange?(value: boolean): void;\n  onLabelChange?(value: string): void;\n}\n\nexport function LegacyEditableLabelComponent(\n  {\n    label: _label,\n    onLabelChange,\n    onLabelEditingChange,\n  }: EditableLabelComponentProps,\n  ref: React.Ref<EditableLabelRef>\n) {\n  const label = _label ?? \"\";\n  const [currentLabel, setCurrentLabel] = useState<string>(label);\n  const [editingLabel, setEditingLabel] = useState(false);\n  const editingLabelInitialized = useRef(false);\n  const [shouldEmitLabelChange, setShouldEmitLabelChange] = useState(false);\n  const labelInputRef = useRef<HTMLInputElement>(null);\n\n  useImperativeHandle(ref, () => ({\n    enableEditing() {\n      setEditingLabel(true);\n    },\n  }));\n\n  useEffect(() => {\n    setCurrentLabel(label);\n  }, [label]);\n\n  const handleEditLabel = useCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setEditingLabel(true);\n  }, []);\n\n  useEffect(() => {\n    if (editingLabel) {\n      // Prevent scroll when focusing.\n      // Otherwise the diagram svg may be clipped in Chrome.\n      labelInputRef.current?.focus({ preventScroll: true });\n      labelInputRef.current?.select();\n    }\n  }, [editingLabel]);\n\n  useEffect(() => {\n    if (editingLabelInitialized.current) {\n      onLabelEditingChange?.(editingLabel);\n    } else {\n      editingLabelInitialized.current = true;\n    }\n  }, [editingLabel, onLabelEditingChange]);\n\n  const handleInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setCurrentLabel(event.target.value);\n    },\n    []\n  );\n\n  const handleInputKeydown = useCallback((event: React.KeyboardEvent) => {\n    const key =\n      event.key ||\n      /* istanbul ignore next: compatibility */ event.keyCode ||\n      /* istanbul ignore next: compatibility */ event.which;\n    if (key === \"Enter\" || key === 13) {\n      labelInputRef.current?.blur();\n    }\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setEditingLabel(false);\n    setShouldEmitLabelChange(true);\n  }, []);\n\n  useEffect(() => {\n    if (shouldEmitLabelChange) {\n      onLabelChange?.(currentLabel);\n      setShouldEmitLabelChange(false);\n    }\n  }, [currentLabel, onLabelChange, shouldEmitLabelChange]);\n\n  const stopPropagation = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n  }, []);\n\n  return (\n    <div\n      className={classNames(\"label\", {\n        editing: editingLabel,\n        empty: !currentLabel,\n      })}\n      onDoubleClick={stopPropagation}\n      onMouseDown={stopPropagation}\n    >\n      <input\n        className=\"label-input\"\n        value={currentLabel}\n        ref={labelInputRef}\n        onChange={handleInputChange}\n        onKeyDown={handleInputKeydown}\n        onBlur={handleInputBlur}\n      />\n      <div className=\"label-text\" onDoubleClick={handleEditLabel}>\n        {currentLabel}\n      </div>\n    </div>\n  );\n}\n","// istanbul ignore file: experimental only\nimport React, { useCallback } from \"react\";\nimport { createDecorators, type EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport type { PositionTuple } from \"../diagram/interfaces\";\nimport styleText from \"./styles.shadow.css\";\nimport type { DecoratorType } from \"../draw-canvas/interfaces\";\n\nconst { defineElement, property, event } = createDecorators();\n\ntype ExperimentalUsage = \"library\" | \"dragging\" | \"default\";\ntype NodeStatus = \"highlighted\" | \"faded\" | \"default\";\n\nexport interface ExperimentalNodeProps {\n  usage?: ExperimentalUsage;\n  status?: NodeStatus;\n}\n\n/**\n * 构件 `diagram.experimental-node`\n */\nexport\n@defineElement(\"diagram.experimental-node\", {\n  styleTexts: [styleText],\n})\nclass ExperimentalNode\n  extends ReactNextElement\n  implements ExperimentalNodeProps\n{\n  @property()\n  accessor usage: ExperimentalUsage | undefined;\n\n  // 最终节点应该统一实现这个字段，保持类型一致\n  @property({ type: String, render: false })\n  accessor status: NodeStatus | undefined;\n\n  // 最终节点应该统一实现这个字段，保持类型一致\n  @property({ type: String })\n  accessor decorator: DecoratorType | undefined;\n\n  @event({ type: \"drag.start\" })\n  accessor #dragStartEvent!: EventEmitter<PositionTuple>;\n\n  #handleDragStart = (position: PositionTuple) => {\n    this.#dragStartEvent.emit(position);\n  };\n\n  @event({ type: \"drag.move\" })\n  accessor #dragMoveEvent!: EventEmitter<PositionTuple>;\n\n  #handleDragMove = (position: PositionTuple) => {\n    this.#dragMoveEvent.emit(position);\n  };\n\n  @event({ type: \"drag.end\" })\n  accessor #dragEndEvent!: EventEmitter<PositionTuple>;\n\n  #handleDragEnd = (position: PositionTuple) => {\n    this.#dragEndEvent.emit(position);\n  };\n\n  render() {\n    return (\n      <ExperimentalNodeComponent\n        usage={this.usage}\n        onDragStart={this.#handleDragStart}\n        onDragMove={this.#handleDragMove}\n        onDragEnd={this.#handleDragEnd}\n      />\n    );\n  }\n}\n\nexport interface ExperimentalNodeComponentProps extends ExperimentalNodeProps {\n  onDragStart?(position: PositionTuple): void;\n  onDragMove?(position: PositionTuple): void;\n  onDragEnd?(position: PositionTuple): void;\n}\n\nexport function ExperimentalNodeComponent({\n  usage,\n  onDragStart,\n  onDragMove,\n  onDragEnd,\n}: ExperimentalNodeComponentProps) {\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      if (usage !== \"library\") {\n        return;\n      }\n      event.stopPropagation();\n      event.preventDefault();\n      const from: PositionTuple = [event.clientX, event.clientY];\n      let moved = false;\n      const onMouseMove = (e: MouseEvent) => {\n        if (!moved) {\n          moved = (e.clientX - from[0]) ** 2 + (e.clientY - from[1]) ** 2 >= 9;\n          if (moved) {\n            onDragStart?.([e.clientX, e.clientY]);\n          }\n        }\n        if (moved) {\n          onDragMove?.([e.clientX, e.clientY]);\n        }\n      };\n      const onMouseUp = (e: MouseEvent) => {\n        document.removeEventListener(\"mousemove\", onMouseMove);\n        document.removeEventListener(\"mouseup\", onMouseUp);\n        if (moved) {\n          onDragEnd?.([e.clientX, e.clientY]);\n        }\n      };\n      document.addEventListener(\"mousemove\", onMouseMove);\n      document.addEventListener(\"mouseup\", onMouseUp);\n    },\n    [onDragEnd, onDragMove, onDragStart, usage]\n  );\n\n  return (\n    <div onMouseDown={handleMouseDown}>\n      <slot />\n    </div>\n  );\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport { createDecorators, type EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport { uniqueId } from \"lodash\";\nimport classNames from \"classnames\";\nimport { select } from \"d3-selection\";\nimport type { RangeTuple, SizeTuple } from \"../diagram/interfaces\";\nimport type {\n  ActiveTarget,\n  InitialCell,\n  NodeBrickConf,\n  CellContextMenuDetail,\n  EdgeLineConf,\n  Cell,\n  LayoutType,\n  LayoutOptions,\n} from \"../draw-canvas/interfaces\";\nimport { MarkerComponent } from \"../diagram/MarkerComponent\";\nimport { sameTarget } from \"../draw-canvas/processors/sameTarget\";\nimport { CellComponent } from \"../draw-canvas/CellComponent\";\nimport { initializeCells } from \"../draw-canvas/processors/initializeCells\";\nimport {\n  DEFAULT_DEGRADED_THRESHOLD,\n  DEFAULT_NODE_SIZE,\n} from \"../draw-canvas/constants\";\nimport { useZoom } from \"../shared/canvas/useZoom\";\nimport { useActiveTarget } from \"../shared/canvas/useActiveTarget\";\nimport { rootReducer } from \"../draw-canvas/reducers\";\nimport { getUnrelatedCells } from \"../draw-canvas/processors/getUnrelatedCells\";\nimport { isEdgeCell, isNodeCell } from \"../draw-canvas/processors/asserts\";\nimport { ZoomBarComponent } from \"../shared/canvas/ZoomBarComponent\";\nimport { useLayout } from \"../shared/canvas/useLayout\";\nimport { useReady } from \"../shared/canvas/useReady\";\nimport { useLineMarkers } from \"../shared/canvas/useLineMarkers\";\nimport { updateCells } from \"../draw-canvas/processors/updateCells\";\nimport styleText from \"../shared/canvas/styles.shadow.css\";\nimport zoomBarStyleText from \"../shared/canvas/ZoomBarComponent.shadow.css\";\n\nconst { defineElement, property, event } = createDecorators();\n\nexport interface EoDisplayCanvasProps {\n  cells: InitialCell[] | undefined;\n  layout: LayoutType;\n  layoutOptions?: LayoutOptions;\n  defaultNodeSize: SizeTuple;\n  defaultNodeBricks?: NodeBrickConf[];\n  defaultEdgeLines?: EdgeLineConf[];\n  degradedThreshold?: number;\n  degradedNodeLabel?: string;\n  activeTarget?: ActiveTarget | null;\n  fadeUnrelatedCells?: boolean;\n  zoomable?: boolean;\n  scrollable?: boolean;\n  pannable?: boolean;\n  scaleRange?: RangeTuple;\n  hideZoomBar?: boolean;\n  autoCenterWhenCellsChange?: boolean;\n}\n\n/**\n * 用于展示查看的画布。\n */\nexport\n@defineElement(\"eo-display-canvas\", {\n  styleTexts: [styleText, zoomBarStyleText],\n})\nclass EoDisplayCanvas extends ReactNextElement implements EoDisplayCanvasProps {\n  /**\n   * 用于查看的画布可以更新 `cells` 属性。\n   */\n  @property({ attribute: false })\n  accessor cells: InitialCell[] | undefined;\n\n  @property({ type: String })\n  accessor layout: LayoutType;\n\n  @property({ attribute: false })\n  accessor layoutOptions: LayoutOptions | undefined;\n\n  @property({ attribute: false })\n  accessor defaultNodeSize: SizeTuple = [DEFAULT_NODE_SIZE, DEFAULT_NODE_SIZE];\n\n  @property({ attribute: false })\n  accessor defaultNodeBricks: NodeBrickConf[] | undefined;\n\n  /**\n   * 当节点数量达到或超过 `degradedThreshold` 时，节点将被降级展示。\n   *\n   * @default 500\n   */\n  @property({ type: Number })\n  accessor degradedThreshold: number | undefined;\n\n  // Set `attribute` to `false` event if it accepts string value.\n  // Because when passing like \"<% DATA.node.data.name %>\", it will be\n  // evaluated as object temporarily.\n  /**\n   * 设置节点将降级展示时显示的名称。\n   *\n   * @default \"<% DATA.node.id %>\"\n   */\n  @property({ attribute: false })\n  accessor degradedNodeLabel: string | undefined;\n\n  /**\n   * 使用条件判断设置默认的边对应的连线。在 `if` 表达式中 `DATA` 为 `{ edge }`，例如：\n   *\n   * ```yaml\n   * defaultEdgeLines:\n   *   - if: <% DATA.edge.data?.virtual %>\n   *     dashed: true\n   * ```\n   */\n  @property({ attribute: false })\n  accessor defaultEdgeLines: EdgeLineConf[] | undefined;\n\n  @property({ attribute: false })\n  accessor activeTarget: ActiveTarget | null | undefined;\n\n  /**\n   * 当鼠标悬浮到某节点上时，隐藏其他跟该节点无关的元素。\n   */\n  @property({ type: Boolean })\n  accessor fadeUnrelatedCells: boolean | undefined;\n\n  @property({ type: Boolean })\n  accessor zoomable: boolean | undefined = true;\n\n  @property({ type: Boolean })\n  accessor scrollable: boolean | undefined = true;\n\n  @property({ type: Boolean })\n  accessor pannable: boolean | undefined = true;\n\n  @property({ attribute: false })\n  accessor scaleRange: RangeTuple | undefined;\n\n  /**\n   * 隐藏右下角放大缩小的控制栏\n   */\n  @property({ type: Boolean })\n  accessor hideZoomBar: boolean | undefined;\n\n  /**\n   * 每当 cells 改变时，重新自动居中\n   */\n  @property({ type: Boolean })\n  accessor autoCenterWhenCellsChange: boolean | undefined;\n\n  @event({ type: \"activeTarget.change\" })\n  accessor #activeTargetChangeEvent!: EventEmitter<ActiveTarget | null>;\n\n  #handleActiveTargetChange = (target: ActiveTarget | null) => {\n    this.#activeTargetChangeEvent.emit(target);\n  };\n\n  #handleSwitchActiveTarget = (target: ActiveTarget | null) => {\n    if (!sameTarget(target, this.activeTarget)) {\n      this.activeTarget = target;\n    }\n  };\n\n  @event({ type: \"cell.contextmenu\" })\n  accessor #cellContextMenu!: EventEmitter<CellContextMenuDetail>;\n\n  #handleCellContextMenu = (detail: CellContextMenuDetail) => {\n    this.#cellContextMenu.emit(detail);\n  };\n\n  @event({ type: \"cell.click\" })\n  accessor #cellClick!: EventEmitter<CellContextMenuDetail>;\n\n  #handleCellClick = (detail: CellContextMenuDetail) => {\n    this.#cellClick.emit(detail);\n  };\n\n  render() {\n    return (\n      <EoDisplayCanvasComponent\n        shadowRoot={this.shadowRoot!}\n        cells={this.cells}\n        layout={this.layout}\n        layoutOptions={this.layoutOptions}\n        defaultNodeSize={this.defaultNodeSize}\n        defaultNodeBricks={this.defaultNodeBricks}\n        defaultEdgeLines={this.defaultEdgeLines}\n        degradedThreshold={this.degradedThreshold}\n        degradedNodeLabel={this.degradedNodeLabel}\n        activeTarget={this.activeTarget}\n        fadeUnrelatedCells={this.fadeUnrelatedCells}\n        zoomable={this.zoomable}\n        scrollable={this.scrollable}\n        pannable={this.pannable}\n        scaleRange={this.scaleRange}\n        hideZoomBar={this.hideZoomBar}\n        autoCenterWhenCellsChange={this.autoCenterWhenCellsChange}\n        onActiveTargetChange={this.#handleActiveTargetChange}\n        onSwitchActiveTarget={this.#handleSwitchActiveTarget}\n        onCellContextMenu={this.#handleCellContextMenu}\n        onCellClick={this.#handleCellClick}\n      />\n    );\n  }\n}\n\nexport interface EoDisplayCanvasComponentProps extends EoDisplayCanvasProps {\n  shadowRoot: ShadowRoot;\n  onActiveTargetChange(target: ActiveTarget | null): void;\n  onSwitchActiveTarget(target: ActiveTarget | null): void;\n  onCellContextMenu(detail: CellContextMenuDetail): void;\n  onCellClick(detail: CellContextMenuDetail): void;\n}\n\nfunction EoDisplayCanvasComponent({\n  shadowRoot,\n  cells: initialCells,\n  layout,\n  layoutOptions,\n  defaultNodeSize,\n  defaultNodeBricks,\n  defaultEdgeLines,\n  degradedThreshold,\n  degradedNodeLabel,\n  activeTarget: _activeTarget,\n  fadeUnrelatedCells,\n  zoomable,\n  scrollable,\n  pannable,\n  scaleRange: _scaleRange,\n  hideZoomBar,\n  autoCenterWhenCellsChange,\n  onActiveTargetChange,\n  onSwitchActiveTarget,\n  onCellContextMenu,\n  onCellClick,\n}: EoDisplayCanvasComponentProps) {\n  const [{ cells, layoutKey }, dispatch] = useReducer(\n    rootReducer,\n    initialCells,\n    (initialCells) => ({\n      cells: initializeCells(initialCells, { defaultNodeSize }),\n      layoutKey: 1,\n    })\n  );\n\n  // When nodes are greater or equal to threshold, the diagram will be degraded.\n  // Thus all nodes will be displayed as simple svg elements instead of bricks.\n  const degraded = useMemo(\n    () =>\n      cells.filter(isNodeCell).length >=\n      (degradedThreshold ?? DEFAULT_DEGRADED_THRESHOLD),\n    [cells, degradedThreshold]\n  );\n\n  const rootRef = useRef<SVGSVGElement>(null);\n\n  const { grabbing, transform, zoomer, scaleRange } = useZoom({\n    rootRef,\n    zoomable,\n    scrollable,\n    pannable,\n    draggable: true,\n    scaleRange: _scaleRange,\n    onSwitchActiveTarget,\n  });\n\n  const { centered, setCentered, getNextLayoutKey } = useLayout({\n    layout,\n    layoutOptions,\n    rootRef,\n    cells,\n    zoomable,\n    zoomer,\n    scaleRange,\n    layoutKey,\n    autoCenterWhenCellsChange,\n    dispatch,\n  });\n\n  const reCenter = useCallback(() => {\n    setCentered(false);\n  }, [setCentered]);\n\n  const previousCellsRef = useRef(initialCells);\n\n  useEffect(() => {\n    if (initialCells !== previousCellsRef.current) {\n      previousCellsRef.current = initialCells;\n      const result = updateCells({\n        canvasWidth: shadowRoot.host.clientWidth,\n        canvasHeight: shadowRoot.host.clientHeight,\n        defaultNodeSize,\n        layout,\n        previousCells: cells,\n        cells: initialCells,\n        scaleRange,\n        transform,\n      });\n      dispatch({ type: \"update-cells\", payload: result.cells });\n    }\n  }, [\n    cells,\n    defaultNodeSize,\n    initialCells,\n    layout,\n    scaleRange,\n    shadowRoot,\n    transform,\n  ]);\n\n  const activeTarget = useActiveTarget({\n    rootRef,\n    activeTarget: _activeTarget,\n    onActiveTargetChange,\n  });\n\n  const defPrefix = useMemo(() => `${uniqueId(\"diagram-\")}-`, []);\n  const markerPrefix = `${defPrefix}line-arrow-`;\n\n  const handleNodeBrickResize = useCallback(\n    (id: string, size: SizeTuple | null) => {\n      dispatch({\n        type: \"update-node-size\",\n        payload: { id, size },\n        layoutKey: getNextLayoutKey(),\n      });\n    },\n    [getNextLayoutKey]\n  );\n\n  const [hoverCell, setHoverCell] = useState<Cell | null>(null);\n  const handleCellMouseEnter = useCallback((cell: Cell) => {\n    setHoverCell(cell);\n  }, []);\n  const handleCellMouseLeave = useCallback((cell: Cell) => {\n    setHoverCell((prev) => (prev === cell ? null : prev));\n  }, []);\n\n  const [unrelatedCells, setUnrelatedCells] = useState<Cell[]>([]);\n  useEffect(() => {\n    const nextUnrelated = fadeUnrelatedCells\n      ? getUnrelatedCells(cells, null, hoverCell)\n      : [];\n    // Do not update the state when prev and next are both empty.\n    setUnrelatedCells((prev) =>\n      prev.length === 0 && nextUnrelated.length === 0 ? prev : nextUnrelated\n    );\n  }, [cells, fadeUnrelatedCells, hoverCell]);\n\n  const handleZoomSlide = useCallback(\n    (value: number) => {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== \"test\") {\n        zoomer.scaleTo(select(rootRef.current!), value / 100);\n      }\n    },\n    [zoomer]\n  );\n\n  const { lineConfMap, markers } = useLineMarkers({\n    cells,\n    defaultEdgeLines,\n    markerPrefix,\n  });\n\n  const ready = useReady({ cells, layout, centered });\n\n  return (\n    <>\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        ref={rootRef}\n        className={classNames(\"root\", { grabbing, pannable, ready })}\n        tabIndex={-1}\n      >\n        <defs>\n          {markers.map((marker, index) => (\n            <MarkerComponent\n              key={index}\n              id={`${markerPrefix}${index}`}\n              type={marker.markerType}\n              strokeColor={marker.strokeColor}\n            />\n          ))}\n        </defs>\n        <g\n          transform={`translate(${transform.x} ${transform.y}) scale(${transform.k})`}\n        >\n          <g className=\"cells\">\n            {cells.map((cell) => (\n              <CellComponent\n                key={`${cell.type}:${isEdgeCell(cell) ? `${cell.source}~${cell.target}` : cell.id}`}\n                layout={layout}\n                cell={cell}\n                cells={cells}\n                degraded={degraded}\n                degradedNodeLabel={degradedNodeLabel}\n                defaultNodeBricks={defaultNodeBricks}\n                lineConfMap={lineConfMap}\n                transform={transform}\n                activeTarget={activeTarget}\n                readOnly\n                unrelatedCells={unrelatedCells}\n                onSwitchActiveTarget={onSwitchActiveTarget}\n                onCellContextMenu={onCellContextMenu}\n                onCellClick={onCellClick}\n                onNodeBrickResize={handleNodeBrickResize}\n                onCellMouseEnter={\n                  fadeUnrelatedCells && isNodeCell(cell)\n                    ? handleCellMouseEnter\n                    : undefined\n                }\n                onCellMouseLeave={\n                  fadeUnrelatedCells && isNodeCell(cell)\n                    ? handleCellMouseLeave\n                    : undefined\n                }\n              />\n            ))}\n          </g>\n        </g>\n      </svg>\n      {!hideZoomBar && (\n        <ZoomBarComponent\n          shadowRoot={shadowRoot}\n          scale={transform.k}\n          scaleRange={scaleRange}\n          onZoomChange={handleZoomSlide}\n          onReCenter={reCenter}\n        />\n      )}\n    </>\n  );\n}\n","import React, {\n  createRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport { createDecorators, type EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport type { UseSingleBrickConf } from \"@next-core/react-runtime\";\nimport { unwrapProvider } from \"@next-core/utils/general\";\nimport \"@next-core/theme\";\nimport { uniqueId } from \"lodash\";\nimport classNames from \"classnames\";\nimport { select } from \"d3-selection\";\nimport type { lockBodyScroll as _lockBodyScroll } from \"@next-bricks/basic/data-providers/lock-body-scroll/lock-body-scroll\";\nimport type {\n  NodePosition,\n  PositionTuple,\n  RangeTuple,\n  SizeTuple,\n  TransformLiteral,\n} from \"../diagram/interfaces\";\nimport type {\n  ActiveTarget,\n  Cell,\n  EdgeCell,\n  InitialCell,\n  NodeBrickConf,\n  NodeCell,\n  NodeId,\n  DecoratorCell,\n  DecoratorType,\n  CellContextMenuDetail,\n  ConnectLineState,\n  Deferred,\n  ConnectNodesDetail,\n  EdgeLineConf,\n  DecoratorTextChangeDetail,\n  NodeView,\n  LayoutType,\n  LayoutOptions,\n  SmartConnectLineState,\n  LineConnecterConf,\n  Direction,\n  EditableLineInfo,\n  LineEditorState,\n  EdgeView,\n  LineSettings,\n} from \"./interfaces\";\nimport { rootReducer } from \"./reducers\";\nimport { MarkerComponent } from \"../diagram/MarkerComponent\";\nimport {\n  isContainerDecoratorCell,\n  isEdgeCell,\n  isEdgeSide,\n  isNodeCell,\n  isNodeOrAreaDecoratorCell,\n  isTextDecoratorCell,\n} from \"./processors/asserts\";\nimport type {\n  EdgeViewChangePayload,\n  LineTuple,\n  MoveCellPayload,\n  ResizeCellPayload,\n} from \"./reducers/interfaces\";\nimport { sameTarget } from \"./processors/sameTarget\";\nimport { handleKeyboard } from \"./processors/handleKeyboard\";\nimport { CellComponent } from \"./CellComponent\";\nimport { ConnectLineComponent } from \"./ConnectLineComponent\";\nimport { initializeCells } from \"./processors/initializeCells\";\nimport { updateCells } from \"./processors/updateCells\";\nimport { getUnrelatedCells } from \"./processors/getUnrelatedCells\";\nimport {\n  DEFAULT_NODE_SIZE,\n  DEFAULT_AREA_WIDTH,\n  DEFAULT_AREA_HEIGHT,\n  DEFAULT_DEGRADED_THRESHOLD,\n  DEFAULT_NODE_PADDING_FOR_SMART_LINES,\n} from \"./constants\";\nimport { useZoom } from \"../shared/canvas/useZoom\";\nimport { useActiveTarget } from \"../shared/canvas/useActiveTarget\";\nimport { ZoomBarComponent } from \"../shared/canvas/ZoomBarComponent\";\nimport { useLayout } from \"../shared/canvas/useLayout\";\nimport { useReady } from \"../shared/canvas/useReady\";\nimport { useLineMarkers } from \"../shared/canvas/useLineMarkers\";\nimport { getConnectPointsOfRectangle } from \"../shared/canvas/shapes/Rectangle\";\nimport { LineConnectorComponent } from \"./LineConnectorComponent\";\nimport { HoverStateContext, type HoverState } from \"./HoverStateContext\";\nimport { handleLasso } from \"./processors/handleLasso\";\nimport styleText from \"../shared/canvas/styles.shadow.css\";\nimport zoomBarStyleText from \"../shared/canvas/ZoomBarComponent.shadow.css\";\nimport { SmartConnectLineComponent } from \"./SmartConnectLineComponent\";\nimport { cellToTarget } from \"./processors/cellToTarget\";\nimport { handleNodeContainedChange } from \"./processors/handleNodeContainedChange\";\nimport { LineEditorComponent } from \"./LineEditorComponent\";\nimport { EditingLineComponent } from \"./EditingLineComponent\";\n\nconst lockBodyScroll = unwrapProvider<typeof _lockBodyScroll>(\n  \"basic.lock-body-scroll\"\n);\n\nconst { defineElement, property, method, event } = createDecorators();\n\nexport interface EoDrawCanvasProps {\n  cells: InitialCell[] | undefined;\n  layout: LayoutType;\n  layoutOptions?: LayoutOptions;\n  defaultNodeSize: SizeTuple;\n  defaultNodeBricks?: NodeBrickConf[];\n  defaultEdgeLines?: EdgeLineConf[];\n  degradedThreshold?: number;\n  degradedNodeLabel?: string;\n  activeTarget?: ActiveTarget | null;\n  fadeUnrelatedCells?: boolean;\n  zoomable?: boolean;\n  scrollable?: boolean;\n  pannable?: boolean;\n  dragBehavior?: DragBehavior;\n  ctrlDragBehavior?: CtrlDragBehavior;\n  scaleRange?: RangeTuple;\n  lineSettings?: LineSettings;\n  lineConnector?: LineConnecterConf | boolean;\n  allowEdgeToArea?: boolean;\n}\n\nexport type DragBehavior = \"none\" | \"lasso\" | \"grab\";\nexport type CtrlDragBehavior = \"none\" | \"grab\";\n\nexport interface DropNodeInfo extends AddNodeInfo {\n  /** [PointerEvent::clientX, PointerEvent::clientY] */\n  position: PositionTuple;\n}\n\nexport interface DropDecoratorInfo {\n  decorator: DecoratorType;\n  /** [PointerEvent::clientX, PointerEvent::clientY] */\n  position: PositionTuple;\n  text?: string;\n  direction?: Direction;\n}\n\nexport interface AddNodeInfo {\n  id: NodeId;\n  useBrick?: UseSingleBrickConf;\n  data?: unknown;\n  size?: SizeTuple;\n}\n\nexport interface AddEdgeInfo {\n  source: NodeId;\n  target: NodeId;\n  data?: unknown;\n}\n\nexport interface UpdateCellsContext {\n  reason: \"add-related-nodes\";\n  parent: NodeId;\n}\n\nexport interface AddNodesContext {\n  defaultNodeSize: SizeTuple;\n  canvasWidth: number;\n  canvasHeight: number;\n}\n\nexport const EoDrawCanvasComponent = React.forwardRef(\n  LegacyEoDrawCanvasComponent\n);\n\n/**\n * 用于手工绘图的画布。\n *\n * 注意：将配套另外一个用于展示的画布构件。\n */\nexport\n@defineElement(\"eo-draw-canvas\", {\n  styleTexts: [styleText, zoomBarStyleText],\n})\nclass EoDrawCanvas extends ReactNextElement implements EoDrawCanvasProps {\n  /**\n   * 仅当初始化时使用，渲染后重新设置 `cells` 将无效。\n   */\n  @property({ attribute: false })\n  accessor cells: InitialCell[] | undefined;\n\n  @property({ type: String })\n  accessor layout: LayoutType;\n\n  @property({ attribute: false })\n  accessor layoutOptions: LayoutOptions | undefined;\n\n  /**\n   * @default [100,20]\n   */\n  @property({ attribute: false })\n  accessor defaultNodeSize: SizeTuple = [DEFAULT_NODE_SIZE, DEFAULT_NODE_SIZE];\n\n  @property({ attribute: false })\n  accessor defaultNodeBricks: NodeBrickConf[] | undefined;\n\n  /**\n   * 当节点数量达到或超过 `degradedThreshold` 时，节点将被降级展示。\n   *\n   * @default 500\n   */\n  @property({ type: Number })\n  accessor degradedThreshold: number | undefined;\n\n  // Set `attribute` to `false` even if it accepts string value.\n  // Because when passing like \"<% DATA.node.data.name %>\", it will be\n  // evaluated as object temporarily.\n  /**\n   * 设置节点将降级展示时显示的名称。\n   *\n   * @default \"<% DATA.node.id %>\"\n   */\n  @property({ attribute: false })\n  accessor degradedNodeLabel: string | undefined;\n\n  /**\n   * 使用条件判断设置默认的边对应的连线。在 `if` 表达式中 `DATA` 为 `{ edge }`，例如：\n   *\n   * ```yaml\n   * defaultEdgeLines:\n   *   - if: <% DATA.edge.data?.virtual %>\n   *     dashed: true\n   * ```\n   */\n  @property({ attribute: false })\n  accessor defaultEdgeLines: EdgeLineConf[] | undefined;\n\n  @property({ attribute: false })\n  accessor activeTarget: ActiveTarget | null | undefined;\n\n  /**\n   * 当 `activeTarget` 不为 `null` 时，隐藏其他跟该 `activeTarget` 无关的元素。\n   */\n  @property({ type: Boolean })\n  accessor fadeUnrelatedCells: boolean | undefined;\n\n  @property({ type: Boolean })\n  accessor zoomable: boolean | undefined = true;\n\n  @property({ type: Boolean })\n  accessor scrollable: boolean | undefined = true;\n\n  @property({ type: Boolean })\n  accessor pannable: boolean | undefined = true;\n\n  @property({ type: Boolean })\n  accessor allowEdgeToArea: boolean | undefined = false;\n\n  /**\n   * 按住鼠标拖动时的行为：\n   *  - `none`：无\n   *  - `lasso`：绘制选区\n   *  - `grab`：拖动画布\n   *\n   * @default \"none\"\n   */\n  @property()\n  accessor dragBehavior: DragBehavior | undefined;\n\n  /**\n   * 按住 ctrl 键并按住鼠标拖动时的行为：\n   *  - `none`：无\n   *  - `grab`：拖动画布\n   *\n   * @default \"none\"\n   */\n  @property()\n  accessor ctrlDragBehavior: CtrlDragBehavior | undefined;\n\n  @property({ attribute: false })\n  accessor scaleRange: RangeTuple | undefined;\n\n  @property({ attribute: false })\n  accessor lineSettings: LineSettings | undefined;\n\n  @property({ attribute: false })\n  accessor lineConnector: LineConnecterConf | boolean | undefined;\n\n  @event({ type: \"activeTarget.change\" })\n  accessor #activeTargetChangeEvent!: EventEmitter<ActiveTarget | null>;\n\n  #handleActiveTargetChange = (target: ActiveTarget | null) => {\n    this.#activeTargetChangeEvent.emit(target);\n  };\n\n  #handleSwitchActiveTarget = (target: ActiveTarget | null) => {\n    if (!sameTarget(target, this.activeTarget)) {\n      this.activeTarget = target;\n    }\n  };\n\n  /**\n   * @deprecated Use `cell.move` instead.\n   */\n  @event({ type: \"node.move\" })\n  accessor #nodeMoveEvent!: EventEmitter<MoveCellPayload>;\n\n  @event({ type: \"cell.move\" })\n  accessor #cellMoveEvent!: EventEmitter<MoveCellPayload>;\n\n  #handleCellMove = (info: MoveCellPayload) => {\n    this.#cellMoveEvent.emit(info);\n    if (info.type === \"node\") {\n      this.#nodeMoveEvent.emit(info);\n    }\n  };\n\n  @event({ type: \"cells.move\" })\n  accessor #cellsMoveEvent!: EventEmitter<MoveCellPayload[]>;\n\n  #handleCellsMove = (info: MoveCellPayload[]) => {\n    this.#cellsMoveEvent.emit(info);\n  };\n\n  @event({ type: \"cell.resize\" })\n  accessor #cellResizeEvent!: EventEmitter<ResizeCellPayload>;\n\n  #handleCellResize = (info: ResizeCellPayload) => {\n    this.#cellResizeEvent.emit(info);\n  };\n\n  /**\n   * @deprecated Use `cell.delete` instead.\n   */\n  @event({ type: \"node.delete\" })\n  accessor #nodeDelete!: EventEmitter<Cell>;\n\n  @event({ type: \"cell.delete\" })\n  accessor #cellDelete!: EventEmitter<Cell>;\n\n  #handleCellDelete = (cell: Cell) => {\n    this.#cellDelete.emit(cell);\n    if (cell.type === \"node\") {\n      this.#nodeDelete.emit(cell);\n    }\n  };\n\n  @event({ type: \"cells.delete\" })\n  accessor #cellsDelete!: EventEmitter<Cell[]>;\n\n  #handleCellsDelete = (cells: Cell[]) => {\n    this.#cellsDelete.emit(cells);\n  };\n\n  @event({ type: \"cell.contextmenu\" })\n  accessor #cellContextMenu!: EventEmitter<CellContextMenuDetail>;\n\n  #handleCellContextMenu = (detail: CellContextMenuDetail) => {\n    this.#cellContextMenu.emit(detail);\n  };\n\n  /**\n   * 通过画布绘图的方式添加边（手动调用 `addEdge` 方法不会触发该事件）。\n   */\n  @event({ type: \"edge.add\" })\n  accessor #edgeAdd!: EventEmitter<ConnectNodesDetail>;\n\n  #handleEdgeAdd = (edge: ConnectNodesDetail) => {\n    this.#edgeAdd.emit(edge);\n  };\n\n  @event({ type: \"edge.view.change\" })\n  accessor #edgeViewChange!: EventEmitter<EdgeViewChangePayload>;\n\n  #handleEdgeViewChange = (detail: EdgeViewChangePayload) => {\n    this.#edgeViewChange.emit(detail);\n  };\n\n  @event({ type: \"decorator.text.change\" })\n  accessor #decoratorTextChange!: EventEmitter<DecoratorTextChangeDetail>;\n\n  #handleDecoratorTextChange = (detail: DecoratorTextChangeDetail) => {\n    this.#decoratorTextChange.emit(detail);\n  };\n\n  /**\n   * node节点跟容器组关系改变事件，有containerCell是新增关系，否则删除关系\n   */\n  @event({ type: \"node.container.change\" })\n  accessor #containerContainerChange!: EventEmitter<MoveCellPayload[]>;\n\n  #handleContainerContainerChange = (detail: MoveCellPayload[]) => {\n    this.#containerContainerChange.emit(detail);\n  };\n\n  /**\n   * 缩放变化后，从素材库拖拽元素进画布时，拖拽图像应设置对应的缩放比例。\n   */\n  @event({ type: \"scale.change\" })\n  accessor #scaleChange!: EventEmitter<number>;\n\n  #handleScaleChange = (scale: number) => {\n    this.#scaleChange.emit(scale);\n  };\n\n  @method()\n  async dropNode({\n    id,\n    position,\n    size,\n    data,\n    useBrick,\n  }: DropNodeInfo): Promise<NodeCell | null> {\n    // Drag and then drop a node\n    const droppedInside = document\n      .elementsFromPoint?.(position[0], position[1])\n      ?.includes(this);\n    if (droppedInside) {\n      const boundingClientRect = this.getBoundingClientRect();\n      const transform = this.#canvasRef.current!.getTransform();\n      const newNode = {\n        type: \"node\",\n        id,\n        view: {\n          ...(this.layout === \"force\" || this.layout === \"dagre\"\n            ? null\n            : {\n                x:\n                  (position[0] - boundingClientRect.left - transform.x) /\n                  transform.k,\n                y:\n                  (position[1] - boundingClientRect.top - transform.y) /\n                  transform.k,\n              }),\n          width: size?.[0] ?? this.defaultNodeSize[0],\n          height: size?.[1] ?? this.defaultNodeSize[0],\n        },\n        data,\n        useBrick,\n      } as NodeCell;\n      this.#canvasRef.current?.dropNode(newNode);\n      return newNode;\n    }\n    return null;\n  }\n\n  @method()\n  async dropDecorator({\n    position,\n    decorator,\n    text,\n    direction,\n  }: DropDecoratorInfo): Promise<DecoratorCell | null> {\n    // Drag and then drop a node\n    const droppedInside = document\n      .elementsFromPoint?.(position[0], position[1])\n      ?.includes(this);\n    if (droppedInside) {\n      const boundingClientRect = this.getBoundingClientRect();\n      const transform = this.#canvasRef.current!.getTransform();\n      const newDecorator: DecoratorCell = {\n        type: \"decorator\",\n        decorator,\n        id: uuidV4(),\n        view: {\n          x:\n            (position[0] - boundingClientRect.left - transform.x) / transform.k,\n          y: (position[1] - boundingClientRect.top - transform.y) / transform.k,\n          width: DEFAULT_AREA_WIDTH,\n          height: DEFAULT_AREA_HEIGHT,\n          text,\n          direction,\n        },\n      };\n      this.#canvasRef.current?.dropDecorator(newDecorator);\n      return newDecorator;\n    }\n    return null;\n  }\n\n  @method()\n  async addNodes(nodes: AddNodeInfo[]): Promise<NodeCell[]> {\n    if (nodes.length === 0) {\n      return [];\n    }\n    const newNodes = nodes.map<NodeCell>(({ size, useBrick, id, data }) => ({\n      type: \"node\",\n      id,\n      data,\n      view: {\n        width: size?.[0] ?? this.defaultNodeSize[0],\n        height: size?.[1] ?? this.defaultNodeSize[0],\n      } as NodeView,\n      useBrick,\n    }));\n    return this.#canvasRef.current!.addNodes(newNodes, {\n      defaultNodeSize: this.defaultNodeSize,\n      canvasWidth: this.clientWidth,\n      canvasHeight: this.clientHeight,\n    });\n  }\n\n  @method()\n  async addEdge({ source, target, data }: AddEdgeInfo): Promise<EdgeCell> {\n    const newEdge: EdgeCell = {\n      type: \"edge\",\n      source,\n      target,\n      data,\n      view: this.lineSettings,\n    };\n    this.#canvasRef.current?.addEdge(newEdge);\n    return newEdge;\n  }\n\n  @method()\n  manuallyConnectNodes(source: NodeId): Promise<ConnectNodesDetail> {\n    return this.#canvasRef.current!.manuallyConnectNodes(source);\n  }\n\n  @method()\n  async updateCells(\n    cells: InitialCell[],\n    ctx?: UpdateCellsContext\n  ): Promise<{ updated: Cell[] }> {\n    await this.#waitForCanvasRef();\n    const { updated } = this.#canvasRef.current!.updateCells(cells, {\n      ...ctx,\n      defaultNodeSize: this.defaultNodeSize,\n      canvasWidth: this.clientWidth,\n      canvasHeight: this.clientHeight,\n    });\n    return { updated };\n  }\n\n  #waitForCanvasRef() {\n    return new Promise<void>((resolve) => {\n      const check = () => {\n        if (this.#canvasRef.current) {\n          resolve();\n        } else {\n          setTimeout(check, 10);\n        }\n      };\n      check();\n    });\n  }\n\n  #canvasRef = createRef<DrawCanvasRef>();\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    lockBodyScroll(this, false);\n  }\n\n  render() {\n    return (\n      <EoDrawCanvasComponent\n        host={this}\n        ref={this.#canvasRef}\n        layout={this.layout}\n        layoutOptions={this.layoutOptions}\n        cells={this.cells}\n        defaultNodeSize={this.defaultNodeSize}\n        defaultNodeBricks={this.defaultNodeBricks}\n        defaultEdgeLines={this.defaultEdgeLines}\n        degradedThreshold={this.degradedThreshold}\n        degradedNodeLabel={this.degradedNodeLabel}\n        activeTarget={this.activeTarget}\n        fadeUnrelatedCells={this.fadeUnrelatedCells}\n        zoomable={this.zoomable}\n        scrollable={this.scrollable}\n        pannable={this.pannable}\n        dragBehavior={this.dragBehavior}\n        ctrlDragBehavior={this.ctrlDragBehavior}\n        scaleRange={this.scaleRange}\n        lineSettings={this.lineSettings}\n        lineConnector={this.lineConnector}\n        allowEdgeToArea={this.allowEdgeToArea}\n        onActiveTargetChange={this.#handleActiveTargetChange}\n        onSwitchActiveTarget={this.#handleSwitchActiveTarget}\n        onCellMove={this.#handleCellMove}\n        onCellsMove={this.#handleCellsMove}\n        onCellResize={this.#handleCellResize}\n        onCellDelete={this.#handleCellDelete}\n        onCellsDelete={this.#handleCellsDelete}\n        onEdgeAdd={this.#handleEdgeAdd}\n        onCellContextMenu={this.#handleCellContextMenu}\n        onDecoratorTextChange={this.#handleDecoratorTextChange}\n        onContainerContainerChange={this.#handleContainerContainerChange}\n        onScaleChange={this.#handleScaleChange}\n        onEdgeViewChange={this.#handleEdgeViewChange}\n      />\n    );\n  }\n}\n\nexport interface EoDrawCanvasComponentProps extends EoDrawCanvasProps {\n  host: HTMLElement;\n  onActiveTargetChange(target: ActiveTarget | null): void;\n  onSwitchActiveTarget(target: ActiveTarget | null): void;\n  onCellMove(info: MoveCellPayload): void;\n  onCellResize(cell: ResizeCellPayload): void;\n  onCellDelete(cell: Cell): void;\n  onCellsMove(info: MoveCellPayload[]): void;\n  onCellsDelete(cells: Cell[]): void;\n  onCellContextMenu(detail: CellContextMenuDetail): void;\n  onEdgeAdd(detail: ConnectNodesDetail): void;\n  onEdgeViewChange(detail: EdgeViewChangePayload): void;\n  onDecoratorTextChange(detail: DecoratorTextChangeDetail): void;\n  onContainerContainerChange(detail: MoveCellPayload[]): void;\n  onScaleChange(scale: number): void;\n}\n\nexport interface DrawCanvasRef {\n  dropNode(node: NodeCell): void;\n  dropDecorator(decorator: DecoratorCell): void;\n  addNodes(nodes: NodeCell[], ctx: AddNodesContext): NodeCell[];\n  addEdge(edge: EdgeCell): void;\n  manuallyConnectNodes(source: NodeId): Promise<ConnectNodesDetail>;\n  updateCells(\n    cells: InitialCell[],\n    ctx: Partial<UpdateCellsContext> & {\n      defaultNodeSize: SizeTuple;\n      canvasWidth: number;\n      canvasHeight: number;\n    }\n  ): {\n    cells: Cell[];\n    updated: Cell[];\n  };\n  getTransform(): TransformLiteral;\n}\n\nfunction LegacyEoDrawCanvasComponent(\n  {\n    host,\n    layout,\n    layoutOptions,\n    cells: initialCells,\n    defaultNodeSize,\n    defaultNodeBricks,\n    defaultEdgeLines,\n    degradedThreshold,\n    degradedNodeLabel,\n    activeTarget: _activeTarget,\n    fadeUnrelatedCells,\n    zoomable,\n    scrollable,\n    pannable,\n    dragBehavior,\n    ctrlDragBehavior,\n    scaleRange: _scaleRange,\n    lineSettings,\n    lineConnector,\n    allowEdgeToArea,\n    onActiveTargetChange,\n    onSwitchActiveTarget,\n    onCellMove,\n    onCellResize,\n    onCellDelete,\n    onCellsMove,\n    onCellsDelete,\n    onCellContextMenu,\n    onEdgeAdd,\n    onDecoratorTextChange,\n    onScaleChange,\n    onContainerContainerChange,\n    onEdgeViewChange,\n  }: EoDrawCanvasComponentProps,\n  ref: React.Ref<DrawCanvasRef>\n) {\n  const [{ cells, layoutKey }, dispatch] = useReducer(\n    rootReducer,\n    initialCells,\n    (initialCells) => ({\n      cells: initializeCells(initialCells, { defaultNodeSize }),\n      layoutKey: 0,\n    })\n  );\n\n  // When nodes are greater or equal to threshold, the diagram will be degraded.\n  // Thus all nodes will be displayed as simple svg elements instead of bricks.\n  const degraded = useMemo(\n    () =>\n      cells.filter(isNodeCell).length >=\n      (degradedThreshold ?? DEFAULT_DEGRADED_THRESHOLD),\n    [cells, degradedThreshold]\n  );\n\n  const rootRef = useRef<SVGSVGElement>(null);\n  const manualConnectDeferredRef = useRef<Deferred<ConnectNodesDetail> | null>(\n    null\n  );\n  const [editingTexts, setEditingTexts] = useState<string[]>([]);\n  const [activeContainers, setActiveContainers] = useState<string[]>([]);\n  const { grabbing, transform, zoomer, scaleRange } = useZoom({\n    rootRef,\n    zoomable,\n    scrollable,\n    pannable,\n    draggable: dragBehavior === \"grab\",\n    ctrlDraggable: ctrlDragBehavior === \"grab\",\n    scaleRange: _scaleRange,\n    onSwitchActiveTarget,\n  });\n\n  useEffect(() => {\n    onScaleChange(transform.k);\n  }, [onScaleChange, transform.k]);\n\n  const [lassoRect, setLassoRect] = useState<NodeView | null>(null);\n\n  const [connectLineState, setConnectLineState] =\n    useState<ConnectLineState | null>(null);\n\n  const { centered, setCentered, getNextLayoutKey } = useLayout({\n    layout,\n    layoutOptions,\n    rootRef,\n    cells,\n    zoomable,\n    zoomer,\n    scaleRange,\n    layoutKey,\n    allowEdgeToArea,\n    dispatch,\n  });\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      dropNode(node) {\n        // Do not apply auto centering when dropping a node in manual layout.\n        if (layout !== \"dagre\" && layout !== \"force\") {\n          setCentered(true);\n        }\n        dispatch({ type: \"drop-node\", payload: node });\n      },\n      dropDecorator(decorator) {\n        // Do not apply auto centering when dropping a decorator in manual layout.\n        if (layout !== \"dagre\" && layout !== \"force\") {\n          setCentered(true);\n        }\n        dispatch({ type: \"drop-decorator\", payload: decorator });\n      },\n      addNodes(\n        nodes,\n        { defaultNodeSize, canvasWidth, canvasHeight }: AddNodesContext\n      ) {\n        const index =\n          cells.findLastIndex(\n            (cell) => !(cell.type === \"decorator\" && cell.decorator === \"text\")\n          ) + 1;\n        const newCells = [\n          ...cells.slice(0, index),\n          ...nodes,\n          ...cells.slice(index),\n        ];\n        const {\n          cells: allCells,\n          updated,\n          shouldReCenter,\n        } = updateCells({\n          cells: newCells,\n          layout,\n          previousCells: cells,\n          defaultNodeSize,\n          canvasWidth,\n          canvasHeight,\n          scaleRange,\n          transform,\n          allowEdgeToArea,\n        });\n        if (shouldReCenter) {\n          setCentered(false);\n        }\n        dispatch({ type: \"update-cells\", payload: allCells });\n        return updated.filter((node) =>\n          nodes.includes(node as NodeCell)\n        ) as NodeCell[];\n      },\n      addEdge(edge) {\n        dispatch({ type: \"add-edge\", payload: edge });\n      },\n      updateCells(newCells, ctx) {\n        const { shouldReCenter, ...result } = updateCells({\n          ...ctx,\n          layout,\n          previousCells: cells,\n          cells: newCells,\n          scaleRange,\n          transform,\n          allowEdgeToArea,\n        });\n        if (shouldReCenter) {\n          setCentered(false);\n        }\n        dispatch({ type: \"update-cells\", payload: result.cells });\n        return result;\n      },\n      getTransform() {\n        return transform;\n      },\n      manuallyConnectNodes(sourceId) {\n        const source = cells.find(\n          (cell) => isEdgeSide(cell, allowEdgeToArea) && cell.id === sourceId\n        ) as NodeCell | DecoratorCell | undefined;\n        if (source) {\n          const rect = rootRef.current!.getBoundingClientRect();\n          setConnectLineState({\n            source,\n            from: [\n              source.view.x + source.view.width / 2,\n              source.view.y + source.view.height / 2,\n            ],\n            offset: [rect.left, rect.top],\n          });\n          const promise = new Promise<ConnectNodesDetail>((resolve, reject) => {\n            manualConnectDeferredRef.current = { resolve, reject };\n          });\n          return promise;\n        }\n        return Promise.reject(null);\n      },\n    }),\n    [cells, layout, scaleRange, setCentered, transform, allowEdgeToArea]\n  );\n\n  const handleConnect = useCallback(\n    (state: ConnectLineState, to: PositionTuple) => {\n      // Find the target node from top bo bottom,\n      // detect whether the pointer is inside the target node.\n      for (let i = cells.length - 1; i >= 0; i--) {\n        const cell = cells[i];\n        // Currently ignore connecting to self\n        if (isEdgeSide(cell, allowEdgeToArea) && cell.id !== state.source.id) {\n          if (\n            cell.view.x < to[0] &&\n            cell.view.x + cell.view.width > to[0] &&\n            cell.view.y < to[1] &&\n            cell.view.y + cell.view.height > to[1]\n          ) {\n            manualConnectDeferredRef.current?.resolve({\n              source: state.source,\n              target: cell,\n            });\n            break;\n          }\n        }\n      }\n      manualConnectDeferredRef.current?.reject(null);\n      setConnectLineState(null);\n    },\n    [allowEdgeToArea, cells]\n  );\n  const [smartConnectLineState, setSmartConnectLineState] =\n    useState<SmartConnectLineState | null>(null);\n\n  useEffect(() => {\n    lockBodyScroll(\n      host,\n      !!(connectLineState || !!smartConnectLineState || lassoRect)\n    );\n  }, [connectLineState, host, smartConnectLineState, lassoRect]);\n\n  const activeTarget = useActiveTarget({\n    rootRef,\n    activeTarget: _activeTarget,\n    onActiveTargetChange,\n  });\n\n  const [unrelatedCells, setUnrelatedCells] = useState<Cell[]>([]);\n  useEffect(() => {\n    const nextUnrelated = fadeUnrelatedCells\n      ? getUnrelatedCells(\n          cells,\n          connectLineState,\n          activeTarget,\n          allowEdgeToArea\n        )\n      : [];\n    // Do not update the state when prev and next are both empty.\n    setUnrelatedCells((prev) =>\n      prev.length === 0 && nextUnrelated.length === 0 ? prev : nextUnrelated\n    );\n  }, [\n    activeTarget,\n    cells,\n    connectLineState,\n    fadeUnrelatedCells,\n    allowEdgeToArea,\n  ]);\n\n  useEffect(() => {\n    const root = rootRef.current;\n    if (!root || editingTexts.length > 0) {\n      return;\n    }\n    const onKeydown = (event: KeyboardEvent) => {\n      const action = handleKeyboard(event, {\n        cells,\n        activeTarget,\n      });\n\n      switch (action?.action) {\n        case \"delete-cells\":\n          onCellsDelete(action.cells);\n          if (action.cells.length === 1) {\n            onCellDelete(action.cells[0]);\n          }\n          break;\n      }\n    };\n    root.addEventListener(\"keydown\", onKeydown);\n    return () => {\n      root.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, [activeTarget, cells, editingTexts.length, onCellDelete, onCellsDelete]);\n\n  const defPrefix = useMemo(() => `${uniqueId(\"diagram-\")}-`, []);\n  const markerPrefix = `${defPrefix}line-arrow-`;\n\n  const [guideLines, setGuideLines] = useState<LineTuple[]>([]);\n\n  /* istanbul ignore next */\n  const handleCellsMoving = useCallback(\n    (info: MoveCellPayload[]) => {\n      dispatch({ type: \"move-cells\", payload: info });\n      const containedIds: string[] = [];\n      handleNodeContainedChange(info, cells).forEach((c) => {\n        if (c.containerCell?.id) containedIds.push(c.containerCell?.id);\n      });\n      setActiveContainers(containedIds);\n      setGuideLines(info.flatMap((c) => c.guideLines ?? []));\n    },\n    [cells]\n  );\n\n  /* istanbul ignore next */\n  const handleCellsMoved = useCallback(\n    (info: MoveCellPayload[]) => {\n      dispatch({ type: \"move-cells\", payload: info });\n      onCellsMove(info);\n      if (info.length === 1) {\n        onCellMove(info[0]);\n      }\n      handleNodeContainedChange(info, cells, onContainerContainerChange);\n      setActiveContainers([]);\n      setGuideLines([]);\n    },\n    [onCellMove, onCellsMove, cells, onContainerContainerChange]\n  );\n\n  const handleCellResizing = useCallback((info: ResizeCellPayload) => {\n    dispatch({ type: \"resize-cell\", payload: info });\n  }, []);\n\n  const handleCellResized = useCallback(\n    (info: ResizeCellPayload) => {\n      dispatch({ type: \"resize-cell\", payload: info });\n      onCellResize(info);\n    },\n    [onCellResize]\n  );\n\n  const handleDecoratorTextEditing = useCallback(\n    ({ id, editing }: { id: string; editing: boolean }) => {\n      if (editing) {\n        setEditingTexts((texts) =>\n          texts.includes(id) ? texts : [...texts, id]\n        );\n      } else {\n        setEditingTexts((texts) => texts.filter((text) => text !== id));\n      }\n    },\n    []\n  );\n\n  const handleNodeBrickResize = useCallback(\n    (id: string, size: SizeTuple | null) => {\n      const nextLayoutKey = getNextLayoutKey();\n      dispatch({\n        type: \"update-node-size\",\n        payload: { id, size },\n        layoutKey: nextLayoutKey,\n      });\n    },\n    [getNextLayoutKey]\n  );\n\n  const handleZoomSlide = useCallback(\n    (value: number) => {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== \"test\") {\n        zoomer.scaleTo(select(rootRef.current!), value / 100);\n      }\n    },\n    [zoomer]\n  );\n\n  const reCenter = useCallback(() => {\n    setCentered(false);\n  }, [setCentered]);\n  const { lineConfMap, lineConnectorConf, markers } = useLineMarkers({\n    cells,\n    defaultEdgeLines,\n    lineConnector,\n    markerPrefix,\n  });\n\n  const ready = useReady({ cells, layout, centered });\n\n  const [hoverState, setHoverState] = useState<HoverState | null>(null);\n  const unsetHoverStateTimeoutRef = useRef<number | null>(null);\n\n  const [activeEditableLine, setActiveEditableLine] =\n    useState<EditableLineInfo | null>(null);\n  const [lineEditorState, setLineEditorState] =\n    useState<LineEditorState | null>(null);\n\n  // istanbul ignore next\n  const handleCellMouseEnter = useCallback(\n    (cell: Cell) => {\n      if (\n        lineConnectorConf &&\n        isEdgeSide(cell, allowEdgeToArea) &&\n        (!lineEditorState || lineEditorState.type !== \"control\")\n      ) {\n        if (unsetHoverStateTimeoutRef.current !== null) {\n          clearTimeout(unsetHoverStateTimeoutRef.current);\n          unsetHoverStateTimeoutRef.current = null;\n        }\n        const relativePoints = getConnectPointsOfRectangle();\n        setHoverState({\n          cell,\n          relativePoints,\n          points: getConnectPoints(relativePoints, cell.view),\n        });\n      }\n    },\n    [allowEdgeToArea, lineConnectorConf, lineEditorState]\n  );\n\n  const handleCellMouseLeave = useCallback(\n    (cell: Cell) => {\n      if (lineConnectorConf && isNodeCell(cell)) {\n        unsetHoverStateTimeoutRef.current = setTimeout(() => {\n          setHoverState(null);\n        }) as unknown as number;\n      }\n    },\n    [lineConnectorConf]\n  );\n\n  // istanbul ignore next\n  const handleSmartConnect = useCallback(\n    (\n      source: NodeCell | DecoratorCell,\n      target: NodeCell | DecoratorCell,\n      exitPosition: NodePosition,\n      entryPosition: NodePosition | undefined\n    ) => {\n      const payload: EdgeViewChangePayload = {\n        source: source.id,\n        target: target.id,\n        view: {\n          ...lineSettings,\n          exitPosition,\n          entryPosition,\n          vertices: null,\n        },\n      };\n      const existedEdge = cells.find(\n        (cell) =>\n          cell.type === \"edge\" &&\n          cell.source === source.id &&\n          cell.target === target.id\n      );\n      if (existedEdge) {\n        dispatch({\n          type: \"change-edge-view\",\n          payload,\n        });\n        onEdgeViewChange?.(payload);\n      } else {\n        const newEdge: EdgeCell = {\n          type: \"edge\",\n          ...payload,\n        };\n        dispatch({\n          type: \"add-edge\",\n          payload: newEdge,\n        });\n        onEdgeAdd({\n          source,\n          target,\n          view: newEdge.view,\n        });\n      }\n    },\n    [cells, lineSettings, onEdgeAdd, onEdgeViewChange]\n  );\n\n  // istanbul ignore next\n  const handleEdgeChangeView = useCallback(\n    (\n      source: NodeCell | DecoratorCell,\n      target: NodeCell | DecoratorCell,\n      view: EdgeView\n    ) => {\n      const payload: EdgeViewChangePayload = {\n        source: source.id,\n        target: target.id,\n        view,\n      };\n      dispatch({\n        type: \"change-edge-view\",\n        payload,\n      });\n      onEdgeViewChange?.(payload);\n    },\n    [onEdgeViewChange]\n  );\n\n  // istanbul ignore next: experimental\n  const hoverStateContextValue = useMemo(\n    () => ({\n      rootRef,\n      smartConnectLineState,\n      unsetHoverStateTimeoutRef,\n      hoverState,\n      activeEditableLine,\n      lineEditorState,\n      setLineEditorState,\n      setActiveEditableLine,\n      setHoverState,\n      setSmartConnectLineState,\n      onConnect: handleSmartConnect,\n      onChangeEdgeView: handleEdgeChangeView,\n    }),\n    [\n      activeEditableLine,\n      handleEdgeChangeView,\n      handleSmartConnect,\n      hoverState,\n      lineEditorState,\n      smartConnectLineState,\n    ]\n  );\n\n  useEffect(() => {\n    const root = rootRef.current;\n    if (!root || dragBehavior !== \"lasso\") {\n      return;\n    }\n    const rootRect = root.getBoundingClientRect();\n    const onMouseDown = (event: MouseEvent) => {\n      handleLasso(event, {\n        transform,\n        offset: [rootRect.left, rootRect.top],\n        onLassoing(rect) {\n          setLassoRect(rect);\n        },\n        onLassoed(rect) {\n          setLassoRect(null);\n          const lassoedCells: (NodeCell | DecoratorCell)[] = [];\n          for (const cell of cells) {\n            if (\n              isContainerDecoratorCell(cell) ||\n              isNodeOrAreaDecoratorCell(cell) ||\n              isTextDecoratorCell(cell)\n            ) {\n              const x = cell.view.x;\n              const y = cell.view.y;\n              if (\n                x >= rect.x &&\n                x + cell.view.width <= rect.x + rect.width &&\n                y >= rect.y &&\n                y + cell.view.height <= rect.y + rect.height\n              ) {\n                lassoedCells.push(cell);\n              }\n            }\n          }\n          onSwitchActiveTarget?.(\n            lassoedCells.length > 1\n              ? { type: \"multi\", targets: lassoedCells.map(cellToTarget) }\n              : lassoedCells.length === 1\n                ? cellToTarget(lassoedCells[0])\n                : null\n          );\n        },\n      });\n    };\n    root.addEventListener(\"mousedown\", onMouseDown);\n    return () => {\n      root.removeEventListener(\"mousedown\", onMouseDown);\n    };\n  }, [transform, cells, dragBehavior, onSwitchActiveTarget]);\n\n  return (\n    <HoverStateContext.Provider value={hoverStateContextValue}>\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        ref={rootRef}\n        className={classNames(\"root\", { grabbing, pannable, ready })}\n        tabIndex={-1}\n      >\n        <defs>\n          {markers.map((marker, index) => (\n            <MarkerComponent\n              key={index}\n              id={`${markerPrefix}${index}`}\n              type={marker.markerType}\n              strokeColor={marker.strokeColor}\n            />\n          ))}\n        </defs>\n        <g\n          transform={`translate(${transform.x} ${transform.y}) scale(${transform.k})`}\n        >\n          <g className={classNames(\"cells\", { allowEdgeToArea })}>\n            {cells.map((cell) => (\n              <CellComponent\n                key={`${cell.type}:${isEdgeCell(cell) ? `${cell.source}~${cell.target}` : cell.id}`}\n                dragNodeToContainerActive={\n                  isEdgeCell(cell) ? false : activeContainers.includes(cell.id)\n                }\n                layout={layout}\n                layoutOptions={layoutOptions}\n                cell={cell}\n                cells={cells}\n                degraded={degraded}\n                degradedNodeLabel={degradedNodeLabel}\n                defaultNodeBricks={defaultNodeBricks}\n                transform={transform}\n                lineConfMap={lineConfMap}\n                activeTarget={activeTarget}\n                unrelatedCells={unrelatedCells}\n                allowEdgeToArea={allowEdgeToArea}\n                onCellsMoving={handleCellsMoving}\n                onCellsMoved={handleCellsMoved}\n                onCellResizing={handleCellResizing}\n                onCellResized={handleCellResized}\n                onSwitchActiveTarget={onSwitchActiveTarget}\n                onCellContextMenu={onCellContextMenu}\n                onDecoratorTextChange={onDecoratorTextChange}\n                onDecoratorTextEditing={handleDecoratorTextEditing}\n                onNodeBrickResize={handleNodeBrickResize}\n                onCellMouseEnter={handleCellMouseEnter}\n                onCellMouseLeave={handleCellMouseLeave}\n              />\n            ))}\n          </g>\n          <g>\n            <ConnectLineComponent\n              connectLineState={connectLineState}\n              transform={transform}\n              markerEnd={`${markerPrefix}0`}\n              onConnect={handleConnect}\n            />\n          </g>\n          {lassoRect && (\n            <rect\n              x={lassoRect.x}\n              y={lassoRect.y}\n              width={lassoRect.width}\n              height={lassoRect.height}\n              fill=\"var(--palette-gray-5)\"\n              fillOpacity={0.3}\n              stroke=\"var(--palette-gray-5)\"\n              strokeDasharray={2}\n            />\n          )}\n          {lineConnectorConf && (\n            <g>\n              <SmartConnectLineComponent\n                transform={transform}\n                lineSettings={lineSettings}\n                options={lineConnectorConf}\n              />\n              <EditingLineComponent\n                transform={transform}\n                options={lineConnectorConf}\n              />\n            </g>\n          )}\n          <g>\n            {guideLines.map((line, index) => (\n              <path\n                key={index}\n                d={`M${line[0].join(\" \")} L${line[1].join(\" \")}`}\n                stroke=\"var(--palette-orange-5)\"\n                fill=\"none\"\n                strokeWidth={1 / transform.k}\n              />\n            ))}\n          </g>\n          <g>\n            {lineConnectorConf && <LineEditorComponent scale={transform.k} />}\n          </g>\n          {lineConnectorConf && (\n            <LineConnectorComponent\n              activeTarget={activeTarget}\n              scale={transform.k}\n              disabled={!!connectLineState}\n            />\n          )}\n        </g>\n      </svg>\n      <ZoomBarComponent\n        shadowRoot={host.shadowRoot!}\n        scale={transform.k}\n        scaleRange={scaleRange}\n        onZoomChange={handleZoomSlide}\n        onReCenter={reCenter}\n      />\n    </HoverStateContext.Provider>\n  );\n}\n\nexport function uuidV4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nfunction getConnectPoints(\n  relativePoints: ReadonlyArray<NodePosition>,\n  view: NodeView,\n  border = 1\n) {\n  const padding = DEFAULT_NODE_PADDING_FOR_SMART_LINES;\n  const halfPadding = padding / 2;\n\n  const viewWithBorderAndPadding: NodeView = {\n    x: view.x + border / 2 - halfPadding,\n    y: view.y + border / 2 - halfPadding,\n    width: view.width - border + padding,\n    height: view.height - border + padding,\n  };\n\n  return relativePoints.map((p) => ({\n    x: viewWithBorderAndPadding.x + p.x * viewWithBorderAndPadding.width,\n    y: viewWithBorderAndPadding.y + p.y * viewWithBorderAndPadding.height,\n  }));\n}\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:block;--local-label-line-height:inherit;--local-label-font-size:inherit;--local-label-color:inherit;--local-label-font-weight:inherit}:host([hidden]){display:none}:host([type=\"line\"]){--local-label-line-height:18px;--local-label-font-size:11px;--local-label-color:var(--color-secondary-text);--local-label-font-weight:400}*{box-sizing:border-box}.label{max-width:168px;margin:-3px}.label-text,\n.label-input{width:100%;height:24px;padding:3px;border:none;line-height:var(--local-label-line-height);font-size:var(--local-label-font-size);color:var(--local-label-color);font-weight:var(--local-label-font-weight);text-align:center;font-family:inherit;cursor:text;-webkit-user-select:text;user-select:text}.label-text{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.label.editing .label-text,\n.label.empty:not(.editing) .label-text,\n.label:not(.editing) .label-input{display:none}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `*{box-sizing:border-box}:host{display:block;border:1px solid var(--palette-gray-5);cursor:default;-webkit-user-select:none;user-select:none}:host([hidden]){display:none}:host([usage=\"dragging\"]){opacity:0.75;position:fixed}:host(:not([usage=\"library\"])){background:rgba(0,0,0,0.2);width:60px;height:60px}:host([usage=\"library\"]){width:180px;height:30px;margin-bottom:10px}div{width:100%;height:100%;display:flex;align-items:center;justify-content:center}:host(:not([usage=\"dragging\"]):not([usage=\"library\"]):hover),\n:host([status=\"highlighted\"]){color:var(--palette-blue-5);background:var(--palette-blue-1);border-color:1px solid var(--palette-blue-4)}:host([status=\"faded\"]){opacity:0.3}:host([decorator=\"area\"]){width:100px;height:60px;background:rgba(119,141,195,0.1);border:none}:host([decorator=\"text\"]){width:auto;height:auto;background:none;border:none}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n"],"names":["defineElement","property","event","method","createDecorators","EoDiagramComponent","forwardRef","LegacyEoDiagramComponent","_EoDiagram","_A","WeakMap","_B","_C","_D","_E","_F","_G","_H","_I","_J","_K","_L","_M","_N","_O","_EoDiagram_brand","WeakSet","_handleActiveTargetChange","_P","_handleNodeDelete","_Q","_handleEdgeDelete","_R","_handleLineClick","_S","_handleLineDoubleClick","_T","_handleNodesConnect","_handleSwitchActiveTarget","_diagramRef","EoDiagram","ReactNextElement","constructor","arguments","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_initProto","_init_layout","_init_extra_layout","_init_nodes","_init_extra_nodes","_init_edges","_init_extra_edges","_init_nodeBricks","_init_extra_nodeBricks","_init_lines","_init_extra_lines","_init_layoutOptions","_init_extra_layoutOptions","_init_activeTarget","_init_extra_activeTarget","_init_disableKeyboardAction","_init_extra_disableKeyboardAction","_init_connectNodes","_init_extra_connectNodes","_init_dragNodes","_init_extra_dragNodes","_init_zoomable","_init_extra_zoomable","_init_scrollable","_init_extra_scrollable","_init_pannable","_init_extra_pannable","_init_scaleRange","_init_extra_scaleRange","_init_activeTargetChangeEvent","_init_extra_activeTargetChangeEvent","target","_classPrivateGetter","this","_get_activeTargetChangeEvent","emit","_init_nodeDelete","_init_extra_nodeDelete","node","_get_nodeDelete","_init_edgeDelete","_init_extra_edgeDelete","edge","_get_edgeDelete","_init_lineClick","_init_extra_lineClick","line","_get_lineClick","_init_lineDoubleClick","_init_extra_lineDoubleClick","_get_lineDoubleClick","_init_connectNodes2","_init_extra_connectNodes2","detail","_get_connectNodes","sameTarget","activeTarget","createRef","layout","_classPrivateFieldGet","v","_classPrivateFieldSet","nodes","edges","nodeBricks","lines","layoutOptions","disableKeyboardAction","connectNodes","dragNodes","zoomable","scrollable","pannable","scaleRange","callOnLineLabel","id","_classPrivateFieldGet2","_len","length","args","Array","_key","current","render","React","ref","onActiveTargetChange","onSwitchActiveTarget","onNodeDelete","onEdgeDelete","onLineClick","onLineDoubleClick","onNodesConnect","_ref","_activeTarget","_scaleRange","nodesReady","setNodesReady","useState","nodesRenderId","setNodesRenderId","nodesRefRepository","setNodesRefRepository","lineLabelsReady","setLineLabelsReady","lineLabelsRenderId","setLineLabelsRenderId","lineLabelsRefRepository","setLineLabelsRefRepository","renderedLineLabels","setRenderedLineLabels","grabbing","setGrabbing","transform","setTransform","k","x","y","linePathsRef","useRef","Map","rootRef","nodesRef","centered","setCentered","userViewReady","userViewNodesMap","saveUserView","useUserView","save","connectLineTo","setConnectLineTo","connectLineState","setConnectLineState","manualLayoutStatus","setManualLayoutStatus","nodeMovement","setNodeMovement","useImperativeHandle","_lineLabelsRefReposit","_len2","_key2","get","firstElementChild","useEffect","onNodesMouseDown","handleNodesMouseDown","scale","nodesContainer","addEventListener","removeEventListener","normalizedLines","normalizedLinesMap","markers","useMemo","normalizeLinesAndMarkers","lineLabels","flatMap","_ref2","key","list","text","label","$id","concat","map","item","placement","renderedNodes","renderedEdges","useRenderedDiagram","renderedLines","getRenderedLines","newActiveTarget","setActiveTarget","previous","activeTargetChangeInitialized","root","onKeydown","action","handleKeyboard","type","nodeId","handleNodesRendered","useCallback","refRepository","handleLineLabelsRendered","DEFAULT_SCALE_RANGE_MIN","DEFAULT_SCALE_RANGE_MAX","zoomer","zoom","moved","scaleExtent","on","e","rootSelection","select","unsetZoom","ctrlKey","stopImmediatePropagation","preventDefault","translateBy","wheelDeltaX","wheelDeltaY","call","transformToCenter","canvasWidth","clientWidth","canvasHeight","clientHeight","undefined","ZoomTransform","defPrefix","uniqueId","markerPrefix","maskPrefix","activeLineMarkerPrefix","getRenderedLineLabels","lineMaskRects","setLineMaskRects","adjustLineLabels","observer","ResizeObserver","updateLineMaskRects","getLineMaskRects","lineLabel","values","observe","disconnect","className","classNames","ready","tabIndex","width","height","_ref3","index","strokeColor","MarkerComponent","_ref4","lineId","rects","LineMaskComponent","viewBox","refX","refY","markerWidth","markerHeight","orient","d","stroke","strokeWidth","fill","LineComponent","linePaths","active","source","activeRelated","style","left","top","LineLabelComponentGroup","labels","onRendered","NodeComponentGroup","ConnectLineComponent","_EoDiagram2","_set_activeTargetChangeEvent","_set_nodeDelete","_set_edgeDelete","_set_lineClick","_set_lineDoubleClick","_set_connectNodes","c","_initClass","_applyDecs","styleTexts","styleText","String","attribute","Boolean","o","_","has","_checkInRHS","EditableLabelComponent","LegacyEditableLabelComponent","_EditableLabel","_EditableLabel_brand","_handleLabelEditingChange","_handleLabelChange","_editableLabelRef","EditableLabel","_init_label","_init_extra_label","_init_type","_init_extra_type","_init_labelEditingChange","_init_extra_labelEditingChange","value","_get_labelEditingChange","_init_labelChange","_init_extra_labelChange","_get_labelChange","enableEditing","onLabelEditingChange","onLabelChange","_label","currentLabel","setCurrentLabel","editingLabel","setEditingLabel","editingLabelInitialized","shouldEmitLabelChange","setShouldEmitLabelChange","labelInputRef","handleEditLabel","stopPropagation","_labelInputRef$curren","_labelInputRef$curren2","focus","preventScroll","handleInputChange","handleInputKeydown","keyCode","which","_labelInputRef$curren3","blur","handleInputBlur","editing","empty","onDoubleClick","onMouseDown","onChange","onKeyDown","onBlur","_EditableLabel2","_set_labelEditingChange","_set_labelChange","_ExperimentalNode","_ExperimentalNode_brand","_handleDragStart","_handleDragMove","_handleDragEnd","ExperimentalNode","_init_usage","_init_extra_usage","_init_status","_init_extra_status","_init_decorator","_init_extra_decorator","_init_dragStartEvent","_init_extra_dragStartEvent","position","_get_dragStartEvent","_init_dragMoveEvent","_init_extra_dragMoveEvent","_get_dragMoveEvent","_init_dragEndEvent","_init_extra_dragEndEvent","_get_dragEndEvent","usage","status","decorator","ExperimentalNodeComponent","onDragStart","onDragMove","onDragEnd","handleMouseDown","from","clientX","clientY","onMouseMove","onMouseUp","document","_ExperimentalNode2","_set_dragStartEvent","_set_dragMoveEvent","_set_dragEndEvent","_EoDisplayCanvas","_EoDisplayCanvas_brand","_handleCellContextMenu","_handleCellClick","EoDisplayCanvas","_init_cells","_init_extra_cells","_init_defaultNodeSize","DEFAULT_NODE_SIZE","_init_extra_defaultNodeSize","_init_defaultNodeBricks","_init_extra_defaultNodeBricks","_init_degradedThreshold","_init_extra_degradedThreshold","_init_degradedNodeLabel","_init_extra_degradedNodeLabel","_init_defaultEdgeLines","_init_extra_defaultEdgeLines","_init_fadeUnrelatedCells","_init_extra_fadeUnrelatedCells","_init_hideZoomBar","_init_extra_hideZoomBar","_init_autoCenterWhenCellsChange","_init_extra_autoCenterWhenCellsChange","_init_cellContextMenu","_init_extra_cellContextMenu","_get_cellContextMenu","_init_cellClick","_init_extra_cellClick","_get_cellClick","cells","defaultNodeSize","defaultNodeBricks","degradedThreshold","degradedNodeLabel","defaultEdgeLines","fadeUnrelatedCells","hideZoomBar","autoCenterWhenCellsChange","EoDisplayCanvasComponent","shadowRoot","onCellContextMenu","onCellClick","initialCells","layoutKey","dispatch","useReducer","rootReducer","initializeCells","degraded","filter","isNodeCell","DEFAULT_DEGRADED_THRESHOLD","useZoom","draggable","getNextLayoutKey","useLayout","reCenter","previousCellsRef","result","updateCells","host","previousCells","payload","useActiveTarget","handleNodeBrickResize","size","hoverCell","setHoverCell","handleCellMouseEnter","cell","handleCellMouseLeave","prev","unrelatedCells","setUnrelatedCells","nextUnrelated","getUnrelatedCells","handleZoomSlide","scaleTo","lineConfMap","useLineMarkers","useReady","marker","markerType","CellComponent","isEdgeCell","readOnly","onNodeBrickResize","onCellMouseEnter","onCellMouseLeave","ZoomBarComponent","onZoomChange","onReCenter","_EoDisplayCanvas2","_set_cellContextMenu","_set_cellClick","zoomBarStyleText","Number","lockBodyScroll","unwrapProvider","EoDrawCanvasComponent","LegacyEoDrawCanvasComponent","_EoDrawCanvas","_EoDrawCanvas_brand","_U","_V","_handleCellMove","_W","_handleCellsMove","_X","_handleCellResize","_Y","_Z","_handleCellDelete","_a","_handleCellsDelete","_b","_c","_handleEdgeAdd","_d","_handleEdgeViewChange","_e","_handleDecoratorTextChange","_f","_handleContainerContainerChange","_g","_handleScaleChange","_canvasRef","EoDrawCanvas","_init_allowEdgeToArea","_init_extra_allowEdgeToArea","_init_dragBehavior","_init_extra_dragBehavior","_init_ctrlDragBehavior","_init_extra_ctrlDragBehavior","_init_lineSettings","_init_extra_lineSettings","_init_lineConnector","_init_extra_lineConnector","_init_nodeMoveEvent","_init_extra_nodeMoveEvent","_init_cellMoveEvent","_init_extra_cellMoveEvent","info","_get_cellMoveEvent","_get_nodeMoveEvent","_init_cellsMoveEvent","_init_extra_cellsMoveEvent","_get_cellsMoveEvent","_init_cellResizeEvent","_init_extra_cellResizeEvent","_get_cellResizeEvent","_init_cellDelete","_init_extra_cellDelete","_get_cellDelete","_init_cellsDelete","_init_extra_cellsDelete","_get_cellsDelete","_init_edgeAdd","_init_extra_edgeAdd","_get_edgeAdd","_init_edgeViewChange","_init_extra_edgeViewChange","_get_edgeViewChange","_init_decoratorTextChange","_init_extra_decoratorTextChange","_get_decoratorTextChange","_init_containerContainerChange","_init_extra_containerContainerChange","_get_containerContainerChange","_init_scaleChange","_init_extra_scaleChange","_get_scaleChange","allowEdgeToArea","dragBehavior","ctrlDragBehavior","lineSettings","lineConnector","dropNode","_document$elementsFro","_document","data","useBrick","elementsFromPoint","includes","boundingClientRect","getBoundingClientRect","getTransform","newNode","view","dropDecorator","_document$elementsFro2","_document2","direction","_classPrivateFieldGet3","newDecorator","uuidV4","DEFAULT_AREA_WIDTH","DEFAULT_AREA_HEIGHT","addNodes","newNodes","addEdge","_classPrivateFieldGet4","newEdge","manuallyConnectNodes","ctx","_assertClassBrand","_waitForCanvasRef","updated","disconnectedCallback","super","onCellMove","onCellsMove","onCellResize","onCellDelete","onCellsDelete","onEdgeAdd","onDecoratorTextChange","onContainerContainerChange","onScaleChange","onEdgeViewChange","Promise","resolve","check","setTimeout","_ref5","manualConnectDeferredRef","editingTexts","setEditingTexts","activeContainers","setActiveContainers","ctrlDraggable","lassoRect","setLassoRect","_ref6","findLastIndex","newCells","slice","allCells","shouldReCenter","sourceId","find","isEdgeSide","rect","offset","reject","handleConnect","state","to","_manualConnectDeferre2","i","_manualConnectDeferre","smartConnectLineState","setSmartConnectLineState","guideLines","setGuideLines","handleCellsMoving","containedIds","handleNodeContainedChange","forEach","_c$containerCell","_c$containerCell2","containerCell","push","handleCellsMoved","handleCellResizing","handleCellResized","handleDecoratorTextEditing","_ref7","texts","nextLayoutKey","lineConnectorConf","hoverState","setHoverState","unsetHoverStateTimeoutRef","activeEditableLine","setActiveEditableLine","lineEditorState","setLineEditorState","clearTimeout","relativePoints","getConnectPointsOfRectangle","points","getConnectPoints","handleSmartConnect","exitPosition","entryPosition","vertices","handleEdgeChangeView","hoverStateContextValue","onConnect","onChangeEdgeView","rootRect","handleLasso","onLassoing","onLassoed","lassoedCells","isContainerDecoratorCell","isNodeOrAreaDecoratorCell","isTextDecoratorCell","targets","cellToTarget","HoverStateContext","Provider","dragNodeToContainerActive","onCellsMoving","onCellsMoved","onCellResizing","onCellResized","onDecoratorTextEditing","markerEnd","fillOpacity","strokeDasharray","SmartConnectLineComponent","options","EditingLineComponent","join","LineEditorComponent","LineConnectorComponent","disabled","replace","r","Math","random","toString","border","padding","DEFAULT_NODE_PADDING_FOR_SMART_LINES","halfPadding","viewWithBorderAndPadding","p","_EoDrawCanvas2","_set_nodeMoveEvent","_set_cellMoveEvent","_set_cellsMoveEvent","_set_cellResizeEvent","_set_cellDelete","_set_cellsDelete","_set_edgeAdd","_set_edgeViewChange","_set_decoratorTextChange","_set_containerContainerChange","_set_scaleChange","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}
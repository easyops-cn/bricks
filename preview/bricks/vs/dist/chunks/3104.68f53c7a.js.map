{"version":3,"file":"chunks/3104.68f53c7a.js","mappings":"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","sources":["webpack:///./src/code-editor/constants.ts","webpack:///./src/code-editor/i18n.ts","webpack:///./src/code-editor/utils/addExtraLibs.ts","webpack:///./src/code-editor/utils/brickNextYaml.ts","webpack:///./src/code-editor/utils/constants.ts","webpack:///./src/code-editor/utils/editorId.ts","webpack:///./src/code-editor/utils/embeddedModelState.ts","webpack:///./src/code-editor/utils/jsSuggestInBrickYaml.ts","webpack:///./src/code-editor/widget/Placeholder.tsx","webpack:///./src/code-editor/index.css","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js","webpack:///./src/code-editor/index.css?aefa","webpack:///./src/code-editor/workers/yamlLinter.mjs","webpack:///../../src/FormItemElement.tsx"],"sourcesContent":["export const EDITOR_FONT_SIZE = 12;\nexport const EDITOR_LINE_HEIGHT = 18;\nexport const EDITOR_SCROLLBAR_SIZE = 12;\nexport const EDITOR_PADDING_VERTICAL = 12;\n","export enum K {\n  COPY = \"COPY\",\n  COPY_SUCCESS = \"COPY_SUCCESS\",\n  COPY_FAILED = \"COPY_FAILED\",\n  EXPAND = \"EXPAND\",\n  COLLAPSE = \"COLLAPSE\",\n}\n\nconst en: Locale = {\n  COPY: \"Copy\",\n  COPY_SUCCESS: \"Copied!\",\n  COPY_FAILED: \"Copy failed!\",\n  EXPAND: \"Expand\",\n  COLLAPSE: \"Collapse\",\n};\n\nconst zh: Locale = {\n  COPY: \"复制\",\n  COPY_SUCCESS: \"已复制！\",\n  COPY_FAILED: \"复制失败！\",\n  EXPAND: \"展开\",\n  COLLAPSE: \"收起\",\n};\n\nexport const NS = \"bricks/vs/code-editor\";\n\nexport const locales = { en, zh };\n\ntype Locale = { [key in K]: string };\n","import * as monaco from \"monaco-editor/esm/vs/editor/editor.api.js\";\nimport { ExtraLib } from \"../interfaces.js\";\n\nconst extraLibsMap = new Map<string, monaco.IDisposable[]>();\n\nexport function addExtraLibs(\n  libs: ExtraLib[],\n  options: {\n    languageDefaults?: string;\n  }\n): monaco.IDisposable[] {\n  return libs.flatMap((lib) => {\n    const uri = monaco.Uri.file(`libs/${lib.filePath}`);\n    const uriString = uri.toString();\n    const previousLibs = extraLibsMap.get(uriString);\n    if (previousLibs) {\n      previousLibs.forEach((lib) => lib.dispose());\n    }\n    // Add libs for both js and ts.\n    const disposables = (\n      [options.languageDefaults] as Array<\n        \"javascriptDefaults\" | \"typescriptDefaults\"\n      >\n    ).map((key) =>\n      monaco.languages.typescript[key].addExtraLib(lib.content, uriString)\n    );\n\n    extraLibsMap.set(uriString, disposables);\n    return disposables;\n  });\n}\n","import * as monaco from \"monaco-editor/esm/vs/editor/editor.api.js\";\nimport storyboardJsonSchema from \"@next-core/types/storyboard.json\";\nimport { brickNextKeywords } from \"./constants.js\";\nimport get from \"lodash/get.js\";\nimport { getEditorId } from \"./editorId.js\";\nimport { TokenConfig } from \"../index.jsx\";\nimport { AdvancedCompleterMap } from \"../interfaces.js\";\nimport { provideJsSuggestItems } from \"../utils/jsSuggestInBrickYaml.js\";\nimport { EmbeddedModelContext } from \"../utils/embeddedModelState.js\";\n\nconst findKeys = (\n  model: monaco.editor.ITextModel,\n  range: monaco.Range | monaco.editor.IWordAtPosition,\n  line: number\n) => {\n  const curLevelKeys: string[] = [];\n  const keyList: string[] = [];\n  let parentKey = \"\";\n  let i = line;\n  let startColumn = range.startColumn;\n  while (i > 0) {\n    const prefixLineWord = model.getValueInRange({\n      startLineNumber: i,\n      endLineNumber: i,\n      startColumn: 0,\n      endColumn: Infinity,\n    });\n    const matchWord = prefixLineWord.match(/^([\\s|-]*)(\\w+)(?=:)/);\n    if (matchWord) {\n      const [, wordSpace, key] = matchWord;\n      if (wordSpace.length === range.startColumn - 1) {\n        curLevelKeys.unshift(key);\n      }\n      if (wordSpace.length < startColumn - 1) {\n        !parentKey && (parentKey = key);\n        startColumn = wordSpace.length;\n        keyList.unshift(key);\n      }\n    }\n    i--;\n  }\n  return {\n    curLevelKeys,\n    keyList,\n    parentKey,\n  };\n};\n\nconst getPrefixWord = (\n  model: monaco.editor.ITextModel,\n  position: monaco.Position,\n  tokenConfig: TokenConfig\n): {\n  word: string | undefined;\n  token: string;\n} => {\n  const word = model.getWordUntilPosition(position);\n  const prefixToken = model.getValueInRange({\n    startLineNumber: position.lineNumber,\n    endLineNumber: position.lineNumber,\n    startColumn: position.column - word.word.length - 1,\n    endColumn: position.column - word.word.length,\n  });\n  const prefixWord = model.getWordAtPosition({\n    ...position,\n    column: position.column - word?.word?.length - 1,\n  });\n  let matchWord = prefixWord?.word;\n  if (tokenConfig.showDSKey && prefixWord?.word === \"DS\") {\n    const prefix = model.getWordAtPosition({\n      ...position,\n      column: prefixWord.startColumn - 1,\n    });\n\n    matchWord = `${prefix?.word}.${prefixWord.word}`;\n  }\n  return {\n    word: matchWord,\n    token: prefixToken,\n  };\n};\n\nconst isInEvaluateBody = (\n  model: monaco.editor.ITextModel,\n  position: monaco.Position\n): boolean => {\n  const word = model.getWordUntilPosition(position);\n  const prefixEvaluateOperator = model.findPreviousMatch(\n    \"<%\",\n    position,\n    false,\n    false,\n    null,\n    false\n  );\n  const suffixEvaluateOperator = model.findNextMatch(\n    \"%>\",\n    position,\n    false,\n    false,\n    null,\n    false\n  );\n\n  const prefixRange = prefixEvaluateOperator?.range;\n  const suffixRange = suffixEvaluateOperator?.range;\n\n  const isInEvaluateBody =\n    prefixRange?.startLineNumber &&\n    suffixRange?.startLineNumber &&\n    prefixRange.startLineNumber <= position.lineNumber &&\n    suffixRange.endLineNumber >= position.lineNumber &&\n    // 正确匹配当前表达式，防止匹配到上一个表达式<%的开始，下一个表达式的结尾%>\n    !model.findMatches(\n      \"<%|%>\",\n      new monaco.Range(\n        prefixRange.endLineNumber,\n        prefixRange.endColumn,\n        suffixRange.startLineNumber,\n        suffixRange.startColumn\n      ),\n      true,\n      false,\n      null,\n      true\n    )?.length;\n\n  if (isInEvaluateBody) {\n    const { parentKey: prefixParentKey } = findKeys(\n      model,\n      prefixRange,\n      prefixRange.startLineNumber\n    );\n    const { parentKey: suffixParentKey } = findKeys(\n      model,\n      suffixRange,\n      suffixRange.startLineNumber\n    );\n    const { keyList } = findKeys(model, word, position.lineNumber);\n    if (\n      // value is object\n      (prefixParentKey === suffixParentKey &&\n        keyList.includes(prefixParentKey)) ||\n      // value is string\n      (prefixParentKey === \"\" && suffixParentKey === \"\")\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const brickNextYAMLProviderCompletionItems = (\n  completers: monaco.languages.CompletionItem[] = [],\n  advancedCompleters: AdvancedCompleterMap = {},\n  id: string,\n  tokenConfig: TokenConfig\n) => {\n  return async (\n    model: monaco.editor.ITextModel,\n    position: monaco.Position,\n    context: monaco.languages.CompletionContext\n  ): Promise<\n    monaco.languages.ProviderResult<monaco.languages.CompletionList>\n  > => {\n    if (id && id !== getEditorId())\n      return {\n        suggestions: [],\n      };\n    const DSToken = tokenConfig.showDSKey ? [\"CTX.DS\", \"DS\"] : [];\n    const word = model.getWordUntilPosition(position);\n    const { word: prefixWord, token: prefixToken } = getPrefixWord(\n      model,\n      position,\n      tokenConfig\n    );\n    const curLineWord = model.getValueInRange({\n      startLineNumber: position.lineNumber,\n      endLineNumber: position.lineNumber,\n      startColumn: 0,\n      endColumn: Infinity,\n    });\n    const range = {\n      startLineNumber: position.lineNumber,\n      endLineNumber: position.lineNumber,\n      startColumn: word.startColumn,\n      endColumn: word.endColumn,\n    };\n\n    const isFirstLevelProperty = word.startColumn === 1;\n    const { curLevelKeys } = findKeys(model, word, model.getLineCount());\n\n    if (context.triggerCharacter === \"<\") {\n      const fullWord = model.getValueInRange({\n        startLineNumber: position.lineNumber,\n        endLineNumber: position.lineNumber,\n        startColumn: position.column - 2,\n        endColumn: position.column + 2,\n      });\n      if (fullWord.trim() !== \"<\") {\n        return {\n          suggestions: [],\n        };\n      }\n      return {\n        suggestions: [\n          {\n            label: \"<% %>\",\n            detail: \"Evalute Body\",\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertText: \"% ${0} %>\",\n            insertTextRules:\n              monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            range: range,\n          },\n          {\n            label: \"<%= %>\",\n            detail: \"Track Evalute Body\",\n            kind: monaco.languages.CompletionItemKind.Value,\n            insertText: \"%= ${0} %>\",\n            insertTextRules:\n              monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            range: range,\n          },\n        ],\n      };\n    }\n\n    if (isFirstLevelProperty) {\n      return {\n        suggestions: (completers ?? [])\n          .filter((item) => !curLevelKeys.includes(item.label as string))\n          .map((item) => ({\n            ...item,\n            label: item.label,\n            insertText: item.insertText || (item.label as string),\n            kind: monaco.languages.CompletionItemKind.Keyword,\n            range,\n          })),\n      };\n    }\n\n    if (\n      context.triggerCharacter === \":\" ||\n      (context.triggerCharacter === \".\" &&\n        prefixWord &&\n        ![\"CTX\", \"STATE\", \"FN\"].concat(DSToken).includes(prefixWord))\n    ) {\n      if (prefixWord === \"action\" && context.triggerCharacter === \":\") {\n        const actions = get(\n          storyboardJsonSchema,\n          \"definitions.BuiltinBrickEventHandler.properties.action.enum\"\n        );\n        return {\n          suggestions: ((actions as unknown as string[]) ?? [])?.map(\n            (item) => ({\n              label: ` ${item}`,\n              detail: \"event action\",\n              kind: monaco.languages.CompletionItemKind.Keyword,\n              insertText: ` ${item}`,\n              range,\n            })\n          ),\n        };\n      }\n      const matchCompletion = advancedCompleters?.[prefixWord as string];\n      let matchTriggerCharacter = \"\";\n      let list: monaco.languages.CompletionItem[] | undefined;\n      if (matchCompletion && !Array.isArray(matchCompletion)) {\n        list = matchCompletion.completers;\n        matchTriggerCharacter = matchCompletion.triggerCharacter;\n      } else {\n        list = matchCompletion;\n      }\n      if (\n        matchTriggerCharacter\n          ? context.triggerCharacter === matchTriggerCharacter && list\n          : list\n      ) {\n        return {\n          suggestions: (list ?? []).map((item) => {\n            const label =\n              matchTriggerCharacter === \":\"\n                ? ` ${item.label}`\n                : (item.label as string);\n            return {\n              ...item,\n              label: label,\n              kind: monaco.languages.CompletionItemKind.Value,\n              insertText: item.insertText || label,\n              range,\n            };\n          }),\n        };\n      }\n    }\n\n    if (isInEvaluateBody(model, position) && prefixToken !== \":\") {\n      const embeddedContext = EmbeddedModelContext.getInstance(id);\n\n      const suggestions = await provideJsSuggestItems(\n        model,\n        position,\n        embeddedContext.getState()\n      );\n\n      return {\n        suggestions,\n      };\n    }\n\n    if (/^[\\s|-]*\\w$/.test(curLineWord)) {\n      return {\n        suggestions: brickNextKeywords\n          .map((item) => ({\n            label: item,\n            insertText: item,\n            kind: monaco.languages.CompletionItemKind.Keyword,\n            range,\n          }))\n          .filter((item) => !curLevelKeys.includes(item.label as string)),\n      };\n    }\n\n    return {\n      suggestions: [],\n    };\n  };\n};\n","export const EVALUATE_KEYWORD = [\n  \"CTX\",\n  \"STATE\",\n  \"DATA\",\n  \"EVENT\",\n  \"FLAGS\",\n  \"APP\",\n  \"ANCHOR\",\n  \"HASH\",\n  \"INSTALLED_APPS\",\n  \"ITEM\",\n  \"INDEX\",\n  \"SIZE\",\n  \"LOCAL_STORAGE\",\n  \"MEDIA\",\n  \"MISC\",\n  \"PARAMS\",\n  \"PATH\",\n  \"PROCESSORS\",\n  \"QUERY\",\n  \"QUERY_ARRAY\",\n  \"SESSION_STORAGE\",\n  \"TPL\",\n  \"SYS\",\n  \"BASE_URL\",\n  \"IMG\",\n  \"FN\",\n  \"I18N\",\n  \"I18N_TEXT\",\n  \"PERMISSIONS\",\n  \"THEME\",\n];\n\nexport const brickNextKeywords = [\n  \"target\",\n  \"targetRef\",\n  \"properties\",\n  \"events\",\n  \"method\",\n  \"callback\",\n  \"success\",\n  \"error\",\n  \"action\",\n  \"useProvider\",\n  \"useChildren\",\n  \"useBrick\",\n  \"args\",\n  \"if\",\n  \"then\",\n];\n\nexport const Level = {\n  /**\n   * @deprecated Typo, use `hint` instead\n   */\n  hit: 1,\n  hint: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n};\n\nexport const builtInKeywordDeclare = `\n  declare const DATA: any;\n  declare const EVENT: CustomEvent<any>;\n  declare const FLAGS: Record<string, boolean>;\n  declare const ANCHOR: string | null;\n  declare const HASH: string;\n  declare namespace INSTALLED_APPS {\n    function has(appId: string):boolean\n  }\n  declare const ITEM: any;\n  declare const INDEX: number;\n  declare const SIZE: number;\n  declare namespace LOCAL_STORAGE {\n    function getItem(name: string): string;\n  }\n  declare namespace SESSION_STORAGE {\n    function getItem(name: string): string\n  }\n  declare const MEDIA: {\n    breakpoint?: \"xLarge\" | \"large\" | \"medium\" | \"small\" | \"xSmall\";\n  };\n  declare const MISC: Record<string, any>;\n  declare const PARAMS: URLSearchParams;\n  declare const PROCESSORS: Record<string, Record<string, Function>>;\n  declare const QUERY_ARRAY: Record<string, string[]>;\n  declare const TPL: Record<string, any>;\n  declare const PIPES: Record<string, Function>;\n  declare const _: Record<string, any>;\n  declare namespace SYS {\n    const username:string;\n    const userInstanceId:string;\n    const org:number;\n    const isAdmin: boolean;\n    const accessRule:string;\n    const csrfToken:string;\n    const accessToken:string;\n    const userShowValue:string[];\n  }\n  declare const BASE_URL: string;\n  declare namespace IMG {\n    function get(src: string): string;\n  }\n  declare function I18N(key: string, options?: string | Record<string, unknown>): string;\n  declare function I18N_TEXT(data: {[language: string]: string}):string;\n  declare namespace PERMISSIONS {\n    function check(...action: string[]):boolean;\n  }\n  declare namespace THEME {\n    function getTheme(): \"light\" | \"dark\" | \"dark-v2\";\n  }\n`;\n","let editorId: string;\n\nexport function setEditorId(id: string) {\n  editorId = id;\n}\n\nexport function getEditorId() {\n  return editorId;\n}\n","interface Range {\n  startLineNumber: number;\n  startColumn: number;\n  endLineNumber: number;\n  endColumn: number;\n}\n\nexport interface EmbeddedState {\n  content?: string;\n  offset?: number;\n  range?: Range;\n}\n\nexport class EmbeddedModelContext {\n  static #instance: Record<string, EmbeddedModelContext> = {};\n  #id: string;\n  #state: EmbeddedState = {};\n\n  static getInstance(id: string) {\n    if (!this.#instance[id]) {\n      this.#instance[id] = new EmbeddedModelContext(id);\n    }\n    return this.#instance[id];\n  }\n\n  constructor(id: string) {\n    this.#id = id;\n  }\n\n  updateState(state: EmbeddedState) {\n    this.#state = state;\n  }\n\n  getState(): EmbeddedState {\n    return this.#state;\n  }\n}\n","import storyboardJsonSchema from \"@next-core/types/storyboard.json\";\nimport { get } from \"lodash\";\nimport * as monaco from \"monaco-editor/esm/vs/editor/editor.api.js\";\nimport { builtInKeywordDeclare } from \"./constants.js\";\n\ninterface BlockContext {\n  offset?: number;\n}\n\nexport function getEmbeddedJavascriptUri(\n  value: monaco.editor.IModel | monaco.Uri\n) {\n  if (\"uri\" in value) {\n    value = value.uri;\n  }\n  return monaco.Uri.parse(value.toString() + \".ts\");\n}\n\n// istanbul ignore next\nexport async function provideJsSuggestItems(\n  model: monaco.editor.ITextModel,\n  position: monaco.Position,\n  embeddedContext: BlockContext\n) {\n  const workerGetter = await monaco.languages.typescript.getJavaScriptWorker();\n  const worker = await workerGetter(model.uri);\n  const javascriptModel = monaco.editor.getModel(\n    getEmbeddedJavascriptUri(model)\n  );\n\n  const endOffset = model.getOffsetAt(position);\n  const starOffset = embeddedContext?.offset ?? 0;\n\n  const offset = endOffset - starOffset;\n\n  const info = await worker.getCompletionsAtPosition(\n    javascriptModel!.uri.toString(),\n    offset!\n  );\n\n  const wordInfo = model.getWordUntilPosition(position);\n\n  const wordRange = new monaco.Range(\n    position.lineNumber,\n    wordInfo.startColumn,\n    position.lineNumber,\n    wordInfo.endColumn\n  );\n\n  const suggestions = (info?.entries ?? []).map((entry: any) => {\n    let range = wordRange;\n\n    if (entry.replacementSpan) {\n      const p1 = model.getPositionAt(entry.replacementSpan.start);\n      const p2 = model.getPositionAt(\n        entry.replacementSpan.start + entry.replacementSpan.length\n      );\n      range = new monaco.Range(\n        p1.lineNumber,\n        p1.column,\n        p2.lineNumber,\n        p2.column\n      );\n    }\n\n    return {\n      uri: javascriptModel!.uri,\n      position: position,\n      offset: offset,\n      range: range,\n      label: entry.name,\n      insertText: entry.name,\n      sortText: entry.sortText,\n      kind: monaco.languages.CompletionItemKind.Property,\n    };\n  });\n\n  return suggestions;\n}\n\nexport function getMicroAppDeclare() {\n  const appProperties = get(\n    storyboardJsonSchema,\n    \"definitions.MicroApp.properties\"\n  ) as unknown as Record<string, { type: string }>;\n\n  const fields = [];\n  for (const [k, v] of Object.entries(appProperties)) {\n    fields.push(`const ${k}: ${v.type ?? \"any\"}`);\n  }\n\n  return `\n  declare namespace APP {\n    ${fields.join(\"\\n\")}\n  }\n  `;\n}\n\nexport function getBrickYamlBuiltInDeclare() {\n  return [getMicroAppDeclare(), builtInKeywordDeclare].join(\"\\n\");\n}\n","import * as monaco from \"monaco-editor/esm/vs/editor/editor.api.js\";\n\nexport class PlaceholderContentWidget implements monaco.editor.IContentWidget {\n  private static readonly ID = \"editor.widget.placeholderHint\";\n\n  private domNode: HTMLElement | undefined;\n\n  private readonly placeholder: string;\n  private readonly editor: monaco.editor.ICodeEditor;\n\n  constructor(placeholder: string, editor: monaco.editor.ICodeEditor) {\n    this.placeholder = placeholder;\n    this.editor = editor;\n    // register a listener for editor code changes\n    this.editor.onDidChangeModelContent(() => this.onDidChangeModelContent());\n    // ensure that on initial load the placeholder is shown\n    this.onDidChangeModelContent();\n  }\n\n  private onDidChangeModelContent(): void {\n    if (this.editor?.getValue?.() === \"\") {\n      this.editor.addContentWidget(this);\n    } else {\n      this.editor?.removeContentWidget?.(this);\n    }\n  }\n\n  getId(): string {\n    return PlaceholderContentWidget.ID;\n  }\n\n  getDomNode(): HTMLElement {\n    if (!this.domNode) {\n      this.domNode = document.createElement(\"div\");\n      this.domNode.style.width = \"max-content\";\n      this.domNode.style.pointerEvents = \"none\";\n      this.domNode.textContent = this.placeholder;\n      this.domNode.style.whiteSpace = \"break-spaces\";\n      this.domNode.style.fontStyle = \"italic\";\n      this.domNode.style.color =\n        \"rgba(var(--theme-gray-color-rgb-channel), 0.4)\";\n      this.editor.applyFontInfo(this.domNode);\n    }\n\n    return this.domNode;\n  }\n\n  getPosition(): monaco.editor.IContentWidgetPosition | null {\n    return {\n      position: { lineNumber: 1, column: 1 },\n      preference: [monaco.editor.ContentWidgetPositionPreference.EXACT],\n    };\n  }\n\n  dispose(): void {\n    this.editor?.removeContentWidget?.(this);\n  }\n}\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.highlight{box-shadow:rgb(74 170 189) 0px 1px 0px 0px}.pointer{cursor:pointer}.monaco-editor{outline-width:0}.monaco-editor .overflow-guard{border-radius:var(--antd-button-border-radius);border:1px solid var(--color-border-divider-line)}.code-editor-wrapper.error .overflow-guard{border-color:var(--antd-error-color)}.code-editor-wrapper{position:relative}.code-editor-wrapper.expanded{position:fixed;z-index:1000;top:0;left:0;right:0;bottom:0;padding:20px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.code-editor-wrapper.expanded .toolbar{right:40px;top:40px}.code-editor-wrapper:hover .toolbar{display:flex}.toolbar{display:none;position:absolute;top:15px;right:20px;line-height:12px;font-size:12px;text-align:center;gap:10px;box-shadow:none;transition:none;border-radius:50%;border:none}.copy-icon,\n.expand-icon{opacity:0.5;cursor:pointer;font-size:16px}.copy-icon:hover,\n.expand-icon:hover{opacity:1}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// istanbul ignore file\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst markRegex = new RegExp(\"\\\\b(MARK:\\\\s*)(.*)$\");\nconst trimDashesRegex = /^-+|-+$/g;\n/**\n * Find section headers in the model.\n *\n * @param model the text model to search in\n * @param options options to search with\n * @returns an array of section headers\n */\nexport function findSectionHeaders(model, options) {\n  var _a;\n  let headers = [];\n  if (\n    options.findRegionSectionHeaders &&\n    ((_a = options.foldingRules) === null || _a === void 0\n      ? void 0\n      : _a.markers)\n  ) {\n    const regionHeaders = collectRegionHeaders(model, options);\n    headers = headers.concat(regionHeaders);\n  }\n  if (options.findMarkSectionHeaders) {\n    const markHeaders = collectMarkHeaders(model);\n    headers = headers.concat(markHeaders);\n  }\n  return headers;\n}\nfunction collectRegionHeaders(model, options) {\n  const regionHeaders = [];\n  const endLineNumber = model.getLineCount();\n  for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n    const lineContent = model.getLineContent(lineNumber);\n    const match = lineContent.match(options.foldingRules.markers.start);\n    if (match) {\n      const range = {\n        startLineNumber: lineNumber,\n        startColumn: match[0].length + 1,\n        endLineNumber: lineNumber,\n        endColumn: lineContent.length + 1,\n      };\n      if (range.endColumn > range.startColumn) {\n        const sectionHeader = {\n          range,\n          ...getHeaderText(lineContent.substring(match[0].length)),\n          shouldBeInComments: false,\n        };\n        if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n          regionHeaders.push(sectionHeader);\n        }\n      }\n    }\n  }\n  return regionHeaders;\n}\nfunction collectMarkHeaders(model) {\n  const markHeaders = [];\n  const endLineNumber = model.getLineCount();\n  for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n    const lineContent = model.getLineContent(lineNumber);\n    addMarkHeaderIfFound(lineContent, lineNumber, markHeaders);\n  }\n  return markHeaders;\n}\nfunction addMarkHeaderIfFound(lineContent, lineNumber, sectionHeaders) {\n  markRegex.lastIndex = 0;\n  const match = markRegex.exec(lineContent);\n  if (match) {\n    const column = match.index + match[1].length + 1;\n    const endColumn = column + match[2].length;\n    const range = {\n      startLineNumber: lineNumber,\n      startColumn: column,\n      endLineNumber: lineNumber,\n      endColumn: endColumn,\n    };\n    if (range.endColumn > range.startColumn) {\n      const sectionHeader = {\n        range,\n        ...getHeaderText(match[1]),\n        shouldBeInComments: true,\n      };\n      if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n        sectionHeaders.push(sectionHeader);\n      }\n    }\n  }\n}\nfunction getHeaderText(text) {\n  text = text.trim();\n  const hasSeparatorLine = text.startsWith(\"-\");\n  text = text.replace(trimDashesRegex, \"\");\n  return { text, hasSeparatorLine };\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// istanbul ignore file\n// @ts-check\n\n// Use .mjs to avoid jest coverage collection error:\n// ```\n// Error: unknown: import.meta may appear only with 'sourceType: \"module\"'\n// ```\n\n/** @type {Worker | undefined} */\nlet worker;\n\n/**\n * @returns {Worker}\n */\nexport function getYamlLinterWorker() {\n  if (!worker) {\n    worker = new Worker(new URL(\"./yamlLinter.worker.ts\", import.meta.url));\n  }\n  return worker;\n}\n","import { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport type { AbstractForm, ColProps } from \"./Form.js\";\nimport { UseSingleBrickConf } from \"@next-core/types\";\n\nconst { method, property } = createDecorators();\n\nexport abstract class FormItemElementBase extends ReactNextElement {\n  accessor #_notRender = false;\n  accessor #validate = \"normal\";\n  accessor #bindFormItem = false;\n\n  get isFormItemElement(): true {\n    return true;\n  }\n\n  set validateState(value: string) {\n    this.#validate = value;\n    this._render();\n  }\n  get validateState() {\n    return this.#validate;\n  }\n\n  /**\n   * 控制该表单项是否隐藏\n   * @default false\n   * @group ui\n   */\n  set notRender(value: boolean) {\n    this.hidden = value;\n    this.#_notRender = value;\n    this._render();\n  }\n  get notRender(): boolean {\n    return this.#_notRender;\n  }\n\n  get $bindFormItem() {\n    return this.#bindFormItem;\n  }\n  set $bindFormItem(value: boolean) {\n    this.#bindFormItem = value;\n    this._render();\n  }\n\n  @property({\n    attribute: false,\n  })\n  accessor helpBrick:\n    | { useBrick: UseSingleBrickConf | UseSingleBrickConf[] }\n    | undefined;\n\n  @property({\n    attribute: false,\n  })\n  accessor labelBrick:\n    | { useBrick: UseSingleBrickConf | UseSingleBrickConf[] }\n    | undefined;\n\n  @property({\n    attribute: false,\n  })\n  accessor labelCol: ColProps | undefined;\n\n  @property({\n    attribute: false,\n  })\n  accessor wrapperCol: ColProps | undefined;\n\n  @method()\n  setNotRender(value: boolean) {\n    this.notRender = value;\n  }\n\n  @method()\n  getFormElement(): AbstractForm | null {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let element: AbstractForm | null = this as unknown as AbstractForm;\n    while ((element = element.parentNode as AbstractForm | null)) {\n      if (!element || element.isFormElement) {\n        break;\n      }\n    }\n    return element as AbstractForm | null;\n  }\n}\n"],"names":["EDITOR_FONT_SIZE","EDITOR_LINE_HEIGHT","EDITOR_SCROLLBAR_SIZE","EDITOR_PADDING_VERTICAL","K","NS","locales","en","COPY","COPY_SUCCESS","COPY_FAILED","EXPAND","COLLAPSE","zh","extraLibsMap","Map","addExtraLibs","libs","options","flatMap","lib","uriString","monaco","file","filePath","toString","previousLibs","get","forEach","dispose","disposables","languageDefaults","map","key","typescript","addExtraLib","content","set","findKeys","model","range","line","curLevelKeys","keyList","parentKey","i","startColumn","matchWord","getValueInRange","startLineNumber","endLineNumber","endColumn","Infinity","match","wordSpace","length","unshift","brickNextYAMLProviderCompletionItems","completers","arguments","undefined","advancedCompleters","id","tokenConfig","async","position","context","getEditorId","suggestions","DSToken","showDSKey","word","getWordUntilPosition","prefixWord","token","prefixToken","getPrefixWord","_word$word","lineNumber","column","getWordAtPosition","prefix","curLineWord","isFirstLevelProperty","getLineCount","triggerCharacter","trim","label","detail","kind","CompletionItemKind","Value","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","filter","item","includes","Keyword","concat","_ref","storyboardJsonSchema","matchCompletion","list","matchTriggerCharacter","Array","isArray","isInEvaluateBody","_model$findMatches","prefixEvaluateOperator","findPreviousMatch","suffixEvaluateOperator","findNextMatch","prefixRange","suffixRange","findMatches","prefixParentKey","suffixParentKey","embeddedContext","EmbeddedModelContext","getInstance","provideJsSuggestItems","getState","test","brickNextKeywords","builtInKeywordDeclare","editorId","setEditorId","_assertClassBrand","this","_instance","_","constructor","_classPrivateFieldInitSpec","_id","_state","_classPrivateFieldSet","updateState","state","_classPrivateFieldGet","getEmbeddedJavascriptUri","value","uri","parse","workerGetter","getJavaScriptWorker","worker","javascriptModel","getModel","offset","getOffsetAt","info","getCompletionsAtPosition","wordInfo","wordRange","entries","entry","replacementSpan","p1","getPositionAt","start","p2","name","sortText","Property","getMicroAppDeclare","appProperties","fields","k","v","Object","push","type","join","getBrickYamlBuiltInDeclare","PlaceholderContentWidget","placeholder","editor","_defineProperty","onDidChangeModelContent","_this$editor","_this$editor$getValue","_this$editor2","_this$editor2$removeC","getValue","call","addContentWidget","removeContentWidget","getId","ID","getDomNode","domNode","document","createElement","style","width","pointerEvents","textContent","whiteSpace","fontStyle","color","applyFontInfo","getPosition","preference","ContentWidgetPositionPreference","EXACT","_this$editor3","_this$editor3$removeC","___CSS_LOADER_EXPORT___","module","markRegex","RegExp","trimDashesRegex","findSectionHeaders","_a","headers","findRegionSectionHeaders","foldingRules","markers","regionHeaders","lineContent","getLineContent","sectionHeader","getHeaderText","substring","shouldBeInComments","text","hasSeparatorLine","collectRegionHeaders","findMarkSectionHeaders","markHeaders","addMarkHeaderIfFound","collectMarkHeaders","sectionHeaders","lastIndex","exec","index","startsWith","replace","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","getYamlLinterWorker","Worker","URL","method","property","createDecorators","_A","WeakMap","_FormItemElementBase_brand","WeakSet","_B","_C","_D","_E","_F","_G","FormItemElementBase","ReactNextElement","_classPrivateMethodInitSpec","_initProto","_init_helpBrick","_init_extra_helpBrick","_init_labelBrick","_init_extra_labelBrick","_init_labelCol","_init_extra_labelCol","_init_wrapperCol","_init_extra_wrapperCol","isFormItemElement","validateState","_classPrivateSetter","_set_validate","_render","_classPrivateGetter","_get_validate","notRender","hidden","_set__notRender","_get__notRender","$bindFormItem","_get_bindFormItem","_set_bindFormItem","helpBrick","labelBrick","labelCol","wrapperCol","setNotRender","getFormElement","element","parentNode","isFormElement","_this","_this2","_this3","_this4","_this5","_this6","_FormItemElementBase","_applyDecs","attribute","e"],"sourceRoot":""}
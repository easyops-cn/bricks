"use strict";(globalThis.webpackChunk_next_bricks_vs=globalThis.webpackChunk_next_bricks_vs||[]).push([[1940,9559],{9559:(e,t,n)=>{n.r(t),n.d(t,{supply:()=>o});var r=n(1030),a=n(1302),s=n(1744);function o(e,t,n){const r={undefined:void 0};for(const a of e)if(!Object.prototype.hasOwnProperty.call(r,a))if(t&&Object.prototype.hasOwnProperty.call(t,a))r[a]=t[a];else{const e=u(a,n);void 0!==e&&(r[a]=e)}return r}const i=new Set(["fill","pull","pullAll","pullAllBy","pullAllWith","pullAt","remove","reverse","assign","assignIn","assignInWith","assignWith","defaults","defaultsDeep","merge","mergeWith","set","setWith","unset","update","updateWith","after","ary","before","bind","bindKey","curry","curryRight","debounce","defer","delay","flip","memoize","negate","once","overArgs","partial","partialRight","rearg","rest","spread","throttle","unary","wrap"]),c=new Set(["lang","langData","locale","localeData","defineLocale","updateLocale","updateOffset"]),l=new Set(["Array","Boolean","Date","Infinity","JSON","Math","NaN","Number","String","RegExp","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","isFinite","isNaN","parseFloat","parseInt","Map","Set","URL","URLSearchParams","WeakMap","WeakSet","atob","btoa"]);function u(e,t){switch(e){case"Object":return n=Object,o=["entries","fromEntries","keys","values"],Object.fromEntries(o.map((e=>[e,function(){for(var t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return n[e].apply(n,r)}])));case"_":return Object.fromEntries(Object.entries(r).filter((e=>!i.has(e[0]))).concat(t?[["uniqueId",e=>`${e??""}42`]]:[]));case"moment":return Object.assign((function(){return a(...arguments)}),Object.fromEntries(Object.entries(a).filter((e=>!c.has(e[0])))));case"PIPES":return s.pipes;case"TAG_URL":return p(!0);case"SAFE_TAG_URL":return p();default:if(l.has(e))return window[e]}var n,o}function p(e){return function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];const s=[];return t.forEach(((t,n)=>{s.push(t),n<r.length&&s.push(e?String(r[n]).replace(/[^/]+/g,(e=>encodeURIComponent(e))):encodeURIComponent(String(r[n])))})),s.join("")}}}}]);
//# sourceMappingURL=1940.20ef9e29.js.map
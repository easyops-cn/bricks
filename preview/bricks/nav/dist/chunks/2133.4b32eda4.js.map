{"version":3,"file":"chunks/2133.4b32eda4.js","mappings":"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","sources":["webpack:///./src/launchpad-button-v2/constants.ts","webpack:///./src/launchpad-button-v2/api.ts","webpack:///./src/launchpad-button-v2/search.ts","webpack:///./src/launchpad-button-v2/useLaunchpadInfo.ts","webpack:///./src/launchpad-button-v2/wrapped-bricks.ts","webpack:///./src/shared/DeferredService.ts","webpack:///./src/shared/getLocaleName.ts","webpack:///../../src/JsonStorage.ts"],"sourcesContent":["export const FAVORITES_LIMIT = 10;\nexport const RECENT_VISITS_LIMIT = 10;\n","import type { Storyboard } from \"@next-core/types\";\nimport { LaunchpadApi_getLaunchpadInfo } from \"@next-api-sdk/micro-app-standalone-sdk\";\nimport {\n  LaunchpadApi_createCollectionV2,\n  LaunchpadApi_deleteCollectionV2,\n  LaunchpadApi_listCollectionV2,\n} from \"@next-api-sdk/user-service-sdk\";\nimport { InstanceApi_postSearchV3 } from \"@next-api-sdk/cmdb-sdk\";\nimport type {\n  FavMenuItem,\n  MenuGroupData,\n  MenuItemData,\n  MenuItemDataApp,\n  MenuItemDataCustom,\n  MenuItemDataDir,\n  MenuItemDataNormal,\n  MicroAppWithInstanceId,\n  PlatformCategoryItem,\n} from \"./interfaces\";\nimport { FAVORITES_LIMIT } from \"./constants\";\nimport { getAppLocaleName } from \"../shared/getLocaleName\";\nimport { sortBy } from \"lodash\";\n\nexport async function fetchLaunchpadInfo() {\n  const launchpadInfo = await LaunchpadApi_getLaunchpadInfo(\n    {},\n    {\n      interceptorParams: { ignoreLoadingBar: true },\n      noAbortOnRouteChange: true,\n    }\n  );\n\n  const microAppsById = new Map<string, MicroAppWithInstanceId>();\n  for (const storyboard of launchpadInfo.storyboards as Storyboard[]) {\n    const app = storyboard.app as unknown as MicroAppWithInstanceId;\n    app.localeName = getAppLocaleName(app.locales, app.name);\n    microAppsById.set(app.id, app);\n  }\n\n  const menuGroups: MenuGroupData[] = [];\n  const customLinksById = new Map<string, MenuItemDataCustom>();\n\n  for (const group of launchpadInfo.desktops as unknown as MenuGroupData[]) {\n    const items: MenuItemData[] = [];\n    for (const item of group.items) {\n      switch (item.type) {\n        case \"app\": {\n          const app = microAppsById.get(item.id);\n          if (app) {\n            items.push({\n              ...item,\n              name: app.localeName,\n              url: app.homepage,\n              menuIcon: app.menuIcon,\n            } as MenuItemDataApp);\n          }\n          break;\n        }\n        case \"custom\":\n          items.push(item);\n          customLinksById.set(item.id, item);\n          break;\n        case \"dir\": {\n          const subItems: MenuItemDataNormal[] = [];\n          for (const subItem of item.items) {\n            if (subItem.type === \"app\") {\n              const app = microAppsById.get(subItem.id);\n              if (app) {\n                subItems.push({\n                  ...subItem,\n                  name: app.localeName,\n                  url: app.homepage,\n                  menuIcon: app.menuIcon,\n                } as MenuItemDataApp);\n              }\n            } else if (subItem.type === \"custom\") {\n              subItems.push(subItem as MenuItemDataCustom);\n              customLinksById.set(subItem.id, subItem);\n            }\n          }\n          if (subItems.length > 0) {\n            items.push({\n              ...item,\n              items: subItems,\n            } as MenuItemDataDir);\n          }\n          break;\n        }\n      }\n    }\n    if (items.length > 0) {\n      menuGroups.push({ ...group, items });\n    }\n  }\n\n  return { menuGroups, microAppsById, customLinksById };\n}\n\nasync function fetchRawFavorites() {\n  return (\n    await LaunchpadApi_listCollectionV2(\n      { page: 1, pageSize: FAVORITES_LIMIT },\n      {\n        interceptorParams: { ignoreLoadingBar: true },\n        noAbortOnRouteChange: true,\n      }\n    )\n  ).list;\n}\n\nexport async function fetchFavorites() {\n  const list = await fetchRawFavorites();\n  const stored: FavMenuItem[] = [];\n  for (const fav of list) {\n    if (fav.type === \"microApp\") {\n      const app = fav.relatedApp as Omit<MicroAppWithInstanceId, \"id\"> & {\n        appId: string;\n      };\n      app.localeName = getAppLocaleName(app.locales, app.name);\n      stored.push({\n        favoriteId: fav.instanceId,\n        type: \"app\",\n        name: app.localeName,\n        id: app.appId,\n        url: app.homepage,\n        instanceId: app.instanceId,\n        menuIcon: app.menuIcon,\n      } as FavMenuItem);\n    } else if (fav.type === \"customItem\") {\n      const customItem = fav.relatedCustomItem!;\n      stored.push({\n        favoriteId: fav.instanceId,\n        type: \"custom\",\n        name: customItem.name,\n        id: customItem.id,\n        url: customItem.url,\n        menuIcon: customItem.menuIcon,\n      } as FavMenuItem);\n    } else if (fav.type === \"link\") {\n      stored.push({\n        favoriteId: fav.instanceId,\n        type: \"link\",\n        name: fav.name,\n        // id: fav.id,\n        url: fav.link,\n        menuIcon: fav.icon,\n      } as FavMenuItem);\n    }\n  }\n  return stored;\n}\n\nexport async function favorite(\n  item: MenuItemDataNormal\n): Promise<{ instanceId?: string }> {\n  return LaunchpadApi_createCollectionV2(\n    {\n      type: item.type === \"app\" ? \"microApp\" : \"customItem\",\n      relatedInstanceId: item.instanceId,\n    },\n    {\n      interceptorParams: { ignoreLoadingBar: true },\n    }\n  );\n}\n\nexport async function undoFavorite(item: FavMenuItem) {\n  if (item.favoriteId) {\n    return LaunchpadApi_deleteCollectionV2(item.favoriteId);\n  }\n\n  return fetchRawFavorites().then((list) => {\n    const foundId = list.find((fav) =>\n      item.type === \"app\"\n        ? fav.type === \"microApp\" && fav.relatedApp?.appId === item.id\n        : item.type === \"custom\" && fav.relatedCustomItem?.id === item.id\n    )?.instanceId;\n\n    if (foundId) {\n      return LaunchpadApi_deleteCollectionV2(foundId);\n    }\n    // eslint-disable-next-line no-console\n    console.error(\"Menu item to unstar not found:\", item);\n  });\n}\n\nexport async function fetchPlatformCategories(): Promise<\n  PlatformCategoryItem[]\n> {\n  const categories = (\n    await InstanceApi_postSearchV3(\"MICRO_APP_CATEGORY@EASYOPS\", {\n      fields: [\n        \"id\",\n        \"type\",\n        \"name\",\n        \"icon\",\n        \"order\",\n        \"platformApps.appId\",\n        \"platformApps.name\",\n        \"platformApps.homepage\",\n        \"platformApps.description\",\n        \"platformApps.menuIcon\",\n        \"platformApps.locales\",\n        \"platformApps._object_id\",\n        \"platformApps.@.order\",\n        \"platformItems.id\",\n        \"platformItems.name\",\n        \"platformItems.url\",\n        \"platformItems.description\",\n        \"platformItems.menuIcon\",\n        \"platformItems._object_id\",\n        \"platformItems.@.order\",\n      ],\n      page: 1,\n      page_size: 300,\n      query: {\n        type: \"platform\",\n      },\n    })\n  ).list;\n\n  const _categories = categories?.map((category) => {\n    const apps = category.platformApps.map((app: Record<string, any>) => {\n      return {\n        type: \"app\",\n        name: getAppLocaleName(app.locales, app.name),\n        id: app.appId,\n        url: app.homepage,\n        menuIcon: app.menuIcon,\n        description: app.description,\n        instanceId: app.instanceId,\n        order: app[\"@\"]?.order,\n      };\n    }) as MenuItemDataApp[];\n    const customItems = category.platformItems.map(\n      (item: Record<string, any>) => {\n        return {\n          type: \"custom\",\n          name: item.name,\n          id: item.id,\n          url: item.url,\n          menuIcon: item.menuIcon,\n          description: item.description,\n          instanceId: item.instanceId,\n          order: item[\"@\"]?.order,\n        };\n      }\n    ) as MenuItemDataCustom[];\n\n    const items = sortBy([...apps, ...customItems], \"order\");\n    return {\n      instanceId: category.instanceId,\n      id: category.id,\n      name: category.name,\n      icon: category.icon,\n      order: category.order,\n      items,\n    } as PlatformCategoryItem;\n  });\n\n  return [\n    {\n      id: \"#all\",\n      name: \"全部\",\n      icon: {\n        lib: \"easyops\",\n        category: \"second-menu\",\n        icon: \"sprint-planning-second-menu\",\n      },\n      items: [],\n    },\n    ...sortBy(_categories, \"order\"),\n  ];\n}\n","import type {\n  MenuGroupData,\n  MenuItemData,\n  MenuItemDataApp,\n  MenuItemDataCustom,\n  MenuItemDataNormal,\n  PlatformCategoryItem,\n} from \"./interfaces\";\n\nexport function search(\n  allMenuGroups: MenuGroupData[],\n  q: string\n): MenuGroupData[] {\n  if (!q) {\n    return allMenuGroups;\n  }\n  const lowerQ = q.toLowerCase();\n  const groups: MenuGroupData[] = allMenuGroups\n    .map((group) => ({\n      ...group,\n      items: group.items\n        .map((item) => {\n          switch (item.type) {\n            case \"app\":\n              return matchMenuItemApp(item, lowerQ);\n            case \"custom\":\n              return matchMenuItemCustom(item, lowerQ);\n            case \"dir\": {\n              const filteredSubItems = item.items\n                .map((sub) =>\n                  sub.type === \"app\"\n                    ? matchMenuItemApp(sub, lowerQ)\n                    : sub.type === \"custom\"\n                      ? matchMenuItemCustom(sub, lowerQ)\n                      : null\n                )\n                .filter(Boolean) as MenuItemData[];\n              return filteredSubItems.length > 0\n                ? {\n                    ...item,\n                    items: filteredSubItems,\n                  }\n                : null;\n            }\n          }\n        })\n        // Ignore not matched items\n        .filter(Boolean) as MenuItemData[],\n    }))\n    // ignore empty desktops\n    .filter((group) => group.items.length > 0);\n  return groups;\n}\n\nexport function searchCategories(\n  categories: PlatformCategoryItem[],\n  q: string\n): PlatformCategoryItem[] {\n  if (!q) {\n    return categories;\n  }\n\n  const lowerQ = q.toLowerCase();\n  const _categories = categories.map((category) => ({\n    ...category,\n    items: category.items\n      .map((item) => {\n        switch (item.type) {\n          case \"app\":\n            return matchMenuItemApp(item, lowerQ);\n          case \"custom\":\n            return matchMenuItemCustom(item, lowerQ);\n        }\n      })\n      // Ignore not matched items\n      .filter(Boolean) as MenuItemDataNormal[],\n  }));\n  return _categories;\n}\n\nfunction matchMenuItemApp(item: MenuItemDataApp, lowerQ: string) {\n  return item.id.toLowerCase().includes(lowerQ) ||\n    item.name.toLowerCase().includes(lowerQ) ||\n    (item.description && item.description.toLowerCase().includes(lowerQ))\n    ? item\n    : null;\n}\n\nfunction matchMenuItemCustom(item: MenuItemDataCustom, lowerQ: string) {\n  return item.id.toLowerCase().includes(lowerQ) ||\n    item.name.toLowerCase().includes(lowerQ) ||\n    (item.description && item.description.toLowerCase().includes(lowerQ))\n    ? item\n    : null;\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  getRuntime,\n  handleHttpError,\n  httpErrorToString,\n} from \"@next-core/runtime\";\nimport { auth } from \"@next-core/easyops-runtime\";\nimport { JsonStorage } from \"@next-shared/general/JsonStorage\";\nimport { DeferredService } from \"../shared/DeferredService\";\nimport { showDialog, showNotification } from \"./wrapped-bricks\";\nimport type {\n  FavMenuItem,\n  MenuGroupData,\n  MenuItemDataCustom,\n  MenuItemDataLink,\n  MenuItemDataNormal,\n  MicroAppWithInstanceId,\n  PlatformCategoryItem,\n  StoredMenuItem,\n} from \"./interfaces\";\nimport {\n  favorite,\n  fetchFavorites,\n  fetchLaunchpadInfo,\n  fetchPlatformCategories,\n  undoFavorite,\n} from \"./api\";\nimport { search, searchCategories } from \"./search\";\nimport { FAVORITES_LIMIT, RECENT_VISITS_LIMIT } from \"./constants\";\n\nconst storageKey = `launchpad-recent-visits:${(\n  auth.getAuth() as Record<string, string>\n)?.org}`;\nconst storage = new JsonStorage(localStorage);\n\nlet candidateDesktops: MenuGroupData[] = [];\nlet candidateMicroAppsById = new Map<string, MicroAppWithInstanceId>();\nlet candidateCustomLinksById = new Map<string, MenuItemDataCustom>();\nlet preLoaded = false;\n\nlet candidateFavorites: FavMenuItem[] = [];\nlet preLoadedFavorites = false;\n\nlet candidatePlatformCategories: PlatformCategoryItem[] = [];\nlet preLoadedPlatformCategories = false;\n\nexport const deferredLaunchpadInfo = new DeferredService(async () => {\n  ({\n    menuGroups: candidateDesktops,\n    microAppsById: candidateMicroAppsById,\n    customLinksById: candidateCustomLinksById,\n  } = await fetchLaunchpadInfo());\n  preLoaded = true;\n});\n\nexport const deferredFavorites = new DeferredService(async () => {\n  candidateFavorites = await fetchFavorites();\n  preLoadedFavorites = true;\n});\n\nexport const deferredPlatformCategories = new DeferredService(async () => {\n  candidatePlatformCategories = await fetchPlatformCategories();\n  preLoadedPlatformCategories = true;\n});\n\nconst showErrorAsNotification = (error: unknown) =>\n  showNotification({\n    type: \"error\",\n    message: httpErrorToString(error),\n  });\n\n/**\n * - 页面初始化时预加载 launchpad 信息。\n * - 每次打开 launchpad 都发起请求，但该请求的数据只在下次打开 launchpad 时使用。\n *   即每次打开 launchpad 使用的都是上一次获取的数据，以便达到两个效果：\n *     - 每次打开 launchpad 都能立即显示菜单列表；\n *     - 同时当用户在 launchpad 上操作时，不会出现数据突然更新（新数据请求完成）。\n */\nexport function useLaunchpadInfo(active?: boolean) {\n  const [desktops, setDesktops] = useState(candidateDesktops);\n  const [microAppsById, setMicroAppsById] = useState(candidateMicroAppsById);\n  const [customLinksById, setCustomLinksById] = useState(\n    candidateCustomLinksById\n  );\n\n  const [q, setQ] = useState(\"\");\n\n  const [loading, setLoading] = useState(!preLoaded);\n  const [loadingFavorites, setLoadingFavorites] = useState(!preLoadedFavorites);\n  const [loadingPlatformCategories, setLoadingPlatformCategories] = useState(\n    !preLoadedPlatformCategories\n  );\n\n  const [storedRecentVisits, setStoredRecentVisits] = useState<\n    StoredMenuItem[]\n  >([]);\n\n  const [recentVisits, setRecentVisits] = useState<MenuItemDataNormal[]>([]);\n\n  const [favorites, setFavorites] = useState<FavMenuItem[]>(candidateFavorites);\n  const [platformCategories, setPlatformCategories] = useState<\n    PlatformCategoryItem[]\n  >(candidatePlatformCategories);\n\n  useEffect(() => {\n    // 仅当首次加载完成或重新打开 launchpad 时更新一次数据。\n    if (active && !loading) {\n      setDesktops(candidateDesktops);\n      setMicroAppsById(candidateMicroAppsById);\n      setCustomLinksById(candidateCustomLinksById);\n    }\n  }, [active, loading]);\n\n  useEffect(() => {\n    if (active && !loadingFavorites) {\n      setFavorites(candidateFavorites);\n    }\n  }, [active, loadingFavorites]);\n\n  useEffect(() => {\n    if (active && !loadingPlatformCategories) {\n      setPlatformCategories(candidatePlatformCategories);\n    }\n  }, [active, loadingPlatformCategories]);\n\n  useEffect(() => {\n    if (active) {\n      setStoredRecentVisits(storage.getItem(storageKey) ?? []);\n    }\n  }, [active]);\n\n  useEffect(() => {\n    if (active) {\n      const startFetchLaunchpadInfo = async (): Promise<void> => {\n        try {\n          await deferredLaunchpadInfo.fetch();\n          setLoading(false);\n        } catch (error) {\n          handleHttpError(error);\n        }\n      };\n      startFetchLaunchpadInfo();\n    }\n  }, [active]);\n\n  useEffect(() => {\n    if (active) {\n      const startFetchFavorites = async (): Promise<void> => {\n        try {\n          await deferredFavorites.fetch();\n          setLoadingFavorites(false);\n        } catch (error) {\n          setLoadingFavorites(false);\n          showErrorAsNotification(error);\n        }\n      };\n      startFetchFavorites();\n    }\n  }, [active]);\n\n  useEffect(() => {\n    if (\n      active &&\n      getRuntime()?.getFeatureFlags()[\"launchpad-show-platform-category\"]\n    ) {\n      const startFetchPlatformCategories = async (): Promise<void> => {\n        try {\n          await deferredPlatformCategories.fetch();\n          setLoadingPlatformCategories(false);\n        } catch (error) {\n          setLoadingPlatformCategories(false);\n          showErrorAsNotification(error);\n        }\n      };\n      startFetchPlatformCategories();\n    }\n  }, [active]);\n\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n    const visits = storedRecentVisits\n      .map((item) => {\n        // Remembered recent visits maybe no longer existed in launchpad\n        if (item.type === \"app\") {\n          const app = microAppsById.get(item.id);\n          return app\n            ? {\n                type: \"app\",\n                name: app.localeName,\n                id: app.id,\n                url: app.homepage,\n                instanceId: app.instanceId,\n                menuIcon: app.menuIcon,\n              }\n            : null;\n        }\n        return customLinksById.get(item.id);\n      })\n      .filter(Boolean) as MenuItemDataNormal[];\n    setRecentVisits(visits);\n  }, [customLinksById, loading, microAppsById, storedRecentVisits]);\n\n  const pushRecentVisit = useCallback(({ type, id }: StoredMenuItem) => {\n    const visits: StoredMenuItem[] = storage.getItem(storageKey) ?? [];\n    const index = visits.findIndex(\n      (visit) => visit.type === type && visit.id === id\n    );\n    if (index > -1) {\n      visits.splice(index, 1);\n    }\n    visits.unshift({ type, id });\n    if (visits.length > RECENT_VISITS_LIMIT) {\n      visits.pop();\n    }\n    // setStoredRecentVisits(visits);\n    storage.setItem(storageKey, visits);\n  }, []);\n\n  const isStarred = useCallback(\n    (item: MenuItemDataNormal) =>\n      favorites.some((fav) => matchFavorite(item, fav)),\n    [favorites]\n  );\n\n  const toggleStar = useCallback(\n    (item: MenuItemDataNormal | MenuItemDataLink) => {\n      const index = favorites.findIndex((fav) =>\n        item.type === \"link\"\n          ? fav.favoriteId === item.favoriteId\n          : matchFavorite(item, fav)\n      );\n      let newFavorites: FavMenuItem[];\n      if (index > -1) {\n        const removed = favorites[index];\n        newFavorites = favorites\n          .slice(0, index)\n          .concat(favorites.slice(index + 1));\n        undoFavorite(removed).catch(showErrorAsNotification);\n      } else {\n        if (favorites.length >= FAVORITES_LIMIT) {\n          showDialog({\n            type: \"warn\",\n            title: \"收藏数量已达上限\",\n            content: `当前收藏链接数量已达上限（${FAVORITES_LIMIT}个），请删除部分收藏后再添加。`,\n          });\n          return;\n        }\n        // Assert: no link item\n        const fav: FavMenuItem = { ...(item as MenuItemDataNormal) };\n        newFavorites = favorites.concat(fav);\n        favorite(item as MenuItemDataNormal).then((result) => {\n          if (result) {\n            fav.favoriteId = result.instanceId;\n          }\n        }, showErrorAsNotification);\n      }\n      setFavorites(newFavorites);\n      candidateFavorites = newFavorites;\n    },\n    [favorites]\n  );\n\n  const menuGroups: MenuGroupData[] = useMemo(\n    () => search(desktops, q),\n    [desktops, q]\n  );\n\n  const filteredPlatformCategories: PlatformCategoryItem[] = useMemo(\n    () => searchCategories(platformCategories, q),\n    [platformCategories, q]\n  );\n\n  return {\n    loading,\n    q,\n    setQ,\n    menuGroups,\n    loadingFavorites,\n    loadingPlatformCategories,\n    favorites,\n    recentVisits,\n    pushRecentVisit,\n    isStarred,\n    toggleStar,\n    platformCategories: filteredPlatformCategories,\n  };\n}\n\nexport function matchFavorite(item: MenuItemDataNormal, fav: FavMenuItem) {\n  return item.instanceId && fav.instanceId\n    ? fav.instanceId === item.instanceId\n    : fav.type === item.type && fav.id === item.id;\n}\n","import { wrapBrick } from \"@next-core/react-element\";\nimport { unwrapProvider } from \"@next-core/utils/general\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport type { Link, LinkProps } from \"@next-bricks/basic/link\";\nimport type { showDialog as _showDialog } from \"@next-bricks/basic/data-providers/show-dialog/show-dialog\";\nimport type { showNotification as _showNotification } from \"@next-bricks/basic/data-providers/show-notification/show-notification\";\n\nexport const WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\nexport const WrappedLink = wrapBrick<Link, LinkProps>(\"eo-link\");\n\n// Use `unwrapProvider` to get the original function of a provider\nexport const showDialog =\n  unwrapProvider<typeof _showDialog>(\"basic.show-dialog\");\n\nexport const showNotification = unwrapProvider<typeof _showNotification>(\n  \"basic.show-notification\"\n);\n","export class DeferredService {\n  private preFetchId: number | null = null;\n  private preFetchScheduled = false;\n  private firstFetchPromise: Promise<unknown> | null = null;\n  private isFetching = false;\n  private readonly task: () => Promise<unknown>;\n\n  constructor(task: () => Promise<unknown>) {\n    this.task = task;\n  }\n\n  schedulePrefetch(): void {\n    if (!this.preFetchScheduled) {\n      this.preFetchScheduled = true;\n      const preFetchLaunchpadInfo = async (): Promise<void> => {\n        this.preFetchId = null;\n        this.fetch();\n      };\n      // istanbul ignore if\n      if (typeof window.requestIdleCallback === \"function\") {\n        this.preFetchId = window.requestIdleCallback(preFetchLaunchpadInfo);\n      } else {\n        this.preFetchId = setTimeout(\n          preFetchLaunchpadInfo\n        ) as unknown as number;\n      }\n    }\n  }\n\n  fetch(eager?: boolean): Promise<unknown> {\n    if (this.preFetchId) {\n      // istanbul ignore if\n      if (typeof window.cancelIdleCallback === \"function\") {\n        cancelIdleCallback(this.preFetchId);\n      } else {\n        clearTimeout(this.preFetchId);\n      }\n      this.preFetchId = null;\n    }\n\n    let promise: Promise<unknown>;\n    if (!this.isFetching || eager) {\n      this.isFetching = true;\n      promise = this.task();\n      promise\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.error(error);\n          this.firstFetchPromise = null;\n        })\n        .finally(() => {\n          this.isFetching = false;\n        });\n      if (!this.firstFetchPromise) {\n        this.firstFetchPromise = promise;\n      }\n      if (eager) {\n        return promise;\n      }\n    }\n    return this.firstFetchPromise!;\n  }\n}\n","import { i18nText } from \"@next-core/i18n\";\nimport type { AppLocales, I18nData } from \"@next-core/types\";\n\nexport function getAppLocaleName(\n  locales: AppLocales | undefined,\n  name: string\n) {\n  if (!locales) {\n    return name;\n  }\n  const i18nData = Object.fromEntries(\n    Object.entries(locales)\n      .filter(([lang, resources]) => resources.name)\n      .map(([lang, resources]) => [lang, resources.name])\n  ) as I18nData;\n  return i18nText(i18nData) ?? name;\n}\n","export class JsonStorage {\n  constructor(\n    private storage: Storage,\n    private prefix: string = \"brick-next-\"\n  ) {}\n\n  setItem<T = any>(name: string, value: T): void {\n    this.storage.setItem(this.prefix + name, JSON.stringify(value));\n  }\n\n  getItem<T = any>(name: string): T {\n    return JSON.parse(this.storage.getItem(this.prefix + name) as string) as T;\n  }\n\n  removeItem(name: string): void {\n    return this.storage.removeItem(this.prefix + name);\n  }\n\n  clear(): void {\n    return this.storage.clear();\n  }\n}\n"],"names":["FAVORITES_LIMIT","RECENT_VISITS_LIMIT","async","fetchRawFavorites","LaunchpadApi_listCollectionV2","page","pageSize","interceptorParams","ignoreLoadingBar","noAbortOnRouteChange","list","matchMenuItemApp","item","lowerQ","id","toLowerCase","includes","name","description","matchMenuItemCustom","storageKey","_auth$getAuth","auth","getAuth","org","storage","JsonStorage","localStorage","candidateDesktops","candidateMicroAppsById","Map","candidateCustomLinksById","preLoaded","candidateFavorites","preLoadedFavorites","candidatePlatformCategories","preLoadedPlatformCategories","deferredLaunchpadInfo","DeferredService","menuGroups","microAppsById","customLinksById","launchpadInfo","LaunchpadApi_getLaunchpadInfo","storyboard","storyboards","app","localeName","getAppLocaleName","locales","set","group","desktops","items","type","get","push","url","homepage","menuIcon","subItems","subItem","length","fetchLaunchpadInfo","deferredFavorites","stored","fav","relatedApp","favoriteId","instanceId","appId","customItem","relatedCustomItem","link","icon","fetchFavorites","deferredPlatformCategories","categories","InstanceApi_postSearchV3","fields","page_size","query","_categories","map","category","apps","platformApps","_app$","order","customItems","platformItems","_item$","sortBy","lib","fetchPlatformCategories","showErrorAsNotification","error","showNotification","message","httpErrorToString","useLaunchpadInfo","active","setDesktops","useState","setMicroAppsById","setCustomLinksById","q","setQ","loading","setLoading","loadingFavorites","setLoadingFavorites","loadingPlatformCategories","setLoadingPlatformCategories","storedRecentVisits","setStoredRecentVisits","recentVisits","setRecentVisits","favorites","setFavorites","platformCategories","setPlatformCategories","useEffect","getItem","fetch","handleHttpError","startFetchLaunchpadInfo","startFetchFavorites","_getRuntime","getRuntime","getFeatureFlags","startFetchPlatformCategories","visits","filter","Boolean","pushRecentVisit","useCallback","_ref","index","findIndex","visit","splice","unshift","pop","setItem","isStarred","some","matchFavorite","toggleStar","newFavorites","removed","slice","concat","LaunchpadApi_deleteCollectionV2","then","_list$find","foundId","find","_fav$relatedApp","_fav$relatedCustomIte","console","undoFavorite","catch","showDialog","title","content","LaunchpadApi_createCollectionV2","relatedInstanceId","favorite","result","useMemo","allMenuGroups","filteredSubItems","sub","search","filteredPlatformCategories","searchCategories","WrappedIcon","wrapBrick","WrappedLink","unwrapProvider","constructor","task","_defineProperty","this","schedulePrefetch","preFetchScheduled","preFetchLaunchpadInfo","preFetchId","window","requestIdleCallback","setTimeout","eager","promise","cancelIdleCallback","clearTimeout","isFetching","firstFetchPromise","finally","i18nData","Object","fromEntries","entries","lang","resources","_ref2","i18nText","prefix","arguments","undefined","value","JSON","stringify","parse","removeItem","clear"],"sourceRoot":""}
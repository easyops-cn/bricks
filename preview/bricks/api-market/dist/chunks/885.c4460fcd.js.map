{"version":3,"file":"chunks/885.c4460fcd.js","mappings":"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","sources":["webpack:///./src/apis-directory-tree/index.tsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { EventEmitter, createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\nimport { Tree } from \"./Tree\";\nimport {\n  getFlattenTreeData,\n  getAllExpandableKeys,\n  getExpandableKeysAccordingToSelectedKeys,\n  searchTree,\n} from \"./utils\";\nimport { DirectoryTreeContext } from \"./DirectoryTreeContext\";\nimport { WrappedSearch } from \"./wrapped-bricks\";\nimport type { SimpleActionType } from \"@next-bricks/basic/mini-actions\";\n\nconst { defineElement, property, method, event } = createDecorators();\n\n/**\n * 传入的 data 类型\n */\nexport interface TreeItem {\n  key: string;\n  title: string;\n  children?: TreeItem[];\n  [key: string]: any;\n}\n\n/**\n * 内部格式化后的类型\n */\nexport interface TreeData {\n  title: string;\n  key: string;\n  pos: string;\n  depth: number;\n  index: number;\n  data: TreeItem;\n  parent?: TreeData;\n  children?: TreeData[];\n}\n\n/**\n * useBrick、事件使用的类型\n */\nexport interface NodeData {\n  depth: number;\n  index: number;\n  data: TreeItem;\n}\n\nexport interface ApisDirectoryTreeProps {\n  data: TreeItem[];\n  directoryTitle?: string;\n  searchable?: boolean;\n  hiddenNodeSuffix?: boolean;\n  placeholder?: string;\n  selectedKeys?: string[];\n  expandedKeys?: string[];\n  searchFields?: (string | string[])[];\n}\n\n/**\n * API目录树\n */\nexport\n@defineElement(\"api-market.apis-directory-tree\", {\n  styleTexts: [styleText],\n})\nclass ApisDirectoryTree extends ReactNextElement {\n  /**\n   * 数据源\n   */\n  @property({\n    attribute: false,\n  })\n  accessor data: TreeItem[] = [];\n\n  /**\n   * 目录标题\n   */\n  @property()\n  accessor directoryTitle: string | undefined;\n\n  /**\n   * 可搜索\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor searchable: boolean | undefined;\n\n  /**\n   * 隐藏node节点右侧操作\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor hiddenNodeSuffix: boolean = false;\n\n  /**\n   * 搜索占位说明\n   */\n  @property()\n  accessor placeholder: string | undefined;\n\n  /**\n   * 除了 title 以外，额外的搜索字段\n   */\n  @property({\n    attribute: false,\n  })\n  accessor searchFields: (string | string[])[] | undefined;\n\n  /**\n   * 选中的 keys\n   */\n  @property({\n    attribute: false,\n  })\n  accessor selectedKeys: string[] | undefined;\n\n  /**\n   * 展开的 keys\n   */\n  @property({\n    attribute: false,\n  })\n  accessor expandedKeys: string[] | undefined;\n\n  /**\n   * 展开全部\n   */\n  @method()\n  expandAll() {\n    this.expandedKeys = getAllExpandableKeys(this.data);\n  }\n\n  /**\n   * 收起全部\n   */\n  @method()\n  collapseAll() {\n    this.expandedKeys = [];\n  }\n\n  /**\n   * 根据选择项展开\n   */\n  @method()\n  expandAccordingToSelectedKeys() {\n    this.expandedKeys = getExpandableKeysAccordingToSelectedKeys(\n      this.data,\n      new Set(this.selectedKeys)\n    );\n  }\n\n  /**\n   * 展开事件\n   * @detail keys - 展开的 keys\n   */\n  @event({ type: \"expand\" })\n  accessor #expandEvent!: EventEmitter<{ keys: string[]; node: NodeData }>;\n  #handleExpand = (data: { keys: string[]; node: NodeData }) => {\n    this.expandedKeys = data.keys;\n    this.#expandEvent.emit(data);\n  };\n\n  /**\n   * 选择事件\n   * @detail keys - 选择的 keys\n   */\n  @event({ type: \"select\" })\n  accessor #selectEvent!: EventEmitter<{ keys: string[]; node: NodeData }>;\n  #handleSelect = (data: { keys: string[]; node: NodeData }) => {\n    this.selectedKeys = data.keys;\n    this.#selectEvent.emit(data);\n  };\n\n  /**\n   * actions点击事件\n   */\n  @event({ type: \"action.click\" })\n  accessor #actionClickEvent!: EventEmitter<{\n    data: NodeData;\n    action: SimpleActionType;\n  }>;\n  #handleActionClick = (data: NodeData, action: SimpleActionType) => {\n    this.#actionClickEvent.emit({ data, action });\n  };\n\n  render() {\n    return (\n      <ApisDirectoryTreeComponent\n        element={this}\n        data={this.data}\n        directoryTitle={this.directoryTitle}\n        placeholder={this.placeholder}\n        searchable={this.searchable}\n        searchFields={this.searchFields}\n        selectedKeys={this.selectedKeys}\n        expandedKeys={this.expandedKeys}\n        hiddenNodeSuffix={this.hiddenNodeSuffix}\n        onExpand={this.#handleExpand}\n        onSelect={this.#handleSelect}\n        onSuffixActionsClick={this.#handleActionClick}\n      />\n    );\n  }\n}\n\ninterface ApisDirectoryTreeComponentProps extends ApisDirectoryTreeProps {\n  element: ApisDirectoryTree;\n  onSuffixActionsClick: (data: NodeData, action: SimpleActionType) => void;\n  onExpand: (data: { keys: string[]; node: NodeData }) => void;\n  onSelect: (data: { keys: string[]; node: NodeData }) => void;\n}\n\nexport function ApisDirectoryTreeComponent(\n  props: ApisDirectoryTreeComponentProps\n) {\n  const {\n    element,\n    data,\n    directoryTitle,\n    searchable,\n    searchFields,\n    placeholder,\n    hiddenNodeSuffix,\n    onSelect,\n    onExpand,\n    onSuffixActionsClick,\n  } = props;\n\n  const expandedKeysSet = useMemo(\n    () => new Set(props.expandedKeys),\n    [props.expandedKeys]\n  );\n  const selectedKeysSet = useMemo(\n    () => new Set(props.selectedKeys),\n    [props.selectedKeys]\n  );\n\n  const [q, setQ] = useState(\"\");\n\n  const handleSearch = (e: CustomEvent<string>) => {\n    setQ(e.detail);\n  };\n\n  const searchedData = useMemo(() => {\n    const result = searchTree(data, q, (searchFields || []).concat(\"title\"));\n    if (q) {\n      element.expandedKeys = result.expandedKeys;\n    }\n    return result.data;\n  }, [data, q, searchFields]);\n\n  const treeData = useMemo(() => {\n    return getFlattenTreeData(searchedData, expandedKeysSet);\n  }, [searchedData, expandedKeysSet]);\n\n  return (\n    <DirectoryTreeContext.Provider\n      value={{\n        expandedKeysSet,\n        selectedKeysSet,\n        onSelect,\n        onExpand,\n        onSuffixActionsClick,\n      }}\n    >\n      <div className=\"directory-container\">\n        {directoryTitle && (\n          <div className=\"directory-title-container\">\n            <div className=\"directory-title\" title={directoryTitle}>\n              {directoryTitle}\n            </div>\n            <div className=\"directory-title-toolbar\">\n              <slot name=\"toolbar\" />\n            </div>\n          </div>\n        )}\n        {searchable && (\n          <WrappedSearch\n            className=\"directory-search\"\n            trim\n            placeholder={placeholder}\n            onSearch={handleSearch}\n          />\n        )}\n        <div className=\"tree\">\n          <Tree\n            treeData={treeData}\n            hiddenNodeSuffix={hiddenNodeSuffix as boolean}\n          />\n        </div>\n      </div>\n    </DirectoryTreeContext.Provider>\n  );\n}\n"],"names":["defineElement","property","method","event","createDecorators","_ApisDirectoryTree","_A","WeakMap","_B","_C","_D","_E","_F","_G","_H","_I","_ApisDirectoryTree_brand","WeakSet","_handleExpand","_J","_handleSelect","_K","_handleActionClick","ApisDirectoryTree","ReactNextElement","constructor","arguments","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_initProto","_init_data","_init_extra_data","_init_directoryTitle","_init_extra_directoryTitle","_init_searchable","_init_extra_searchable","_init_hiddenNodeSuffix","_init_extra_hiddenNodeSuffix","_init_placeholder","_init_extra_placeholder","_init_searchFields","_init_extra_searchFields","_init_selectedKeys","_init_extra_selectedKeys","_init_expandedKeys","_init_extra_expandedKeys","_init_expandEvent","_init_extra_expandEvent","data","this","expandedKeys","keys","_classPrivateGetter","_get_expandEvent","emit","_init_selectEvent","_init_extra_selectEvent","selectedKeys","_get_selectEvent","_init_actionClickEvent","_init_extra_actionClickEvent","action","_get_actionClickEvent","_classPrivateFieldGet","v","_classPrivateFieldSet","directoryTitle","searchable","hiddenNodeSuffix","placeholder","searchFields","expandAll","getAllExpandableKeys","collapseAll","expandAccordingToSelectedKeys","getExpandableKeysAccordingToSelectedKeys","Set","render","React","ApisDirectoryTreeComponent","element","onExpand","onSelect","onSuffixActionsClick","props","expandedKeysSet","useMemo","selectedKeysSet","q","setQ","useState","searchedData","result","searchTree","concat","treeData","getFlattenTreeData","DirectoryTreeContext","Provider","value","className","title","name","WrappedSearch","trim","onSearch","e","detail","Tree","_ApisDirectoryTree2","_set_expandEvent","_set_selectEvent","_set_actionClickEvent","c","_initClass","_applyDecs","styleTexts","styleText","attribute","type","Boolean","o","_","has","_checkInRHS"],"sourceRoot":""}
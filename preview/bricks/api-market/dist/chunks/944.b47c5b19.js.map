{"version":3,"file":"chunks/944.b47c5b19.js","mappings":"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","sources":["webpack:///../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///../../node_modules/@next-core/element/dist/esm/internal/symbols.js","webpack:///../../node_modules/@next-core/element/dist/esm/createDecorators.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../node_modules/@next-core/element/dist/esm/NextElement.js","webpack:///../../node_modules/@next-core/element/dist/esm/supportsAdoptingStyleSheets.js"],"sourcesContent":["import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","export const symbolOfAttributeHasBeenSet = Symbol.for(\"attributeHasBeenSet\");\nexport const symbolOfMarkAttributeHasBeenSet = Symbol.for(\"markAttributeHasBeenSet\");\nexport const symbolOfStopAttributeChangedCallback = Symbol.for(\"stopAttributeChangedCallback\");\n//# sourceMappingURL=symbols.js.map","import { symbolOfAttributeHasBeenSet, symbolOfMarkAttributeHasBeenSet, symbolOfStopAttributeChangedCallback } from \"./internal/symbols.js\";\nconst defaultConverter = {\n  toAttribute(value, type) {\n    switch (type) {\n      case Boolean:\n        return value ? \"\" : null;\n    }\n    return value;\n  },\n  fromAttribute(value, type) {\n    switch (type) {\n      case Boolean:\n        return value !== null && value !== \"false\";\n      case Number:\n        return value === null ? null : Number(value);\n    }\n    return value;\n  }\n};\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nconst notEqual = (value, old) => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  // reflect: true,\n  render: true,\n  hasChanged: notEqual\n};\n\n// Note: `prefix` is a native prop on Element, but it's only used in XML documents.\nconst allowedNativeProps = new Set([\"prefix\"]);\nexport function createDecorators() {\n  const attributeReflections = new Map();\n  const definedProperties = new Set();\n  const definedMethods = new Set();\n  const definedEvents = new Set();\n  function defineElement(name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return (value, _ref) => {\n      let {\n        kind,\n        name: className,\n        addInitializer\n      } = _ref;\n      // istanbul ignore next\n      if (process.env.NODE_ENV === \"development\" && kind !== \"class\") {\n        throw new Error(`Invalid usage of \\`@defineElement()\\` on a ${kind}: \"${className}\"`);\n      }\n      addInitializer(function () {\n        const superClass = Object.getPrototypeOf(this);\n        const mergedAttributes = mergeIterables(superClass.observedAttributes ?? [], attributeReflections.keys());\n        defineReadonlyProperty(this, \"observedAttributes\", mergedAttributes);\n        const mergedAttributeReflections = new Map([...(superClass.__attributeReflections ?? []), ...attributeReflections]);\n        defineReadonlyProperty(this, \"__attributeReflections\", mergedAttributeReflections);\n        defineReadonlyProperty(this, \"styleTexts\", options.styleTexts);\n        defineReadonlyProperty(this, \"shadowOptions\", options.shadowOptions !== false ? {\n          mode: \"open\",\n          ...options.shadowOptions\n        } : null);\n        defineReadonlyProperty(this, \"__tagName\", name);\n        const mergedProperties = mergeIterables(superClass._dev_only_definedProperties ?? [], definedProperties);\n        defineReadonlyProperty(this, \"_dev_only_definedProperties\", mergedProperties);\n        const mergedMethods = mergeIterables(superClass._dev_only_definedMethods ?? [], definedMethods);\n        defineReadonlyProperty(this, \"_dev_only_definedMethods\", mergedMethods);\n        const mergedEvents = mergeIterables(superClass._dev_only_definedEvents ?? [], definedEvents);\n        defineReadonlyProperty(this, \"_dev_only_definedEvents\", mergedEvents);\n        customElements.define(name, this);\n        if (Array.isArray(options.alias)) {\n          for (const alias of options.alias) {\n            // Use a parenthesized expression to make the class has no name.\n            const Alias = (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            0, class extends value {});\n            defineReadonlyProperty(Alias, \"__tagName\", alias);\n            customElements.define(alias, Alias);\n          }\n        }\n      });\n    };\n  }\n  function property(options) {\n    return function (_ref2, _ref3) {\n      let {\n        get,\n        set\n      } = _ref2;\n      let {\n        kind,\n        name,\n        static: isStatic,\n        private: isPrivate\n      } = _ref3;\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== \"production\") {\n        if (kind !== \"accessor\") {\n          throw new Error(`Invalid usage of \\`@property()\\` on a ${kind}: \"${String(name)}\"`);\n        }\n        if (typeof name !== \"string\") {\n          throw new Error(`Invalid usage of \\`@property()\\` on a ${kind} of ${typeof name}`);\n        }\n        if (isStatic) {\n          throw new Error(`Invalid usage of \\`@property()\\` on a static ${kind}: \"${name}\"`);\n        }\n        if (isPrivate) {\n          throw new Error(`Invalid usage of \\`@property()\\` on a private ${kind}: \"${name}\"`);\n        }\n        if (name in HTMLElement.prototype && !allowedNativeProps.has(name)) {\n          const message = `\"${name}\" is a native HTMLElement property, and is deprecated to be used as a brick property.`;\n          throw new Error(message);\n        }\n      }\n      definedProperties.add(name);\n      const _options = Object.assign({}, defaultPropertyDeclaration, options);\n      const attrName = attributeNameForProperty(name, _options);\n      if (attrName !== undefined) {\n        attributeReflections.set(attrName, {\n          ..._options,\n          property: name\n        });\n      }\n      return {\n        get() {\n          // If the attribute has been set (not by initialization), returns the\n          // value converted by the attribute. Otherwise returns the prop value.\n          // This works as a type conversion when reading a prop value.\n          if (attrName !== undefined && this[symbolOfAttributeHasBeenSet](attrName)) {\n            return _options.converter.fromAttribute(this.getAttribute(attrName), _options.type);\n          }\n          return get.call(this);\n        },\n        set(value) {\n          const oldValue = get.call(this);\n          set.call(this, value);\n          if (_options.hasChanged(value, oldValue)) {\n            if (attrName !== undefined) {\n              const attrValue = _options.converter.toAttribute(value, _options.type);\n              this[symbolOfStopAttributeChangedCallback](true);\n              if (attrValue == null) {\n                this.removeAttribute(attrName);\n              } else {\n                this.setAttribute(attrName, attrValue);\n              }\n              this[symbolOfMarkAttributeHasBeenSet](attrName);\n              this[symbolOfStopAttributeChangedCallback](false);\n            }\n            if (_options.render) {\n              this._requestRender();\n            }\n          }\n        },\n        init(initialValue) {\n          if (attrName !== undefined && _options.hasChanged(initialValue, undefined)) {\n            const attrValue = _options.converter.toAttribute(initialValue, _options.type);\n            if (attrValue != null) {\n              // No attributes should be created during constructing custom elements.\n              // This is true even if the work is done inside a constructor-initiated microtask.\n              // https://html.spec.whatwg.org/multipage/custom-elements.html#custom-element-conformance\n              requestAnimationFrame(() => {\n                if (!this[symbolOfAttributeHasBeenSet](attrName)) {\n                  this[symbolOfStopAttributeChangedCallback](true);\n                  this.setAttribute(attrName, attrValue);\n                  this[symbolOfStopAttributeChangedCallback](false);\n                }\n              });\n            }\n          }\n          return initialValue;\n        }\n      };\n    };\n  }\n  function method(options) {\n    return function (_value, _ref4) {\n      let {\n        kind,\n        name,\n        static: isStatic,\n        private: isPrivate,\n        addInitializer\n      } = _ref4;\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== \"production\") {\n        if (kind !== \"method\") {\n          throw new Error(`Invalid usage of \\`@method()\\` on a ${kind}: \"${String(name)}\"`);\n        }\n        if (typeof name !== \"string\") {\n          throw new Error(`Invalid usage of \\`@method()\\` on a ${kind} of ${typeof name}`);\n        }\n        if (isStatic) {\n          throw new Error(`Invalid usage of \\`@method()\\` on a static ${kind}: \"${name}\"`);\n        }\n        if (isPrivate) {\n          throw new Error(`Invalid usage of \\`@method()\\` on a private ${kind}: \"${name}\"`);\n        }\n        if (name in HTMLElement.prototype && !allowedNativeProps.has(name)) {\n          const message = `\"${name}\" is a native HTMLElement property, and is deprecated to be used as a brick method.`;\n          throw new Error(message);\n        }\n      }\n      if (options !== null && options !== void 0 && options.bound) {\n        addInitializer(function () {\n          this[name] = this[name].bind(this);\n        });\n      }\n      definedMethods.add(name);\n    };\n  }\n  function event(options) {\n    return function (_ref5, _ref6) {\n      let {\n        get\n      } = _ref5;\n      let {\n        kind,\n        name,\n        static: isStatic,\n        private: isPrivate\n      } = _ref6;\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== \"production\") {\n        if (kind !== \"accessor\") {\n          throw new Error(`Invalid usage of \\`@event()\\` on a ${kind}: \"${String(name)}\"`);\n        }\n        if (!isPrivate) {\n          throw new Error(`Invalid usage of \\`@event()\\` on a non-private ${kind}: \"${String(name)}\"`);\n        }\n        if (isStatic) {\n          throw new Error(`Invalid usage of \\`@event()\\` on a static ${kind}: \"${String(name)}\"`);\n        }\n      }\n      const {\n        type,\n        ...eventInit\n      } = options;\n      definedEvents.add(type);\n      return {\n        get() {\n          return get.call(this);\n        },\n        set() {\n          throw new Error(\"Decorated events are readonly\");\n        },\n        init(initialValue) {\n          // istanbul ignore next\n          if (process.env.NODE_ENV === \"development\" && initialValue !== undefined) {\n            throw new Error(`Do not set an initial value for a decorated event: \"${String(name)}\"`);\n          }\n          return Object.freeze({\n            emit: detail => this.dispatchEvent(new CustomEvent(type, {\n              ...eventInit,\n              detail\n            }))\n          });\n        }\n      };\n    };\n  }\n  return {\n    defineElement,\n    property,\n    method,\n    event\n  };\n}\nfunction defineReadonlyProperty(target, propName, propValue) {\n  Object.defineProperty(target, propName, {\n    get() {\n      return propValue;\n    },\n    configurable: true\n  });\n}\nfunction mergeIterables(list1, list2) {\n  const newList = new Set(list1);\n  for (const item of list2) {\n    newList.add(item);\n  }\n  return [...newList];\n}\nfunction attributeNameForProperty(name, options) {\n  const attribute = options.attribute;\n  return attribute === false ? undefined : typeof attribute === \"string\" ? attribute : name.replace(/[A-Z]/g, char => `-${char.toLowerCase()}`);\n}\n//# sourceMappingURL=createDecorators.js.map","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _classPrivateFieldInitSpec from \"@babel/runtime/helpers/classPrivateFieldInitSpec\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classPrivateFieldGet from \"@babel/runtime/helpers/classPrivateFieldGet2\";\nimport _classPrivateFieldSet from \"@babel/runtime/helpers/classPrivateFieldSet2\";\nimport { symbolOfAttributeHasBeenSet, symbolOfMarkAttributeHasBeenSet, symbolOfStopAttributeChangedCallback } from \"./internal/symbols.js\";\nvar _hasRequestedRender = /*#__PURE__*/new WeakMap();\nvar _connectedCallbackCalled = /*#__PURE__*/new WeakMap();\nvar _attributeChangedCallbackStopped = /*#__PURE__*/new WeakMap();\nvar _attributesBeenSet = /*#__PURE__*/new WeakMap();\nexport class NextElement extends HTMLElement {\n  constructor() {\n    super(...arguments);\n    _classPrivateFieldInitSpec(this, _hasRequestedRender, false);\n    _classPrivateFieldInitSpec(this, _connectedCallbackCalled, false);\n    _classPrivateFieldInitSpec(this, _attributeChangedCallbackStopped, false);\n    _classPrivateFieldInitSpec(this, _attributesBeenSet, new Set());\n  }\n  /**\n   * When render a custom element as parsed DOM, it is already connected in the\n   * first place. The attributes are set while isConnected is true, which will\n   * trigger a render request, and then before the next micro-task, the\n   * `connectedCallback` will be called, which will trigger an immediate render.\n   * Thus we would see two calls of render. So we manually set a mark of whether\n   * the `connectedCallback` is actually get called, to prevent a trigger of\n   * render request during attributes initialization before `connectedCallback`.\n   */\n  _markConnectedCallbackCalled() {\n    _classPrivateFieldSet(_connectedCallbackCalled, this, true);\n  }\n  connectedCallback() {\n    this._markConnectedCallbackCalled();\n    this._render();\n  }\n  [symbolOfAttributeHasBeenSet](name) {\n    return _classPrivateFieldGet(_attributesBeenSet, this).has(name);\n  }\n  [symbolOfMarkAttributeHasBeenSet](name) {\n    _classPrivateFieldGet(_attributesBeenSet, this).add(name);\n  }\n\n  /** Whether to process attributeChangedCallback. */\n  [symbolOfStopAttributeChangedCallback](value) {\n    _classPrivateFieldSet(_attributeChangedCallbackStopped, this, value);\n  }\n\n  /** @internal */\n  attributeChangedCallback(name, old, value) {\n    _classPrivateFieldGet(_attributesBeenSet, this).add(name);\n    if (!_classPrivateFieldGet(_attributeChangedCallbackStopped, this) && old !== value) {\n      const attrRef = this.constructor.__attributeReflections.get(name);\n      assertAttributeIsReflected(attrRef, name);\n      const propValue = attrRef.converter.fromAttribute(value, attrRef.type);\n      this[attrRef.property] = propValue;\n    }\n  }\n\n  /**\n   * Request a render in the next micro-task. This ensures multiple properties\n   * or attributes will trigger a render once in a batch.\n   */\n  _requestRender() {\n    // If the element is not connected,\n    // let `connectedCallback()` do the job of calling _render.\n    if (this.isConnected && _classPrivateFieldGet(_connectedCallbackCalled, this) && !_classPrivateFieldGet(_hasRequestedRender, this)) {\n      _classPrivateFieldSet(_hasRequestedRender, this, true);\n      Promise.resolve().then(() => {\n        _classPrivateFieldSet(_hasRequestedRender, this, false);\n        this._render();\n      });\n    }\n  }\n}\n_defineProperty(NextElement, \"styleTexts\", void 0);\n_defineProperty(NextElement, \"shadowOptions\", void 0);\n_defineProperty(NextElement, \"__attributeReflections\", void 0);\n_defineProperty(NextElement, \"__tagName\", void 0);\nfunction assertAttributeIsReflected(attrRef, name) {\n  // istanbul ignore next\n  if (process.env.NODE_ENV === \"development\" && !attrRef) {\n    throw new Error(`Attribute [${name}] is not reflected`);\n  }\n}\n//# sourceMappingURL=NextElement.js.map","let supports;\nexport function supportsAdoptingStyleSheets() {\n  if (supports === undefined) {\n    supports = !!(window.ShadowRoot &&\n    // (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    \"adoptedStyleSheets\" in Document.prototype && \"replace\" in CSSStyleSheet.prototype);\n  }\n  return supports;\n}\n//# sourceMappingURL=supportsAdoptingStyleSheets.js.map"],"names":["toPropertyKey","t","i","r","e","Symbol","toPrimitive","call","TypeError","String","_typeof","o","iterator","constructor","prototype","symbolOfAttributeHasBeenSet","for","symbolOfMarkAttributeHasBeenSet","symbolOfStopAttributeChangedCallback","defaultPropertyDeclaration","attribute","type","converter","toAttribute","value","Boolean","fromAttribute","Number","render","hasChanged","old","createDecorators","attributeReflections","Map","definedProperties","Set","definedMethods","definedEvents","defineElement","name","options","arguments","length","undefined","_ref","kind","className","addInitializer","superClass","Object","getPrototypeOf","this","defineReadonlyProperty","mergeIterables","observedAttributes","keys","__attributeReflections","styleTexts","shadowOptions","mode","_dev_only_definedProperties","_dev_only_definedMethods","_dev_only_definedEvents","customElements","define","Array","isArray","alias","Alias","property","_ref2","_ref3","get","set","static","isStatic","private","isPrivate","add","_options","assign","attrName","replace","char","toLowerCase","attributeNameForProperty","getAttribute","oldValue","attrValue","removeAttribute","setAttribute","_requestRender","init","initialValue","requestAnimationFrame","method","_value","_ref4","bound","bind","event","_ref5","_ref6","eventInit","Error","freeze","emit","detail","dispatchEvent","CustomEvent","target","propName","propValue","defineProperty","configurable","list1","list2","newList","item","_defineProperty","obj","key","enumerable","writable","_hasRequestedRender","WeakMap","_connectedCallbackCalled","_attributeChangedCallbackStopped","_attributesBeenSet","NextElement","HTMLElement","super","_markConnectedCallbackCalled","connectedCallback","_render","has","attributeChangedCallback","attrRef","isConnected","Promise","resolve","then","supports","supportsAdoptingStyleSheets","window","ShadowRoot","Document","CSSStyleSheet"],"sourceRoot":""}
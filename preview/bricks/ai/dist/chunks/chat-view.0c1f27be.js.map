{"version":3,"file":"chunks/chat-view.0c1f27be.js","mappings":"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","sources":["webpack:///./src/chat-view/index.tsx"],"sourcesContent":["import React, { forwardRef, useEffect } from \"react\";\nimport { EventEmitter, createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport {\n  ChatViewContext,\n  QuickAnswerConfig,\n  snippet,\n} from \"./ChatViewContext.js\";\nimport { MessageList } from \"./components/MessageList.js\";\nimport { useChatViewInfo } from \"./hooks/useChatViewInfo.js\";\nimport { SessionList } from \"./components/SessionList.js\";\nimport { SearchInput, SearchInputRef } from \"./components/SearchInput.js\";\nimport \"@next-core/theme\";\nimport \"./host-context.css\";\nimport \"./index.css\";\nimport { commandBrickConf } from \"./ChatViewContext\";\nimport { UseBrickConf } from \"@next-core/types\";\nimport { ChatBody } from \"./ChatService.js\";\n\nconst { defineElement, property, method, event } = createDecorators();\n\ntype InputToolbarBrick = { useBrick: UseBrickConf };\n\nexport interface ChatViewProps {\n  agentId: string;\n  robotId: string;\n  sessionId?: string;\n  readonly?: boolean;\n  showAvatar?: boolean;\n  showSessionList?: boolean;\n  showLike?: boolean;\n  showShare?: boolean;\n  useSpiltWord?: boolean;\n  quickAnswerConfig?: QuickAnswerConfig;\n  snippetList?: snippet[];\n  enterInterval?: number;\n  debug?: boolean;\n  commandBricks?: commandBrickConf;\n  answerLanguage?: string;\n  inputToolbarBrick?: InputToolbarBrick;\n  showToolCalls?: boolean;\n  onSessionIdChange: (sessionId: string | undefined) => void;\n  onRobotIdChange: (robotId: string | undefined) => void;\n  onQaFinish: (sessionId: string | undefined) => void;\n}\n\nexport function LegacyChatViewComponent(\n  {\n    agentId,\n    robotId,\n    sessionId,\n    showAvatar,\n    showSessionList = true,\n    readonly = false,\n    showLike = true,\n    showShare = true,\n    quickAnswerConfig,\n    snippetList,\n    enterInterval,\n    debug = false,\n    useSpiltWord = false,\n    commandBricks,\n    answerLanguage,\n    inputToolbarBrick,\n    showToolCalls,\n    onSessionIdChange,\n    onRobotIdChange,\n    onQaFinish,\n  }: ChatViewProps,\n  ref: React.Ref<SearchInputRef>\n) {\n  const {\n    sessionEnd,\n    sessionLoading,\n    activeSessionId,\n    msgEnd,\n    msgLoading,\n    msgList,\n    sessionList,\n    loading,\n    chatting,\n    searchStr,\n    toolNames,\n    setAgent,\n    handleIsLike,\n    handleChat,\n    stopChat,\n    createSession,\n    deleteSession,\n    updateSession,\n    checkSession,\n    setSearchStr,\n    querySessionHistory,\n  } = useChatViewInfo({\n    agentId,\n    robotId,\n    sessionId,\n    enterInterval,\n    debug,\n    answerLanguage,\n    useSpiltWord,\n    showToolCalls,\n  });\n\n  useEffect(() => {\n    if (activeSessionId) {\n      onSessionIdChange(activeSessionId);\n      onRobotIdChange(\n        sessionList.find((item) => item.conversationId === activeSessionId)\n          ?.robotId\n      );\n    }\n  }, [activeSessionId, onRobotIdChange, onSessionIdChange, sessionList]);\n\n  useEffect(() => {\n    if (!chatting && activeSessionId) {\n      // 当此时存在activeSessionId，且chatting是从true变为false时触发，不需要加入activeSessionId的依赖判断\n      onQaFinish(activeSessionId);\n    }\n  }, [chatting]);\n\n  return (\n    <ChatViewContext.Provider\n      value={{\n        sessionEnd,\n        sessionLoading,\n        activeSessionId,\n        sessionList,\n        msgEnd,\n        msgLoading,\n        msgList,\n        chatting,\n        loading,\n        searchStr,\n        showLike,\n        showShare,\n        readonly,\n        quickAnswerConfig,\n        snippetList,\n        commandBricks,\n        showToolCalls,\n        toolNames,\n        setAgent,\n        handleIsLike,\n        handleChat,\n        stopChat,\n        createSession,\n        deleteSession,\n        updateSession,\n        checkSession,\n        setSearchStr,\n        querySessionHistory,\n      }}\n    >\n      <div className=\"chat-view-container\">\n        {showSessionList && (\n          <div className=\"chat-view-selector\">\n            <SessionList />\n          </div>\n        )}\n        <div className=\"chat-view-content\">\n          <MessageList showAvatar={showAvatar} />\n          {!readonly && (\n            <SearchInput inputToolbarBrick={inputToolbarBrick} ref={ref} />\n          )}\n        </div>\n      </div>\n    </ChatViewContext.Provider>\n  );\n}\n\nexport const ChatViewComponent = forwardRef(LegacyChatViewComponent);\n\n/**\n * AI 对话终端\n */\nexport\n@defineElement(\"ai.chat-view\", {\n  // shadow 模式下，会导致 useBrick 样式丢失\n  // 如：commandBricks 配置 cmdb-instances.instance-list\n  shadowOptions: false,\n})\nclass ChatView extends ReactNextElement {\n  @property()\n  accessor sessionId: string | undefined;\n\n  /**\n   * 智能体id\n   */\n  @property()\n  accessor agentId!: string;\n\n  /**\n   * 机器人id\n   */\n  @property()\n  accessor robotId!: string;\n\n  /**\n   * 指定智能体回答代码时所使用的语言\n   */\n  @property()\n  accessor answerLanguage: string | undefined;\n\n  /**\n   * 是否为debug模式\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor debug: boolean | undefined;\n\n  /**\n   * 是否展示对话用户头像\n   * @default true\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor showAvatar: boolean | undefined;\n\n  /**\n   * 是否展示历史会话信息\n   * @default true\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor showSessionList: boolean | undefined;\n\n  /**\n   * 只读模式\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor readonly: boolean | undefined;\n\n  /**\n   * 是否展示点赞能力\n   * @default true\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor showLike: boolean | undefined;\n\n  /**\n   * 是否展示分享能力\n   * @default true\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor showShare: boolean | undefined;\n\n  /**\n   * 是否开启前端分词\n   * @default false\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor useSpiltWord: boolean | undefined;\n\n  /**\n   * 输入间隔，设置为 -1 使用新的方式对大段消息进行模拟打字效果节流输出\n   *\n   * @default 50\n   */\n  @property({\n    type: Number,\n  })\n  accessor enterInterval: number | undefined;\n\n  /**\n   * 快速入口列表\n   */\n  @property({\n    attribute: false,\n  })\n  accessor quickAnswerConfig: QuickAnswerConfig | undefined;\n\n  /**\n   * 常用语列表\n   */\n  @property({\n    attribute: false,\n  })\n  accessor snippetList: snippet[] | undefined;\n\n  /**\n   * 自定义语言配置\n   */\n  @property({\n    attribute: false,\n  })\n  accessor commandBricks: commandBrickConf | undefined;\n\n  /**\n   * 输入框工具栏 useBrick\n   */\n  @property({\n    attribute: false,\n  })\n  accessor inputToolbarBrick: InputToolbarBrick | undefined;\n\n  /**\n   * 是否显示工具调用过程\n   */\n  @property({ type: Boolean })\n  accessor showToolCalls: boolean | undefined;\n\n  #ref = React.createRef<SearchInputRef>();\n\n  @event({ type: \"sessionId.change\" })\n  accessor #sessionIdChange!: EventEmitter<string | undefined>;\n\n  #handleSessionIdChange = (activeSessionId: string | undefined) => {\n    this.#sessionIdChange.emit(activeSessionId);\n  };\n\n  @event({ type: \"robotId.change\" })\n  accessor #robotIdChange!: EventEmitter<string | undefined>;\n\n  #handleRobotIdChange = (robotId: string | undefined) => {\n    this.#robotIdChange.emit(robotId);\n  };\n\n  @event({ type: \"qa.finish\" })\n  accessor #qaFinish!: EventEmitter<string | undefined>;\n\n  #handleQaFinish = (activeSessionId: string | undefined) => {\n    this.#qaFinish.emit(activeSessionId);\n  };\n\n  /**\n   *\n   * @description 调用方法进行提问\n   */\n  @method()\n  insertQuestion(args: { value: string }): void {\n    const { value } = args;\n    if (!value) return;\n    this.#ref.current?.handleInsertQuestion(value);\n  }\n\n  /**\n   * @description 外部提问\n   */\n  @method()\n  sendMsg(msg: string | ChatBody): void {\n    this.#ref.current?.sendMsg(msg);\n  }\n\n  render() {\n    return (\n      <ChatViewComponent\n        agentId={this.agentId}\n        robotId={this.robotId}\n        debug={this.debug}\n        sessionId={this.sessionId}\n        readonly={this.readonly}\n        showAvatar={this.showAvatar}\n        showSessionList={this.showSessionList}\n        showLike={this.showLike}\n        showShare={this.showShare}\n        useSpiltWord={this.useSpiltWord}\n        quickAnswerConfig={this.quickAnswerConfig}\n        snippetList={this.snippetList}\n        enterInterval={this.enterInterval}\n        commandBricks={this.commandBricks}\n        answerLanguage={this.answerLanguage}\n        inputToolbarBrick={this.inputToolbarBrick}\n        showToolCalls={this.showToolCalls}\n        onSessionIdChange={this.#handleSessionIdChange}\n        onRobotIdChange={this.#handleRobotIdChange}\n        onQaFinish={this.#handleQaFinish}\n        ref={this.#ref}\n      />\n    );\n  }\n}\n"],"names":["defineElement","property","method","event","createDecorators","LegacyChatViewComponent","_ref","ref","agentId","robotId","sessionId","showAvatar","showSessionList","readonly","showLike","showShare","quickAnswerConfig","snippetList","enterInterval","debug","useSpiltWord","commandBricks","answerLanguage","inputToolbarBrick","showToolCalls","onSessionIdChange","onRobotIdChange","onQaFinish","sessionEnd","sessionLoading","activeSessionId","msgEnd","msgLoading","msgList","sessionList","loading","chatting","searchStr","toolNames","setAgent","handleIsLike","handleChat","stopChat","createSession","deleteSession","updateSession","checkSession","setSearchStr","querySessionHistory","useChatViewInfo","useEffect","_sessionList$find","find","item","conversationId","React","ChatViewContext","Provider","value","className","SessionList","MessageList","SearchInput","ChatViewComponent","forwardRef","_ChatView","_A","WeakMap","_B","_C","_D","_E","_F","_G","_H","_I","_J","_K","_L","_M","_N","_O","_P","_Q","_ref2","_R","_ChatView_brand","WeakSet","_handleSessionIdChange","_S","_handleRobotIdChange","_T","_handleQaFinish","ChatView","ReactNextElement","constructor","arguments","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_initProto","_init_sessionId","_init_extra_sessionId","_init_agentId","_init_extra_agentId","_init_robotId","_init_extra_robotId","_init_answerLanguage","_init_extra_answerLanguage","_init_debug","_init_extra_debug","_init_showAvatar","_init_extra_showAvatar","_init_showSessionList","_init_extra_showSessionList","_init_readonly","_init_extra_readonly","_init_showLike","_init_extra_showLike","_init_showShare","_init_extra_showShare","_init_useSpiltWord","_init_extra_useSpiltWord","_init_enterInterval","_init_extra_enterInterval","_init_quickAnswerConfig","_init_extra_quickAnswerConfig","_init_snippetList","_init_extra_snippetList","_init_commandBricks","_init_extra_commandBricks","_init_inputToolbarBrick","_init_extra_inputToolbarBrick","_init_showToolCalls","_init_extra_showToolCalls","_init_sessionIdChange","_init_extra_sessionIdChange","_classPrivateGetter","this","_get_sessionIdChange","emit","_init_robotIdChange","_init_extra_robotIdChange","_get_robotIdChange","_init_qaFinish","_init_extra_qaFinish","_get_qaFinish","_classPrivateFieldGet","v","_classPrivateFieldSet","insertQuestion","args","_classPrivateFieldGet2","current","handleInsertQuestion","sendMsg","msg","_classPrivateFieldGet3","render","_ChatView2","e","_set_sessionIdChange","_set_robotIdChange","_set_qaFinish","c","_initClass","_applyDecs","shadowOptions","type","Boolean","Number","attribute","o","_","has","_checkInRHS"],"sourceRoot":""}
{"version":3,"file":"chunks/2742.6a07731b.js","mappings":"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","sources":["webpack:///./src/chat-view/ChatViewContext.ts","webpack:///./src/chat-view/components/Loading.tsx","webpack:///./src/chat-view/components/MessageItem/Avatar.tsx","webpack:///./src/chat-view/components/MessageItem/GuideItem.tsx","webpack:///./src/chat-view/components/MessageItem/Markdown/CodeBlock/ProgressText.tsx","webpack:///./src/chat-view/components/MessageItem/MsgItemContext.ts","webpack:///./src/chat-view/components/MessageItem/Markdown/CodeBlock/CustomComponent.tsx","webpack:///./src/chat-view/components/MessageItem/Markdown/CodeBlock/index.tsx","webpack:///./src/chat-view/components/MessageItem/Markdown/index.tsx","webpack:///./src/chat-view/components/MessageItem/TableItem.tsx","webpack:///./src/chat-view/components/MessageItem/TextItem.tsx","webpack:///./src/chat-view/components/MessageItem/Toolbar.tsx","webpack:///./src/chat-view/components/MessageItem/Time.tsx","webpack:///./src/chat-view/components/MessageItem/ToolCalls.tsx","webpack:///./src/chat-view/components/MessageItem/index.tsx","webpack:///./src/chat-view/components/QuickAnswerList/index.tsx","webpack:///./src/chat-view/components/StopBtn.tsx","webpack:///./src/chat-view/components/MessageList.tsx","webpack:///./src/chat-view/components/utils/calculateAutoSizeStyle.ts","webpack:///./src/chat-view/components/SearchInput.tsx","webpack:///./src/chat-view/components/SessionList.tsx","webpack:///./src/chat-view/ChatService.ts","webpack:///./src/chat-view/hooks/useChatViewInfo.ts","webpack:///./src/chat-view/components/MessageItem/Markdown/CodeBlock/CodeBlock.shadow.css","webpack:///./src/chat-view/components/MessageItem/Markdown/markdown.shadow.css","webpack:///./src/chat-view/components/QuickAnswerList/quickAnswerList.shadow.css","webpack:///./src/chat-view/components/loading.shadow.css","webpack:///./src/chat-view/host-context.css","webpack:///./src/chat-view/index.css","webpack:///./src/chat-view/styles.shadow.css","webpack:///./src/chat-view/host-context.css?1beb","webpack:///./src/chat-view/index.css?7225"],"sourcesContent":["import { createContext, useContext } from \"react\";\nimport { AgentDetailItem } from \"./components/QuickAnswerList/index.js\";\nimport { ChatBody, SessionItem } from \"./ChatService.js\";\nimport { UseBrickConf } from \"@next-core/types\";\n\nexport type Role = \"guide\" | \"user\" | \"assistant\" | \"tool\";\n\nexport type commandBrickConf = Record<\n  string,\n  { useBrick: UseBrickConf; showOriginData?: boolean }\n>;\n\nexport interface MessageItemContent {\n  type: \"guide\" | \"text\" | \"markdown\" | \"table\" | \"load\";\n  text: string;\n  examplePrompts?: string[];\n}\n\nexport interface MessageItem {\n  role: Role;\n  content: MessageItemContent;\n  created?: number | string;\n  key: string;\n  conversationId?: string;\n  taskId?: string;\n  agentId?: string;\n  robotId?: string;\n  chatting?: boolean;\n  tag?: {\n    isLike?: boolean;\n  };\n  type?: string;\n  toolCalls?: ToolCall[];\n}\n\nexport interface ToolCall {\n  id: string;\n  type: \"function\";\n  function: ToolCallFunction;\n  response?: string;\n  failed?: boolean;\n}\n\nexport interface ToolCallFunction {\n  name: string;\n  arguments: string;\n}\n\nexport interface QuickAnswerConfig {\n  tip: string;\n  list: AgentDetailItem[];\n}\n\nexport interface snippet {\n  content: string;\n  name: string;\n}\n\ninterface ChatViewContextProps {\n  sessionEnd: boolean;\n  sessionLoading: boolean;\n  activeSessionId?: string;\n  sessionList: SessionItem[];\n  msgEnd: boolean;\n  msgLoading: boolean;\n  msgList: MessageItem[];\n  loading: boolean;\n  chatting: boolean;\n  searchStr: string;\n  showLike: boolean;\n  showShare: boolean;\n  readonly: boolean;\n  quickAnswerConfig?: QuickAnswerConfig;\n  snippetList?: snippet[];\n  commandBricks?: commandBrickConf;\n  showToolCalls?: boolean;\n  toolNames: Map<string, string | null>;\n  setAgent: (id: string) => void;\n  handleIsLike: (id: string, isLike: boolean) => Promise<boolean>;\n  handleChat: (str: string | ChatBody) => void;\n  stopChat: () => void;\n  checkSession: (id?: string, isInit?: boolean) => void;\n  createSession: () => void;\n  deleteSession: (ids: string[]) => Promise<boolean>;\n  updateSession: (id: string, data: Partial<SessionItem>) => Promise<boolean>;\n  setSearchStr: (str: string) => void;\n  querySessionHistory: (limit?: number, query?: string) => void;\n}\n\nexport const ChatViewContext = createContext<ChatViewContextProps>(\n  {} as ChatViewContextProps\n);\n\nexport const useChatViewContext = (): ChatViewContextProps =>\n  useContext(ChatViewContext);\n","import React from \"react\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport { wrapBrick } from \"@next-core/react-element\";\n\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\n\nexport function MessageListLoading() {\n  return <div className=\"message-list-loading-wrapper\"></div>;\n}\n\nexport function ChatItemLoading() {\n  return (\n    <div className=\"chart-item-loading-wrapper\">\n      <div className=\"load\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\n\nexport function CommonLoading() {\n  return (\n    <div className=\"common-loading-wrapper\">\n      <WrappedIcon icon=\"loading\" lib=\"antd\" spinning />\n    </div>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useChatViewContext, type Role } from \"../../ChatViewContext.js\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport { wrapBrick } from \"@next-core/react-element\";\n\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\n\nexport function Avatar({\n  role,\n  agentId,\n}: {\n  role: Role;\n  agentId?: string;\n}): React.ReactNode {\n  const isUser = useMemo(() => role === \"user\", [role]);\n  const { quickAnswerConfig } = useChatViewContext();\n\n  const agentList = useMemo(\n    () => quickAnswerConfig?.list ?? [],\n    [quickAnswerConfig]\n  );\n\n  const matchAgent = useMemo(() => {\n    return agentList.find((item) => item.id === agentId);\n  }, [agentList, agentId]);\n\n  return !isUser && matchAgent ? (\n    <WrappedIcon\n      className=\"avatar\"\n      {...matchAgent.icon}\n      style={{\n        color: `var(--theme-${matchAgent.icon.color}-color)`,\n        background: `var(--theme-${matchAgent.icon.color}-background)`,\n      }}\n    />\n  ) : (\n    <div className={`avatar ${isUser ? \"user\" : \"robot\"}`} />\n  );\n}\n","import React from \"react\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport type { Link, LinkProps } from \"@next-bricks/basic/link\";\n\ninterface GuideItemProps {\n  text: string;\n  prompts?: string[];\n}\n\nconst WrappedLink = wrapBrick<Link, LinkProps>(\"eo-link\");\n\nexport function GuideItem({ text, prompts }: GuideItemProps) {\n  return (\n    <div className=\"guide-item\">\n      {text}\n      <div className=\"prompts-list\">\n        {prompts\n          ? prompts.map((item, index) => (\n              <WrappedLink key={index}>{item}</WrappedLink>\n            ))\n          : null}\n      </div>\n    </div>\n  );\n}\n","import React, { useMemo } from \"react\";\n\nexport function ProgressText({ text }: { text: string }): React.ReactNode {\n  const renderText = useMemo(() => {\n    // 文本末尾存在 \\n ```, 会导致在渲染快结束的时候突然有一个换行，在结束的时候，换行被干掉，导致页面闪动的情况\n    // 所以在这里计算，如果文本将要关闭，则默认不然 \\n ``` 显示\n    const newText = text.replace(/\\n[`]{0,3}$/, \"\");\n    return newText;\n  }, [text]);\n\n  return <div className=\"progress-text\">{renderText}</div>;\n}\n","import { createContext, useContext } from \"react\";\nimport { MessageItem } from \"../../ChatViewContext\";\n\nexport const MsgItemContext = createContext<MessageItem>({} as MessageItem);\n\nexport const useMsgItemContext = (): MessageItem => useContext(MsgItemContext);\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useMsgItemContext } from \"../../MsgItemContext.js\";\nimport { ReactUseMultipleBricks } from \"@next-core/react-runtime\";\nimport { useChatViewContext } from \"../../../../ChatViewContext.js\";\n\ninterface UseDataProps {\n  text: string;\n  chatting: boolean;\n}\n\nfunction useData({ text, chatting }: UseDataProps) {\n  const cahceTextRef = useRef<string>(\"\");\n  const [isEnd, setIsEnd] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [parseData, setParseData] = useState<any>();\n\n  useEffect(() => {\n    if (cahceTextRef.current !== text) {\n      cahceTextRef.current = text;\n      let data: any;\n      try {\n        data = JSON.parse(text);\n      } catch {\n        setIsError(true);\n        return;\n      }\n      setParseData(data);\n    }\n  }, [text]);\n\n  useEffect(() => {\n    if (chatting) {\n      if (text.match(/\\n[`]{0,3}$/)) {\n        setIsEnd(true);\n      }\n    } else {\n      setIsEnd(true);\n    }\n  }, [text, chatting]);\n\n  return {\n    parseData,\n    isError: isEnd && isError,\n  };\n}\n\nexport default function CustomComponent({\n  text,\n  language,\n}: {\n  text: string;\n  language: string;\n}) {\n  const { commandBricks } = useChatViewContext();\n  const { chatting, agentId, robotId, conversationId, taskId } =\n    useMsgItemContext();\n\n  const { parseData, isError } = useData({\n    text,\n    chatting: !!chatting,\n  });\n\n  const commandBrickConf = useMemo(() => {\n    const config = commandBricks?.[language];\n    if (config) {\n      const data = {\n        data: parseData,\n        agentId,\n        robotId,\n        conversationId,\n        taskId,\n      };\n      return {\n        component: (\n          <ReactUseMultipleBricks useBrick={config.useBrick} data={data} />\n        ),\n        ...config,\n      };\n    }\n    return {\n      component: null,\n      showOriginData: true,\n    };\n  }, [\n    commandBricks,\n    language,\n    parseData,\n    agentId,\n    robotId,\n    conversationId,\n    taskId,\n  ]);\n\n  return (\n    <div className=\"custom-component-wrapper not-prose\">\n      {commandBrickConf?.showOriginData ? (\n        <>\n          <div className=\"params\">\n            <div className=\"params-tip\">【原始命令】: </div>\n            <pre>\n              <code>{text}</code>\n            </pre>\n          </div>\n          {isError ? (\n            <div className=\"error-tip\">【执行失败】</div>\n          ) : (\n            <>\n              <div className=\"result-tip\">【执行结果】:</div>\n              <div className=\"custom-component\">\n                {commandBrickConf.component}\n              </div>\n            </>\n          )}\n        </>\n      ) : (\n        commandBrickConf.component\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useNodeViewContext } from \"@prosemirror-adapter/react\";\nimport { ProgressText } from \"./ProgressText.js\";\nimport CustomComponent from \"./CustomComponent.js\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport { GeneralIcon, GeneralIconProps } from \"@next-bricks/icons/general-icon\";\nimport { Tooltip, message } from \"antd\";\nimport { useChatViewContext } from \"../../../../ChatViewContext\";\n\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\n\nconst copyIcon: GeneralIconProps = {\n  lib: \"antd\",\n  icon: \"copy\",\n  theme: \"outlined\",\n};\n\nexport const CodeBlock = () => {\n  const [language, setLanguage] = useState(\"\");\n  const { contentRef, node } = useNodeViewContext();\n  const { commandBricks } = useChatViewContext();\n  const [messageApi, contextHolder] = message.useMessage();\n\n  const handleCopy = async () => {\n    const text = node.content.firstChild?.text;\n    try {\n      if (text) {\n        await navigator.clipboard.writeText(text);\n        messageApi.success(\"复制成功\");\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\"Failed to copy: \", err);\n      messageApi.error(\"复制失败\");\n    }\n  };\n\n  const defaultContent = useMemo(\n    () => (\n      <div className=\"default-container\">\n        {contextHolder}\n        <pre spellCheck={false}>\n          <code ref={contentRef} style={{ position: \"relative\" }}>\n            <div className=\"default-toolbar-container\">\n              <Tooltip title=\"复制\" color=\"#474747\" arrow={false}>\n                <WrappedIcon\n                  {...(copyIcon as GeneralIconProps)}\n                  onClick={handleCopy}\n                  style={{ cursor: \"pointer\" }}\n                />\n              </Tooltip>\n            </div>\n          </code>\n        </pre>\n      </div>\n    ),\n    [contentRef]\n  );\n\n  const renderContent = useMemo(() => {\n    if (!node.firstChild?.text) return null;\n    const text = node.firstChild?.textContent;\n    const lang = language || node.attrs?.language;\n    if (commandBricks && commandBricks[lang]) {\n      return <CustomComponent text={text} language={lang} />;\n    }\n    switch (lang) {\n      case \"easy_cmd_progress\":\n        return <ProgressText text={text} />;\n      default:\n        return defaultContent;\n    }\n  }, [node, language, defaultContent, commandBricks]);\n\n  useEffect(() => {\n    if (!language) {\n      const {\n        attrs: { language },\n      } = node;\n      if (language) {\n        setLanguage(language);\n      }\n    }\n  }, [node, language]);\n\n  return renderContent;\n};\n","import React, { useEffect } from \"react\";\nimport {\n  defaultValueCtx,\n  Editor,\n  rootCtx,\n  editorViewOptionsCtx,\n} from \"@milkdown/core\";\nimport { EditorView } from \"prosemirror-view\";\nimport { Milkdown, useEditor, MilkdownProvider } from \"@milkdown/react\";\nimport { commonmark, codeBlockSchema } from \"@milkdown/preset-commonmark\";\nimport { nord } from \"@milkdown/theme-nord\";\nimport { gfm } from \"@milkdown/preset-gfm\";\nimport { prism } from \"@milkdown/plugin-prism\";\nimport { $view, replaceAll } from \"@milkdown/utils\";\nimport {\n  ProsemirrorAdapterProvider,\n  useNodeViewFactory,\n} from \"@prosemirror-adapter/react\";\nimport { CodeBlock } from \"./CodeBlock/index.js\";\n\nexport function MarkdownItem({ text }: { text: string }) {\n  return (\n    <div className=\"markdown-item\">\n      <MilkdownProvider>\n        <ProsemirrorAdapterProvider>\n          <MarkdownDisplay value={text} />\n        </ProsemirrorAdapterProvider>\n      </MilkdownProvider>\n    </div>\n  );\n}\n\nexport function MarkdownDisplay({ value }: { value: string }): React.ReactNode {\n  const nodeViewFactory = useNodeViewFactory();\n\n  const handleClick = (view: EditorView, pos: number) => {\n    const found = view.state.tr.doc.nodeAt(pos);\n    const mark = found?.marks.find((m) => m.type.name === \"link\");\n    if (mark) {\n      const href = mark?.attrs.href;\n      window.open(href, \"_blank\");\n    }\n    return true;\n  };\n\n  const transformOpenAIToCodeBlock = (str: string) => {\n    if (/<tool_call>(.+)<\\/tool_call>/.test(str)) {\n      return str.replace(\n        /<tool_call>(.+?)<\\/tool_call>/g,\n        (_, $1) => `\\n\\`\\`\\`easy_cmd_tool_call\\n${$1}\\n\\`\\`\\`\\n`\n      );\n    }\n    return str;\n  };\n\n  const { get } = useEditor((root) => {\n    return Editor.make()\n      .config((ctx) => {\n        ctx.set(rootCtx, root);\n        ctx.update(editorViewOptionsCtx, (prev: any) => ({\n          ...prev,\n          editable: () => false,\n          handleClickOn: (view: EditorView, pos: number) =>\n            handleClick(view, pos),\n        }));\n        const realValue = transformOpenAIToCodeBlock(value);\n        realValue && ctx.set(defaultValueCtx, realValue);\n        //拦截link的默认点击事件以支持通过新窗口弹出页面，如果后续有其他的定制化需求可以改用custom widget的方式写link widget\n        const observer = new MutationObserver(() => {\n          const links = Array.from(root.querySelectorAll(\"a\"));\n          links.forEach((link) => {\n            link.onclick = () => false;\n          });\n        });\n        observer.observe(root, {\n          childList: true,\n          subtree: true,\n        });\n      })\n      .config(nord)\n      .use(prism)\n      .use(gfm)\n      .use(commonmark)\n      .use(\n        $view(codeBlockSchema.node, () =>\n          nodeViewFactory({ component: CodeBlock })\n        )\n      );\n  }, []);\n\n  useEffect(() => {\n    if (value !== undefined) {\n      const realValue = transformOpenAIToCodeBlock(value);\n      get()?.action(replaceAll(realValue));\n    }\n  }, [get, value]);\n\n  return <Milkdown />;\n}\n","import React from \"react\";\n// import { wrapBrick } from \"@next-core/react-element\";\n// import type {\n//   EoNextTable,\n//   NextTableComponentProps,\n// } from \"@next-bricks/advanced/next-table\";\n\ninterface MarkdownItemProps {\n  text: string;\n}\n\n// const WrappedNextTable = wrapBrick<EoNextTable, NextTableComponentProps>(\n//   \"eo-next-table\"\n// );\n\nexport function TableItem({ text }: MarkdownItemProps) {\n  // const parseContent = useMemo((): NextTableComponentProps => {\n  //   let content: NextTableComponentProps;\n  //   try {\n  //     content = JSON.parse(text);\n  //   } catch {\n  //     content = {} as NextTableComponentProps;\n  //   }\n  //   return content;\n  // }, [text]);\n\n  // return (\n  //   <div className=\"table-item\">\n  //     <WrappedNextTable pagination={false} {...parseContent} />\n  //   </div>\n  // );\n  return <div className=\"table-item\">{text}</div>;\n}\n","import React from \"react\";\n\ninterface TextItem {\n  text: string;\n}\n\nexport function TextItem({ text }: TextItem) {\n  return <div className=\"text-item\">{text}</div>;\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport type { copyToClipboard as _copyToClipboard } from \"@next-bricks/basic/data-providers/copy-to-clipboard\";\nimport type { showNotification as _showNotification } from \"@next-bricks/basic/data-providers/show-notification/show-notification\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport { EoTooltip, ToolTipProps } from \"@next-bricks/basic/tooltip\";\nimport { MessageItem, useChatViewContext } from \"../../ChatViewContext\";\nimport { unwrapProvider } from \"@next-core/utils/general\";\nimport classNames from \"classnames\";\nimport { useMsgItemContext } from \"./MsgItemContext\";\nimport { getBasePath } from \"@next-core/runtime\";\n\nconst WrapperIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\nconst WrappedToolTip = wrapBrick<EoTooltip, ToolTipProps>(\"eo-tooltip\");\nconst copyToClipboard = unwrapProvider<typeof _copyToClipboard>(\n  \"basic.copy-to-clipboard\"\n);\nconst showNotification = unwrapProvider<typeof _showNotification>(\n  \"basic.show-notification\"\n);\n\nexport function Toolbar({\n  role,\n  content,\n  chatting,\n  taskId,\n  tag,\n}: MessageItem): React.ReactNode {\n  const isAssistant = useMemo(\n    () => role === \"assistant\" && content.type !== \"load\",\n    [role, content.type]\n  );\n  const isUser = useMemo(() => role === \"user\", [role]);\n\n  const isChattingItem = useMemo(() => chatting, [chatting]);\n  const {\n    showLike,\n    chatting: globalChatting,\n    showShare,\n    readonly,\n    handleIsLike,\n    setSearchStr,\n  } = useChatViewContext();\n  const { agentId, robotId, conversationId } = useMsgItemContext();\n\n  const handleCopy = () => {\n    copyToClipboard(content.text)\n      .then(() => showNotification({ type: \"success\", message: \"复制成功\" }))\n      .catch(() => showNotification({ type: \"error\", message: \"复制失败\" }));\n  };\n\n  const handleRequestion = () => {\n    setSearchStr(content.text);\n  };\n\n  const handleShare = () => {\n    copyToClipboard(\n      `${location.origin}${getBasePath()}ai-center/share?agentId=${agentId}&robotId=${robotId}&conversationId=${conversationId}`\n    )\n      .then(() =>\n        showNotification({ type: \"success\", message: \"会话链接已复制到剪贴板\" })\n      )\n      .catch(() =>\n        showNotification({ type: \"error\", message: \"会话链接复制失败\" })\n      );\n  };\n\n  const handleLikeOrIsLike = useCallback(\n    async (islike: boolean) => {\n      const result = await handleIsLike(taskId!, islike);\n      showNotification({\n        message: `${islike ? \"点赞\" : \"操作\"}${result ? \"成功\" : \"失败\"}`,\n        type: result ? \"success\" : \"error\",\n      });\n    },\n    [taskId, handleIsLike]\n  );\n\n  return isAssistant && !isChattingItem ? (\n    <div className=\"message-toolbar\">\n      {showLike && !readonly && (\n        <>\n          <WrappedToolTip content=\"点赞\" hoist>\n            <WrapperIcon\n              className={classNames(\"like\", {\n                active: tag?.isLike === true,\n              })}\n              lib=\"easyops\"\n              icon=\"like\"\n              onClick={() => handleLikeOrIsLike(true)}\n            />\n          </WrappedToolTip>\n          <WrappedToolTip content=\"还不够好\" hoist>\n            <WrapperIcon\n              className={classNames(\"unlike\", {\n                active: tag?.isLike === false,\n              })}\n              lib=\"easyops\"\n              icon=\"unlike\"\n              onClick={() => handleLikeOrIsLike(false)}\n            />\n          </WrappedToolTip>\n          <div className=\"split\" />\n        </>\n      )}\n      <WrappedToolTip content=\"点击复制\" hoist>\n        <WrapperIcon lib=\"antd\" icon=\"copy\" onClick={handleCopy} />\n      </WrappedToolTip>\n      {showShare && (\n        <WrappedToolTip content=\"点击分享\" hoist>\n          <WrapperIcon lib=\"antd\" icon=\"share-alt\" onClick={handleShare} />\n        </WrappedToolTip>\n      )}\n    </div>\n  ) : !readonly && isUser && !globalChatting ? (\n    <div className=\"message-toolbar\">\n      <WrappedToolTip content=\"点击再次提问\" hoist>\n        <WrapperIcon lib=\"antd\" icon=\"edit\" onClick={handleRequestion} />\n      </WrappedToolTip>\n    </div>\n  ) : null;\n}\n","import moment from \"moment\";\nimport React from \"react\";\n\nexport function Time({ time }: { time?: string | number }) {\n  return (\n    <div className=\"time\">\n      {time\n        ? typeof time === \"string\"\n          ? time\n          : moment(time).format(\"YYYY-MM-DD HH:mm:ss\")\n        : null}\n    </div>\n  );\n}\n","import React, { useMemo, useState } from \"react\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport type { Tag, TagProps } from \"@next-bricks/basic/tag\";\nimport type { Button, ButtonProps } from \"@next-bricks/basic/button\";\nimport classNames from \"classnames\";\nimport { JSON_SCHEMA, safeDump } from \"js-yaml\";\nimport { useChatViewContext, type ToolCall } from \"../../ChatViewContext\";\n\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\nconst WrappedButton = wrapBrick<Button, ButtonProps>(\"eo-button\");\nconst WrappedTag = wrapBrick<Tag, TagProps>(\"eo-tag\");\n\nexport interface ToolCallsProps {\n  toolCalls: ToolCall[];\n}\n\ninterface ProcessedToolCall {\n  id: string;\n  functionName: string;\n  processedArguments: ProcessedValue;\n  processedResponse?: ProcessedValue;\n  args: string;\n  response?: string;\n  failed?: boolean;\n}\n\ninterface ProcessedValue {\n  ok: boolean;\n  data?: unknown;\n  error?: unknown;\n}\n\ntype ProcessStatus = \"processing\" | \"ok\" | \"failed\";\n\nexport function ToolCalls({ toolCalls }: ToolCallsProps) {\n  const [expanded, setExpanded] = useState(false);\n\n  const processedToolCalls = useMemo(() => {\n    return toolCalls.map<ProcessedToolCall>(\n      ({ id, function: func, response }) => {\n        let processedArguments: ProcessedValue;\n        try {\n          const data = JSON.parse(func.arguments);\n          processedArguments = {\n            ok: true,\n            data,\n          };\n        } catch {\n          // Fallback to the original arguments\n          processedArguments = {\n            ok: true,\n            data: func.arguments,\n          };\n        }\n\n        let processedResponse: ProcessedValue | undefined;\n        if (typeof response === \"string\") {\n          let data: unknown;\n          try {\n            data = JSON.parse(response);\n            processedResponse = {\n              ok: true,\n              data,\n            };\n          } catch {\n            // Fallback to the original response\n            processedResponse = {\n              ok: true,\n              data: response,\n            };\n          }\n        } else {\n          processedResponse = {\n            ok: false,\n          };\n        }\n\n        return {\n          id,\n          functionName: func.name,\n          processedArguments,\n          processedResponse,\n          args: func.arguments,\n          response,\n        };\n      }\n    );\n  }, [toolCalls]);\n\n  const processStatus = useMemo(() => {\n    let status: ProcessStatus = \"ok\";\n    for (const toolCall of processedToolCalls) {\n      if (toolCall.processedResponse === undefined) {\n        status = \"processing\";\n        break;\n      }\n      if (toolCall.processedResponse.ok === false) {\n        status = \"failed\";\n      }\n    }\n    return status;\n  }, [processedToolCalls]);\n\n  return (\n    <div className=\"tool-calls\">\n      {expanded ? (\n        <>\n          <div className=\"tool-calls-summary\">\n            <WrappedButton type=\"ghost\" onClick={() => setExpanded(false)}>\n              <span style={{ marginRight: 8 }}>隐藏工具调用过程</span>\n              <WrappedIcon\n                lib=\"fa\"\n                prefix=\"fas\"\n                icon=\"chevron-up\"\n                className=\"tool-calls-summary-toggle\"\n              />\n            </WrappedButton>\n          </div>\n          {processedToolCalls.map((toolCall) => (\n            <ToolCallComponent\n              id={toolCall.id}\n              key={toolCall.id}\n              functionName={toolCall.functionName}\n              processedArguments={toolCall.processedArguments}\n              processedResponse={toolCall.processedResponse}\n              args={toolCall.args}\n            />\n          ))}\n        </>\n      ) : (\n        <div className=\"tool-calls-summary\" onClick={() => setExpanded(true)}>\n          <span className={classNames(\"tool-calls-status\", processStatus)}>\n            {processStatus === \"processing\" ? (\n              <WrappedIcon lib=\"fa\" prefix=\"fas\" icon=\"spinner\" spinning />\n            ) : processStatus === \"ok\" ? (\n              <WrappedIcon lib=\"fa\" prefix=\"far\" icon=\"circle-check\" />\n            ) : (\n              <WrappedIcon lib=\"fa\" prefix=\"fas\" icon=\"triangle-exclamation\" />\n            )}\n            <span>\n              {processStatus === \"processing\"\n                ? \"工具调用中\"\n                : processStatus === \"ok\"\n                  ? \"工具调用完成\"\n                  : \"工具调用失败\"}\n            </span>\n          </span>\n          <WrappedIcon\n            lib=\"fa\"\n            prefix=\"fas\"\n            icon=\"chevron-down\"\n            className=\"tool-calls-summary-toggle\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ToolCallProps {\n  id: string;\n  functionName: string;\n  processedArguments: ProcessedValue;\n  processedResponse?: ProcessedValue;\n  args: string;\n  response?: string;\n}\n\nfunction ToolCallComponent({\n  functionName,\n  processedArguments,\n  processedResponse,\n  args,\n}: ToolCallProps) {\n  const { toolNames } = useChatViewContext();\n\n  return (\n    <div className=\"tool-call\">\n      <div className=\"tool-call-function-name\">\n        <WrappedIcon lib=\"antd\" theme=\"outlined\" icon=\"function\" />\n        {toolNames.get(functionName) ?? functionName}\n      </div>\n      <WrappedTag outline>Arguments</WrappedTag>\n      <div\n        className={classNames(\"tool-call-function-arguments\", {\n          failed: !processedArguments.ok,\n        })}\n      >\n        <pre>\n          <code>\n            {processedArguments.ok ? dumpYaml(processedArguments.data) : args}\n          </code>\n        </pre>\n      </div>\n      {processedResponse ? (\n        <>\n          <WrappedTag outline>Response</WrappedTag>\n          <div\n            className={classNames(\"tool-call-function-response\", {\n              failed: !processedResponse.ok,\n            })}\n          >\n            <pre>\n              <code>\n                {processedResponse.ok\n                  ? dumpYaml(processedResponse.data)\n                  : \"Failed\"}\n              </code>\n            </pre>\n          </div>\n        </>\n      ) : (\n        <div className=\"tool-call-wait-response\">…</div>\n      )}\n    </div>\n  );\n}\n\nfunction dumpYaml(value: unknown) {\n  return safeDump(value, {\n    schema: JSON_SCHEMA,\n    skipInvalid: true,\n    noRefs: true,\n    noCompatMode: true,\n  });\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport {\n  MessageItem,\n  MessageItemContent,\n  useChatViewContext,\n} from \"../../ChatViewContext.js\";\nimport { GuideItem } from \"./GuideItem.js\";\nimport { MarkdownItem } from \"./Markdown/index.js\";\nimport { TableItem } from \"./TableItem.js\";\nimport { ChatItemLoading } from \"../Loading.js\";\nimport { TextItem } from \"./TextItem.js\";\nimport { Toolbar } from \"./Toolbar.js\";\nimport { Time } from \"./Time.js\";\n// import { ContentTip } from \"./ContentTip.js\";\nimport { MsgItemContext } from \"./MsgItemContext.js\";\nimport {\n  DEFAULT_TYPE,\n  RELATED_QUESTIONS_TYPE,\n} from \"../../hooks/useChatViewInfo.js\";\nimport { ToolCalls } from \"./ToolCalls.js\";\n\nconst NOT_AGENT_MATCH = \"no_agent\";\n\nexport function MessageNode(props: MessageItem): React.ReactNode {\n  const {\n    content,\n    created,\n    role,\n    agentId,\n    type: itemType,\n    chatting,\n    toolCalls,\n  } = props;\n  const isUser = useMemo(() => role === \"user\", [role]);\n  const { quickAnswerConfig, showToolCalls } = useChatViewContext();\n\n  const getContentNode = useCallback((content: MessageItemContent) => {\n    const { type, text, examplePrompts } = content;\n    switch (type) {\n      case \"guide\":\n        return <GuideItem text={text} prompts={examplePrompts} />;\n      case \"text\":\n        return <TextItem text={text} />;\n      case \"table\":\n        return <TableItem text={text} />;\n      case \"load\":\n        return <ChatItemLoading />;\n      case \"markdown\":\n      default:\n        return <MarkdownItem text={text} />;\n    }\n  }, []);\n\n  const messageNode = useMemo(\n    () => getContentNode(content),\n    [content, getContentNode]\n  );\n\n  const agentList = useMemo(\n    () => quickAnswerConfig?.list ?? [],\n    [quickAnswerConfig]\n  );\n\n  const matchAgent = useMemo(() => {\n    return agentList.find((item) => item.id === agentId);\n  }, [agentList, agentId]);\n\n  const getMsgNode = useCallback(() => {\n    switch (itemType) {\n      case RELATED_QUESTIONS_TYPE:\n        return (\n          <>\n            <div className=\"message-top\">\n              <div style={{ color: \"gray\" }}>推荐提问</div>\n            </div>\n            <div className=\"message-content\">\n              <div className=\"wrapper\">\n                {chatting ? (\n                  <div className=\"content\">\n                    <ChatItemLoading />\n                  </div>\n                ) : (\n                  <>{messageNode}</>\n                )}\n              </div>\n            </div>\n          </>\n        );\n      case DEFAULT_TYPE:\n      default:\n        return (\n          <>\n            <div className=\"message-top\">\n              {isUser\n                ? \"我\"\n                : !agentId || agentId === NOT_AGENT_MATCH || !matchAgent\n                  ? \"AI助手\"\n                  : matchAgent.name}\n              <Time time={created} />\n            </div>\n            <div className=\"message-content\">\n              <div className=\"wrapper\">\n                {showToolCalls && toolCalls?.length ? (\n                  <ToolCalls toolCalls={toolCalls} />\n                ) : null}\n                <div className=\"content\">{messageNode}</div>\n                <Toolbar {...props} />\n              </div>\n            </div>\n          </>\n        );\n    }\n  }, [\n    itemType,\n    isUser,\n    agentId,\n    matchAgent,\n    created,\n    chatting,\n    messageNode,\n    props,\n    showToolCalls,\n    toolCalls,\n  ]);\n\n  return (\n    <MsgItemContext.Provider value={props}>\n      <div className=\"message-box\">{getMsgNode()}</div>\n    </MsgItemContext.Provider>\n  );\n}\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useChatViewContext } from \"../../ChatViewContext\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport type { Link, LinkProps } from \"@next-bricks/basic/link\";\n\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\nconst WrappedLink = wrapBrick<Link, LinkProps>(\"eo-link\");\n\nexport interface AgentDetailItem {\n  name: string;\n  description: string;\n  icon: GeneralIconProps & { color: string };\n  starterPrompts?: string[];\n  instanceId: string;\n  id: string;\n  [key: string]: any;\n}\n\nconst CARD_ITEM_HEIGHT = 85;\nconst HEIGHT_GAP = 24;\n\nfunction QuickAnswerCardItem({\n  name,\n  description,\n  icon,\n  starterPrompts,\n}: AgentDetailItem) {\n  const { setSearchStr } = useChatViewContext();\n\n  const handleCardClick = () => {\n    starterPrompts?.length && setSearchStr(starterPrompts[0]);\n  };\n\n  const iconColor = useMemo(() => icon?.color ?? \"geekblue\", [icon]);\n\n  return (\n    <div\n      className=\"quick-answer-card-item\"\n      style={{\n        height: CARD_ITEM_HEIGHT,\n        background: `linear-gradient(rgba(var(--theme-${iconColor}-color-rgb-channel), 0.1), rgba(var(--theme-${iconColor}-color-rgb-channel), 0.08))`,\n      }}\n      onClick={handleCardClick}\n    >\n      <div className=\"left\">\n        <WrappedIcon\n          className=\"icon\"\n          {...(icon ?? {\n            icon: \"default-app\",\n            lib: \"easyops\",\n            category: \"app\",\n          })}\n          style={{\n            background: `rgba(var(--theme-${iconColor}-color-rgb-channel), 0.5)`,\n          }}\n        />\n      </div>\n      <div className=\"content\">\n        <div className=\"title\">{name}</div>\n        <div className=\"description\">{description}</div>\n      </div>\n    </div>\n  );\n}\n\nexport function QuickAnswerList() {\n  const { quickAnswerConfig, msgList, loading } = useChatViewContext();\n  const [showMoreBtn, setShowMoreBtn] = useState<boolean>(false);\n  const listRef = useRef<HTMLDivElement>(null);\n  const hadClickShowMoreBtn = useRef<boolean>(false);\n\n  const handleShowMoreClick = () => {\n    hadClickShowMoreBtn.current = true;\n    setShowMoreBtn(false);\n  };\n\n  useEffect(() => {\n    const element = listRef.current;\n    if (element) {\n      const observer = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          if (\n            entry.contentRect.height >\n            CARD_ITEM_HEIGHT * 3 + HEIGHT_GAP * 2\n          ) {\n            if (!hadClickShowMoreBtn.current) {\n              setShowMoreBtn(true);\n            }\n          } else {\n            setShowMoreBtn(false);\n          }\n        }\n      });\n      observer.observe(element);\n      return () => observer.disconnect();\n    }\n  }, [showMoreBtn, quickAnswerConfig?.list]);\n\n  return quickAnswerConfig?.list.length && msgList.length === 0 && !loading ? (\n    <div className=\"quick-answer-wrapper\">\n      <div className=\"tip\">\n        {quickAnswerConfig.tip ??\n          \"你好，我是运维数智人 — Murphy，我能为你提供以下服务:\"}\n      </div>\n      <div\n        className=\"quick-answer-list\"\n        style={{\n          ...(showMoreBtn\n            ? {\n                maxHeight: CARD_ITEM_HEIGHT * 3 + HEIGHT_GAP * 2 + 10,\n                overflow: \"hidden\",\n              }\n            : {}),\n        }}\n        ref={listRef}\n      >\n        {quickAnswerConfig.list.map((item) => (\n          <QuickAnswerCardItem key={item.instanceId} {...item} />\n        ))}\n      </div>\n      {showMoreBtn ? (\n        <div className=\"show-more-wrapper\">\n          <WrappedLink\n            icon={{\n              lib: \"antd\",\n              icon: \"down\",\n            }}\n            className=\"show-more-btn\"\n            onClick={handleShowMoreClick}\n          >\n            显示更多\n          </WrappedLink>\n        </div>\n      ) : null}\n    </div>\n  ) : null;\n}\n","import React from \"react\";\nimport { useChatViewContext } from \"../ChatViewContext\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport type { Link, LinkProps } from \"@next-bricks/basic/link\";\n\nconst WrappedLink = wrapBrick<Link, LinkProps>(\"eo-link\");\n\nexport function StopBtn() {\n  const { stopChat } = useChatViewContext();\n\n  const handleStopChat = () => {\n    stopChat();\n  };\n  return (\n    <div className=\"stop-responding-wrapper\">\n      <WrappedLink className=\"stop-btn\" onClick={handleStopChat}>\n        停止生成\n      </WrappedLink>\n    </div>\n  );\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport { MessageItem, useChatViewContext } from \"../ChatViewContext\";\nimport { Avatar } from \"./MessageItem/Avatar.js\";\nimport classNames from \"classnames\";\nimport { CommonLoading, MessageListLoading } from \"./Loading.js\";\nimport { MessageNode } from \"./MessageItem/index.js\";\nimport { QuickAnswerList } from \"./QuickAnswerList/index.js\";\nimport { StopBtn } from \"./StopBtn.js\";\nimport { DEFAULT_TYPE, RELATED_QUESTIONS_TYPE } from \"../hooks/useChatViewInfo\";\n\ninterface MessageListProps {\n  showAvatar?: boolean;\n}\n\nexport function MessageList({\n  showAvatar = true,\n}: MessageListProps): React.ReactNode {\n  const chatViewRef = useRef<HTMLDivElement>(null);\n  const messageListRef = useRef<HTMLDivElement>(null);\n\n  const { msgLoading, msgEnd, msgList, loading, chatting } =\n    useChatViewContext();\n\n  const getMsgItemNode = useCallback(\n    (item: MessageItem, index: number = 0) => {\n      switch (item.type) {\n        case RELATED_QUESTIONS_TYPE:\n          return (\n            <div\n              className={classNames(\"message-item\")}\n              style={{ marginTop: \"-36px\", marginLeft: \"44px\" }}\n              key={index}\n            >\n              <MessageNode {...item} />\n            </div>\n          );\n        case DEFAULT_TYPE:\n        default:\n          return (\n            <div\n              className={classNames(\"message-item\", {\n                user: item.role === \"user\",\n              })}\n              key={index}\n            >\n              {showAvatar && <Avatar role={item.role} agentId={item.agentId} />}\n              <MessageNode {...item} />\n            </div>\n          );\n      }\n    },\n    [showAvatar]\n  );\n\n  const msgListNode = useMemo(() => {\n    return msgList.map((item, index) => {\n      return (\n        <React.Fragment key={item.key}>\n          {item.chatting ? (\n            <>\n              {getMsgItemNode(item, index)}\n              {chatting &&\n              index === msgList.length - 1 &&\n              item.type !== RELATED_QUESTIONS_TYPE ? (\n                <StopBtn />\n              ) : null}\n            </>\n          ) : (\n            getMsgItemNode(item, index)\n          )}\n        </React.Fragment>\n      );\n    });\n  }, [msgList, chatting, getMsgItemNode]);\n\n  const [manualScrolled, setManualScrolled] = useState(false);\n  const autoScrollingRef = useRef(false);\n\n  useEffect(() => {\n    const chatView = chatViewRef.current;\n    if (!chatView) {\n      return;\n    }\n    const handleScroll = () => {\n      if (!autoScrollingRef.current) {\n        // Make a small buffer of 6px\n        setManualScrolled(\n          chatView.scrollTop + chatView.clientHeight! + 6 <\n            chatView.scrollHeight\n        );\n      }\n    };\n    chatView.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      chatView.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    const element = messageListRef.current;\n    const chatView = chatViewRef.current;\n    if (manualScrolled || !element || !chatView) {\n      // Do not auto-scroll if manual scroll detected\n      return;\n    }\n    const observer = new ResizeObserver(() => {\n      autoScrollingRef.current = true;\n      chatView.scroll({ top: chatView.scrollHeight });\n      requestAnimationFrame(() => {\n        autoScrollingRef.current = false;\n      });\n    });\n    observer.observe(element);\n    return () => observer.disconnect();\n  }, [manualScrolled]);\n\n  return (\n    <div className=\"chat-view\" ref={chatViewRef}>\n      <div className=\"message-list\" ref={messageListRef}>\n        <div className=\"message-list-box\">\n          {msgEnd && msgList.length ? (\n            <div className=\"message-start-tip\">会话开始</div>\n          ) : null}\n          {msgLoading && <CommonLoading />}\n          <QuickAnswerList />\n          {msgListNode}\n        </div>\n        {loading && <MessageListLoading />}\n      </div>\n    </div>\n  );\n}\n","const HIDDEN_TEXTAREA_STYLE = `\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important;\n  padding: 10px !important;\n  pointer-events: none !important;\n`;\n\nconst SIZING_STYLE = [\n  \"letter-spacing\",\n  \"line-height\",\n  \"padding-top\",\n  \"padding-bottom\",\n  \"font-family\",\n  \"font-weight\",\n  \"font-size\",\n  \"font-variant\",\n  \"text-rendering\",\n  \"text-transform\",\n  \"width\",\n  \"text-indent\",\n  \"padding-left\",\n  \"padding-right\",\n  \"border-width\",\n  \"box-sizing\",\n  \"word-break\",\n  \"white-space\",\n];\nlet hiddenTextarea: HTMLTextAreaElement;\n\n/**\n * 计算 textare 高度\n * https://github.com/react-component/textarea/blob/1c0026fbe30e5f7dff1fca695b2cf262246381ca/src/calculateNodeHeight.tsx\n * */\nexport default function calculateAutoSizeStyle(\n  uiTextNode: HTMLTextAreaElement,\n  minRows: number | null = null,\n  maxRows: number | null = null\n): React.CSSProperties {\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement(\"textarea\");\n    hiddenTextarea.setAttribute(\"tab-index\", \"-1\");\n    hiddenTextarea.setAttribute(\"aria-hidden\", \"true\");\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  const uiTextNodeStyle = window.getComputedStyle(uiTextNode);\n  const sizingStyle = SIZING_STYLE.map(\n    (name) => `${name}:${uiTextNodeStyle.getPropertyValue(name)}`\n  ).join(\";\");\n\n  // equal style\n  hiddenTextarea.setAttribute(\n    \"style\",\n    `${sizingStyle};${HIDDEN_TEXTAREA_STYLE}`\n  );\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || \"\";\n\n  let minHeight: number | undefined = undefined;\n  let maxHeight: number | undefined = undefined;\n  // let overflowY: any;\n\n  const borderSize = 2;\n  const paddingSize = 20;\n  let height = hiddenTextarea.scrollHeight - paddingSize + borderSize;\n\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = \" \";\n    const singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows - paddingSize + borderSize;\n      height = Math.max(paddingSize, height);\n    }\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows - paddingSize + borderSize;\n      // overflowY = height > maxHeight ? \"\" : \"hidden\";\n      height = Math.min(maxHeight, height);\n    }\n  }\n\n  const style: React.CSSProperties = {\n    height,\n    overflowY: \"scroll\",\n    resize: \"none\",\n  };\n\n  if (minHeight) {\n    style.minHeight = minHeight;\n  }\n  if (maxHeight) {\n    style.maxHeight = maxHeight;\n  }\n\n  return style;\n}\n","import React, {\n  ChangeEvent,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport type { EoTooltip, ToolTipProps } from \"@next-bricks/basic/tooltip\";\nimport calculateAutoSizeStyle from \"./utils/calculateAutoSizeStyle.js\";\nimport classNames from \"classnames\";\nimport { snippet, useChatViewContext } from \"../ChatViewContext.js\";\nimport { AgentDetailItem } from \"./QuickAnswerList/index\";\nimport { ChatBody } from \"../ChatService.js\";\nimport { ReactUseMultipleBricks } from \"@next-core/react-runtime\";\n\nexport interface SearchInputRef {\n  handleInsertQuestion: (value: string) => void;\n  sendMsg: (msg: string | ChatBody) => void;\n}\n\nconst WrappedToolTip = wrapBrick<EoTooltip, ToolTipProps>(\"eo-tooltip\");\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\n\nconst PREFIX_WORD = \"@\";\n\nexport function LegacySearchInput(\n  props: any,\n  ref: React.Ref<SearchInputRef>\n): React.ReactNode {\n  const [value, setValue] = useState<string>(\"\");\n  const [active, setActive] = useState<boolean>(false);\n  const [expand, setExpand] = useState<boolean>(false);\n  const [autoSizeStyle, setAutoSizeStyle] = useState<React.CSSProperties>();\n  const [isFillContent, setIsFillContent] = useState<boolean>(false);\n\n  // snippets\n  const [snippetOpen, setSnippetOpen] = useState<boolean>(false);\n  const [matchSnippetList, setMatchSnippetList] = useState<snippet[]>([]);\n  const [matchSnippetIndex, setMatchSnippetIndex] = useState<number>(0);\n\n  // mention\n  const [mentionOpen, setMentionOpen] = useState<boolean>(false);\n  const [matchPrefixIndex, setMatchPrefixIndex] = useState<number>(-1);\n  const [matchAgentList, setMatchMentionList] = useState<AgentDetailItem[]>([]);\n  const [matchMentionsIndex, setMatchMentionsIndex] = useState<number>(0);\n\n  const mentionsRef = useRef<HTMLDivElement>(null);\n  const snippetsRef = useRef<HTMLDivElement>(null);\n  const searchInputBoxRef = useRef<HTMLDivElement>(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const hadExpanded = useRef<boolean>(false);\n  const inputEndRef = useRef<boolean>(false);\n\n  const {\n    chatting,\n    loading,\n    searchStr,\n    quickAnswerConfig,\n    createSession,\n    setSearchStr,\n    handleChat,\n    setAgent,\n    snippetList,\n  } = useChatViewContext();\n\n  const agentList = useMemo(\n    () => quickAnswerConfig?.list ?? [],\n    [quickAnswerConfig]\n  );\n\n  const hadValue = useMemo(() => !!value, [value]);\n  const defaultSize = useMemo(() => [1, 5], []);\n  const disabled = useMemo(() => loading || chatting, [chatting, loading]);\n\n  const matchPrefixInfo = useMemo(() => {\n    const textareaElement = textareaRef.current!;\n    if (matchPrefixIndex >= 0 && value) {\n      const currentFocusIndex = textareaElement.selectionStart;\n      let matchWord = \"\";\n      for (let i = matchPrefixIndex + 1; i < currentFocusIndex; i++) {\n        // 匹配中文英文数字\n        if (/[\\u4e00-\\u9fa5]|\\w|\\d/.test(value[i]) || inputEndRef.current) {\n          matchWord = matchWord + value[i];\n        } else {\n          setMatchPrefixIndex(-1);\n          return false;\n        }\n      }\n      return {\n        start: matchPrefixIndex + 1,\n        end: currentFocusIndex,\n        word: matchWord,\n      };\n    }\n    return false;\n  }, [matchPrefixIndex, value]);\n\n  const handleAgentItemSelect = useCallback(\n    (item: AgentDetailItem) => {\n      if (matchPrefixInfo) {\n        const { start, end } = matchPrefixInfo;\n        const valueList = value.split(\"\");\n        const trimName = item.name.replace(/\\s+/g, \"\") + \" \";\n        const focusIndex = start + trimName.length;\n        valueList.splice(start, end - start, trimName);\n        setValue(valueList.join(\"\"));\n        setMatchPrefixIndex(-1);\n\n        setTimeout(() => {\n          textareaRef.current!.selectionStart = focusIndex;\n          textareaRef.current!.selectionEnd = focusIndex;\n          textareaRef.current!.focus();\n        }, 0);\n      }\n    },\n    [matchPrefixInfo, value]\n  );\n\n  const handleSnippetItemSelect = useCallback(\n    (item: snippet) => {\n      const regex = /@([\\u4e00-\\u9fa5|\\w|\\d]+)/g;\n      const matches = [];\n      let match;\n      // 在字符串中循环匹配正则表达式,将匹配的@技能放入数组中\n      while ((match = regex.exec(value)) !== null) {\n        matches.push(match[0]);\n      }\n      if (matches.length) {\n        setValue(matches.join(\" \") + \" \" + item.content);\n      } else {\n        setValue(item.content);\n      }\n      setSnippetOpen(false);\n      setMatchSnippetIndex(0);\n      setTimeout(() => {\n        textareaRef.current!.focus();\n      }, 0);\n    },\n    [value]\n  );\n\n  const isShowMentions = useMemo(() => {\n    return matchAgentList.length && mentionOpen;\n  }, [matchAgentList, mentionOpen]);\n\n  const mentions = useMemo(() => {\n    return isShowMentions ? (\n      <div className=\"mentions-list-wrapper\" ref={mentionsRef}>\n        <div className=\"content\">\n          <div className=\"mentions-title\">技能</div>\n          <div className=\"mentions-list\">\n            {matchAgentList.slice(0, 10).map((item, index) => {\n              return (\n                <div\n                  className={classNames(\"mentions-item\", {\n                    active: index === matchMentionsIndex,\n                  })}\n                  key={index}\n                  onClick={() => handleAgentItemSelect(item)}\n                >\n                  <WrappedIcon\n                    className=\"icon\"\n                    {...item.icon}\n                    style={{\n                      color: `var(--theme-${item.icon.color}-color)`,\n                      background: `var(--theme-${item.icon.color}-background)`,\n                    }}\n                  />\n                  <div className=\"name\">{item.name}</div>\n                  <div className=\"description\">{item.description}</div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    ) : null;\n  }, [\n    matchAgentList,\n    matchMentionsIndex,\n    isShowMentions,\n    handleAgentItemSelect,\n  ]);\n\n  const isShowSnippets = useMemo(() => {\n    return !isShowMentions && matchSnippetList.length && snippetOpen;\n  }, [isShowMentions, matchSnippetList, snippetOpen]);\n\n  const snippets = useMemo(() => {\n    return isShowSnippets ? (\n      <div className=\"snippets-list-wrapper\" ref={snippetsRef}>\n        <div className=\"content\">\n          <div className=\"snippets-title\">常用语</div>\n          <div className=\"snippets-list\">\n            {matchSnippetList.slice(0, 10).map((item, index) => {\n              return (\n                <div\n                  className={classNames(\"snippets-item\", {\n                    active: index === matchSnippetIndex,\n                  })}\n                  key={index}\n                  onClick={() => handleSnippetItemSelect(item)}\n                >\n                  <div className=\"name\">{item.name}</div>\n                  <div className=\"description\">{item.content}</div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    ) : null;\n  }, [\n    matchSnippetList,\n    matchSnippetIndex,\n    isShowSnippets,\n    handleSnippetItemSelect,\n  ]);\n\n  const computedAutoSize = useCallback(\n    (size = defaultSize) => {\n      if (hadExpanded.current && expand) return;\n      const textareaElement = textareaRef.current as HTMLTextAreaElement;\n      if (textareaElement) {\n        const textareaStyles = calculateAutoSizeStyle(\n          textareaElement,\n          size[0],\n          size[1]\n        );\n\n        setAutoSizeStyle(textareaStyles);\n      }\n      hadExpanded.current = expand;\n    },\n    [defaultSize, expand]\n  );\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLTextAreaElement> | string): void => {\n      const value = typeof e === \"string\" ? e : e.target.value;\n      setValue(value);\n      textareaRef.current!.value = value;\n\n      // 获取snippet关键词\n      const keyword = value\n        .replaceAll(/@([\\u4e00-\\u9fa5|\\w|\\d]+)\\s/g, \"\")\n        .trim();\n\n      // 过滤出matchSnippetList\n      if (keyword) {\n        const filterResult =\n          snippetList?.filter((item) => item.name.includes(keyword)) ?? [];\n        setMatchSnippetList(filterResult);\n        setSnippetOpen(!!filterResult.length);\n      } else {\n        setMatchSnippetList([]);\n        setSnippetOpen(false);\n      }\n    },\n    [snippetList]\n  );\n\n  const handleCompositionStart = () => {\n    inputEndRef.current = true;\n  };\n\n  const handleCompositionEnd = () => {\n    inputEndRef.current = false;\n  };\n\n  const hanldeCreateSession = () => {\n    createSession();\n  };\n\n  const handleExpand = useCallback(() => {\n    setExpand((value) => {\n      return !value;\n    });\n  }, []);\n\n  const matchFirstAgent = useCallback(\n    (value: string) => {\n      const regex = /@([\\u4e00-\\u9fa5|\\w|\\d]+)/g;\n\n      // 在字符串中循环匹配正则表达式\n      let match: RegExpExecArray | null;\n      while ((match = regex.exec(value)) !== null) {\n        if (match) {\n          const agent = agentList?.find(\n            (item) => item.name.replace(/\\s+/g, \"\") === match![1]\n          );\n          agent && setAgent(agent.id);\n          if (agent) break;\n        }\n      }\n    },\n    [agentList, setAgent]\n  );\n\n  const handleDispatchQuestion = useCallback(\n    (val: string) => {\n      matchFirstAgent(val);\n      handleChat(val);\n\n      setActive(false);\n      setExpand(false);\n      handleChange(\"\");\n      textareaRef.current?.blur();\n    },\n    [handleChat, handleChange, matchFirstAgent]\n  );\n\n  const handleSubmit = useCallback(() => {\n    if (!hadValue || !textareaRef.current || disabled) return;\n    handleDispatchQuestion(value);\n  }, [value, hadValue, disabled, handleDispatchQuestion]);\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      // 默认情况下，按下 Enter 键会触发提交，按 Shift + Enter 换行；\n      // 当显示 mentions 或 snippets 时，按 Enter 键选中对应项；\n      // 当输入框展开放大时（且没有 mentions 或 snippets），恢复 Enter 键换行，需要按发送按钮进行提交。\n      if (\n        e.key === \"Enter\" &&\n        (!expand || isShowMentions || isShowSnippets) &&\n        !e.shiftKey &&\n        !inputEndRef.current\n      ) {\n        e.preventDefault();\n        if (isShowMentions) {\n          handleAgentItemSelect(matchAgentList[matchMentionsIndex]);\n        } else if (isShowSnippets) {\n          handleSnippetItemSelect(matchSnippetList[matchSnippetIndex]);\n        } else {\n          handleSubmit();\n        }\n      }\n      if (isShowMentions) {\n        if (e.key === \"ArrowUp\") {\n          e.preventDefault();\n          setMatchMentionsIndex((index) => Math.max(0, index - 1));\n        }\n        if (e.key === \"ArrowDown\") {\n          e.preventDefault();\n          setMatchMentionsIndex((index) =>\n            Math.min(matchAgentList.length - 1, index + 1)\n          );\n        }\n      } else if (isShowSnippets) {\n        if (e.key === \"ArrowUp\") {\n          e.preventDefault();\n          setMatchSnippetIndex((index) => Math.max(0, index - 1));\n        }\n        if (e.key === \"ArrowDown\") {\n          e.preventDefault();\n          setMatchSnippetIndex((index) =>\n            Math.min(matchSnippetList.length - 1, index + 1)\n          );\n        }\n      }\n    },\n    [\n      handleSubmit,\n      handleAgentItemSelect,\n      handleSnippetItemSelect,\n      isShowMentions,\n      matchAgentList,\n      matchMentionsIndex,\n      isShowSnippets,\n      matchSnippetList,\n      matchSnippetIndex,\n      expand,\n    ]\n  );\n\n  const handleKeyUp = useCallback(\n    (e: React.KeyboardEvent) => {\n      const textareaElement = textareaRef.current!;\n\n      const selectionIndex = textareaElement.selectionStart;\n      const prefixWord = textareaElement.value[selectionIndex - 1];\n      const beforeSelectionText = textareaElement.value.slice(\n        0,\n        selectionIndex\n      );\n      const index = beforeSelectionText.lastIndexOf(PREFIX_WORD);\n\n      if (\n        e.key === \"Escape\" ||\n        (!isShowMentions &&\n          [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) !==\n            -1)\n      ) {\n        setMatchPrefixIndex(-1);\n        return;\n      }\n\n      if (prefixWord === PREFIX_WORD) {\n        setMatchPrefixIndex(selectionIndex - 1);\n      } else {\n        setMatchPrefixIndex(index);\n      }\n    },\n    [isShowMentions]\n  );\n\n  useEffect(() => {\n    if (searchStr) {\n      handleChange(searchStr.trim());\n      textareaRef.current?.focus();\n      setSearchStr(\"\");\n    }\n  }, [searchStr, disabled, setSearchStr, handleChange]);\n\n  useEffect(() => {\n    computedAutoSize(expand ? [20, 20] : undefined);\n  }, [value, expand, computedAutoSize]);\n\n  useEffect(() => {\n    const searchInputBox = searchInputBoxRef.current;\n    if (searchInputBox) {\n      const observe = new ResizeObserver(() => {\n        const { width: currentWidth } = searchInputBox.getBoundingClientRect();\n        const FIT_CONTENT_WIDTH = 900;\n\n        setIsFillContent(currentWidth < FIT_CONTENT_WIDTH);\n      });\n\n      observe.observe(searchInputBox);\n\n      return () => {\n        observe.disconnect();\n      };\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!chatting && textareaRef.current) {\n      textareaRef.current?.focus();\n    }\n  }, [chatting]);\n\n  useEffect(() => {\n    if (agentList?.length && matchPrefixInfo) {\n      const filterList =\n        matchPrefixInfo.word === \"\"\n          ? agentList\n          : agentList.filter((item) =>\n              item.name.includes(matchPrefixInfo.word)\n            );\n\n      setMatchMentionList(filterList);\n      setMatchMentionsIndex(0);\n      setMentionOpen(true);\n    } else {\n      setMatchMentionList([]);\n      setMentionOpen(false);\n    }\n  }, [matchPrefixInfo, agentList]);\n\n  useEffect(() => {\n    if (matchMentionsIndex >= 0 && mentionsRef.current) {\n      const element = mentionsRef.current.querySelector(\n        \".mentions-item.active\"\n      );\n      element?.scrollIntoView({ block: \"nearest\" });\n    }\n  }, [matchMentionsIndex]);\n\n  useEffect(() => {\n    if (matchSnippetIndex >= 0 && snippetsRef.current) {\n      const element = snippetsRef.current.querySelector(\n        \".snippets-item.active\"\n      );\n      element?.scrollIntoView({ block: \"nearest\" });\n    }\n  }, [matchSnippetIndex]);\n\n  useEffect(() => {\n    const handleDocumentClick = (e: any) => {\n      const mentionsElemnt = mentionsRef.current;\n      if (mentionsElemnt && !mentionsElemnt.contains(e.composedPath()[0])) {\n        setMentionOpen(false);\n      }\n    };\n\n    document.addEventListener(\"click\", handleDocumentClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleDocumentClick);\n    };\n  }, []);\n\n  useImperativeHandle(ref, () => ({\n    handleInsertQuestion: (value: string) => {\n      handleDispatchQuestion(value);\n    },\n    sendMsg: (msg: string | ChatBody) => {\n      handleChat(msg);\n    },\n  }));\n\n  return (\n    <div\n      className={classNames(\"search-input-box\", {\n        \"fill-content\": isFillContent,\n      })}\n      ref={searchInputBoxRef}\n    >\n      {mentions}\n      {snippets}\n      {props.inputToolbarBrick && (\n        <div className=\"input-toolbar\">\n          <ReactUseMultipleBricks {...props.inputToolbarBrick} />\n        </div>\n      )}\n      <div\n        className={classNames(\"input-box\", {\n          active,\n          disabled,\n          expand,\n        })}\n      >\n        <textarea\n          value={value}\n          ref={textareaRef}\n          style={{\n            ...autoSizeStyle,\n            paddingRight: expand ? \"50px\" : \"140px\",\n          }}\n          placeholder={chatting ? \"回复中,请稍等...\" : \"提出你的想法...\"}\n          onFocus={() => setActive(true)}\n          onBlur={() => setActive(false)}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          onKeyUpCapture={handleKeyUp}\n          onCompositionStart={handleCompositionStart}\n          onCompositionEnd={handleCompositionEnd}\n        />\n        <span className=\"suffix-icon\">\n          <WrappedToolTip content=\"新增会话\">\n            <WrappedIcon\n              lib=\"antd\"\n              icon=\"plus-circle\"\n              onClick={hanldeCreateSession}\n            />\n          </WrappedToolTip>\n          {!expand && (\n            <WrappedToolTip content=\"放大\">\n              <WrappedIcon\n                lib=\"antd\"\n                icon=\"arrows-alt\"\n                onClick={handleExpand}\n              />\n            </WrappedToolTip>\n          )}\n          <div className=\"submit-split\"></div>\n          <WrappedToolTip content=\"提交\">\n            <WrappedIcon\n              className={classNames(\"submit-btn\", {\n                active: hadValue,\n                disabled: !hadValue || disabled,\n              })}\n              lib={chatting ? \"antd\" : \"easyops\"}\n              icon={chatting ? \"loading\" : \"release-management-fill\"}\n              category={chatting ? \"\" : \"menu\"}\n              spinning={chatting}\n              onClick={handleSubmit}\n            />\n          </WrappedToolTip>\n        </span>\n        <span className=\"toolbar-icon\">\n          {expand && (\n            <WrappedToolTip content=\"缩小\">\n              <WrappedIcon lib=\"antd\" icon=\"shrink\" onClick={handleExpand} />\n            </WrappedToolTip>\n          )}\n        </span>\n      </div>\n      {hadValue && (\n        <div className=\"search-input-toolbar\">\n          <div className=\"input-tip\">Shift + Enter 换行</div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const SearchInput = forwardRef(LegacySearchInput);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { useChatViewContext } from \"../ChatViewContext\";\nimport classNames from \"classnames\";\nimport { debounce } from \"lodash\";\nimport { SessionItem as SessionItemProps } from \"../ChatService\";\nimport { CommonLoading } from \"./Loading.js\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport { unwrapProvider } from \"@next-core/utils/general\";\nimport type { showDialog as _showDialog } from \"@next-bricks/basic/data-providers/show-dialog/show-dialog\";\nimport type { showNotification as _showNotification } from \"@next-bricks/basic/data-providers/show-notification/show-notification\";\nimport { EoTooltip, ToolTipProps } from \"@next-bricks/basic/tooltip\";\nimport type {\n  Modal,\n  ModalProps,\n  ModalEvents,\n  ModalMapEvents,\n} from \"@next-bricks/containers/modal\";\nimport type { Input, InputProps } from \"@next-bricks/form/input\";\nimport {\n  Form,\n  FormEvents,\n  FormMapEvents,\n  FormProps,\n} from \"@next-bricks/form/form\";\nimport { NEW_SESSION_ID } from \"../hooks/useChatViewInfo\";\n\nconst WrappedToolTip = wrapBrick<EoTooltip, ToolTipProps>(\"eo-tooltip\");\n\nconst showNotification = unwrapProvider<typeof _showNotification>(\n  \"basic.show-notification\"\n);\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\nconst showDialog = unwrapProvider<typeof _showDialog>(\"basic.show-dialog\");\n\nconst WrappedModal = wrapBrick<Modal, ModalProps, ModalEvents, ModalMapEvents>(\n  \"eo-modal\",\n  {\n    onClose: \"close\",\n    onConfirm: \"confirm\",\n    onCancel: \"cancel\",\n    onOpen: \"open\",\n  }\n);\nconst WrappedForm = wrapBrick<Form, FormProps, FormEvents, FormMapEvents>(\n  \"eo-form\",\n  {\n    onValuesChange: \"values.change\",\n    onValidateSuccess: \"validate.success\",\n    onValidateError: \"validate.error\",\n  }\n);\nconst WrappedInput = wrapBrick<Input, InputProps>(\"eo-input\");\n\nconst SESSION_ITEM_HEIGHT = 42;\nconst BUFFER_NUMBER = 5;\nconst CACHE_HEIGHT = 100;\n\nexport function SessionList(): React.ReactNode {\n  const {\n    sessionEnd,\n    sessionLoading,\n    sessionList,\n    querySessionHistory,\n    updateSession,\n  } = useChatViewContext();\n  const sessionWrapperRef = useRef<HTMLDivElement>(null);\n  const sessionListRef = useRef<HTMLDivElement>(null);\n  const searchQueryRef = useRef<string>(\"\");\n  const editModalRef = useRef<Modal>(null);\n  const editFormRef = useRef<Form>(null);\n  const editRawDataRef = useRef<Partial<SessionItemProps>>();\n  const editConversationIdRef = useRef<string>(\"\");\n\n  const getFitLimit = () => {\n    let limit = 20;\n    const sessionWrapper = sessionWrapperRef.current;\n    if (sessionWrapper) {\n      // limit = 视图高度 % 单条高度 + 缓冲长度\n      limit =\n        Math.floor(sessionWrapper.clientHeight / SESSION_ITEM_HEIGHT) +\n        BUFFER_NUMBER;\n    }\n    return limit;\n  };\n\n  useEffect(() => {\n    querySessionHistory(getFitLimit());\n  }, []);\n\n  const checkSessionList = useCallback(() => {\n    if (sessionLoading || sessionEnd) return;\n    const sessionList = sessionListRef.current;\n    if (sessionList) {\n      const { scrollTop, scrollHeight, clientHeight } = sessionList;\n      // 如果滚动的高度 + 视图高度 + 缓冲高度 > 视图的滚动高度，请求新的数据\n      if (scrollTop + clientHeight + CACHE_HEIGHT > scrollHeight) {\n        querySessionHistory();\n      }\n    }\n  }, [querySessionHistory, sessionLoading, sessionEnd]);\n\n  const handleScroll = debounce(checkSessionList, 200);\n\n  const handleChange = useCallback((e: any) => {\n    searchQueryRef.current = e.target.value;\n  }, []);\n\n  const handleSearch = useCallback(() => {\n    querySessionHistory(getFitLimit(), searchQueryRef.current);\n  }, []);\n\n  const handleSearchEnter = useCallback((e: any) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  }, []);\n\n  const handleEditSession = useCallback(\n    (conversationId: string, rawData: Partial<SessionItemProps>) => {\n      // 从item传上来的已知数据\n      editConversationIdRef.current = conversationId;\n      editRawDataRef.current = rawData;\n      editFormRef.current?.setInitValue({ ...rawData });\n      editModalRef.current?.open();\n    },\n    []\n  );\n\n  const handleEditModalConfirm = useCallback(() => {\n    editFormRef.current?.validate();\n  }, []);\n\n  const handleEditFormSubmit = useCallback(\n    async (e: any) => {\n      // 调用接口，更新数据后要关掉modal\n      const result = await updateSession(\n        editConversationIdRef.current,\n        e.detail\n      );\n      showNotification({\n        message: `修改会话${result ? \"成功\" : \"失败\"}`,\n        type: result ? \"success\" : \"error\",\n      });\n      if (result) {\n        editModalRef.current?.close();\n      }\n    },\n    [editConversationIdRef.current, editModalRef.current]\n  );\n\n  return (\n    <>\n      <div className=\"session-list-wrapper\" ref={sessionWrapperRef}>\n        <div className=\"session-title\">历史对话</div>\n        <div className=\"session-search-input-box\">\n          <input\n            placeholder={\"输入关键词进行搜索\"}\n            onChange={handleChange}\n            onKeyUpCapture={handleSearchEnter}\n          />\n          <span className=\"suffix-icon\">\n            <WrappedToolTip content=\"搜索\">\n              <WrappedIcon\n                lib=\"antd\"\n                icon=\"search\"\n                theme=\"outlined\"\n                onClick={handleSearch}\n              />\n            </WrappedToolTip>\n          </span>\n        </div>\n        <div\n          className=\"session-list\"\n          ref={sessionListRef}\n          onScroll={handleScroll}\n        >\n          {sessionList.map((item, index) => {\n            return (\n              <SessionItem\n                key={index}\n                {...item}\n                handleEditSession={handleEditSession}\n              />\n            );\n          })}\n          {sessionLoading && <CommonLoading />}\n          {/* {sessionEnd && <div className=\"session-end-tip\">到底啦</div>} */}\n        </div>\n      </div>\n      <WrappedModal\n        ref={editModalRef}\n        modalTitle={\"编辑会话\"}\n        width=\"688px\"\n        maskClosable={false}\n        closeWhenConfirm={false}\n        onConfirm={handleEditModalConfirm}\n      >\n        <WrappedForm\n          layout=\"horizontal\"\n          ref={editFormRef}\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          onValidateSuccess={handleEditFormSubmit}\n        >\n          <WrappedInput label=\"标题\" name=\"title\"></WrappedInput>\n        </WrappedForm>\n      </WrappedModal>\n    </>\n  );\n}\n\nfunction SessionItem({\n  title,\n  conversationId,\n  handleEditSession,\n}: SessionItemProps) {\n  const { activeSessionId, checkSession, deleteSession } = useChatViewContext();\n\n  const handleCheckSession = useCallback(() => {\n    checkSession(conversationId, true);\n  }, [conversationId, checkSession]);\n\n  const handleDeleteSession = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      showDialog({\n        type: \"confirm\",\n        title: \"会话删除确认\",\n        content: `请输入 {{ expect }} 以确认删除`,\n        expect: title.replace(/\\s+/g, \"\"),\n      }).then(async () => {\n        const result = await deleteSession([conversationId]);\n        showNotification({\n          message: `删除会话${result ? \"成功\" : \"失败\"}`,\n          type: result ? \"success\" : \"error\",\n        });\n      });\n    },\n    [conversationId, deleteSession, title]\n  );\n\n  const handleEditSessionItem = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      handleEditSession && handleEditSession(conversationId, { title });\n    },\n    [conversationId, handleEditSession, title]\n  );\n\n  return (\n    <div\n      key={title}\n      className={classNames(\"session-item\", {\n        active: conversationId === activeSessionId,\n      })}\n      onClick={handleCheckSession}\n    >\n      <div className=\"content\">\n        <div className=\"title\" title={title}>\n          {title}\n        </div>\n      </div>\n      {conversationId !== NEW_SESSION_ID && (\n        <>\n          <div className=\"session-edit-btn\" onClick={handleEditSessionItem}>\n            <WrappedIcon icon=\"edit\" lib=\"antd\" />\n          </div>\n          <div className=\"session-close-btn\" onClick={handleDeleteSession}>\n            <WrappedIcon icon=\"close\" lib=\"antd\" />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import { fetchEventSource } from \"@microsoft/fetch-event-source\";\nimport { http } from \"@next-core/http\";\nimport { getBasePath } from \"@next-core/runtime\";\nimport moment from \"moment\";\nimport _, { pick } from \"lodash\";\nimport type { ToolCall } from \"./ChatViewContext\";\nimport { isGeneralTextType } from \"./hooks/useChatViewInfo\";\n\nexport interface SSEMessageItem {\n  conversationId?: string;\n  created: number | string;\n  delta: {\n    content: string;\n    role: string;\n    tool_calls?: ToolCall[];\n    tool_call_id?: string;\n  };\n  taskId?: string;\n  agentId?: string;\n  robotId?: string;\n  type?: string;\n  error?: string;\n}\n\nexport interface QueueItem {\n  topic: string;\n  message?: SSEMessageItem;\n}\n\nexport interface SessionItem {\n  conversationId: string;\n  isDelete: boolean;\n  time: number;\n  title: string;\n  user: string;\n  _row_id: string;\n  robotId: string;\n  handleEditSession?: (\n    conversationId: string,\n    rawData: Partial<SessionItem>\n  ) => void;\n}\n\nexport interface ChatItem {\n  agentId: string;\n  robotId: string;\n  conversationId: string;\n  input: string;\n  output: string;\n  taskId: string;\n  time: number;\n  inputTime: number;\n  user: string;\n  _row_id: string;\n  tag: {\n    isLike?: boolean;\n  };\n  allToolCalls?: string;\n}\n\nexport interface ChatBody {\n  agentId?: string;\n  conversationId?: string;\n  input: string;\n  stream?: boolean;\n  config?: Record<string, any>;\n  [k: string]: any;\n}\n\nexport class ChatService {\n  #debug: boolean;\n  #ctrl?: AbortController;\n  #agentId: string;\n  #robotId: string;\n  #enterInterval: number;\n  #chatting = false;\n  #isStartEmitEvent = false;\n  #emitTimer: NodeJS.Timeout | undefined;\n  #messageQueue: Array<QueueItem> = [];\n  #subscribers: Record<string, Array<(msg?: SSEMessageItem) => void>> = {};\n  #conversationId?: string;\n  #answerLanguage?: string | undefined;\n\n  // 会话\n  #sessionNextToken?: string;\n  #cacheLimit?: number;\n  #cacheQuery?: string;\n\n  // 消息\n  #messageNextToken?: string;\n\n  #useSpiltWord = false;\n\n  constructor({\n    agentId,\n    robotId,\n    enterInterval = 50,\n    debug = false,\n    answerLanguage,\n    useSpiltWord,\n  }: {\n    agentId: string;\n    robotId: string;\n    enterInterval: number;\n    debug: boolean;\n    answerLanguage?: string;\n    useSpiltWord?: boolean;\n  }) {\n    this.#agentId = agentId;\n    this.#robotId = robotId;\n    this.#enterInterval = enterInterval;\n    this.#debug = debug;\n    this.#useSpiltWord = useSpiltWord ?? false;\n    this.#answerLanguage = answerLanguage;\n  }\n\n  enqueue(data: QueueItem) {\n    this.#messageQueue.push(data);\n    this.#startEmitEvent();\n  }\n\n  dequeue() {\n    return this.#messageQueue.shift();\n  }\n\n  #clear() {\n    this.#messageQueue.length = 0;\n  }\n\n  getMessageQueue() {\n    return this.#messageQueue;\n  }\n\n  subscribe(topic: string, callback: (msg?: SSEMessageItem) => void) {\n    if (!this.#subscribers[topic]) {\n      this.#subscribers[topic] = [];\n    }\n    this.#subscribers[topic].push(callback);\n  }\n\n  unsubscribe(topic: string, callback: (msg?: SSEMessageItem) => void) {\n    if (this.#subscribers[topic]) {\n      this.#subscribers[topic] = this.#subscribers[topic].filter(\n        (cb) => cb !== callback\n      );\n    }\n  }\n\n  notifySubscribers(data: QueueItem) {\n    const topic = data.topic;\n    if (this.#subscribers[topic]) {\n      this.#subscribers[topic].forEach((callback) => {\n        callback(data?.message);\n      });\n    }\n  }\n\n  async setChatItemIsLike(id: string, isLike: boolean): Promise<boolean> {\n    let flag: boolean = false;\n    try {\n      const { code } = await http.request<{ code: number }>(\n        `${getBasePath()}api/gateway/easyops.api.aiops_chat.conversation.CommentDialogue/conversation/comment`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            taskId: id,\n            isLike,\n          }),\n        }\n      );\n      if (code === 0) {\n        flag = true;\n      }\n    } catch {\n      flag = false;\n    }\n    return flag;\n  }\n\n  setAgentId(id: string) {\n    this.#agentId = id;\n  }\n\n  setConversationId(id?: string) {\n    this.#conversationId = id;\n  }\n\n  async getSessionHistory(\n    limit?: number,\n    query?: string\n  ): Promise<SessionItem[]> {\n    if (limit) {\n      this.#cacheLimit = limit;\n    }\n    if (!_.isNil(query)) {\n      if (this.#cacheQuery !== query) {\n        // 说明进行了搜索，需要重置token\n        this.#sessionNextToken = undefined;\n      }\n      this.#cacheQuery = query;\n    }\n    try {\n      const {\n        data: { conversations, next_token },\n      } = await http.request<{\n        data: {\n          conversations: SessionItem[];\n          next_token: string;\n          previous_token: string;\n        };\n      }>(\n        `${getBasePath()}api/gateway/easyops.api.aiops_chat.conversation.ListConversation/conversation/list`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            limit: this.#cacheLimit ?? 20,\n            query: this.#cacheQuery,\n            next_token: this.#sessionNextToken,\n          }),\n        }\n      );\n      this.#sessionNextToken = next_token;\n      if (!next_token) {\n        this.notifySubscribers({ topic: \"session.fetch.end\" });\n      }\n      return conversations;\n    } catch {\n      // eslint-disable-next-line no-console\n      console.error(\"获取会话历史失败\");\n    }\n    return [];\n  }\n\n  async getChatHistory(id?: string): Promise<ChatItem[]> {\n    if (id) {\n      this.setConversationId(id);\n      this.#messageNextToken = \"\";\n    }\n    if (!this.#conversationId) return [];\n    try {\n      const {\n        data: { conversations, next_token },\n      } = await http.request<{\n        data: {\n          conversations: ChatItem[];\n          next_token: string;\n          previous_token: string;\n        };\n      }>(\n        `${getBasePath()}api/gateway/easyops.api.aiops_chat.conversation.GetAllDialogue/conversation/get/${this.#conversationId}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            limit: 1000,\n            next_token: this.#messageNextToken,\n          }),\n        }\n      );\n      this.#messageNextToken = next_token;\n      if (!next_token) {\n        this.notifySubscribers({ topic: \"message.fetch.end\" });\n      }\n      return conversations;\n    } catch {\n      // eslint-disable-next-line no-console\n      console.error(\"获取消息历史失败\");\n    }\n    return [];\n  }\n\n  async deleteSession(id: string[]): Promise<boolean> {\n    if (!id.length) return false;\n    let flag: boolean = false;\n    try {\n      const { code } = await http.request<{ code: number }>(\n        `${getBasePath()}api/gateway/easyops.api.aiops_chat.conversation.DeleteConversation/conversation/delete`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            conversationIds: id,\n          }),\n        }\n      );\n      if (code === 0) {\n        flag = true;\n      }\n    } catch {\n      flag = false;\n    }\n    return flag;\n  }\n\n  async updateSession(\n    id: string,\n    data: Partial<SessionItem>\n  ): Promise<boolean> {\n    if (!id) return false;\n    let flag: boolean = false;\n    try {\n      const { code } = await http.request<{ code: number }>(\n        `${getBasePath()}api/gateway/easyops.api.aiops_chat.conversation.UpdateConversation/conversation/update/${id}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            updateData: data,\n          }),\n        }\n      );\n      if (code === 0) {\n        flag = true;\n      }\n    } catch {\n      flag = false;\n    }\n    return flag;\n  }\n\n  getCustomSplit() {\n    return {\n      [Symbol.split](str: string) {\n        let pos = 0;\n        const result = [];\n        let cache = \"\";\n        while (pos < str.length) {\n          const matchStr = str.substring(pos, pos + 1);\n          // 如果是中文，单个输出\n          if (/[\\u4e00-\\u9fa5]/.test(matchStr)) {\n            result.push(cache + matchStr);\n            cache = \"\";\n          } else {\n            // 否则，遇到空格或者标点符号再分词\n            if (!/\\s|[，。；《》?!,.:<>？！]]/.test(matchStr)) {\n              cache = cache + matchStr;\n            } else {\n              result.push(cache + matchStr);\n              cache = \"\";\n            }\n          }\n          pos++;\n        }\n        if (cache) result.push(cache);\n        return result;\n      },\n    };\n  }\n\n  splitWord(str: string): string[] {\n    if (!str) return [];\n    // 单词长度小于 5 直接返回, 否则做单词分割处理\n    if (str?.length < 5) return [str];\n    let list = [];\n\n    // 只要是命令字，且命令字不等于easy_cmd_progress的时候就直接返回\n    if (\n      /^```easy_cmd_.*?```[^`]*$/s.test(str) &&\n      !/easy_cmd_progress/.test(str)\n    ) {\n      return [str];\n    }\n\n    if (window.Intl) {\n      try {\n        const segmenterFr = new Intl.Segmenter(\"zh-Hans-CN\", {\n          granularity: \"word\",\n        });\n        const iterator = segmenterFr.segment(str)[Symbol.iterator]();\n\n        let nextWord = iterator.next();\n        while (!nextWord.done) {\n          list.push(nextWord.value.segment);\n          nextWord = iterator.next();\n        }\n      } catch {\n        list = [];\n        const customSplit = this.getCustomSplit();\n        str.split(customSplit).forEach((word) => {\n          list.push(word);\n        });\n      }\n    } else {\n      const customSplit = this.getCustomSplit();\n      str.split(customSplit).forEach((word) => {\n        list.push(word);\n      });\n    }\n\n    return list;\n  }\n\n  async chat(msg: string | ChatBody): Promise<void> {\n    this.#ctrl = new AbortController();\n    let hadMatchMessage = false;\n    this.#chatting = true;\n    await fetchEventSource(\n      `${getBasePath()}api/gateway/easyops.api.aiops_chat.manage.LLMChatProxy@1.0.0/api/aiops_chat/v1/chat/completions`,\n      {\n        method: \"POST\",\n        signal: this.#ctrl.signal,\n        openWhenHidden: true,\n        body: JSON.stringify({\n          agentId: this.#agentId,\n          robotId: this.#robotId,\n          conversationId: this.#conversationId,\n          stream: true,\n          config: {\n            debug: this.#debug,\n            ...(this.#answerLanguage ? { lang: this.#answerLanguage } : {}),\n          },\n          ...(typeof msg === \"string\"\n            ? {\n                input: msg,\n              }\n            : msg),\n        }),\n        headers: {\n          \"giraffe-contract-name\": \"easyops.api.aiops_chat.manage.LLMChatProxy\",\n        },\n        onopen: async (response) => {\n          if (response.ok) {\n            // eslint-disable-next-line no-console\n            console.log(\"open sse service success!\");\n          } else {\n            // eslint-disable-next-line no-console\n            console.log(\"open sse service fail!\");\n          }\n        },\n        onmessage: (msg) => {\n          const { data } = msg;\n          hadMatchMessage = true;\n          if (data === \"[DONE]\") {\n            this.#ctrl!.abort();\n            return;\n          }\n          let result = {} as SSEMessageItem;\n          try {\n            result = JSON.parse(data);\n\n            if (!this.#conversationId) {\n              this.setConversationId(result.conversationId);\n            }\n            if (this.#useSpiltWord && isGeneralTextType(result.type)) {\n              const wordList = this.splitWord(result.delta.content);\n\n              // 一段消息最多拆分为 50-100 段内容\n              let chunkedWords = wordList;\n              const maxChunks = 100;\n              if (wordList.length > maxChunks) {\n                const minChunks = 50;\n                const chunkSize = Math.ceil(\n                  wordList.length /\n                    (Math.floor(Math.random() * (maxChunks - minChunks + 1)) +\n                      minChunks)\n                );\n                chunkedWords = _.chunk(wordList, chunkSize).map((chunk) =>\n                  chunk.join(\"\")\n                );\n              }\n\n              chunkedWords.forEach((word) => {\n                // wordList.forEach((word) => {\n                this.enqueue({\n                  topic: \"add\",\n                  message: {\n                    ...result,\n                    delta: {\n                      role: result.delta.role ?? \"assistant\",\n                      content: word,\n                    },\n                  },\n                });\n              });\n            } else {\n              this.enqueue({\n                topic: \"add\",\n                message: {\n                  ...result,\n                  delta: {\n                    role: result.delta.role ?? \"assistant\",\n                    ...pick(result.delta, [\n                      \"content\",\n                      \"tool_calls\",\n                      \"tool_call_id\",\n                    ]),\n                  },\n                },\n              });\n            }\n          } catch {\n            result = JSON.parse(data);\n\n            const SENSITIVE_WORDS_ERROR =\n              \"input messages contains sensitive words\";\n            const EXCEED_TOKENS_ERROR = \"exceed tokens resource limit\";\n            let content = `\\`【数据格式错误】:\\` ${data}`;\n\n            if (result?.error?.includes(SENSITIVE_WORDS_ERROR)) {\n              content =\n                \"触发敏感词限制，请换一个问题，或找管理员修改敏感词配置\";\n            } else if (result?.error?.includes(EXCEED_TOKENS_ERROR)) {\n              content = \"超过资源配额限制，请找管理员增加资源配额\";\n            }\n\n            this.enqueue({\n              topic: \"add\",\n              message: {\n                created: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n                delta: {\n                  role: \"assistant\",\n                  content: content,\n                },\n                agentId: this.#agentId,\n                robotId: this.#robotId,\n              },\n            });\n            this.#ctrl!.abort();\n            return;\n          }\n        },\n        onclose: () => {\n          // eslint-disable-next-line no-console\n          console.log(\"close\");\n          // 兜底逻辑，连接结束，并且没有数据返回\n          if (!hadMatchMessage) {\n            this.enqueue({\n              topic: \"add\",\n              message: {\n                delta: {\n                  role: \"assistant\",\n                  content: \"`无法识别`\",\n                },\n                agentId: this.#agentId,\n                robotId: this.#robotId,\n                created: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n              },\n            });\n          }\n          this.#ctrl!.abort();\n        },\n        onerror: (err) => {\n          throw err;\n        },\n      }\n    );\n\n    this.#chatting = false;\n  }\n\n  stop() {\n    clearTimeout(this.#emitTimer);\n    this.#ctrl && this.#ctrl?.abort();\n    this.#chatting = false;\n    this.#emitTimer = undefined;\n    this.#isStartEmitEvent = false;\n    this.#clear();\n    this.notifySubscribers({ topic: \"stop\" });\n  }\n\n  #startEmitEvent() {\n    if (this.#isStartEmitEvent) return;\n    this.#isStartEmitEvent = true;\n    // 轮训队列，每隔 #enterInterval(默认 50ms) 推出第一条数据，获取到 text，推送给组件，组件接受后进行渲染\n    // 直到聊天结束，并且消息队列数据为空时，停止 emit\n    const callback = () => {\n      if (this.#chatting || this.#messageQueue.length) {\n        const messageItem = this.dequeue()!;\n        messageItem && this.notifySubscribers(messageItem);\n        this.#emitTimer = setTimeout(\n          callback,\n          getRandomInterval(this.#enterInterval, this.#messageQueue.length)\n        );\n      } else {\n        clearTimeout(this.#emitTimer);\n        this.#emitTimer = undefined;\n        this.#isStartEmitEvent = false;\n        this.notifySubscribers({ topic: \"finish\" });\n      }\n    };\n\n    this.#emitTimer = setTimeout(\n      callback,\n      getRandomInterval(this.#enterInterval, this.#messageQueue.length)\n    );\n  }\n}\n\nfunction getRandomInterval(\n  enterInterval: number,\n  messagesInQueue: number\n): number {\n  // 如果设置了 enterInterval >= 0，使用该值作为间隔\n  if (enterInterval >= 0) {\n    return enterInterval;\n  }\n  // 否则，根据消息队列中的消息数量动态调整间隔时间\n  // 当队列中消息很多时，尽快输出内容\n  if (messagesInQueue > 50) {\n    return 16;\n  }\n  const value = Math.floor(Math.random() * 11);\n  // 当队列消息不多时，20% 的概率返回 50ms，80% 的概率返回 50-300ms 之间的随机数\n  return value < 9 ? 50 : Math.floor(Math.random() * 251) + 50;\n}\n\n// export const chartService = new ChatService();\n","import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { MessageItem, type ToolCall } from \"../ChatViewContext.js\";\nimport moment from \"moment\";\nimport {\n  ChatBody,\n  ChatItem,\n  ChatService,\n  SessionItem,\n  SSEMessageItem,\n} from \"../ChatService.js\";\nimport { uniqueId } from \"lodash\";\nimport { InstanceApi_postSearchV3 } from \"@next-api-sdk/cmdb-sdk\";\n\nexport const NEW_SESSION_ID = \"new_session_id\";\nexport const RELATED_QUESTIONS_TYPE = \"RELATED_QUESTIONS\";\nexport const DEFAULT_TYPE = \"TEXT\";\n\nconst GENERAL_TEXT_TYPES: readonly string[] = [\n  \"TEXT\",\n  \"tool_call\",\n  \"tool_response\",\n];\n\nexport function isGeneralTextType(type: string | undefined) {\n  return GENERAL_TEXT_TYPES.includes(type ?? \"TEXT\");\n}\n\nfunction isGeneralSameType(a: string | undefined, b: string | undefined) {\n  return a === b || (isGeneralTextType(a) && isGeneralTextType(b));\n}\n\nexport function useChatViewInfo({\n  agentId,\n  robotId,\n  sessionId,\n  enterInterval = 50,\n  debug,\n  answerLanguage,\n  useSpiltWord,\n  showToolCalls,\n}: {\n  agentId: string;\n  robotId: string;\n  sessionId?: string;\n  enterInterval?: number;\n  debug: boolean;\n  answerLanguage?: string;\n  useSpiltWord?: boolean;\n  showToolCalls?: boolean;\n}) {\n  const [sessionEnd, setSessionEnd] = useState<boolean>(false);\n  const [sessionLoading, setSessionLoading] = useState<boolean>(false);\n  const [activeSessionId, setActiveSessionId] = useState<string | undefined>(\n    sessionId || NEW_SESSION_ID\n  );\n  const [loading, setLoading] = useState<boolean>(false);\n  const [chatting, setChatting] = useState<boolean>(false);\n  const [sessionList, setSessionList] = useState<SessionItem[]>([]);\n\n  const [msgLoading, setMsgLoading] = useState<boolean>(false);\n  const [msgEnd, setMsgEnd] = useState<boolean>(false);\n  const [msgList, setMsgList] = useState<MessageItem[]>([]);\n  const [searchStr, setSearchStr] = useState<string>(\"\");\n  const chattingMessageItem = useRef<MessageItem>();\n  const sessionSearchQuery = useRef<string | undefined>();\n  const haveCreatedSession = useRef<boolean>(false);\n  const [toolNames, setToolNames] = useState<Map<string, string | null>>(\n    new Map()\n  );\n  const toolNameRequests = useRef<Map<string, Promise<void>>>(new Map());\n\n  const fetchToolName = useCallback((toolId: string) => {\n    // 不要重复查询工具名称\n    if (toolNameRequests.current.has(toolId)) {\n      return;\n    }\n    const promise = InstanceApi_postSearchV3(\"LLM_TOOL@EASYOPS\", {\n      query: {\n        id: toolId,\n      },\n      fields: [\"name\"],\n    }).then(\n      (res) => {\n        const list = res.list as { name: string }[];\n        const name = list.length > 0 ? list[0].name : null;\n        setToolNames((pre) => {\n          const newMap = new Map(pre);\n          newMap.set(toolId, name);\n          return newMap;\n        });\n      },\n      (error) => {\n        // eslint-disable-next-line no-console\n        console.error(\"fetch tool name error\", error);\n      }\n    );\n    toolNameRequests.current.set(toolId, promise);\n  }, []);\n\n  const chatService = useMemo(\n    () =>\n      new ChatService({\n        agentId,\n        robotId,\n        enterInterval,\n        debug,\n        answerLanguage,\n        useSpiltWord,\n      }),\n    [agentId, robotId, enterInterval, debug, answerLanguage, useSpiltWord]\n  );\n\n  const defaultNewSessionItem = useMemo(\n    () =>\n      ({\n        conversationId: NEW_SESSION_ID,\n        title: \"新建会话\",\n      }) as SessionItem,\n    []\n  );\n\n  const stopChat = useCallback(() => {\n    chatService.stop();\n  }, [chatService]);\n\n  const setAgent = useCallback(\n    (id: string) => {\n      chatService.setAgentId(id);\n    },\n    [chatService]\n  );\n\n  const checkSession = useCallback(\n    async (id?: string, isInit = false) => {\n      if (isInit && id) {\n        // 切换聊天，重制状态\n        setMsgEnd(false);\n        setMsgLoading(false);\n        setLoading(true);\n        setMsgList([]);\n        setActiveSessionId(id);\n        if (chatting) {\n          stopChat();\n        }\n      } else {\n        setMsgLoading(true);\n      }\n      // 如果是新建会话，不需要查询历史\n      if (id === NEW_SESSION_ID) {\n        // 重置会话id\n        chatService.setConversationId();\n        setMsgEnd(true);\n        setLoading(false);\n        return;\n      }\n      const list = await chatService.getChatHistory(id);\n      const computedList = (list: ChatItem[]) => {\n        const newList: MessageItem[] = [];\n        list.forEach((item) => {\n          let toolCalls: ToolCall[] | undefined;\n          if (showToolCalls && item.allToolCalls) {\n            try {\n              const allToolCalls = JSON.parse(item.allToolCalls);\n              toolCalls = [];\n              allToolCalls.forEach(\n                (call: { callId: string; call: string; result: string }) => {\n                  try {\n                    // In legacy backend API, `call` is an array of objects,\n                    // and is an object in the latest API. We support both.\n                    const originalCall = JSON.parse(call.call);\n                    toolCalls!.push({\n                      id: call.callId,\n                      ...(Array.isArray(originalCall)\n                        ? originalCall[0]\n                        : originalCall),\n                      response: call.result,\n                    });\n                  } catch (e) {\n                    // eslint-disable-next-line no-console\n                    console.error(\"parse allToolCalls.call error\", e);\n                  }\n                }\n              );\n            } catch (e) {\n              // eslint-disable-next-line no-console\n              console.error(\"parse allToolCalls error\", e);\n            }\n          }\n          newList.unshift(\n            {\n              agentId: item.agentId,\n              robotId: item.robotId,\n              taskId: item.taskId,\n              conversationId: item.conversationId,\n              role: \"user\",\n              content: {\n                type: \"markdown\",\n                text: item.input,\n              },\n              key: uniqueId(\"msg-\"),\n              created: item.time,\n              type: DEFAULT_TYPE,\n            },\n            {\n              agentId: item.agentId,\n              taskId: item.taskId,\n              conversationId: item.conversationId,\n              role: \"assistant\",\n              content: {\n                type: \"markdown\",\n                text: item.output,\n              },\n              key: uniqueId(\"msg-\"),\n              created: item.inputTime,\n              tag: item.tag,\n              type: DEFAULT_TYPE,\n              toolCalls,\n            }\n          );\n        });\n        return newList.filter((item) => item.content.text);\n      };\n      setMsgList((preList) => {\n        return computedList(list).concat(preList);\n      });\n      setMsgLoading(false);\n      setLoading(false);\n    },\n    [chatService, chatting, stopChat]\n  );\n\n  const deleteSession = useCallback(\n    async (ids: string[]): Promise<boolean> => {\n      // 需要过滤新建会话, 因为新建会话在本地，还没上报到远端\n      const filterIds = ids.filter((item) => item !== NEW_SESSION_ID);\n      const result = await chatService.deleteSession(filterIds);\n      if (result) {\n        let deleteActiveSession = false;\n        if (\n          activeSessionId &&\n          filterIds.includes(activeSessionId) &&\n          activeSessionId !== NEW_SESSION_ID\n        ) {\n          // 如果删除会话包含当前会话，需要重置状态\n          deleteActiveSession = true;\n          // 清除会话id\n          chatService.setConversationId();\n\n          setMsgEnd(false);\n          setMsgLoading(false);\n          setMsgList([]);\n\n          if (chatting) {\n            stopChat();\n          }\n        }\n\n        setSessionList((list) => {\n          const newList = list.filter(\n            (item) => !filterIds.includes(item.conversationId!)\n          );\n          if (deleteActiveSession) {\n            // 已经选中的当前会话被删除，新建会话\n            const hasNewOne = list.find(\n              (item) => item.conversationId === NEW_SESSION_ID\n            );\n            setLoading(false);\n\n            setActiveSessionId(NEW_SESSION_ID);\n            if (hasNewOne) {\n              return newList;\n            } else {\n              return [defaultNewSessionItem].concat(newList);\n            }\n          }\n          return newList;\n        });\n      }\n      return result;\n    },\n    [activeSessionId, chatService, chatting, defaultNewSessionItem, stopChat]\n  );\n\n  const updateSession = useCallback(\n    async (id: string, data: Partial<SessionItem>): Promise<boolean> => {\n      const result = await chatService.updateSession(id, data);\n      if (result && data?.title) {\n        // 如果成功修改title，需要修改本地展示\n        setSessionList((list: any) => {\n          return list.map((item: any) => ({\n            ...item,\n            title: item.conversationId === id ? data.title : item?.title,\n          }));\n        });\n      }\n      return result;\n    },\n    [activeSessionId, chatService, chatting, defaultNewSessionItem, stopChat]\n  );\n\n  const querySessionHistory = useCallback(\n    async (limit?: number, query?: string) => {\n      setSessionLoading(true);\n      const list = await chatService.getSessionHistory(limit, query);\n      let newSessionList = list;\n      if (!activeSessionId) {\n        // 如果没有 activeSessionId, 默认新增会话\n        setActiveSessionId(NEW_SESSION_ID);\n        setMsgList([]);\n      }\n      if (!query || sessionSearchQuery.current === query) {\n        // 如果没有搜索或者搜索关键词相同，则直接拼接\n        newSessionList = [...sessionList].concat(newSessionList);\n      } else {\n        // 如果搜索关键词不同\n        setSessionEnd(false);\n      }\n\n      if (!activeSessionId) {\n        // 如果没有 activeSessionId, 补充一个新增会话项\n        newSessionList = [defaultNewSessionItem].concat(newSessionList);\n      } else if (activeSessionId && !haveCreatedSession.current) {\n        // 对于初始化时有activeSessionId的场景，也需要补充一个新增会话项\n        const hasNewOne = sessionList.find(\n          (item) => item.conversationId === NEW_SESSION_ID\n        );\n        if (!hasNewOne) {\n          newSessionList = [defaultNewSessionItem].concat(newSessionList);\n        }\n      }\n\n      sessionSearchQuery.current = query;\n      setSessionList(newSessionList);\n      setSessionLoading(false);\n    },\n    [\n      chatService,\n      activeSessionId,\n      sessionList,\n      defaultNewSessionItem,\n      sessionSearchQuery,\n      haveCreatedSession.current,\n    ]\n  );\n\n  const handleChat = useCallback(\n    async (msg: string | ChatBody) => {\n      const inputMsg = typeof msg === \"string\" ? msg : msg.input;\n      if (activeSessionId === NEW_SESSION_ID) {\n        // 如果当前会话属于新建会话，更新会话历史数据\n        setSessionList((list) => {\n          return list.map((item) => ({\n            ...item,\n            title:\n              item.conversationId === NEW_SESSION_ID ? inputMsg : item.title,\n          }));\n        });\n        haveCreatedSession.current = true;\n      }\n      setChatting(true);\n      chatService.chat(msg);\n      setMsgList((list) => {\n        return list\n          .filter((item) => item.type !== RELATED_QUESTIONS_TYPE)\n          .concat([\n            {\n              role: \"user\",\n              content: {\n                type: \"markdown\",\n                text: inputMsg,\n              },\n              created: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n              type: DEFAULT_TYPE,\n              key: uniqueId(\"msg-\"),\n            },\n            {\n              role: \"assistant\",\n              content: {\n                type: \"load\",\n                text: \"\",\n              },\n              chatting: true,\n              created: \"Now\",\n              type: DEFAULT_TYPE,\n              key: uniqueId(\"msg-\"),\n            },\n          ]);\n      });\n    },\n    [chatService, activeSessionId]\n  );\n\n  const createSession = useCallback(() => {\n    chatService.setConversationId();\n    setMsgList([]);\n    setActiveSessionId(NEW_SESSION_ID);\n    const hasNewOne = sessionList.find(\n      (item) => item.conversationId === NEW_SESSION_ID\n    );\n    if (!hasNewOne) {\n      setSessionList((preList) => {\n        return [defaultNewSessionItem].concat(preList);\n      });\n    }\n  }, [chatService, sessionList, defaultNewSessionItem]);\n\n  const handleIsLike = useCallback(\n    async (id: string, isLike: boolean): Promise<boolean> => {\n      const result = await chatService.setChatItemIsLike(id, isLike);\n      if (result) {\n        setMsgList((list) => {\n          return list.map((item) => ({\n            ...item,\n            tag:\n              id === item.taskId\n                ? {\n                    isLike,\n                  }\n                : item.tag,\n          }));\n        });\n      }\n      return result;\n    },\n    [chatService]\n  );\n\n  useEffect(() => {\n    if (sessionId) {\n      checkSession(sessionId);\n    } else {\n      // 因为在sessionList内部会有一次querySessionHistory的初始调用，设置activeSessionId等\n      // 此处兼容处理不显示sessionList时的场景（如，嵌入iframe）\n      querySessionHistory(30);\n    }\n  }, [sessionId]);\n\n  useEffect(() => {\n    // session listener\n    const handleSessionEnd = () => {\n      setSessionEnd(true);\n    };\n    chatService.subscribe(\"session.fetch.end\", handleSessionEnd);\n\n    return () => {\n      chatService.subscribe(\"session.fetch.end\", handleSessionEnd);\n    };\n  }, [chatService]);\n\n  useEffect(() => {\n    // chat listener\n    const listener = (_msgItem?: SSEMessageItem) => {\n      if (!_msgItem) return;\n\n      const msgItemData = {\n        type: DEFAULT_TYPE,\n        ..._msgItem,\n      };\n\n      if (activeSessionId === NEW_SESSION_ID && msgItemData.conversationId) {\n        // 如果当前会话属于新建会话，更新会话历史数据\n        setSessionList((list) => {\n          return list.map((item) => ({\n            ...item,\n            conversationId:\n              item.conversationId === NEW_SESSION_ID\n                ? msgItemData.conversationId!\n                : item.conversationId,\n          }));\n        });\n        setActiveSessionId(msgItemData.conversationId);\n      }\n\n      // 如果未开启显示工具调用过程，则忽略工具调用相关消息\n      if (\n        !showToolCalls &&\n        (msgItemData.type === \"tool_call\" ||\n          msgItemData.type === \"tool_response\")\n      ) {\n        return;\n      }\n\n      if (msgItemData.type === \"tool_call\") {\n        for (const toolId of msgItemData.delta.tool_calls!.map(\n          (call) => call.function.name\n        )) {\n          fetchToolName(toolId);\n        }\n      }\n\n      let generalSameType = false;\n      const isStart = !chattingMessageItem.current;\n      const isUpdate =\n        !isStart &&\n        (generalSameType =\n          isGeneralSameType(\n            msgItemData.type,\n            chattingMessageItem.current!.type\n          ) && msgItemData.taskId === chattingMessageItem.current!.taskId);\n\n      const thisMessage = (chattingMessageItem.current = {\n        ...msgItemData,\n        role: \"assistant\",\n        content: {\n          type: \"markdown\",\n          // 只有普通文本类型才更新聊天文本内容，其他如 `tool_response` 不更新。\n          text:\n            msgItemData.type == null || msgItemData.type === \"TEXT\"\n              ? `${isUpdate ? chattingMessageItem.current!.content.text : \"\"}${msgItemData.delta.content}`\n              : (chattingMessageItem.current?.content.text ?? \"\"),\n        },\n        chatting: true,\n        toolCalls:\n          msgItemData.type === \"tool_call\"\n            ? [\n                ...(chattingMessageItem.current?.toolCalls ?? []),\n                ...msgItemData.delta.tool_calls!,\n              ]\n            : msgItemData.type === \"tool_response\"\n              ? chattingMessageItem.current?.toolCalls?.map((call) =>\n                  call.id === msgItemData.delta.tool_call_id\n                    ? {\n                        ...call,\n                        response: msgItemData.delta.content,\n                      }\n                    : call\n                )\n              : chattingMessageItem.current?.toolCalls,\n        created: moment(msgItemData?.created).format(\"YYYY-MM-DD HH:mm:ss\"),\n        key: chattingMessageItem.current?.key ?? uniqueId(\"msg-\"),\n      });\n\n      setMsgList((list) => {\n        if (isStart || isUpdate) {\n          list.pop();\n          return list.concat(thisMessage);\n        }\n        return (\n          generalSameType\n            ? list\n            : list.filter((item) => item.type !== RELATED_QUESTIONS_TYPE)\n        )\n          .map<MessageItem>((item) => ({ ...item, chatting: false }))\n          .concat(thisMessage);\n      });\n    };\n    const reset = () => {\n      setChatting(false);\n      setLoading(false);\n      chattingMessageItem.current = undefined;\n    };\n    const finishListener = () => {\n      setMsgList((list) => {\n        return list.map((item) => ({\n          ...item,\n          chatting: false,\n          toolCalls: item.toolCalls?.map((call) =>\n            call.response === undefined ? { ...call, failed: true } : call\n          ),\n        }));\n      });\n      reset();\n    };\n    const fetchEndListener = () => {\n      setMsgEnd(true);\n    };\n    const stopListener = () => {\n      if (chattingMessageItem.current) {\n        const stopMessageItem: MessageItem = {\n          ...chattingMessageItem.current,\n          content: {\n            type: \"markdown\",\n            text:\n              chattingMessageItem.current.content.text +\n              \" \\\\\\n  ` 对话被中断了 `\",\n          },\n        };\n        setMsgList((list) => {\n          list.pop();\n          return msgList.concat(stopMessageItem);\n        });\n      } else {\n        setMsgList((list) => {\n          return list.filter((item) => item.content.type !== \"load\");\n        });\n      }\n      reset();\n    };\n    chatService.subscribe(\"add\", listener);\n    chatService.subscribe(\"finish\", finishListener);\n    chatService.subscribe(\"stop\", stopListener);\n    chatService.subscribe(\"message.fetch.end\", fetchEndListener);\n    return () => {\n      chatService.unsubscribe(\"add\", listener);\n      chatService.unsubscribe(\"finish\", finishListener);\n      chatService.unsubscribe(\"stop\", stopListener);\n      chatService.unsubscribe(\"message.fetch.end\", fetchEndListener);\n    };\n  }, [chatService, activeSessionId, msgList, showToolCalls, fetchToolName]);\n\n  return {\n    sessionEnd,\n    sessionLoading,\n    loading,\n    chatting,\n    activeSessionId,\n    sessionList,\n    searchStr,\n    msgEnd,\n    msgLoading,\n    msgList,\n    toolNames,\n    setAgent,\n    handleChat,\n    stopChat,\n    createSession,\n    deleteSession,\n    updateSession,\n    checkSession,\n    setSearchStr,\n    querySessionHistory,\n    handleIsLike,\n  };\n}\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.progress-text{position:relative;margin-left:12px;font-size:12px;color:var(--palette-gray-7);line-height:22px;min-height:22px}.progress-text::before{content:\"·\";font-size:16px;position:absolute;left:-10px;top:-4px}.custom-component-wrapper .params{margin-top:6px;border-radius:3px}:is(.custom-component-wrapper .params) pre{margin:4px 0}.custom-component-wrapper .params-tip,.custom-component-wrapper .error-tip,.custom-component-wrapper .result-tip{font-size:0.875em;color:rgb(94 129 172)}.custom-component-wrapper .empty-tip{font-size:12px;color:var(--palette-gray-7)}:is(.custom-component-wrapper .table-wrapper) .table-container{position:relative;box-sizing:border-box;margin:0;padding:0;font-size:14px;clear:both;max-width:100%;overflow:hidden}:is(:is(.custom-component-wrapper .table-wrapper) .table-container) .table-content{overflow-x:auto}:is(:is(:is(.custom-component-wrapper .table-wrapper) .table-container) .table-content) table{margin:4px 0}:is(:is(:is(:is(:is(.custom-component-wrapper .table-wrapper) .table-container) .table-content) table) tr) td{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}:is(.custom-component-wrapper .table-wrapper) .open-more{margin-top:4px;font-size:12px;display:flex;justify-content:flex-end}.custom-component-wrapper .chart-wrapper{background:#fff;margin-top:12px}.default-container .default-toolbar-container{visibility:hidden;position:absolute;top:0;right:0}.default-container:hover .default-toolbar-container{visibility:visible}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.ProseMirror{position:relative;word-wrap:break-word;white-space:pre-wrap;white-space:break-spaces;font-variant-ligatures:none;font-feature-settings:\"liga\" 0,none;font-weight:400}.ProseMirror pre{white-space:pre-wrap}.ProseMirror li{position:relative}.ProseMirror-hideselection *::selection{background:transparent}.ProseMirror-hideselection *::-moz-selection{background:transparent}.ProseMirror-hideselection{caret-color:transparent}.ProseMirror-selectednode{outline:2px solid #8cf}li.ProseMirror-selectednode{outline:none}li.ProseMirror-selectednode:after{content:\"\";position:absolute;left:-32px;right:-2px;top:-2px;bottom:-2px;border:2px solid #8cf;pointer-events:none}img.ProseMirror-separator{display:inline!important;border:none!important;margin:0!important}.ProseMirror .tableWrapper{overflow-x:auto}.ProseMirror table{border-collapse:collapse;table-layout:fixed;width:100%;overflow:hidden;background-color:white;margin:4px 0}.ProseMirror td,\n.ProseMirror th{vertical-align:top;box-sizing:border-box;position:relative}.ProseMirror .column-resize-handle{position:absolute;right:-2px;top:0;bottom:0;width:4px;z-index:20;background-color:#adf;pointer-events:none}.ProseMirror.resize-cursor{cursor:ew-resize;cursor:col-resize}.ProseMirror .selectedCell:after{z-index:2;position:absolute;content:\"\";left:0;right:0;top:0;bottom:0;background:rgba(200,200,255,0.4);pointer-events:none}.milkdown-theme-nord blockquote{border-left-width:4px;--tw-border-opacity:1;border-color:rgb(94 129 172/var(--tw-border-opacity));padding-left:1rem;font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif;font-style:normal}.milkdown-theme-nord code{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-weight:400;--tw-text-opacity:1;color:rgb(94 129 172/var(--tw-text-opacity))}.user .milkdown-theme-nord code{color:rgb(120 168 237)}.milkdown-theme-nord pre code{color:inherit}.milkdown-theme-nord img{margin-top:0!important;margin-bottom:0!important;display:inline-block;max-width:100%}.milkdown-theme-nord.prose\n  :where(blockquote):not(:where([class~=\"not-prose\"] *)){font-weight:400}.milkdown-theme-nord.prose\n  :where(ol > li):not(:where([class~=\"not-prose\"] *))::marker,\n.milkdown-theme-nord.prose\n  :where(ul > li):not(:where([class~=\"not-prose\"] *))::marker{--tw-text-opacity:1;color:rgb(94 129 172/var(--tw-text-opacity))}.milkdown-theme-nord.prose\n  :where(blockquote p:first-of-type):not(:where([class~=\"not-prose\"] *)):before,\n.milkdown-theme-nord.prose\n  :where(blockquote p:first-of-type):not(:where([class~=\"not-prose\"] *)):after{content:\"\"}.milkdown-theme-nord.prose\n  :where(code):not(:where([class~=\"not-prose\"] *)):before,\n.milkdown-theme-nord.prose\n  :where(code):not(:where([class~=\"not-prose\"] *)):after{content:\"\"}.milkdown-theme-nord.prose .tableWrapper{position:relative;margin-bottom:0.5rem;overflow-x:auto}.milkdown-theme-nord.prose table{font-size:0.875rem;line-height:1.25rem;--tw-shadow:0 4px 6px -1px rgb(0 0 0/0.1),0 2px 4px -2px rgb(0 0 0/0.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);width:max-content}@media (min-width: 640px){.milkdown-theme-nord.prose table{border-radius:0.5rem}}.milkdown-theme-nord.prose td,\n.milkdown-theme-nord.prose th{padding:0.75rem 1.5rem!important;max-width:20em}.milkdown-theme-nord.prose tr{border-bottom-width:1px;--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.prose :where(tr:first-child){background-color:var(--antd-table-header-bg)}.dark .milkdown-theme-nord.prose tr{--tw-border-opacity:1;border-color:rgb(75 85 99/var(--tw-border-opacity))}.milkdown-theme-nord.prose :where(td, th) p{margin:0!important}.dark .milkdown-theme-nord.prose :where(td, th):nth-child(odd){--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.milkdown-theme-nord.prose.ProseMirror .selectedCell:after{background-color:#88c0d04d}.milkdown-theme-nord.prose br[data-is-inline=\"true\"],\n.milkdown-theme-nord.prose br[data-is-inline=\"true\"]:after{content:\" \"}.prose{color:var(--color-normal-text)}.prose :where(p):not(:where([class~=\"not-prose\"] *)){margin-top:1.25em;margin-bottom:1.25em}.prose :where([class~=\"lead\"]):not(:where([class~=\"not-prose\"] *)){color:var(--tw-prose-lead);font-size:1.25em;line-height:1.6;margin-top:1.2em;margin-bottom:1.2em}.prose :where(a):not(:where([class~=\"not-prose\"] *)){color:var(--color-info);text-decoration:underline;font-weight:500}.prose :where(strong):not(:where([class~=\"not-prose\"] *)){color:var(--color-strong-text);font-weight:600}.user .prose :where(strong):not(:where([class~=\"not-prose\"] *)){color:inherit;font-weight:600;padding:0 2px}.prose :where(a strong):not(:where([class~=\"not-prose\"] *)){color:inherit}.prose :where(blockquote strong):not(:where([class~=\"not-prose\"] *)){color:inherit}.prose :where(thead th strong):not(:where([class~=\"not-prose\"] *)){color:inherit}.prose :where(ol):not(:where([class~=\"not-prose\"] *)){list-style-type:decimal;margin-top:1.25em;margin-bottom:1.25em;padding-left:1.625em}.prose :where(ol[type=\"A\"]):not(:where([class~=\"not-prose\"] *)){list-style-type:upper-alpha}.prose :where(ol[type=\"a\"]):not(:where([class~=\"not-prose\"] *)){list-style-type:lower-alpha}.prose :where(ol[type=\"A\" s]):not(:where([class~=\"not-prose\"] *)){list-style-type:upper-alpha}.prose :where(ol[type=\"a\" s]):not(:where([class~=\"not-prose\"] *)){list-style-type:lower-alpha}.prose :where(ol[type=\"I\"]):not(:where([class~=\"not-prose\"] *)){list-style-type:upper-roman}.prose :where(ol[type=\"i\"]):not(:where([class~=\"not-prose\"] *)){list-style-type:lower-roman}.prose :where(ol[type=\"I\" s]):not(:where([class~=\"not-prose\"] *)){list-style-type:upper-roman}.prose :where(ol[type=\"i\" s]):not(:where([class~=\"not-prose\"] *)){list-style-type:lower-roman}.prose :where(ol[type=\"1\"]):not(:where([class~=\"not-prose\"] *)){list-style-type:decimal}.prose :where(ul):not(:where([class~=\"not-prose\"] *)){list-style-type:disc;margin-top:1.25em;margin-bottom:1.25em;padding-left:1.625em}.prose :where(ol > li):not(:where([class~=\"not-prose\"] *))::marker{font-weight:400;color:var(--tw-prose-counters)}.prose :where(ul > li):not(:where([class~=\"not-prose\"] *))::marker{color:var(--tw-prose-bullets)}.prose :where(hr):not(:where([class~=\"not-prose\"] *)){border-color:var(--tw-prose-hr);border-top-width:1px;margin-top:3em;margin-bottom:3em}.prose :where(blockquote):not(:where([class~=\"not-prose\"] *)){font-weight:500;font-style:italic;color:var(--color-auxiliary-text);border-left-width:0.25rem;border-left-color:var(--tw-prose-quote-borders);quotes:\"\\\\201C\" \"\\\\201D\" \"\\\\2018\" \"\\\\2019\";margin-top:1.6em;margin-bottom:1.6em;padding-left:1em}.prose\n  :where(blockquote p:first-of-type):not(\n    :where([class~=\"not-prose\"] *)\n  )::before{content:open-quote}.prose\n  :where(blockquote p:last-of-type):not(:where([class~=\"not-prose\"] *))::after{content:close-quote}.prose :where(h1):not(:where([class~=\"not-prose\"] *)){color:var(--color-strong-text);font-weight:800;font-size:2.25em;margin-top:0;margin-bottom:0.8888889em;line-height:1.1111111}.prose :where(h1 strong):not(:where([class~=\"not-prose\"] *)){font-weight:900;color:inherit}.prose :where(h2):not(:where([class~=\"not-prose\"] *)){color:var(--color-strong-text);font-weight:700;font-size:1.5em;margin-top:2em;margin-bottom:1em;line-height:1.3333333}.prose :where(h2 strong):not(:where([class~=\"not-prose\"] *)){font-weight:800;color:inherit}.prose :where(h3):not(:where([class~=\"not-prose\"] *)){color:var(--color-strong-text);font-weight:600;font-size:1.25em;margin-top:1.6em;margin-bottom:0.6em;line-height:1.6}.prose :where(h3 strong):not(:where([class~=\"not-prose\"] *)){font-weight:700;color:inherit}.prose :where(h4):not(:where([class~=\"not-prose\"] *)){color:var(--color-strong-text);font-weight:600;margin-top:1.5em;margin-bottom:0.5em;line-height:1.5}.prose :where(h4 strong):not(:where([class~=\"not-prose\"] *)){font-weight:700;color:inherit}.prose :where(img):not(:where([class~=\"not-prose\"] *)){margin-top:2em;margin-bottom:2em}.prose :where(figure > *):not(:where([class~=\"not-prose\"] *)){margin-top:0;margin-bottom:0}.prose :where(figcaption):not(:where([class~=\"not-prose\"] *)){color:var(--tw-prose-captions);font-size:0.875em;line-height:1.4285714;margin-top:0.8571429em}.prose :where(code):not(:where([class~=\"not-prose\"] *)){color:var(--tw-prose-code);font-weight:600;font-size:0.875em}.prose :where(code):not(:where([class~=\"not-prose\"] *))::before{content:\"\\`\"}.prose :where(code):not(:where([class~=\"not-prose\"] *))::after{content:\"\\`\"}.prose :where(a code):not(:where([class~=\"not-prose\"] *)){color:inherit}.prose :where(h1 code):not(:where([class~=\"not-prose\"] *)){color:inherit}.prose :where(h2 code):not(:where([class~=\"not-prose\"] *)){color:inherit;font-size:0.875em}.prose :where(h3 code):not(:where([class~=\"not-prose\"] *)){color:inherit;font-size:0.9em}.prose :where(h4 code):not(:where([class~=\"not-prose\"] *)){color:inherit}.prose :where(blockquote code):not(:where([class~=\"not-prose\"] *)){color:inherit}.prose :where(thead th code):not(:where([class~=\"not-prose\"] *)){color:inherit}.prose :where(pre):not(:where([class~=\"not-prose\"] *)){color:var(--tw-prose-pre-code);background-color:var(--tw-prose-pre-bg);overflow-x:auto;font-weight:400;font-size:0.875em;line-height:1.7142857;margin-top:1.7142857em;margin-bottom:1.7142857em;border-radius:0.375rem;padding-top:0.8571429em;padding-right:1.1428571em;padding-bottom:0.8571429em;padding-left:1.1428571em}.prose :where(pre code):not(:where([class~=\"not-prose\"] *)){background-color:transparent;border-width:0;border-radius:0;padding:0;font-weight:inherit;color:inherit;font-size:inherit;font-family:inherit;line-height:inherit}.prose :where(pre code):not(:where([class~=\"not-prose\"] *))::before{content:none}.prose :where(pre code):not(:where([class~=\"not-prose\"] *))::after{content:none}.prose :where(table):not(:where([class~=\"not-prose\"] *)){width:100%;table-layout:auto;text-align:left;margin-top:2em;margin-bottom:2em;font-size:0.875em;line-height:1.7142857}.prose :where(thead):not(:where([class~=\"not-prose\"] *)){border-bottom-width:1px;border-bottom-color:var(--tw-prose-th-borders)}.prose :where(thead th):not(:where([class~=\"not-prose\"] *)){color:var(--color-strong-text);font-weight:600;vertical-align:bottom;padding-right:0.5714286em;padding-bottom:0.5714286em;padding-left:0.5714286em}.prose :where(tbody tr):not(:where([class~=\"not-prose\"] *)){border-bottom-width:1px;border-bottom-color:var(--tw-prose-td-borders)}.prose :where(tbody tr:last-child):not(:where([class~=\"not-prose\"] *)){border-bottom-width:0}.prose :where(tbody td):not(:where([class~=\"not-prose\"] *)){vertical-align:baseline}.prose :where(tfoot):not(:where([class~=\"not-prose\"] *)){border-top-width:1px;border-top-color:var(--tw-prose-th-borders)}.prose :where(tfoot td):not(:where([class~=\"not-prose\"] *)){vertical-align:top}.prose{--tw-prose-body:#374151;--tw-prose-headings:#111827;--tw-prose-lead:#4b5563;--tw-prose-links:#111827;--tw-prose-bold:#111827;--tw-prose-counters:#6b7280;--tw-prose-bullets:#d1d5db;--tw-prose-hr:#e5e7eb;--tw-prose-quotes:#111827;--tw-prose-quote-borders:#e5e7eb;--tw-prose-captions:#6b7280;--tw-prose-code:#111827;--tw-prose-pre-code:#e5e7eb;--tw-prose-pre-bg:#1f2937;--tw-prose-th-borders:#d1d5db;--tw-prose-td-borders:#e5e7eb;--tw-prose-invert-body:#d1d5db;--tw-prose-invert-headings:#fff;--tw-prose-invert-lead:#9ca3af;--tw-prose-invert-links:#fff;--tw-prose-invert-bold:#fff;--tw-prose-invert-counters:#9ca3af;--tw-prose-invert-bullets:#4b5563;--tw-prose-invert-hr:#374151;--tw-prose-invert-quotes:#f3f4f6;--tw-prose-invert-quote-borders:#374151;--tw-prose-invert-captions:#9ca3af;--tw-prose-invert-code:#fff;--tw-prose-invert-pre-code:#d1d5db;--tw-prose-invert-pre-bg:rgb(0 0 0/50%);--tw-prose-invert-th-borders:#4b5563;--tw-prose-invert-td-borders:#374151;font-size:1rem;line-height:1.75}.prose :where(video):not(:where([class~=\"not-prose\"] *)){margin-top:2em;margin-bottom:2em}.prose :where(figure):not(:where([class~=\"not-prose\"] *)){margin-top:2em;margin-bottom:2em}.prose :where(li):not(:where([class~=\"not-prose\"] *)){margin-top:0.5em;margin-bottom:0.5em}.prose :where(ol > li):not(:where([class~=\"not-prose\"] *)){padding-left:0.375em}.prose :where(ul > li):not(:where([class~=\"not-prose\"] *)){padding-left:0.375em}.prose :where(.prose > ul > li p):not(:where([class~=\"not-prose\"] *)){margin-top:0.75em;margin-bottom:0.75em}.prose\n  :where(.prose > ul > li > *:first-child):not(:where([class~=\"not-prose\"] *)){margin-top:1.25em}.prose\n  :where(.prose > ul > li > *:last-child):not(:where([class~=\"not-prose\"] *)){margin-bottom:1.25em}.prose\n  :where(.prose > ol > li > *:first-child):not(:where([class~=\"not-prose\"] *)){margin-top:1.25em}.prose\n  :where(.prose > ol > li > *:last-child):not(:where([class~=\"not-prose\"] *)){margin-bottom:1.25em}.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=\"not-prose\"] *)){margin-top:0.75em;margin-bottom:0.75em}.prose :where(hr + *):not(:where([class~=\"not-prose\"] *)){margin-top:0}.prose :where(h2 + *):not(:where([class~=\"not-prose\"] *)){margin-top:0}.prose :where(h3 + *):not(:where([class~=\"not-prose\"] *)){margin-top:0}.prose :where(h4 + *):not(:where([class~=\"not-prose\"] *)){margin-top:0}.prose :where(thead th:first-child):not(:where([class~=\"not-prose\"] *)){padding-left:0}.prose :where(thead th:last-child):not(:where([class~=\"not-prose\"] *)){padding-right:0}.prose :where(tbody td, tfoot td):not(:where([class~=\"not-prose\"] *)){padding-top:0.5714286em;padding-right:0.5714286em;padding-bottom:0.5714286em;padding-left:0.5714286em}.prose\n  :where(tbody td:first-child, tfoot td:first-child):not(\n    :where([class~=\"not-prose\"] *)\n  ){padding-left:0}.prose\n  :where(tbody td:last-child, tfoot td:last-child):not(\n    :where([class~=\"not-prose\"] *)\n  ){padding-right:0}.prose :where(.prose > :first-child):not(:where([class~=\"not-prose\"] *)){margin-top:0}.prose :where(.prose > :last-child):not(:where([class~=\"not-prose\"] *)){margin-bottom:0}.visible{visibility:visible}.invisible{visibility:hidden}.collapse{visibility:collapse}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.isolate{isolation:isolate}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.inline-flex{display:inline-flex}.\\\\!table{display:table!important}.table{display:table}.inline-table{display:inline-table}.table-caption{display:table-caption}.table-cell{display:table-cell}.table-column{display:table-column}.table-column-group{display:table-column-group}.table-footer-group{display:table-footer-group}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.flow-root{display:flow-root}.grid{display:grid}.inline-grid{display:inline-grid}.contents{display:contents}.list-item{display:list-item}.hidden{display:none}.flex-shrink{flex-shrink:1}.shrink{flex-shrink:1}.flex-grow{flex-grow:1}.grow{flex-grow:1}.border-collapse{border-collapse:collapse}.\\\\!transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))!important}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.select-all{-webkit-user-select:all;user-select:all}.resize{resize:both}.flex-wrap{flex-wrap:wrap}.self-start{align-self:flex-start}.self-end{align-self:flex-end}.break-all{word-break:break-all}.rounded{border-radius:0.25rem}.border{border-width:1px}.text-justify{text-align:justify}.uppercase{text-transform:uppercase}.lowercase{text-transform:lowercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.ordinal{--tw-ordinal:ordinal;font-feature-settings:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.slashed-zero{--tw-slashed-zero:slashed-zero;font-feature-settings:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.lining-nums{--tw-numeric-figure:lining-nums;font-feature-settings:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.oldstyle-nums{--tw-numeric-figure:oldstyle-nums;font-feature-settings:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.proportional-nums{--tw-numeric-spacing:proportional-nums;font-feature-settings:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.tabular-nums{--tw-numeric-spacing:tabular-nums;font-feature-settings:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.diagonal-fractions{--tw-numeric-fraction:diagonal-fractions;font-feature-settings:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.stacked-fractions{--tw-numeric-fraction:stacked-fractions;font-feature-settings:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.underline{text-decoration-line:underline}.overline{text-decoration-line:overline}.line-through{text-decoration-line:line-through}.shadow{--tw-shadow:0 1px 3px 0 rgb(0 0 0/0.1),0 1px 2px -1px rgb(0 0 0/0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.outline{outline-style:solid}.blur{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.grayscale{--tw-grayscale:grayscale(100%);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.invert{--tw-invert:invert(100%);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.sepia{--tw-sepia:sepia(100%);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.backdrop-filter{-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4,0,0.2,1);transition-duration:150ms}.ease-in{transition-timing-function:cubic-bezier(0.4,0,1,1)}.ease-in-out{transition-timing-function:cubic-bezier(0.4,0,0.2,1)}.ease-out{transition-timing-function:cubic-bezier(0,0,0.2,1)}.milkdown{border-radius:0.25rem;margin:0;padding:0}.editor{margin-left:auto;margin-right:auto}:is(.dark .dark\\\\:prose-invert){--tw-prose-body:var(--tw-prose-invert-body);--tw-prose-headings:var(--tw-prose-invert-headings);--tw-prose-lead:var(--tw-prose-invert-lead);--tw-prose-links:var(--tw-prose-invert-links);--tw-prose-bold:var(--tw-prose-invert-bold);--tw-prose-counters:var(--tw-prose-invert-counters);--tw-prose-bullets:var(--tw-prose-invert-bullets);--tw-prose-hr:var(--tw-prose-invert-hr);--tw-prose-quotes:var(--tw-prose-invert-quotes);--tw-prose-quote-borders:var(--tw-prose-invert-quote-borders);--tw-prose-captions:var(--tw-prose-invert-captions);--tw-prose-code:var(--tw-prose-invert-code);--tw-prose-pre-code:var(--tw-prose-invert-pre-code);--tw-prose-pre-bg:var(--tw-prose-invert-pre-bg);--tw-prose-th-borders:var(--tw-prose-invert-th-borders);--tw-prose-td-borders:var(--tw-prose-invert-td-borders)}code[class*=\"language-\"],\npre[class*=\"language-\"]{color:#f8f8f2;background:none;font-family:\"Fira Code\",Consolas,Monaco,\"Andale Mono\",\"Ubuntu Mono\",monospace;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;tab-size:4;-webkit-hyphens:none;hyphens:none}pre[class*=\"language-\"]{padding:1em;margin:0.5em 0;overflow:auto;border-radius:0.3em}:not(pre) > code[class*=\"language-\"],\npre[class*=\"language-\"]{background:#2e3440}:not(pre) > code[class*=\"language-\"]{padding:0.1em;border-radius:0.3em;white-space:normal}.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata{color:#636f88}.token.punctuation{color:#81a1c1}.namespace{opacity:0.7}.token.property,\n.token.tag,\n.token.constant,\n.token.symbol,\n.token.deleted{color:#81a1c1}.token.number{color:#b48ead}.token.boolean{color:#81a1c1}.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted{color:#a3be8c}.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string,\n.token.variable{color:#81a1c1}.token.atrule,\n.token.attr-value,\n.token.function,\n.token.class-name{color:#88c0d0}.token.keyword{color:#81a1c1}.token.regex,\n.token.important{color:#ebcb8b}.token.important,\n.token.bold{font-weight:bold}.token.italic{font-style:italic}.token.entity{cursor:help}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.quick-answer-wrapper{margin-top:20px;border-radius:6px;border:1px solid var(--color-border-divider-line);padding:16px 24px}.quick-answer-wrapper .tip{font-size:18px;margin-bottom:30px}.quick-answer-wrapper .quick-answer-list{display:grid;gap:24px 16px;border-radius:3px;grid-template-columns:repeat(auto-fill,minmax(250px,1fr))}:is(.quick-answer-wrapper .quick-answer-list) .quick-answer-card-item{position:relative;padding:16px;border-radius:6px;cursor:pointer;display:flex;padding:10px 20px;gap:12px;width:auto;box-sizing:border-box}:is(:is(.quick-answer-wrapper .quick-answer-list) .quick-answer-card-item):hover{box-shadow:var(--quick-answer-card-item-hover)}:is(:is(:is(.quick-answer-wrapper .quick-answer-list) .quick-answer-card-item) .left) .icon{font-size:20px;color:#fff;padding:8px;border-radius:6px;margin-top:4px}:is(:is(.quick-answer-wrapper .quick-answer-list) .quick-answer-card-item) .content{flex:1;min-width:0}:is(:is(:is(.quick-answer-wrapper .quick-answer-list) .quick-answer-card-item) .content) .title{font-size:16px;font-weight:bold;color:var(--color-normal-text);text-overflow:ellipsis;overflow:hidden;white-space:nowrap}:is(:is(:is(.quick-answer-wrapper .quick-answer-list) .quick-answer-card-item) .content) .description{color:var(--color-auxiliary-text);font-size:12px;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}.quick-answer-wrapper .show-more-wrapper{text-align:center;margin-top:20px}:is(.quick-answer-wrapper .show-more-wrapper) .show-more-btn{line-height:24px}:is(:is(.quick-answer-wrapper .show-more-wrapper) .show-more-btn)::after,:is(:is(.quick-answer-wrapper .show-more-wrapper) .show-more-btn)::before{content:\"- - - - -\";color:var(--color-text-divider-line);position:absolute}:is(:is(.quick-answer-wrapper .show-more-wrapper) .show-more-btn)::before{margin-left:-60px}:is(:is(.quick-answer-wrapper .show-more-wrapper) .show-more-btn)::after{margin-left:10px}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../assets/loading.gif\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.message-list-loading-wrapper{width:140px;height:140px;background-repeat:no-repeat;margin:auto;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___})}.chart-item-loading-wrapper{display:flex;padding:10px;font-size:40px;align-items:center;justify-content:center;color:#d2d3d4;border-radius:6px}.chart-item-loading-wrapper .load{display:inline-block;position:relative;width:64px;height:64px}:is(.chart-item-loading-wrapper .load) div{position:absolute;top:27px;width:11px;height:11px;border-radius:50%;background:#aaa8a8;animation-timing-function:cubic-bezier(0,1,1,0)}:is(:is(.chart-item-loading-wrapper .load) div):nth-child(1){left:6px;animation:load1 0.6s infinite}:is(:is(.chart-item-loading-wrapper .load) div):nth-child(2){left:6px;animation:load2 0.6s infinite}:is(:is(.chart-item-loading-wrapper .load) div):nth-child(3){left:26px;animation:load2 0.6s infinite}:is(:is(.chart-item-loading-wrapper .load) div):nth-child(4){left:45px;animation:load3 0.6s infinite}@keyframes load1{0%{transform:scale(0)}100%{transform:scale(1)}}@keyframes load2{0%{transform:translate(0,0)}100%{transform:translate(19px,0)}}@keyframes load3{0%{transform:scale(1)}100%{transform:scale(0)}}.common-loading-wrapper{text-align:center;font-size:30px;color:#ddd}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root{--message-box-bg:#f1f3f4;--search-input-icon-hover:#ddd;--quick-answer-card-item-hover:0px 7px 8px 0px rgba(0,0,0,0.15)}html[data-theme=\"dark\"],\nhtml[data-theme=\"dark-v2\"]{--message-box-bg:rgba(255,255,255,0.16);--search-input-icon-hover:#383838;--quick-answer-card-item-hover:0px 7px 8px 0px rgba(0,0,0,0.24)}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.shadow.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./components/loading.shadow.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./components/MessageItem/Markdown/markdown.shadow.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_3___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./components/QuickAnswerList/quickAnswerList.shadow.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_4___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./components/MessageItem/Markdown/CodeBlock/CodeBlock.shadow.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_3___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_4___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./assets/user.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"./assets/robot.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:block;height:100%}:host([hidden]){display:none}.chat-view-container{display:flex;flex-direction:row;width:100%;height:100%}.chat-view-selector{width:200px;padding:14px;border-right:1px solid var(--color-border-divider-line)}.chat-view-content{flex:1;display:flex;flex-direction:column;width:100%;gap:8px}.chat-view-content .chat-view-toolbar{background:#e0e4e5;padding:18px;display:flex;justify-content:space-between;align-items:center}:is(.chat-view-content .chat-view-toolbar) .username{color:#333333;font-weight:500;line-height:22px;font-size:16px}.chat-view-content .chat-view{max-width:100%;position:relative;display:flex;flex:1;flex-direction:column;box-sizing:border-box;overflow-y:auto}.session-list-wrapper{display:flex;flex-direction:column;height:100%}.session-list-wrapper .session-title{font-size:16px;color:var(--color-header-text);margin-bottom:16px}.session-list-wrapper .session-list{overflow-y:auto}:is(.session-list-wrapper .session-list) .session-item{display:flex;justify-content:space-between;cursor:pointer;border-radius:var(--small-border-radius);background-color:var(--third-menu-default-bg);padding:6px 18px;color:var(--color-header-text);margin-top:8px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:is(:is(.session-list-wrapper .session-list) .session-item) .content{width:0;flex:1}:is(:is(:is(.session-list-wrapper .session-list) .session-item) .content) .title{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:is(:is(:is(.session-list-wrapper .session-list) .session-item):hover .session-close-btn) eo-icon{display:block}:is(:is(:is(.session-list-wrapper .session-list) .session-item):hover .session-edit-btn) eo-icon{display:block}:is(:is(.session-list-wrapper .session-list) .session-item):first-child{margin-top:0px}.active:is(:is(.session-list-wrapper .session-list) .session-item){background-color:var(--third-menu-item-selected-bg);color:var(--color-brand)}:is(:is(.session-list-wrapper .session-list) .session-item):hover,.active:is(:is(.session-list-wrapper .session-list) .session-item):hover{color:var(--color-header-text);background-color:var(--third-menu-item-hover-bg)}:is(:is(.session-list-wrapper .session-list) .session-item) .session-close-btn{display:flex;align-items:center;cursor:pointer;font-size:12px;margin-left:6px}:is(:is(:is(.session-list-wrapper .session-list) .session-item) .session-close-btn):hover{color:var(--color-error)}:is(:is(:is(.session-list-wrapper .session-list) .session-item) .session-close-btn) eo-icon{display:none}:is(:is(.session-list-wrapper .session-list) .session-item) .session-edit-btn{display:flex;align-items:center;cursor:pointer;font-size:12px}:is(:is(:is(.session-list-wrapper .session-list) .session-item) .session-edit-btn):hover{color:var(--color-info)}:is(:is(:is(.session-list-wrapper .session-list) .session-item) .session-edit-btn) eo-icon{display:none}.message-list{display:flex;flex-direction:column;padding-bottom:30px;padding:12px;flex:1;margin:0 auto;max-width:1556px;width:100%;box-sizing:border-box}.message-list .message-list-box{display:flex;flex-direction:column;position:relative;gap:36px}:is(.message-list .message-list-box) .message-item{display:flex;gap:8px;padding-right:40px}:is(:is(.message-list .message-list-box) .message-item):last-child{margin-bottom:10px}.user:is(:is(.message-list .message-list-box) .message-item){flex-direction:row-reverse;padding:0;padding-left:40px}.user:is(:is(.message-list .message-list-box) .message-item) .message-box{margin-bottom:0;overflow:hidden}:is(.user:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-top{flex-direction:row-reverse}:is(.user:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content{justify-content:flex-end}:is(:is(:is(.user:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content) .wrapper) .content{background-color:#606f7c;color:#fff}:is(:is(:is(:is(.user:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content) .wrapper) .content) .ProseMirror.prose{color:#fff}:is(:is(.message-list .message-list-box) .message-item) .avatar{width:36px;height:36px;margin-top:32px;border-radius:50%;font-size:20px;display:flex;align-items:center;justify-content:center}.user:is(:is(:is(.message-list .message-list-box) .message-item) .avatar){background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___})}.robot:is(:is(:is(.message-list .message-list-box) .message-item) .avatar){background-image:url(${___CSS_LOADER_URL_REPLACEMENT_1___})}:is(:is(.message-list .message-list-box) .message-item) .message-box{position:relative;flex:1;overflow:hidden}:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content{display:flex;justify-content:start;position:relative}:is(:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content) .wrapper{position:relative;overflow:hidden}:is(:is(:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content) .wrapper) .content{position:relative;padding:14px;border-radius:6px;overflow:hidden;background:var(--message-box-bg)}:is(:is(:is(:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content) .wrapper) .content) .text-item{white-space:pre-wrap}:is(:is(:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content) .wrapper) .message-toolbar{display:flex;gap:12px;justify-content:flex-end;margin-top:4px}:is(:is(:is(:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content) .wrapper) .message-toolbar) eo-icon{cursor:pointer;color:#606f7c}.active:is(:is(:is(:is(:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content) .wrapper) .message-toolbar) eo-icon){color:var(--color-brand)}:is(:is(:is(:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-content) .wrapper) .message-toolbar) .split{width:1px;height:16px;background-color:#d9d9d9;margin-bottom:1px}:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-top{display:flex;margin-bottom:4px;color:#bec8ce;gap:8px}:is(:is(:is(:is(.message-list .message-list-box) .message-item) .message-box) .message-top) .time{min-height:22px}:is(.message-list .message-list-box) .stop-responding-wrapper{position:absolute;left:44px;bottom:-28px}.message-list .tool-calls{width:-moz-fit-content;width:fit-content;max-width:100%;padding:14px;border-radius:6px;background:var(--message-box-bg);margin-bottom:8px}:is(.message-list .tool-calls) pre{margin-top:1em;padding:0.5em;border:1px solid var(--palette-gray-5);border-radius:4px;font-size:12px}.message-list .tool-calls-summary{cursor:pointer;display:flex;justify-content:space-between;align-items:center;gap:8px;width:-moz-fit-content;width:fit-content}.message-list .tool-calls-summary-toggle{color:var(--color-secondary-text)}.message-list .tool-calls-status,.message-list .tool-call-function-name{display:flex;gap:8px;align-items:center}.processing:is(.message-list .tool-calls-status){color:var(--color-secondary-text)}.ok:is(.message-list .tool-calls-status){color:var(--color-success)}.failed:is(.message-list .tool-calls-status){color:var(--color-error)}.message-list .tool-call{margin-top:1em;padding-top:1em;border-top:1px solid var(--palette-gray-5)}.message-list .tool-call-function-name{font-weight:bold;margin-bottom:0.5em}.message-list .tool-call-wait-response{margin:1em 0}.message-list .tool-call-function-arguments.failed,.message-list .tool-call-function-response.failed{color:var(--color-error)}:is(.message-list .tool-call-function-arguments.failed,.message-list .tool-call-function-response.failed) pre{border-color:var(--color-error)}.search-input-box{display:flex;flex-direction:column;height:87px;padding:12px;position:relative;margin:0 auto;max-width:1556px;width:100%;box-sizing:border-box}.search-input-box .input-toolbar{position:absolute;bottom:71%;left:12px;right:12px}.search-input-box .mentions-list-wrapper{position:absolute;bottom:100%;left:12px;right:12px;z-index:1}:is(.search-input-box .mentions-list-wrapper) .content{background-color:var(--antd-input-bg);border-radius:6px;border:1px solid var(--palette-gray-4);padding:8px}:is(:is(.search-input-box .mentions-list-wrapper) .content) .mentions-title{font-size:14px;font-weight:bold;color:var(--color-strong-text);padding-bottom:8px}:is(:is(.search-input-box .mentions-list-wrapper) .content) .mentions-list{display:flex;flex-direction:column;gap:8px;max-height:300px;overflow-y:auto}:is(:is(:is(.search-input-box .mentions-list-wrapper) .content) .mentions-list) .mentions-item{display:flex;flex-direction:row;align-items:center;gap:12px;padding:8px;border-radius:6px;cursor:pointer}:is(:is(:is(:is(.search-input-box .mentions-list-wrapper) .content) .mentions-list) .mentions-item) .icon{font-size:18px;padding:8px;border-radius:50%}:is(:is(:is(:is(.search-input-box .mentions-list-wrapper) .content) .mentions-list) .mentions-item) .name{color:var(--color-normal-text)}:is(:is(:is(:is(.search-input-box .mentions-list-wrapper) .content) .mentions-list) .mentions-item) .description{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:12px;color:var(--color-disabled-text)}:is(:is(:is(:is(.search-input-box .mentions-list-wrapper) .content) .mentions-list) .mentions-item):hover,.active:is(:is(:is(:is(.search-input-box .mentions-list-wrapper) .content) .mentions-list) .mentions-item){background:var(--palette-gray-3)}.search-input-box .snippets-list-wrapper{position:absolute;bottom:100%;left:12px;right:12px;z-index:1}:is(.search-input-box .snippets-list-wrapper) .content{background-color:var(--antd-input-bg);border-radius:6px;border:1px solid var(--palette-gray-4);padding:8px}:is(:is(.search-input-box .snippets-list-wrapper) .content) .snippets-title{font-size:14px;font-weight:bold;color:var(--color-strong-text);padding-bottom:8px}:is(:is(.search-input-box .snippets-list-wrapper) .content) .snippets-list{display:flex;flex-direction:column;gap:8px;max-height:300px;overflow-y:auto}:is(:is(:is(.search-input-box .snippets-list-wrapper) .content) .snippets-list) .snippets-item{display:flex;flex-direction:row;align-items:center;gap:12px;padding:8px;border-radius:6px;cursor:pointer}:is(:is(:is(:is(.search-input-box .snippets-list-wrapper) .content) .snippets-list) .snippets-item) .icon{font-size:18px;padding:8px;border-radius:50%}:is(:is(:is(:is(.search-input-box .snippets-list-wrapper) .content) .snippets-list) .snippets-item) .name{color:var(--color-normal-text)}:is(:is(:is(:is(.search-input-box .snippets-list-wrapper) .content) .snippets-list) .snippets-item) .description{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:12px;color:var(--color-disabled-text)}:is(:is(:is(:is(.search-input-box .snippets-list-wrapper) .content) .snippets-list) .snippets-item):hover,.active:is(:is(:is(:is(.search-input-box .snippets-list-wrapper) .content) .snippets-list) .snippets-item){background:var(--palette-gray-3)}.search-input-box.fill-content{border-top:1px solid rgba(197,197,197,0.5)}.search-input-box .input-box{position:absolute;bottom:20px;left:12px;right:12px;display:inline-flex;padding:var(--input-affix-wrapper-padding);border-radius:var(--small-border-radius);height:-moz-fit-content;height:fit-content;color:var(--text-color-default);background-color:var(--antd-input-bg);border:1px solid var(--color-border-divider-line);transition:border-color 0.3s;overflow:visible}.active:is(.search-input-box .input-box){border-color:var(--antd-input-focus-border-color)}.disabled:is(.search-input-box .input-box){pointer-events:none;background:var(--input-outline-disabled);cursor:not-allowed}.expand:is(.search-input-box .input-box) textarea{padding-right:50px;margin-bottom:50px}:is(.search-input-box .input-box) textarea{width:100%;height:22px;font-size:18px;resize:none;padding:10px 50px 10px 10px;outline:none;border:none;line-height:20px;color:var(--color-normal-text);background-color:transparent;cursor:inherit;transition:all 300ms ease-out;box-sizing:content-box}:is(:is(.search-input-box .input-box) textarea)::placeholder{color:#b0b1b8}:is(.search-input-box .input-box) .suffix-icon{display:flex;align-items:center;gap:8px;position:absolute;right:12px;bottom:6px}:is(:is(.search-input-box .input-box) .suffix-icon) eo-tooltip{display:flex}:is(:is(.search-input-box .input-box) .suffix-icon) eo-icon{font-size:20px;cursor:pointer;padding:6px;border-radius:3px}:is(:is(:is(.search-input-box .input-box) .suffix-icon) eo-icon):not(.disabled):hover{background:var(--search-input-icon-hover)}:is(:is(.search-input-box .input-box) .suffix-icon) .submit-split{width:1px;height:20px;background:#d1d1d1}.active:is(:is(:is(.search-input-box .input-box) .suffix-icon) .submit-btn){color:var(--color-brand)}.disabled:is(:is(:is(.search-input-box .input-box) .suffix-icon) .submit-btn){color:var(--color-disabled-text);cursor:not-allowed}:is(.search-input-box .input-box) .toolbar-icon{position:absolute;top:12px;right:14px}:is(:is(.search-input-box .input-box) .toolbar-icon) eo-icon{font-size:20px;cursor:pointer;padding:6px;border-radius:3px}:is(:is(:is(.search-input-box .input-box) .toolbar-icon) eo-icon):hover{background:var(--search-input-icon-hover)}.search-input-box .search-input-toolbar{display:flex;justify-content:flex-end;position:absolute;right:12px;bottom:0px}:is(.search-input-box .search-input-toolbar) .input-tip{font-size:12px;color:var(--color-secondary-text)}.message-start-tip,\n.session-end-tip{color:var(--color-disabled-text);font-size:12px;text-align:center;margin-top:12px;position:relative}:is(.message-start-tip,.session-end-tip)::after,:is(.message-start-tip,.session-end-tip)::before{content:\"- - -\";color:var(--color-disabled-text);position:absolute}:is(.message-start-tip,.session-end-tip)::before{margin-left:-35px}:is(.message-start-tip,.session-end-tip)::after{margin-left:10px}.session-search-input-box{position:relative;display:inline-flex;padding:var(--input-affix-wrapper-padding);border-radius:var(--small-border-radius);height:-moz-fit-content;height:fit-content;color:var(--text-color-default);background-color:var(--antd-input-bg);border:1px solid var(--color-border-divider-line);margin-bottom:8px}.session-search-input-box input{width:100%;padding:4px 28px 4px 8px;outline:none;border:none;color:var(--color-normal-text);background-color:transparent;cursor:inherit;transition:all 300ms ease-out;box-sizing:content-box}:is(.session-search-input-box input)::placeholder{color:#b0b1b8}.session-search-input-box .suffix-icon{display:flex;align-items:center;position:absolute;right:0;bottom:0;color:var(--color-secondary-text)}:is(.session-search-input-box .suffix-icon) eo-tooltip{display:flex}:is(.session-search-input-box .suffix-icon) eo-icon{font-size:18px;cursor:pointer;padding:6px;border-radius:3px}:is(:is(.session-search-input-box .suffix-icon) eo-icon):not(.disabled):hover{color:var(--color-info-active)}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./host-context.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./host-context.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["ChatViewContext","createContext","useChatViewContext","useContext","WrappedIcon","wrapBrick","MessageListLoading","React","className","ChatItemLoading","CommonLoading","icon","lib","spinning","Avatar","_ref","role","agentId","isUser","useMemo","quickAnswerConfig","agentList","list","matchAgent","find","item","id","_extends","style","color","background","WrappedLink","GuideItem","text","prompts","map","index","key","ProgressText","renderText","replace","MsgItemContext","useMsgItemContext","CustomComponent","_ref2","language","commandBricks","chatting","robotId","conversationId","taskId","parseData","isError","cahceTextRef","useRef","isEnd","setIsEnd","useState","setIsError","setParseData","useEffect","current","data","JSON","parse","match","useData","commandBrickConf","config","component","ReactUseMultipleBricks","useBrick","showOriginData","copyIcon","theme","CodeBlock","setLanguage","contentRef","node","useNodeViewContext","messageApi","contextHolder","message","useMessage","handleCopy","async","_node$content$firstCh","content","firstChild","navigator","clipboard","writeText","success","err","console","error","defaultContent","spellCheck","ref","position","Tooltip","title","arrow","onClick","cursor","renderContent","_node$firstChild","_node$firstChild2","_node$attrs","textContent","lang","attrs","MarkdownItem","MilkdownProvider","ProsemirrorAdapterProvider","MarkdownDisplay","value","nodeViewFactory","useNodeViewFactory","transformOpenAIToCodeBlock","str","test","_","$1","get","useEditor","root","Editor","make","ctx","set","rootCtx","update","editorViewOptionsCtx","prev","editable","handleClickOn","view","pos","handleClick","found","state","tr","doc","nodeAt","mark","marks","m","type","name","href","window","open","realValue","defaultValueCtx","MutationObserver","Array","from","querySelectorAll","forEach","link","onclick","observe","childList","subtree","nord","use","prism","gfm","commonmark","$view","codeBlockSchema","undefined","_get","action","replaceAll","Milkdown","TableItem","TextItem","WrapperIcon","WrappedToolTip","copyToClipboard","unwrapProvider","showNotification","Toolbar","tag","isAssistant","isChattingItem","showLike","globalChatting","showShare","readonly","handleIsLike","setSearchStr","handleLikeOrIsLike","useCallback","result","islike","hoist","classNames","active","isLike","then","catch","handleShare","location","origin","getBasePath","handleRequestion","Time","time","moment","format","WrappedButton","WrappedTag","ToolCalls","toolCalls","expanded","setExpanded","processedToolCalls","processedArguments","processedResponse","function","func","response","ok","arguments","functionName","args","processStatus","status","toolCall","marginRight","prefix","ToolCallComponent","_ref3","toolNames","outline","failed","dumpYaml","safeDump","schema","JSON_SCHEMA","skipInvalid","noRefs","noCompatMode","NOT_AGENT_MATCH","MessageNode","props","created","itemType","showToolCalls","getContentNode","examplePrompts","messageNode","getMsgNode","RELATED_QUESTIONS_TYPE","DEFAULT_TYPE","length","Provider","CARD_ITEM_HEIGHT","HEIGHT_GAP","QuickAnswerCardItem","description","starterPrompts","iconColor","height","handleCardClick","category","QuickAnswerList","msgList","loading","showMoreBtn","setShowMoreBtn","listRef","hadClickShowMoreBtn","element","observer","ResizeObserver","entries","entry","contentRect","disconnect","tip","maxHeight","overflow","instanceId","handleShowMoreClick","StopBtn","stopChat","handleStopChat","MessageList","showAvatar","chatViewRef","messageListRef","msgLoading","msgEnd","getMsgItemNode","marginTop","marginLeft","user","msgListNode","manualScrolled","setManualScrolled","autoScrollingRef","chatView","handleScroll","scrollTop","clientHeight","scrollHeight","addEventListener","removeEventListener","scroll","top","requestAnimationFrame","SIZING_STYLE","hiddenTextarea","LegacySearchInput","setValue","setActive","expand","setExpand","autoSizeStyle","setAutoSizeStyle","isFillContent","setIsFillContent","snippetOpen","setSnippetOpen","matchSnippetList","setMatchSnippetList","matchSnippetIndex","setMatchSnippetIndex","mentionOpen","setMentionOpen","matchPrefixIndex","setMatchPrefixIndex","matchAgentList","setMatchMentionList","matchMentionsIndex","setMatchMentionsIndex","mentionsRef","snippetsRef","searchInputBoxRef","textareaRef","hadExpanded","inputEndRef","searchStr","createSession","handleChat","setAgent","snippetList","hadValue","defaultSize","disabled","matchPrefixInfo","textareaElement","currentFocusIndex","selectionStart","matchWord","i","start","end","word","handleAgentItemSelect","valueList","split","trimName","focusIndex","splice","join","setTimeout","selectionEnd","focus","handleSnippetItemSelect","regex","matches","exec","push","isShowMentions","mentions","slice","isShowSnippets","snippets","computedAutoSize","size","textareaStyles","uiTextNode","minRows","maxRows","document","createElement","setAttribute","body","appendChild","uiTextNodeStyle","getComputedStyle","sizingStyle","getPropertyValue","minHeight","placeholder","singleRowHeight","Math","max","min","overflowY","resize","calculateAutoSizeStyle","handleChange","e","target","keyword","trim","filterResult","filter","includes","handleExpand","matchFirstAgent","agent","handleDispatchQuestion","val","_textareaRef$current","blur","handleSubmit","handleKeyDown","shiftKey","preventDefault","handleKeyUp","selectionIndex","prefixWord","lastIndexOf","indexOf","_textareaRef$current2","searchInputBox","width","currentWidth","getBoundingClientRect","_textareaRef$current3","filterList","querySelector","scrollIntoView","block","handleDocumentClick","mentionsElemnt","contains","composedPath","useImperativeHandle","handleInsertQuestion","sendMsg","msg","inputToolbarBrick","paddingRight","onFocus","onBlur","onChange","onKeyDown","onKeyUpCapture","onCompositionStart","handleCompositionStart","onCompositionEnd","handleCompositionEnd","hanldeCreateSession","SearchInput","forwardRef","showDialog","WrappedModal","onClose","onConfirm","onCancel","onOpen","WrappedForm","onValuesChange","onValidateSuccess","onValidateError","WrappedInput","SESSION_ITEM_HEIGHT","BUFFER_NUMBER","CACHE_HEIGHT","SessionList","sessionEnd","sessionLoading","sessionList","querySessionHistory","updateSession","sessionWrapperRef","sessionListRef","searchQueryRef","editModalRef","editFormRef","editRawDataRef","editConversationIdRef","getFitLimit","limit","sessionWrapper","floor","checkSessionList","debounce","handleSearch","handleSearchEnter","handleEditSession","rawData","_editFormRef$current","_editModalRef$current","setInitValue","handleEditModalConfirm","_editFormRef$current2","validate","handleEditFormSubmit","detail","_editModalRef$current2","close","onScroll","SessionItem","modalTitle","maskClosable","closeWhenConfirm","layout","label","activeSessionId","checkSession","deleteSession","handleCheckSession","handleDeleteSession","stopPropagation","expect","handleEditSessionItem","NEW_SESSION_ID","_debug","WeakMap","_ctrl","_agentId","_robotId","_enterInterval","_chatting","_isStartEmitEvent","_emitTimer","_messageQueue","_subscribers","_conversationId","_answerLanguage","_sessionNextToken","_cacheLimit","_cacheQuery","_messageNextToken","_useSpiltWord","_ChatService_brand","WeakSet","ChatService","constructor","enterInterval","debug","answerLanguage","useSpiltWord","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","this","enqueue","_classPrivateFieldGet","_assertClassBrand","_startEmitEvent","call","dequeue","shift","getMessageQueue","subscribe","topic","callback","unsubscribe","cb","notifySubscribers","setChatItemIsLike","flag","code","http","request","method","stringify","setAgentId","setConversationId","getSessionHistory","query","conversations","next_token","getChatHistory","conversationIds","updateData","getCustomSplit","Symbol","cache","matchStr","substring","splitWord","Intl","iterator","Segmenter","granularity","segment","nextWord","next","done","customSplit","chat","AbortController","hadMatchMessage","fetchEventSource","signal","openWhenHidden","stream","input","headers","onopen","log","onmessage","abort","isGeneralTextType","wordList","delta","chunkedWords","maxChunks","minChunks","chunkSize","ceil","random","chunk","pick","_result","_result2","SENSITIVE_WORDS_ERROR","EXCEED_TOKENS_ERROR","onclose","onerror","stop","_classPrivateFieldGet2","clearTimeout","_clear","messageItem","getRandomInterval","messagesInQueue","GENERAL_TEXT_TYPES","useChatViewInfo","sessionId","setSessionEnd","setSessionLoading","setActiveSessionId","setLoading","setChatting","setSessionList","setMsgLoading","setMsgEnd","setMsgList","chattingMessageItem","sessionSearchQuery","haveCreatedSession","setToolNames","Map","toolNameRequests","fetchToolName","toolId","has","promise","InstanceApi_postSearchV3","fields","res","pre","newMap","chatService","defaultNewSessionItem","preList","newList","allToolCalls","originalCall","callId","isArray","unshift","uniqueId","output","inputTime","computedList","concat","filterIds","ids","deleteActiveSession","hasNewOne","newSessionList","inputMsg","handleSessionEnd","listener","_msgItem","_chattingMessageItem$","_chattingMessageItem$2","_chattingMessageItem$3","_chattingMessageItem$4","_chattingMessageItem$5","msgItemData","tool_calls","generalSameType","isStart","isUpdate","a","b","thisMessage","tool_call_id","pop","reset","finishListener","_item$toolCalls","fetchEndListener","stopListener","stopMessageItem","___CSS_LOADER_EXPORT___","module","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_REPLACEMENT_1___","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals"],"sourceRoot":""}
{"version":3,"file":"chunks/copy-to-clipboard.8040aceb.js","mappings":"wLAOOA,eAAeC,EAAgBC,GACpC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,GAAKC,UAAUC,UAqBbD,UAAUC,UAAUC,UAAUN,GAAMO,KAAKL,GAASM,MAAML,OArBhC,CACxB,MAAMM,EAAWC,SAASC,cAAc,YACxCF,EAASG,MAAQZ,EAEjBS,EAASI,MAAMC,IAAM,IACrBL,EAASI,MAAME,KAAO,IACtBN,EAASI,MAAMG,SAAW,QAE1BN,SAASO,KAAKC,YAAYT,GAC1BA,EAASU,QACTV,EAASW,SAET,IACEV,SAASW,YAAY,QACrBnB,GACF,CAAE,MAAOoB,GACPnB,EAAOmB,EACT,CAAE,QACAZ,SAASO,KAAKM,YAAYd,EAC5B,CACF,CAEA,GAEJ,CAEAe,eAAeC,OACb,2BACAC,EAAAA,EAAAA,qBAAoB3B,G","sources":["webpack:///./src/data-providers/copy-to-clipboard.ts"],"sourcesContent":["import { createProviderClass } from \"@next-core/utils/general\";\n\n/**\n * 复制文本内容到粘贴板。\n *\n *  @param text 文本内容\n */\nexport async function copyToClipboard(text: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (!navigator.clipboard) {\n      const textArea = document.createElement(\"textarea\");\n      textArea.value = text;\n\n      textArea.style.top = \"0\";\n      textArea.style.left = \"0\";\n      textArea.style.position = \"fixed\";\n\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n\n      try {\n        document.execCommand(\"copy\");\n        resolve();\n      } catch (err) {\n        reject(err);\n      } finally {\n        document.body.removeChild(textArea);\n      }\n    } else {\n      navigator.clipboard.writeText(text).then(resolve).catch(reject);\n    }\n  });\n}\n\ncustomElements.define(\n  \"basic.copy-to-clipboard\",\n  createProviderClass(copyToClipboard)\n);\n"],"names":["async","copyToClipboard","text","Promise","resolve","reject","navigator","clipboard","writeText","then","catch","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","execCommand","err","removeChild","customElements","define","createProviderClass"],"sourceRoot":""}
{"version":3,"file":"chunks/editors/eo-textarea.8bac05bb.js","mappings":"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","sources":["webpack:///./src/editors/eo-textarea/eoTextarea.schema.tsx","webpack:///./src/editors/eo-textarea/index.tsx"],"sourcesContent":["export const eoTextareaSchema = {\n  name: \"layout\",\n  type: \"void\",\n  component: {\n    name: \"FormLayout\",\n    props: {\n      layout: \"vertical\",\n    },\n  },\n  children: [\n    {\n      name: \"categoryTitle_item\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"表单项\",\n        },\n      },\n    },\n    {\n      name: \"name\",\n      title: \"字段名\",\n      type: \"string\",\n    },\n    {\n      name: \"label\",\n      title: \"标签\",\n      type: \"string\",\n    },\n    {\n      name: \"value\",\n      title: \"值\",\n      type: \"string\",\n      component: {\n        name: \"Input.TextArea\",\n      },\n      decorator: \"FormItem\",\n    },\n    {\n      name: \"disabled\",\n      title: \"禁用\",\n      type: \"boolean\",\n    },\n    {\n      name: \"categoryTitle_input\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"文本框\",\n        },\n      },\n    },\n    {\n      name: \"placeholder\",\n      title: \"占位文本\",\n      type: \"string\",\n    },\n    {\n      name: \"maxLength\",\n      title: \"最大长度\",\n      type: \"number\",\n      component: {\n        name: \"NumberPicker\",\n      },\n      decorator: \"FormItem\",\n    },\n    {\n      name: \"minLength\",\n      title: \"最小长度\",\n      type: \"number\",\n      component: {\n        name: \"NumberPicker\",\n      },\n      decorator: \"FormItem\",\n    },\n    {\n      name: \"autoSize\",\n      title: \"大小自适应设置\",\n      type: \"boolean\",\n      component: {\n        props: {\n          defaultValue: false,\n        },\n      },\n      \"x-reactions\": [\n        {\n          target: \"minRows\",\n          fulfill: {\n            state: {\n              visible: \"{{!$self.value}}\",\n            },\n          },\n        },\n        {\n          target: \"maxRows\",\n          fulfill: {\n            state: {\n              visible: \"{{!$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"minRows\",\n      title: \"最小行数\",\n      type: \"number\",\n      component: {\n        name: \"NumberPicker\",\n      },\n      decorator: \"FormItem\",\n    },\n    {\n      name: \"maxRows\",\n      title: \"最大行数\",\n      type: \"number\",\n      component: {\n        name: \"NumberPicker\",\n      },\n      decorator: \"FormItem\",\n    },\n    {\n      name: \"textareaStyle\",\n      title: \"输入框样式\",\n      component: {\n        name: \"CodeEditor\",\n      },\n      decorator: \"FormItemWithoutAdvanced\",\n    },\n    {\n      name: \"categoryTitle_validator\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"校验\",\n        },\n      },\n    },\n    {\n      name: \"required\",\n      title: \"必填\",\n      type: \"boolean\",\n      component: {\n        props: {\n          size: \"small\",\n        },\n      },\n      \"x-reactions\": [\n        {\n          target: \"requiredValidatorText\",\n          fulfill: {\n            state: {\n              visible: \"{{$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"requiredValidatorText\",\n      title: \"必填提示文字\",\n      type: \"string\",\n    },\n    {\n      name: \"pattern\",\n      title: \"正则校验规则\",\n      type: \"string\",\n      \"x-reactions\": [\n        {\n          target: \"patternValidatorText\",\n          fulfill: {\n            state: {\n              visible: \"{{$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"patternValidatorText\",\n      title: \"正则提示文字\",\n      type: \"string\",\n    },\n    {\n      name: \"max\",\n      title: \"最大长度\",\n      type: \"number\",\n      component: {\n        name: \"NumberPicker\",\n      },\n      decorator: \"FormItem\",\n    },\n    {\n      name: \"min\",\n      title: \"最小长度\",\n      type: \"number\",\n      component: {\n        name: \"NumberPicker\",\n      },\n      decorator: \"FormItem\",\n    },\n  ],\n};\n","import type _React from \"react\";\nimport { customEditors } from \"@next-core/runtime\";\nimport type { EditorComponentProps } from \"@next-shared/property-editor\";\nimport { eoTextareaSchema } from \"./eoTextarea.schema\";\n\nfunction EoTextareaComponentFactory(React: typeof _React) {\n  return function EoTextareaComponent(\n    props: EditorComponentProps\n  ): React.ReactElement {\n    const {\n      SchemaFieldComponent,\n      formilySchemaFormatter,\n      advancedMode,\n      scope,\n      form,\n      effects,\n    } = props;\n\n    React.useEffect(() => {\n      form.setInitialValues({\n        required: false,\n        pattern: \"\",\n        autoSize: false,\n      });\n    }, [form]);\n\n    React.useEffect(() => {\n      const { onSubmit } = effects;\n      form.addEffects(\"formEffect\", () => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onSubmit((value) => {\n          if (value.minRows || value.maxRows) {\n            const { minRows, maxRows, ...newValue } = value;\n            return { ...newValue, autoSize: { minRows, maxRows } };\n          }\n          if (!value.minRows && !value.maxRows) {\n            const { autoSize, ...newValue } = value;\n            return { ...newValue, autoSize };\n          }\n          return { ...value };\n        });\n      });\n    }, []);\n\n    return React.createElement(SchemaFieldComponent, {\n      schema: formilySchemaFormatter(eoTextareaSchema as any, advancedMode!),\n      scope,\n    });\n  };\n}\n\ncustomEditors.define(\"eo-textarea\", EoTextareaComponentFactory);\n"],"names":["eoTextareaSchema","name","type","component","props","layout","children","decorator","text","title","defaultValue","target","fulfill","state","visible","size","customEditors","define","React","SchemaFieldComponent","formilySchemaFormatter","advancedMode","scope","form","effects","useEffect","setInitialValues","required","pattern","autoSize","onSubmit","addEffects","value","minRows","maxRows","newValue","createElement","schema"],"sourceRoot":""}
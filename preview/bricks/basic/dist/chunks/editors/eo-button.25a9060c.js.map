{"version":3,"file":"chunks/editors/eo-button.25a9060c.js","mappings":"oJAAO,MAAMA,EAAiB,CAC5BC,KAAM,SACNC,KAAM,OACNC,UAAW,CACTF,KAAM,aACNG,MAAO,CACLC,OAAQ,aAGZC,SAAU,CACR,CACEL,KAAM,sBACNC,KAAM,OACNK,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,QAIZ,CACEP,KAAM,cACNQ,MAAO,KACPP,KAAM,UAER,CACED,KAAM,WACNQ,MAAO,KACPP,KAAM,WAER,CACED,KAAM,OACNQ,MAAO,KACPP,KAAM,SACNC,UAAW,CACTF,KAAM,eACNG,MAAO,CACLM,UAAW,CACTC,IAAK,MACLC,KAAM,WAKd,CACEX,KAAM,SACNQ,MAAO,OACPP,KAAM,SACNK,UAAW,CACTN,KAAM,WACNG,MAAO,CACLC,OAAQ,eAGZF,UAAW,CACTF,KAAM,cACNG,MAAO,CACLS,KAAM,QACNC,WAAY,SACZC,QAAS,CACP,CACEC,MAAO,SACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,cAMjB,CACEhB,KAAM,UACNQ,MAAO,OACPP,KAAM,UAER,CACED,KAAM,sBACNM,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,QAIZ,CACEN,KAAM,SACNO,MAAO,OACPR,KAAM,OACNE,UAAW,CACTF,KAAM,SACNG,MAAO,CACLc,YAAa,UACbC,YAAY,EACZJ,QAAS,CACP,UACA,UACA,SACA,QACA,OACA,OACA,QACAK,KAAKC,IAAI,CACTL,MAAOK,EACPJ,MAAOI,SAKf,CACEpB,KAAM,OACNQ,MAAO,KACPP,KAAM,SACNK,UAAW,CACTN,KAAM,WACNG,MAAO,CACLC,OAAQ,eAGZiB,KAAM,CACJ,CACEN,MAAO,IACPC,MAAO,SAET,CACED,MAAO,KACPC,MAAO,UAET,CACED,MAAO,IACPC,MAAO,SAET,CACED,MAAO,KACPC,MAAO,OAGXd,UAAW,CACTF,KAAM,cACNG,MAAO,CACLS,KAAM,QACNC,WAAY,SACZS,aAAc,YAIpB,CACEtB,KAAM,SACNQ,MAAO,OACPP,KAAM,WAER,CACED,KAAM,OACNQ,MAAO,KACPP,KAAM,SACNC,UAAW,cAEb,CACEF,KAAM,QACNQ,MAAO,KACPP,KAAM,SACNK,UAAW,CACTN,KAAM,WACNG,MAAO,CACLC,OAAQ,eAGZF,UAAW,CACTF,KAAM,cACNG,MAAO,CACLS,KAAM,QACNE,QAAS,CACP,CAAEC,MAAO,KAAMC,MAAO,UACtB,CAAED,MAAO,MAAOC,MAAO,SACvB,CAAED,MAAO,KAAMC,MAAO,YAExBH,WAAY,SACZS,aAAc,c,yDC/IxBC,EAAAA,cAAcC,OAAO,aA7BrB,SAAkCC,GAChC,OAAO,SACLtB,GAEA,MAAM,qBACJuB,EAAoB,uBACpBC,EAAsB,MACtBC,EAAK,KACLC,EAAI,QACJC,GACE3B,EAYJ,OAVAsB,EAAMM,WAAU,KACd,MAAM,SAAEC,GAAaF,EAErBD,EAAKI,WAAW,UAAU,KACxBD,GAAUhB,IACDkB,EAAAA,EAAAA,MAAKlB,EAAO,CAAC,UACpB,GACF,GACD,CAACc,EAASD,IAENJ,EAAMU,cAAcT,EAAsB,CAC/CU,OAAQT,EAAuB5B,EAAAA,GAC/B6B,SAEJ,CACF,G","sources":["webpack:///./src/editors/eo-button/eoButton.schema.tsx","webpack:///./src/editors/eo-button/index.tsx"],"sourcesContent":["export const eoButtonSchema = {\n  name: \"layout\",\n  type: \"void\",\n  component: {\n    name: \"FormLayout\",\n    props: {\n      layout: \"vertical\",\n    },\n  },\n  children: [\n    {\n      name: \"categoryTitle_basic\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"基础\",\n        },\n      },\n    },\n    {\n      name: \"textContent\",\n      title: \"文本\",\n      type: \"string\",\n    },\n    {\n      name: \"disabled\",\n      title: \"禁用\",\n      type: \"boolean\",\n    },\n    {\n      name: \"link\",\n      title: \"链接\",\n      type: \"string\",\n      component: {\n        name: \"InputWithUrl\",\n        props: {\n          transform: {\n            url: \"url\",\n            href: \"href\",\n          },\n        },\n      },\n    },\n    {\n      name: \"target\",\n      title: \"跳转方式\",\n      type: \"string\",\n      decorator: {\n        name: \"FormItem\",\n        props: {\n          layout: \"horizontal\",\n        },\n      },\n      component: {\n        name: \"Radio.Group\",\n        props: {\n          size: \"small\",\n          optionType: \"button\",\n          options: [\n            {\n              label: \"当前页面加载\",\n              value: \"_self\",\n            },\n            {\n              label: \"新标签打开\",\n              value: \"_blank\",\n            },\n          ],\n        },\n      },\n    },\n    {\n      name: \"tooltip\",\n      title: \"按钮提示\",\n      type: \"string\",\n    },\n    {\n      name: \"categoryTitle_style\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"外观\",\n        },\n      },\n    },\n    {\n      type: \"string\",\n      title: \"按钮类型\",\n      name: \"type\",\n      component: {\n        name: \"Select\",\n        props: {\n          placeholder: \"请选择按钮类型\",\n          allowClear: true,\n          options: [\n            \"primary\",\n            \"default\",\n            \"dashed\",\n            \"ghost\",\n            \"link\",\n            \"text\",\n            \"icon\",\n          ].map((item) => ({\n            label: item,\n            value: item,\n          })),\n        },\n      },\n    },\n    {\n      name: \"size\",\n      title: \"大小\",\n      type: \"string\",\n      decorator: {\n        name: \"FormItem\",\n        props: {\n          layout: \"horizontal\",\n        },\n      },\n      enum: [\n        {\n          label: \"大\",\n          value: \"large\",\n        },\n        {\n          label: \"标准\",\n          value: \"medium\",\n        },\n        {\n          label: \"小\",\n          value: \"small\",\n        },\n        {\n          label: \"超小\",\n          value: \"xs\",\n        },\n      ],\n      component: {\n        name: \"Radio.Group\",\n        props: {\n          size: \"small\",\n          optionType: \"button\",\n          defaultValue: \"medium\",\n        },\n      },\n    },\n    {\n      name: \"danger\",\n      title: \"危险模式\",\n      type: \"boolean\",\n    },\n    {\n      name: \"icon\",\n      title: \"图标\",\n      type: \"string\",\n      component: \"IconSelect\",\n    },\n    {\n      name: \"shape\",\n      title: \"形状\",\n      type: \"string\",\n      decorator: {\n        name: \"FormItem\",\n        props: {\n          layout: \"horizontal\",\n        },\n      },\n      component: {\n        name: \"Radio.Group\",\n        props: {\n          size: \"small\",\n          options: [\n            { label: \"圆形\", value: \"circle\" },\n            { label: \"圆弧形\", value: \"round\" },\n            { label: \"默认\", value: \"default\" },\n          ],\n          optionType: \"button\",\n          defaultValue: \"default\",\n        },\n      },\n    },\n  ],\n};\n","import type _React from \"react\";\nimport { customEditors } from \"@next-core/runtime\";\nimport type { EditorComponentProps } from \"@next-shared/property-editor\";\nimport { eoButtonSchema } from \"./eoButton.schema\";\nimport { omit } from \"lodash\";\n\nfunction EoButtonComponentFactory(React: typeof _React) {\n  return function EoButtonComponent(\n    props: EditorComponentProps\n  ): React.ReactElement {\n    const {\n      SchemaFieldComponent,\n      formilySchemaFormatter,\n      scope,\n      form,\n      effects,\n    } = props;\n\n    React.useEffect(() => {\n      const { onSubmit } = effects;\n\n      form.addEffects(\"submit\", () => {\n        onSubmit((value: any) => {\n          return omit(value, [\"link\"]);\n        });\n      });\n    }, [effects, form]);\n\n    return React.createElement(SchemaFieldComponent, {\n      schema: formilySchemaFormatter(eoButtonSchema as any),\n      scope,\n    });\n  };\n}\n\ncustomEditors.define(\"eo-button\", EoButtonComponentFactory);\n"],"names":["eoButtonSchema","name","type","component","props","layout","children","decorator","text","title","transform","url","href","size","optionType","options","label","value","placeholder","allowClear","map","item","enum","defaultValue","customEditors","define","React","SchemaFieldComponent","formilySchemaFormatter","scope","form","effects","useEffect","onSubmit","addEffects","omit","createElement","schema"],"sourceRoot":""}
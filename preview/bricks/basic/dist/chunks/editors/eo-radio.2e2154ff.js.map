{"version":3,"file":"chunks/editors/eo-radio.2e2154ff.js","mappings":"qJAAO,MAAMA,EAAgB,CAC3BC,KAAM,SACNC,KAAM,OACNC,UAAW,CACTF,KAAM,aACNG,MAAO,CACLC,OAAQ,aAGZC,SAAU,CACR,CACEL,KAAM,qBACNC,KAAM,OACNK,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,SAIZ,CACEP,KAAM,OACNQ,MAAO,MACPP,KAAM,UAER,CACED,KAAM,QACNQ,MAAO,KACPP,KAAM,UAER,CACED,KAAM,QACNQ,MAAO,IACPP,KAAM,SACNC,UAAW,CACTF,KAAM,cAERM,UAAW,2BAEb,CACEN,KAAM,WACNQ,MAAO,KACPP,KAAM,WAER,CACED,KAAM,sBACNC,KAAM,OACNK,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,SAIZ,CACEP,KAAM,UACNQ,MAAO,OACPN,UAAW,CACTF,KAAM,cAERM,UAAW,2BAEb,CACEN,KAAM,OACNQ,MAAO,KACPP,KAAM,SACNC,UAAW,CACTF,KAAM,SACNG,MAAO,CACLM,YAAa,WACbC,YAAY,EACZC,QAAS,CACP,CAAEC,MAAO,KAAMC,MAAO,UACtB,CAAED,MAAO,KAAMC,MAAO,WACtB,CAAED,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,OAAQC,MAAO,eACxB,CAAED,MAAO,OAAQC,MAAO,eACxB,CAAED,MAAO,MAAOC,MAAO,WACvBC,KAAKC,IAAI,CACTH,MAAOG,EAAKH,MACZC,MAAOE,EAAKF,aAKpB,CACEb,KAAM,KACNQ,MAAO,KACPP,KAAM,SACNC,UAAW,CACTF,KAAM,SACNG,MAAO,CACLM,YAAa,UACbC,YAAY,EACZC,QAAS,CACP,CAAEC,MAAO,KAAMC,MAAO,WACtB,CAAED,MAAO,KAAMC,MAAO,cACtBC,KAAKC,IAAI,CACTH,MAAOG,EAAKH,MACZC,MAAOE,EAAKF,aAKpB,CACEb,KAAM,OACNQ,MAAO,KACPP,KAAM,SACNK,UAAW,CACTN,KAAM,WACNG,MAAO,CACLC,OAAQ,eAGZY,KAAM,CACJ,CACEJ,MAAO,IACPC,MAAO,SAET,CACED,MAAO,KACPC,MAAO,UAET,CACED,MAAO,IACPC,MAAO,SAET,CACED,MAAO,KACPC,MAAO,OAGXX,UAAW,CACTF,KAAM,cACNG,MAAO,CACLc,KAAM,QACNC,WAAY,YAIlB,CACElB,KAAM,cACNQ,MAAO,aACPN,UAAW,CACTF,KAAM,cAERM,UAAW,2BAEb,CACEN,KAAM,WACNQ,MAAO,QACPN,UAAW,CACTF,KAAM,cAERM,UAAW,2BAEb,CACEN,KAAM,0BACNC,KAAM,OACNK,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,QAIZ,CACEP,KAAM,WACNQ,MAAO,KACPP,KAAM,UACNC,UAAW,CACTC,MAAO,CACLc,KAAM,UAGV,cAAe,CACb,CACEE,OAAQ,wBACRC,QAAS,CACPC,MAAO,CACLC,QAAS,uBAMnB,CACEtB,KAAM,wBACNQ,MAAO,SACPP,KAAM,W,gDC/JZsB,EAAAA,cAAcC,OAAO,YAzBrB,SAAiCC,GAC/B,OAAO,SACLtB,GAEA,MAAM,qBACJuB,EAAoB,uBACpBC,EAAsB,aACtBC,EAAY,MACZC,EAAK,KACLC,GACE3B,EAQJ,OANAsB,EAAMM,WAAU,KACdD,EAAKE,iBAAiB,CACpBC,UAAU,GACV,GACD,CAACH,IAEGL,EAAMS,cAAcR,EAAsB,CAC/CS,OAAQR,EAAuB5B,EAAAA,EAAsB6B,GACrDC,SAEJ,CACF,G","sources":["webpack:///./src/editors/eo-radio/eoRadio.schema.tsx","webpack:///./src/editors/eo-radio/index.tsx"],"sourcesContent":["export const eoRadioSchema = {\n  name: \"layout\",\n  type: \"void\",\n  component: {\n    name: \"FormLayout\",\n    props: {\n      layout: \"vertical\",\n    },\n  },\n  children: [\n    {\n      name: \"categoryTitle_item\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"表单项\",\n        },\n      },\n    },\n    {\n      name: \"name\",\n      title: \"字段名\",\n      type: \"string\",\n    },\n    {\n      name: \"label\",\n      title: \"标签\",\n      type: \"string\",\n    },\n    {\n      name: \"value\",\n      title: \"值\",\n      type: \"string\",\n      component: {\n        name: \"CodeEditor\",\n      },\n      decorator: \"FormItemWithoutAdvanced\",\n    },\n    {\n      name: \"disabled\",\n      title: \"禁用\",\n      type: \"boolean\",\n    },\n    {\n      name: \"categoryTitle_input\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"单选框\",\n        },\n      },\n    },\n    {\n      name: \"options\",\n      title: \"选项列表\",\n      component: {\n        name: \"CodeEditor\",\n      },\n      decorator: \"FormItemWithoutAdvanced\",\n    },\n    {\n      name: \"type\",\n      title: \"类型\",\n      type: \"string\",\n      component: {\n        name: \"Select\",\n        props: {\n          placeholder: \"请选择文本框类型\",\n          allowClear: true,\n          options: [\n            { label: \"按钮\", value: \"button\" },\n            { label: \"默认\", value: \"default\" },\n            { label: \"图标\", value: \"icon\" },\n            { label: \"圆形图标\", value: \"icon-circle\" },\n            { label: \"方形图标\", value: \"icon-square\" },\n            { label: \"自定义\", value: \"custom\" },\n          ].map((item) => ({\n            label: item.label,\n            value: item.value,\n          })),\n        },\n      },\n    },\n    {\n      name: \"ui\",\n      title: \"类型\",\n      type: \"string\",\n      component: {\n        name: \"Select\",\n        props: {\n          placeholder: \"请选择ui样式\",\n          allowClear: true,\n          options: [\n            { label: \"默认\", value: \"default\" },\n            { label: \"卡片\", value: \"dashboard\" },\n          ].map((item) => ({\n            label: item.label,\n            value: item.value,\n          })),\n        },\n      },\n    },\n    {\n      name: \"size\",\n      title: \"大小\",\n      type: \"string\",\n      decorator: {\n        name: \"FormItem\",\n        props: {\n          layout: \"horizontal\",\n        },\n      },\n      enum: [\n        {\n          label: \"大\",\n          value: \"large\",\n        },\n        {\n          label: \"标准\",\n          value: \"medium\",\n        },\n        {\n          label: \"小\",\n          value: \"small\",\n        },\n        {\n          label: \"超小\",\n          value: \"xs\",\n        },\n      ],\n      component: {\n        name: \"Radio.Group\",\n        props: {\n          size: \"small\",\n          optionType: \"button\",\n        },\n      },\n    },\n    {\n      name: \"customStyle\",\n      title: \"radio的外层样式\",\n      component: {\n        name: \"CodeEditor\",\n      },\n      decorator: \"FormItemWithoutAdvanced\",\n    },\n    {\n      name: \"useBrick\",\n      title: \"自定义构件\",\n      component: {\n        name: \"CodeEditor\",\n      },\n      decorator: \"FormItemWithoutAdvanced\",\n    },\n    {\n      name: \"categoryTitle_validator\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"校验\",\n        },\n      },\n    },\n    {\n      name: \"required\",\n      title: \"必填\",\n      type: \"boolean\",\n      component: {\n        props: {\n          size: \"small\",\n        },\n      },\n      \"x-reactions\": [\n        {\n          target: \"requiredValidatorText\",\n          fulfill: {\n            state: {\n              visible: \"{{$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"requiredValidatorText\",\n      title: \"必填提示文字\",\n      type: \"string\",\n    },\n  ],\n};\n","import type _React from \"react\";\nimport { customEditors } from \"@next-core/runtime\";\nimport type { EditorComponentProps } from \"@next-shared/property-editor\";\nimport { eoRadioSchema } from \"./eoRadio.schema\";\n\nfunction EoRadioComponentFactory(React: typeof _React) {\n  return function EoRadioComponent(\n    props: EditorComponentProps\n  ): React.ReactElement {\n    const {\n      SchemaFieldComponent,\n      formilySchemaFormatter,\n      advancedMode,\n      scope,\n      form,\n    } = props;\n\n    React.useEffect(() => {\n      form.setInitialValues({\n        required: false,\n      });\n    }, [form]);\n\n    return React.createElement(SchemaFieldComponent, {\n      schema: formilySchemaFormatter(eoRadioSchema as any, advancedMode!),\n      scope,\n    });\n  };\n}\n\ncustomEditors.define(\"eo-radio\", EoRadioComponentFactory);\n"],"names":["eoRadioSchema","name","type","component","props","layout","children","decorator","text","title","placeholder","allowClear","options","label","value","map","item","enum","size","optionType","target","fulfill","state","visible","customEditors","define","React","SchemaFieldComponent","formilySchemaFormatter","advancedMode","scope","form","useEffect","setInitialValues","required","createElement","schema"],"sourceRoot":""}
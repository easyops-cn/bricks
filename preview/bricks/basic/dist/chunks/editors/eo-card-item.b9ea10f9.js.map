{"version":3,"file":"chunks/editors/eo-card-item.b9ea10f9.js","mappings":"qJAAO,MAAMA,EAAmB,CAC9BC,KAAM,SACNC,KAAM,OACNC,UAAW,CACTF,KAAM,aACNG,MAAO,CACLC,OAAQ,aAGZC,SAAU,CACR,CACEL,KAAM,sBACNC,KAAM,OACNK,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,QAIZ,CACEP,KAAM,YACNQ,MAAO,KACPP,KAAM,UAER,CACED,KAAM,cACNQ,MAAO,KACPP,KAAM,UAER,CACED,KAAM,YACNQ,MAAO,SACPP,KAAM,UACN,cAAe,CACb,CACEQ,OAAQ,gBACRC,QAAS,CACPC,MAAO,CACLC,QAAS,uBAMnB,CACEZ,KAAM,gBACNQ,MAAO,SACPP,KAAM,UAER,CACED,KAAM,sBACNC,KAAM,OACNK,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,QAIZ,CACEP,KAAM,WACNQ,MAAO,SACPP,KAAM,UACN,cAAe,CACb,CACEQ,OAAQ,aACRC,QAAS,CACPC,MAAO,CACLC,QAAS,qBAIf,CACEH,OAAQ,aACRC,QAAS,CACPC,MAAO,CACLC,QAAS,qBAIf,CACEH,OAAQ,iBACRC,QAAS,CACPC,MAAO,CACLC,QAAS,qBAIf,CACEH,OAAQ,iBACRC,QAAS,CACPC,MAAO,CACLC,QAAS,uBAMnB,CACEZ,KAAM,aACNQ,MAAO,QACPP,KAAM,UAER,CACED,KAAM,aACNQ,MAAO,QACPP,KAAM,SACNC,UAAW,eAEb,CACEF,KAAM,iBACNQ,MAAO,SACPP,KAAM,UAER,CACED,KAAM,qBACNC,KAAM,OACNK,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,QAIZ,CACEP,KAAM,SACNQ,MAAO,KACPP,KAAM,SACNC,UAAW,cAEb,CACEF,KAAM,iBACNQ,MAAO,OACPP,KAAM,SACNK,UAAW,CACTN,KAAM,WACNG,MAAO,CACLC,OAAQ,eAGZS,KAAM,CACJ,CACEC,MAAO,MACPC,MAAO,WAET,CACED,MAAO,KACPC,MAAO,UAGXb,UAAW,CACTF,KAAM,cACNG,MAAO,CACLa,KAAM,QACNC,WAAY,YAIlB,CACEjB,KAAM,qBACNC,KAAM,OACNK,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,QAIZ,CACEP,KAAM,OACNQ,MAAO,OACPP,KAAM,SACNK,UAAW,CACTN,KAAM,WACNG,MAAO,CACLe,QACE,wCAIR,CACElB,KAAM,MACNQ,MAAO,MACPP,KAAM,UAER,CACED,KAAM,SACNQ,MAAO,OACPP,KAAM,UAER,CACED,KAAM,yBACNC,KAAM,OACNK,UAAW,CACTN,KAAM,gBACNG,MAAO,CACLI,KAAM,QAIZ,CACEP,KAAM,UACNQ,MAAO,QACPP,KAAM,SACNC,UAAW,aACXI,UAAW,2BAEb,CACEN,KAAM,YACNQ,MAAO,OACPP,KAAM,SACNC,UAAW,aACXI,UAAW,4B,gDCtLjBa,EAAAA,cAAcC,OAAO,gBA1BrB,SAAoCC,GAClC,OAAO,SACLlB,GAEA,MAAM,qBACJmB,EAAoB,uBACpBC,EAAsB,aACtBC,EAAY,MACZC,EAAK,KACLC,GACEvB,EASJ,OAPAkB,EAAMM,WAAU,KACdD,EAAKE,iBAAiB,CACpBC,UAAU,EACVC,WAAW,GACX,GACD,CAACJ,IAEGL,EAAMU,cAAcT,EAAsB,CAC/CU,OAAQT,EAAuBxB,EAAAA,EAAkByB,GACjDC,SAEJ,CACF,G","sources":["webpack:///./src/editors/eo-card-item/eoCardItem.schema.tsx","webpack:///./src/editors/eo-card-item/index.tsx"],"sourcesContent":["export const eoCardItemSchema = {\n  name: \"layout\",\n  type: \"void\",\n  component: {\n    name: \"FormLayout\",\n    props: {\n      layout: \"vertical\",\n    },\n  },\n  children: [\n    {\n      name: \"categoryTitle_basic\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"基础\",\n        },\n      },\n    },\n    {\n      name: \"cardTitle\",\n      title: \"标题\",\n      type: \"string\",\n    },\n    {\n      name: \"description\",\n      title: \"描述\",\n      type: \"string\",\n    },\n    {\n      name: \"hasHeader\",\n      title: \"开放顶部区域\",\n      type: \"boolean\",\n      \"x-reactions\": [\n        {\n          target: \"auxiliaryText\",\n          fulfill: {\n            state: {\n              visible: \"{{$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"auxiliaryText\",\n      title: \"顶部辅助文字\",\n      type: \"string\",\n    },\n    {\n      name: \"categoryTitle_cover\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"封面\",\n        },\n      },\n    },\n    {\n      name: \"hasCover\",\n      title: \"使用卡片封面\",\n      type: \"boolean\",\n      \"x-reactions\": [\n        {\n          target: \"coverImage\",\n          fulfill: {\n            state: {\n              visible: \"{{$self.value}}\",\n            },\n          },\n        },\n        {\n          target: \"coverColor\",\n          fulfill: {\n            state: {\n              visible: \"{{$self.value}}\",\n            },\n          },\n        },\n        {\n          target: \"coverImageSize\",\n          fulfill: {\n            state: {\n              visible: \"{{$self.value}}\",\n            },\n          },\n        },\n        {\n          target: \"avatarPosition\",\n          fulfill: {\n            state: {\n              visible: \"{{$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"coverImage\",\n      title: \"封面背景图\",\n      type: \"string\",\n    },\n    {\n      name: \"coverColor\",\n      title: \"封面背景色\",\n      type: \"string\",\n      component: \"ColorPicker\",\n    },\n    {\n      name: \"coverImageSize\",\n      title: \"封面图片大小\",\n      type: \"string\",\n    },\n    {\n      name: \"categoryTitle_icon\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"图标\",\n        },\n      },\n    },\n    {\n      name: \"avatar\",\n      title: \"图标\",\n      type: \"string\",\n      component: \"IconSelect\",\n    },\n    {\n      name: \"avatarPosition\",\n      title: \"图标位置\",\n      type: \"string\",\n      decorator: {\n        name: \"FormItem\",\n        props: {\n          layout: \"horizontal\",\n        },\n      },\n      enum: [\n        {\n          label: \"内容区\",\n          value: \"content\",\n        },\n        {\n          label: \"封面\",\n          value: \"cover\",\n        },\n      ],\n      component: {\n        name: \"Radio.Group\",\n        props: {\n          size: \"small\",\n          optionType: \"button\",\n        },\n      },\n    },\n    {\n      name: \"categoryTitle_link\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"链接\",\n        },\n      },\n    },\n    {\n      name: \"href\",\n      title: \"href\",\n      type: \"string\",\n      decorator: {\n        name: \"FormItem\",\n        props: {\n          tooltip:\n            \"设置href时构件内将使用原生<a>标签处理链接，通常用于外链的跳转\",\n        },\n      },\n    },\n    {\n      name: \"url\",\n      title: \"url\",\n      type: \"string\",\n    },\n    {\n      name: \"target\",\n      title: \"跳转目标\",\n      type: \"string\",\n    },\n    {\n      name: \"categoryTitle_advanced\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"高级\",\n        },\n      },\n    },\n    {\n      name: \"actions\",\n      title: \"操作按钮组\",\n      type: \"string\",\n      component: \"CodeEditor\",\n      decorator: \"FormItemWithoutAdvanced\",\n    },\n    {\n      name: \"tagConfig\",\n      title: \"标签设置\",\n      type: \"string\",\n      component: \"CodeEditor\",\n      decorator: \"FormItemWithoutAdvanced\",\n    },\n  ],\n};\n","import type _React from \"react\";\nimport { customEditors } from \"@next-core/runtime\";\nimport type { EditorComponentProps } from \"@next-shared/property-editor\";\nimport { eoCardItemSchema } from \"./eoCardItem.schema\";\n\nfunction EoCardItemComponentFactory(React: typeof _React) {\n  return function EoCardItemComponent(\n    props: EditorComponentProps\n  ): React.ReactElement {\n    const {\n      SchemaFieldComponent,\n      formilySchemaFormatter,\n      advancedMode,\n      scope,\n      form,\n    } = props;\n\n    React.useEffect(() => {\n      form.setInitialValues({\n        hasCover: false,\n        hasHeader: false,\n      });\n    }, [form]);\n\n    return React.createElement(SchemaFieldComponent, {\n      schema: formilySchemaFormatter(eoCardItemSchema, advancedMode),\n      scope,\n    });\n  };\n}\n\ncustomEditors.define(\"eo-card-item\", EoCardItemComponentFactory);\n"],"names":["eoCardItemSchema","name","type","component","props","layout","children","decorator","text","title","target","fulfill","state","visible","enum","label","value","size","optionType","tooltip","customEditors","define","React","SchemaFieldComponent","formilySchemaFormatter","advancedMode","scope","form","useEffect","setInitialValues","hasCover","hasHeader","createElement","schema"],"sourceRoot":""}
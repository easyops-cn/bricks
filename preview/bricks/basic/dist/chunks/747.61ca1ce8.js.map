{"version":3,"file":"chunks/747.61ca1ce8.js","mappings":"4RAMO,IAAIA,EAAyBC,QAAQC,SAAQ,GACzCC,EAAwBF,QAAQC,SAAQ,GACxCE,EAAwBH,QAAQC,UACpC,SAASG,EAAMC,EAAMC,GAE1B,OADKD,IAAMA,EAAO,GACX,IAAIL,SAAQ,SAAUO,GAC3B,OAAOC,YAAW,WAChB,OAAOD,EAAID,EACb,GAAGD,EACL,GACF,CAQO,SAASI,IACd,OAAOC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAC9C,CACA,IAAIC,EAAS,EASN,SAASC,IACd,IAAIC,EAAmB,IAAbC,KAAKC,MAKf,OAJIF,GAAOF,IACTE,EAAMF,EAAS,GAEjBA,EAASE,EACFA,CACT,CCUO,IAAIG,EAAe,CACxBC,OAnDK,SAAgBC,GACrB,IAAIC,EAAQ,CACVjB,KAAM,IACNkB,iBAAkB,KAClBC,GAAI,IAAIC,iBAAiBJ,GACzBK,OAAQ,IAQV,OALAJ,EAAME,GAAGG,UAAY,SAAUC,GACzBN,EAAMC,kBACRD,EAAMC,iBAAiBK,EAASC,KAEpC,EACOP,CACT,EAsCEQ,MArCK,SAAeC,GACpBA,EAAaP,GAAGM,QAChBC,EAAaL,OAAS,EACxB,EAmCEM,UA1BK,SAAmBD,EAAcE,GACtCF,EAAaR,iBAAmBU,CAClC,EAyBEC,YAnCK,SAAqBH,EAAcI,GACxC,IAEE,OADAJ,EAAaP,GAAGU,YAAYC,GAAa,GAClChC,CACT,CAAE,MAAOiC,GACP,OAAOpC,QAAQqC,OAAOD,EACxB,CACF,EA6BEE,UAzBK,WAGL,GAA0B,oBAAfC,YAA8BA,WAAWC,MAAQD,WAAWC,KAAKC,KAC1E,OAAO,EAIT,GAAuB,oBAAXC,QAA0C,oBAATC,MAAqD,mBAArBlB,iBAM3E,OAAO,EALP,GAAIA,iBAAiBmB,QACnB,MAAM,IAAIC,MAAM,uGAElB,OAAO,CAIX,EAUEC,KAzDgB,SA0DhBC,oBAVK,WACL,OAAO,GACT,EASEhC,aA5DwB,GCInB,MAAMiC,EACTC,IACAC,IAAM,IAAIC,IAKVC,KAAM,EACN,WAAAC,CAAYJ,GACRK,KAAKL,IAAMA,CACf,CACA,GAAAM,CAAIC,GACA,OAAOF,KAAKJ,IAAIK,IAAIC,EACxB,CACA,GAAAC,CAAID,GACAF,KAAKJ,IAAIQ,IAAIF,EAAOtC,KAOfoC,KAAKF,MACNE,KAAKF,KAAM,EACX5C,YAAW,KACP8C,KAAKF,KAAM,EAapB,SAA4BO,GAC/B,MAAMC,EAAY1C,IAAQyC,EAAaV,IACjCY,EAAWF,EAAaT,IAAIY,OAAOD,YAKzC,OAAa,CACT,MAAME,EAAOF,EAASE,OAAOP,MAC7B,IAAKO,EACD,OAEJ,MAAMP,EAAQO,EAAK,GAEnB,KADaA,EAAK,GACPH,GAKP,OAJAD,EAAaT,IAAIc,OAAOR,EAMhC,CACJ,CAlCgBS,CAAmBX,KAAK,GACzB,GAEX,CACA,KAAAY,GACIZ,KAAKJ,IAAIgB,OACb,EA6BG,SAAShD,IACZ,OAAOD,KAAKC,KAChB,CCpEO,SAASiD,IACd,IAAIC,EAAkBC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,CAAC,EACvFG,EAAUC,KAAKC,MAAMD,KAAKE,UAAUP,IA6BxC,YA1BwC,IAA7BI,EAAQI,mBAAkCJ,EAAQI,kBAAmB,GAG3EJ,EAAQK,MAAKL,EAAQK,IAAM,CAAC,GAE5BL,EAAQK,IAAI5B,MAAKuB,EAAQK,IAAI5B,IAAM,MACnCuB,EAAQK,IAAIC,mBAAkBN,EAAQK,IAAIC,iBAAmB,KAE9DV,EAAgBS,KAA8C,mBAAhCT,EAAgBS,IAAIE,UAAwBP,EAAQK,IAAIE,QAAUX,EAAgBS,IAAIE,SAGnHP,EAAQQ,eAAcR,EAAQQ,aAAe,CAAC,GAC9CR,EAAQQ,aAAaC,gBAAeT,EAAQQ,aAAaC,cAAgB,KAG1Eb,EAAgBc,UAASV,EAAQU,QAAUd,EAAgBc,SAG1DV,EAAQW,OAAMX,EAAQW,KAAO,CAAC,GAC9BX,EAAQW,KAAKlC,MAAKuB,EAAQW,KAAKlC,IAAM,MAKrCuB,EAAQW,KAAKC,oBAAmBZ,EAAQW,KAAKC,kBAAoB,WAC9B,IAA7BZ,EAAQW,KAAKE,cAA6Bb,EAAQW,KAAKE,aAAc,GACzEb,CACT,CCtBO,IAIHc,EAAkB,WAMXC,EAAuB,CAChCC,WAAY,WAGP,SAASC,IACd,GAAyB,oBAAdC,UAA2B,OAAOA,UAC7C,GAAsB,oBAAXhD,OAAwB,CACjC,QAAmC,IAAxBA,OAAOiD,aAA8B,OAAOjD,OAAOiD,aAC9D,QAAsC,IAA3BjD,OAAOkD,gBAAiC,OAAOlD,OAAOkD,gBACjE,QAAkC,IAAvBlD,OAAOmD,YAA6B,OAAOnD,OAAOmD,WAC/D,CACA,OAAO,CACT,CAOO,SAASC,EAA2BC,GACrCA,EAAGC,QACLD,EAAGC,QAEP,CAuNA,SAASC,EAAU3E,GACbA,EAAM4E,QACVC,EAAgB7E,GAAO8E,MAAK,WAC1B,OAAOhG,EAAMkB,EAAMkD,QAAQK,IAAIC,iBACjC,IAAGsB,MAAK,WACN,OAAOH,EAAU3E,EACnB,GACF,CAWA,SAAS6E,EAAgB7E,GAEvB,OAAIA,EAAM4E,OAAe/F,EAGpBmB,EAAMC,iBAtKN,SAA+B8E,EAAIC,GACxC,IAAIP,EAAKM,EAAGE,YAAYjB,EAAiB,WAAYC,GACjDiB,EAAcT,EAAGS,YAAYlB,GAC7BtE,EAAM,GACNyF,EAAgBC,YAAYC,MAAML,EAAe,EAAGM,KAOxD,GAAIJ,EAAYK,OAAQ,CACtB,IAAIC,EAAgBN,EAAYK,OAAOJ,GACvC,OAAO,IAAIzG,SAAQ,SAAUO,EAAKwG,GAChCD,EAAcE,QAAU,SAAU5E,GAChC,OAAO2E,EAAI3E,EACb,EACA0E,EAAcG,UAAY,SAAUC,GAClC3G,EAAI2G,EAAEC,OAAOC,OACf,CACF,GACF,CAYA,OAAO,IAAIpH,SAAQ,SAAUO,EAAKwG,GAChC,IAAIM,EAZN,WAIE,IAEE,OADAZ,EAAgBC,YAAYC,MAAML,EAAe,EAAGM,KAC7CJ,EAAYc,WAAWb,EAChC,CAAE,MAAOS,GACP,OAAOV,EAAYc,YACrB,CACF,CAE0BA,GACxBD,EAAkBL,QAAU,SAAU5E,GACpC,OAAO2E,EAAI3E,EACb,EACAiF,EAAkBJ,UAAY,SAAUM,GACtC,IAAIC,EAASD,EAAGJ,OAAOC,OACnBI,EACEA,EAAOhE,MAAMiE,GAAKnB,EAAe,EACnCkB,EAAiB,SAAElB,EAAe,IAElCtF,EAAI0G,KAAKF,EAAOhE,OAChBgE,EAAiB,aAGnB1B,EAA2BC,GAC3BxF,EAAIS,GAER,CACF,GACF,CAkHS2G,CAAsBrG,EAAM+E,GAAI/E,EAAMgF,cAAcF,MAAK,SAAUwB,GACxE,IAAIC,EAAcD,EAKdE,QAAO,SAAUC,GACnB,QAASA,CACX,IAAG7E,KAAI,SAAU6E,GAIf,OAHIA,EAAON,GAAKnG,EAAMgF,eACpBhF,EAAMgF,aAAeyB,EAAON,IAEvBM,CACT,IAAGD,QAAO,SAAUC,GAClB,OA9BN,SAAwBA,EAAQzG,GAC9B,QAAIyG,EAAOC,OAAS1G,EAAM0G,MACtB1G,EAAM2G,KAAK1E,IAAIwE,EAAON,KACtBM,EAAOlG,KAAKxB,KAAOiB,EAAM4G,qBAE/B,CAyBaC,CAAeJ,EAAQzG,EAChC,IAAG8G,MAAK,SAAUC,EAASC,GACzB,OAAOD,EAAQhI,KAAOiI,EAAQjI,IAChC,IAOA,OANAwH,EAAYU,SAAQ,SAAUR,GACxBzG,EAAMC,mBACRD,EAAM2G,KAAKxE,IAAIsE,EAAON,IACtBnG,EAAMC,iBAAiBwG,EAAOlG,MAElC,IACO1B,CACT,IA1BoCA,CA2BtC,CA2BO,IAAIqI,EAAkB,CAC3BpH,OAxHK,SAAgBC,EAAamD,GAElC,OADAA,EAAUL,EAAwBK,GA7K7B,SAAwBnD,GAC7B,IAGIoH,EAnCU,8BAmCWpH,EAOrBqH,EAVYjD,IAUYkD,KAAKF,GAQjC,OAPAC,EAAYE,gBAAkB,SAAUrB,GAC7BA,EAAGJ,OAAOC,OAChByB,kBAAkBvD,EAAiB,CACpCwD,QAAS,KACTC,eAAe,GAEnB,EACO,IAAI/I,SAAQ,SAAUO,EAAKwG,GAChC2B,EAAY1B,QAAU,SAAUO,GAC9B,OAAOR,EAAIQ,EACb,EACAmB,EAAYzB,UAAY,WACtB1G,EAAImI,EAAYtB,OAClB,CACF,GACF,CAmJS4B,CAAe3H,GAAa+E,MAAK,SAAUC,GAChD,IAAI/E,EAAQ,CACV4E,QAAQ,EACRI,aAAc,EACdjF,YAAaA,EACbmD,QAASA,EACTwD,KAAMvH,IAMNwH,KAAM,IAAIjF,EAA+B,EAAlBwB,EAAQK,IAAI5B,KAEnCgG,kBAAmB9I,EACnBoB,iBAAkB,KAClB2H,kBAAmB,GACnB7C,GAAIA,GAoBN,OAXAA,EAAGtB,QAAU,WACXzD,EAAM4E,QAAS,EACX1B,EAAQK,IAAIE,SAASP,EAAQK,IAAIE,SACvC,EAOAkB,EAAU3E,GACHA,CACT,GACF,EAgFEQ,MA5BK,SAAeC,GACpBA,EAAamE,QAAS,EACtBnE,EAAasE,GAAGvE,OAClB,EA0BEE,UAdK,SAAmBD,EAAcE,EAAI5B,GAC1C0B,EAAamG,qBAAuB7H,EACpC0B,EAAaR,iBAAmBU,EAChCkE,EAAgBpE,EAClB,EAWEG,YA1BK,SAAqBH,EAAcI,GASxC,OARAJ,EAAakH,kBAAoBlH,EAAakH,kBAAkB7C,MAAK,WACnE,OA9OG,SAAsBC,EAAI8C,EAAYhH,GAC3C,IACIiH,EAAc,CAChBpB,KAAMmB,EACN9I,KAHSY,KAAKC,MAIdW,KAAMM,GAEJ4D,EAAKM,EAAGE,YAAY,CAACjB,GAAkB,YAAaC,GACxD,OAAO,IAAIvF,SAAQ,SAAUO,EAAKwG,GAChChB,EAAGsD,WAAa,WACd,OAAO9I,GACT,EACAwF,EAAGiB,QAAU,SAAUO,GACrB,OAAOR,EAAIQ,EACb,EACkBxB,EAAGS,YAAYlB,GACrB7B,IAAI2F,GAChBtD,EAA2BC,EAC7B,GACF,CA2NWuD,CAAavH,EAAasE,GAAItE,EAAaiG,KAAM7F,EAC1D,IAAGiE,MAAK,WACmB,KAAX,EAAG,GJ3SZ1F,KAAK6I,MAAsB,GAAhB7I,KAAKC,SI2SP,KA5GX,SAA0BoB,GAC/B,OA1B6BsE,EA0BPtE,EAAasE,GA1BFpD,EA0BMlB,EAAayC,QAAQK,IAAI5B,IAzB5DW,EAAY3C,KAAKC,MAAQ+B,EACzB8C,EAAKM,EAAGE,YAAYjB,EAAiB,WAAYC,GACjDiB,EAAcT,EAAGS,YAAYlB,GAC7BtE,EAAM,GACH,IAAIhB,SAAQ,SAAUO,GAC3BiG,EAAYc,aAAaL,UAAY,SAAUM,GAC7C,IAAIC,EAASD,EAAGJ,OAAOC,OACvB,GAAII,EAAQ,CACV,IAAIgC,EAAShC,EAAOhE,MAChBgG,EAAOnJ,KAAOuD,GAChB5C,EAAI0G,KAAK8B,GAEThC,EAAiB,aAGjB1B,EAA2BC,GAC3BxF,EAAIS,GAER,MACET,EAAIS,EAER,CACF,KAGqEoF,MAAK,SAAUqD,GAClF,OA1CG,SAA4B1H,EAAc2H,GAC/C,GAAI3H,EAAamE,OACf,OAAOlG,QAAQC,QAAQ,IAEzB,IACIuG,EADKzE,EAAasE,GAAGE,YAAYjB,EAAiB,YAAaC,GAC9CiB,YAAYlB,GACjC,OAAOtF,QAAQ2J,IAAID,EAAIxG,KAAI,SAAUuE,GACnC,IAAImC,EAAgBpD,EAAoB,OAAEiB,GAC1C,OAAO,IAAIzH,SAAQ,SAAUO,GAC3BqJ,EAAc3C,UAAY,WACxB,OAAO1G,GACT,CACF,GACF,IACF,CA4BWsJ,CAAmB9H,EAAc0H,EAAOvG,KAAI,SAAU4G,GAC3D,OAAOA,EAAIrC,EACb,IACF,IA9BK,IAAwBpB,EAAIpD,EAC7BW,EACAmC,EACAS,EACAxF,CA2BN,CAwGM+I,CAAiBhI,EAErB,IACOA,EAAakH,iBACtB,EAiBE3G,UAXK,WACL,QAASmD,GACX,EAUE3C,KA9TgB,MA+ThBC,oBAVK,SAA6ByB,GAClC,OAAsC,EAA/BA,EAAQK,IAAIC,gBACrB,EASE/D,aA7UwB,GCSnB,SAASiJ,IACd,IAAIC,EACJ,GAAsB,oBAAXvH,OAAwB,OAAO,KAC1C,IACEuH,EAAevH,OAAOuH,aACtBA,EAAevH,OAAO,8BAAgCA,OAAOuH,YAC/D,CAAE,MAAO/C,GAIT,CACA,OAAO+C,CACT,CACO,SAASC,EAAW7I,GACzB,MArBe,2BAqBKA,CACtB,CAmFO,SAAS,IACd,IAAI8I,EAAKH,IACT,IAAKG,EAAI,OAAO,EAChB,IACE,IAAIC,EAAM,2BACVD,EAAGE,QAAQD,EAAK,SAChBD,EAAGG,WAAWF,EAChB,CAAE,MAAOlD,GAIP,OAAO,CACT,CACA,OAAO,CACT,CAUO,IAAIqD,EAAqB,CAC9BnJ,OA9DK,SAAgBC,EAAamD,GAElC,GADAA,EAAUL,EAAwBK,IAC7B,IACH,MAAM,IAAI3B,MAAM,iDAElB,IAAImF,EAAOvH,IAOPwH,EAAO,IAAIjF,EAAawB,EAAQQ,aAAaC,eAC7C3D,EAAQ,CACVD,YAAaA,EACb2G,KAAMA,EACNC,KAAMA,GAYR,OATA3G,EAAMkJ,SAhCD,SAAiCnJ,EAAaY,GACnD,IAAImI,EAAMF,EAAW7I,GACjBmJ,EAAW,SAAkBjD,GA8BqB,IAAUQ,EA7B1DR,EAAG6C,MAAQA,IA6B+CrC,EA5BzDtD,KAAKC,MAAM6C,EAAGkD,UA6BdnJ,EAAMC,kBACPwG,EAAOC,OAASA,GACfD,EAAO2C,QAASzC,EAAK1E,IAAIwE,EAAO2C,SACjC3C,EAAOlG,KAAKxB,MAAQ0H,EAAOlG,KAAKxB,KAAOiB,EAAM4G,uBAEjDD,EAAKxE,IAAIsE,EAAO2C,OAChBpJ,EAAMC,iBAAiBwG,EAAOlG,QAjChC,EAEA,OADAa,OAAOiI,iBAAiB,UAAWH,GAC5BA,CACT,CAuBmBI,CAAwBvJ,GASlCC,CACT,EAkCEQ,MAjCK,SAAeC,GAjCf,IAAoCyI,IAkCdzI,EAAayI,SAjCxC9H,OAAOmI,oBAAoB,UAAWL,EAkCxC,EAgCExI,UA/BK,SAAmBD,EAAcE,EAAI5B,GAC1C0B,EAAamG,qBAAuB7H,EACpC0B,EAAaR,iBAAmBU,CAClC,EA6BEC,YAzGK,SAAqBH,EAAcI,GACxC,OAAO,IAAInC,SAAQ,SAAUO,GAC3BH,IAAQgG,MAAK,WACX,IAAIgE,EAAMF,EAAWnI,EAAaV,aAC9ByJ,EAAW,CACbJ,MAAOjK,IACPJ,KAAMY,KAAKC,MACXW,KAAMM,EACN6F,KAAMjG,EAAaiG,MAEjBxE,EAAQiB,KAAKE,UAAUmG,GAC3Bd,IAAkBK,QAAQD,EAAK5G,GAO/B,IAAI+D,EAAKwD,SAASC,YAAY,SAC9BzD,EAAG0D,UAAU,WAAW,GAAM,GAC9B1D,EAAG6C,IAAMA,EACT7C,EAAGkD,SAAWjH,EACdd,OAAOwI,cAAc3D,GACrBhH,GACF,GACF,GACF,EAgFE+B,UAAW,EACXQ,KAtIgB,eAuIhBC,oBAhBK,WACL,IACIoI,EAAYC,UAAUD,UAAUE,cACpC,OAAIF,EAAUG,SAAS,YAAcH,EAAUG,SAAS,UAE/CC,IAJS,GAOpB,EASExK,aA1IwB,GCVf,EAAe,EAEtByK,EAAoB,IAAIC,IA2CjBC,EAAiB,CAC1BtK,OA3CK,SAAgBC,GACrB,IAAIC,EAAQ,CACVjB,KAAM,IACNsL,KAAMtK,EACNE,iBAAkB,MAGpB,OADAiK,EAAkB/H,IAAInC,GACfA,CACT,EAoCEQ,MAnCK,SAAeC,GACpByJ,EAA0B,OAAEzJ,EAC9B,EAkCEC,UAZK,SAAmBD,EAAcE,GACtCF,EAAaR,iBAAmBU,CAClC,EAWEC,YAjCK,SAAqBH,EAAcI,GACxC,OAAO,IAAInC,SAAQ,SAAUO,GAC3B,OAAOC,YAAW,WACGoL,MAAMC,KAAKL,GACjBjD,SAAQ,SAAUuD,GACzBA,EAAQH,OAAS5J,EAAa4J,MAElCG,IAAY/J,GAEV+J,EAAQvK,kBAEVuK,EAAQzL,KAAO8B,EAAY9B,MAEzByL,EAAQvK,iBAAiBY,EAE7B,IACA5B,GACF,GAlB6B,EAmB/B,GACF,EAeE+B,UAXK,WACL,OAAO,CACT,EAUEQ,KAlDgB,WAmDhBC,oBAVK,WACL,OA5B+B,CA6BjC,EASEhC,aAAc,GC/CZgL,EAAU,CAAC5K,EAEfqH,EAAiB+B,GACV,SAASyB,EAAaxH,GAC3B,IAAIyH,EAAgB,GAAGC,OAAO1H,EAAQU,QAAS6G,GAASjE,OAAOqE,SAK/D,GAAI3H,EAAQ1B,KAAM,CAChB,GAAqB,aAAjB0B,EAAQ1B,KAEV,OAAO4I,EAET,IAAI1K,EAAMiL,EAAcG,MAAK,SAAUC,GACrC,OAAOA,EAAEvJ,OAAS0B,EAAQ1B,IAC5B,IACA,GAAK9B,EAAwE,OAAOA,EAA1E,MAAM,IAAI6B,MAAM,eAAiB2B,EAAQ1B,KAAO,aAC5D,CAMK0B,EAAQI,mBACXqH,EAAgBA,EAAcnE,QAAO,SAAUuE,GAC7C,MAAkB,QAAXA,EAAEvJ,IACX,KAEF,IAAIwJ,EAAYL,EAAcG,MAAK,SAAUG,GAC3C,OAAOA,EAAOjK,WAChB,IACA,GAAKgK,EAKH,OAAOA,EAJP,MAAM,IAAIzJ,MAAM,6BAA+B4B,KAAKE,UAAUoH,EAAQ7I,KAAI,SAAUmJ,GAClF,OAAOA,EAAEvJ,IACX,KAIJ,CCtCO,IAiFH0J,EAjFOC,EAA0B,IAAIhB,IACrCiB,EAAS,EACF,EAAmB,SAA0Bf,EAAMnH,GA0L9D,IAAyBsH,EACnBa,ERlMoBC,EQSxBtJ,KAAKmE,GAAKiF,IACVD,EAAwBhJ,IAAIH,MAC5BA,KAAKqI,KAAOA,EACRa,IACFhI,EAAUgI,GAEZlJ,KAAKkB,QAAUL,EAAwBK,GACvClB,KAAKiJ,OAASP,EAAa1I,KAAKkB,SAGhClB,KAAKuJ,KAAM,EAOXvJ,KAAKwJ,MAAQ,KAKbxJ,KAAKyJ,OAAS,CACZC,QAAS,GACTC,SAAU,IAQZ3J,KAAK4J,KAAO,IAAIzB,IAOhBnI,KAAK6J,MAAQ,GAKb7J,KAAK8J,OAAS,MRrDUR,EQkMpBD,GADmBb,EA3IPxI,MA4IWiJ,OAAOnL,OAAO0K,EAAQH,KAAMG,EAAQtH,WRjM7B,mBAAboI,EAAIxG,MQmMvB0F,EAAQsB,OAAST,EACjBA,EAAavG,MAAK,SAAUiH,GAK1BvB,EAAQwB,OAASD,CACnB,KAEAvB,EAAQwB,OAASX,CAtJrB,EAeO,SAASY,EAAgB/I,GAE9B,IAAI+H,EAASP,EADbxH,EAAUL,EAAwBK,IAElC,MAAoB,SAAhB+H,EAAOzJ,KACFyJ,EAAOgB,kBAAkBnH,MAAK,WACnC,OAAO,CACT,IAEOrG,CAEX,CAOO,SAASyN,EAAehJ,GAC7BgI,EAAmBhI,CACrB,CAqFA,SAASiJ,EAAMC,EAAkB5K,EAAMgH,GACrC,IACI/B,EAAS,CACX1H,KAFSqN,EAAiBnB,OAAOxL,eAGjC+B,KAAMA,EACNjB,KAAMiI,GAGR,OADmB4D,EAAiBN,OAASM,EAAiBN,OAASjN,GACnDiG,MAAK,WACvB,IAAIuH,EAAcD,EAAiBnB,OAAOrK,YAAYwL,EAAiBJ,OAAQvF,GAO/E,OAJA2F,EAAiBR,KAAKzJ,IAAIkK,GAC1BA,EAAmB,QAAIvH,MAAK,WAC1B,OAAOsH,EAAiBR,KAAa,OAAES,EACzC,IACOA,CACT,GACF,CAgBA,SAASC,EAAqB9B,GAC5B,OAAIA,EAAQiB,OAAOC,QAAQ1I,OAAS,GAChCwH,EAAQiB,OAAOE,SAAS3I,OAAS,CAEvC,CACA,SAASuJ,EAAmB/B,EAAShJ,EAAM8J,GACzCd,EAAQiB,OAAOjK,GAAM4E,KAAKkF,GAS5B,SAAyBd,GACvB,IAAKA,EAAQe,KAAOe,EAAqB9B,GAAU,CAGjD,IAAIgC,EAAa,SAAoB/F,GACnC+D,EAAQiB,OAAOhF,EAAOjF,MAAMyF,SAAQ,SAAUwF,GACxChG,EAAO1H,MAAQ0N,EAAe1N,MAChC0N,EAAe9L,GAAG8F,EAAOlG,KAE7B,GACF,EACIxB,EAAOyL,EAAQS,OAAOxL,eACtB+K,EAAQsB,OACVtB,EAAQsB,OAAOhH,MAAK,WAClB0F,EAAQe,KAAM,EACdf,EAAQS,OAAOvK,UAAU8J,EAAQwB,OAAQQ,EAAYzN,EACvD,KAEAyL,EAAQe,KAAM,EACdf,EAAQS,OAAOvK,UAAU8J,EAAQwB,OAAQQ,EAAYzN,GAEzD,CACF,CA9BE2N,CAAgBlC,EAClB,CACA,SAASmC,EAAsBnC,EAAShJ,EAAM8J,GAC5Cd,EAAQiB,OAAOjK,GAAQgJ,EAAQiB,OAAOjK,GAAMgF,QAAO,SAAUoG,GAC3D,OAAOA,IAAMtB,CACf,IA0BF,SAAwBd,GACtB,GAAIA,EAAQe,MAAQe,EAAqB9B,GAAU,CAEjDA,EAAQe,KAAM,EACd,IAAIxM,EAAOyL,EAAQS,OAAOxL,eAC1B+K,EAAQS,OAAOvK,UAAU8J,EAAQwB,OAAQ,KAAMjN,EACjD,CACF,CAhCE8N,CAAerC,EACjB,CA9JA,EAAiBlJ,SAAU,EA4B3B,EAAiBwL,UAAY,CAC3BlM,YAAa,SAAqB4H,GAChC,GAAIxG,KAAK4C,OACP,MAAM,IAAIrD,MAAM,gFAMhB4B,KAAKE,UAAUmF,IAEjB,OAAO2D,EAAMnK,KAAM,UAAWwG,EAChC,EACAuE,aAAc,SAAsBvE,GAClC,OAAO2D,EAAMnK,KAAM,WAAYwG,EACjC,EACA,aAAInI,CAAUM,GACZ,IACIqM,EAAY,CACdjO,KAFSiD,KAAKiJ,OAAOxL,eAGrBkB,GAAIA,GAENgM,EAAsB3K,KAAM,UAAWA,KAAKwJ,OACxC7K,GAAoB,mBAAPA,GACfqB,KAAKwJ,MAAQwB,EACbT,EAAmBvK,KAAM,UAAWgL,IAEpChL,KAAKwJ,MAAQ,IAEjB,EACAnC,iBAAkB,SAA0B7H,EAAMb,GAMhD4L,EAAmBvK,KAAMR,EAJT,CACdzC,KAFSiD,KAAKiJ,OAAOxL,eAGrBkB,GAAIA,GAGR,EACA4I,oBAAqB,SAA6B/H,EAAMb,GAItDgM,EAAsB3K,KAAMR,EAHlBQ,KAAKyJ,OAAOjK,GAAMsJ,MAAK,SAAUQ,GACzC,OAAOA,EAAI3K,KAAOA,CACpB,IAEF,EACAH,MAAO,WACL,IAAIyM,EAAQjL,KACZ,IAAIA,KAAK4C,OAAT,CAGAuG,EAAgC,OAAEnJ,MAClCA,KAAK4C,QAAS,EACd,IAAIsI,EAAelL,KAAK8J,OAAS9J,KAAK8J,OAASjN,EAG/C,OAFAmD,KAAKwJ,MAAQ,KACbxJ,KAAKyJ,OAAOC,QAAU,GACfwB,EAENpI,MAAK,WACJ,OAAOpG,QAAQ2J,IAAIiC,MAAMC,KAAK0C,EAAMrB,MACtC,IAEC9G,MAAK,WACJ,OAAOpG,QAAQ2J,IAAI4E,EAAMpB,MAAMjK,KAAI,SAAUjB,GAC3C,OAAOA,GACT,IACF,IAECmE,MAAK,WACJ,OAAOmI,EAAMhC,OAAOzK,MAAMyM,EAAMjB,OAClC,GApBA,CAqBF,EACA,QAAIxK,GACF,OAAOQ,KAAKiJ,OAAOzJ,IACrB,EACA,YAAI2L,GACF,OAAOnL,KAAK4C,MACd,GClKF,IACIwI,EAD0F,qBAAjFC,OAAOP,UAAUxN,SAASgO,KAAwB,oBAAZC,QAA0BA,QAAU,GCRhF,SAAiB5M,GACtB4M,QAAQC,GAAG,QAAQ,WACjB,OAAO7M,GACT,IAQA4M,QAAQC,GAAG,cAAc,WACvB,OAAO7M,IAAKmE,MAAK,WACf,OAAOyI,QAAQE,MACjB,GACF,IAEAF,QAAQC,GAAG,UAAU,WACnB,OAAO7M,IAAKmE,MAAK,WACf,OAAOyI,QAAQE,MACjB,GACF,IAEAF,QAAQC,GAAG,qBAAqB,SAAU1M,GACxC,OAAOH,IAAKmE,MAAK,WACf4I,QAAQC,MAAM7M,GACdyM,QAAQE,KAAK,IACf,GACF,GACF,EC3BO,SAAoB9M,GACzB,GAAiC,mBAAtBiN,mBAAoCvM,gBAAgBuM,kBAAmB,CAOhF,IAAIC,EAAWxM,KAAKb,MAAMsN,KAAKzM,MAC/BA,KAAKb,MAAQ,WAEX,OADAG,IACOkN,GACT,CACF,KAAO,CAKL,GAAuC,mBAA5BzM,OAAOiI,iBAChB,OAMFjI,OAAOiI,iBAAiB,gBAAgB,WACtC1I,GACF,IAAG,GAMHS,OAAOiI,iBAAiB,UAAU,WAChC1I,GACF,IAAG,EACL,CAMF,EFlCIoN,EAAY,IAAI5D,IAChB6D,GAAmB,EAyBhB,SAASC,IACd,IAAIC,EAAW,GAKf,OAJAH,EAAU9G,SAAQ,SAAUtG,GAC1BuN,EAAS9H,KAAKzF,KACdoN,EAAkB,OAAEpN,EACtB,IACOjC,QAAQ2J,IAAI6F,EACrB,CGtCO,SAASC,EAAkBC,EAAeC,GAC/C,IAAIC,EAAU,CACZC,QAAS,SACTF,OAAQA,EACRjF,MAAOgF,EAAchF,OAEvB,OAAOgF,EAAchC,iBAAiBW,aAAauB,EACrD,CACO,SAASE,EAASJ,GACvBA,EAAcK,UAAW,EACzBL,EAAcM,YAAa,EAC3B,IAAIC,EHGC,SAAahO,GAElB,GARIqN,IAGJA,GAAmB,EACnBZ,EAAWa,IAIO,mBAAPtN,EACT,MAAM,IAAIY,MAAM,2BAYlB,OAVAwM,EAAU5L,IAAIxB,GACE,CACdiO,OAAQ,WACN,OAAOb,EAAkB,OAAEpN,EAC7B,EACAkO,IAAK,WAEH,OADAd,EAAkB,OAAEpN,GACbA,GACT,EAGJ,CGnBiB,EAAU,WACvB,OAAOyN,EAAcU,KACvB,IACAV,EAAcW,KAAK3I,KAAKuI,GACxB,IAAIK,EAAmB,SAA0BxG,GAC3B,WAAhBA,EAAI+F,SAAuC,UAAf/F,EAAI6F,QAClCF,EAAkBC,EAAe,QAEf,WAAhB5F,EAAI+F,SAAuC,SAAf/F,EAAI6F,QAAsBD,EAAca,QAStEb,EAAca,OAAQ,EACtBb,EAAcc,OACdf,EAAkBC,EAAe,QAErC,EAIA,OAFAA,EAAchC,iBAAiB/C,iBAAiB,WAAY2F,GAC5DZ,EAAce,OAAO/I,KAAK4I,GACnBb,EAAkBC,EAAe,OAC1C,CCnCO,IAAIgB,EAAwB,SAA+BhD,EAAkBlJ,GAClF,IAAI+J,EAAQjL,KACZA,KAAKoK,iBAAmBA,EACxBA,EAAiBP,MAAMzF,MAAK,WAC1B,OAAO6G,EAAM6B,KACf,IACA9M,KAAKqN,SAAWnM,EAChBlB,KAAKyM,UAAW,EAChBzM,KAAKsN,QAAS,EACdtN,KAAKoH,MAAQjK,IACb6C,KAAKmN,OAAS,GACdnN,KAAK+M,KAAO,GACZ/M,KAAKkN,KAAO,WAAa,EACzBlN,KAAKiN,OAAQ,EAEbjN,KAAKuN,MAAQ,CAAC,EAGdvN,KAAKwN,GAAK,cAAgBpD,EAAiBnB,OAAOzJ,KAAO,KAAO4K,EAAiB/B,IACnF,EACA+E,EAAsBtC,UAAY,CAChC2C,UAAW,WACT,IAAIC,EAAS1N,KACb,OAAO8H,UAAU6F,MAAMC,QAAQ9K,MAAK,SAAU6K,GAC5C,IAAIE,EAAgBF,EAAMG,KAAOH,EAAMG,KAAKtJ,QAAO,SAAUuJ,GAC3D,OAAOA,EAAK1F,OAASqF,EAAOF,EAC9B,IAAK,GACL,SAAIK,GAAiBA,EAAc7M,OAAS,EAK9C,GACF,EACAgN,gBAAiB,WACf,IAAIC,EAASjO,KACb,IAAKA,KAAKkO,MAAO,CACflO,KAAKuN,MAAMY,EAAI,IAAIC,gBACnB,IAAIC,EAAgB,IAAI3R,SAAQ,SAAUO,EAAKwG,GAC7CwK,EAAOV,MAAMtQ,IAAMA,EACnBgR,EAAOV,MAAM9J,IAAMA,CACrB,IACAzD,KAAKkO,MAAQ,IAAIxR,SAAQ,SAAUO,GACjC6K,UAAU6F,MAAMW,QAAQL,EAAOT,GAAI,CACjCe,OAAQN,EAAOV,MAAMY,EAAEI,SACtB,WAKD,OAHAN,EAAOV,MAAMY,OAAIlN,EACjBuL,EAASyB,GACThR,IACOoR,CACT,IAAU,OAAE,WAAa,GAC3B,GACF,CACA,OAAOrO,KAAKkO,KACd,EACA,eAAIM,CAAYC,GAEhB,EACA3B,IAAK,WACH,IAAI4B,EAAS1O,KAmBb,OAlBAA,KAAKmN,OAAOlI,SAAQ,SAAUiC,GAC5B,OAAOwH,EAAOtE,iBAAiB7C,oBAAoB,WAAYL,EACjE,IACAlH,KAAKmN,OAAS,GACdnN,KAAK+M,KAAK9H,SAAQ,SAAU0J,GAC1B,OAAOA,EAAI/B,QACb,IACA5M,KAAK+M,KAAO,GACR/M,KAAKyM,WACPzM,KAAKyM,UAAW,GAElBzM,KAAKsN,QAAS,EACVtN,KAAKuN,MAAMtQ,KACb+C,KAAKuN,MAAMtQ,MAET+C,KAAKuN,MAAMY,GACbnO,KAAKuN,MAAMY,EAAES,MAAM,sCAEdzC,EAAkBnM,KAAM,QACjC,GCpFF,IAAI6O,EAAiB,SAAwBzE,EAAkBlJ,GAC7D,IAAI+J,EAAQjL,KACZA,KAAKoK,iBAAmBA,EACxBpK,KAAKqN,SAAWnM,EAChBlB,KAAKyM,UAAW,EAChBzM,KAAK0M,YAAa,EAClB1M,KAAKsN,QAAS,EACdtN,KAAKoH,MAAQjK,IAOb6C,KAAK8O,MAAQjS,EAEbmD,KAAK+O,OAAS,EAGd/O,KAAK+M,KAAO,GACZ/M,KAAKmN,OAAS,GACdnN,KAAKkN,KAAO,WAAa,EACzBlN,KAAKiN,OAAQ,EAOb,IAAI+B,EAAoB,SAA2BxI,GAC7B,WAAhBA,EAAI+F,UACa,UAAf/F,EAAI6F,SACNpB,EAAMyB,YAAa,GAEF,SAAflG,EAAI6F,SACNpB,EAAMyB,YAAa,GAGzB,EACA1M,KAAKoK,iBAAiB/C,iBAAiB,WAAY2H,GACnDhP,KAAKmN,OAAO/I,KAAK4K,EACnB,EAqOO,SAASC,EAAqBzG,EAAStH,GAC5C,GAAIsH,EAAQ0G,eACV,MAAM,IAAI3P,MAAM,iDAElB2B,EAfF,SAAiCA,EAASsH,GASxC,OARKtH,IAASA,EAAU,CAAC,IACzBA,EAAUC,KAAKC,MAAMD,KAAKE,UAAUH,KACvBM,mBACXN,EAAQM,iBAAmB,KAExBN,EAAQiO,eACXjO,EAAQiO,aAAe3G,EAAQS,OAAOxJ,oBAAoB+I,EAAQtH,UAE7DA,CACT,CAKY,CAAwBA,EAASsH,GAC3C,IAAI4G,EdpOqB,oBAAdtH,gBAAwD,IAApBA,UAAU6F,OAA4D,mBAA5B7F,UAAU6F,MAAMW,QcoOpE,IAAIlB,EAAsB5E,EAAStH,GAAW,IAAI2N,EAAerG,EAAStH,GAK/G,OAJAsH,EAAQqB,MAAMzF,MAAK,WACjB,OAAOgL,EAAQtC,KACjB,IACAtE,EAAQ0G,eAAiBE,EAClBA,CACT,CA/OAP,EAAe/D,UAAY,CACzB2C,UAAW,WACT,OAAO/Q,QAAQC,QAAQqD,KAAK0M,WAC9B,EAMA2C,UAAW,SAEXC,GACE,IAAI5B,EAAS1N,KACb,OAAIA,KAAKyM,SACA3P,EAAM,GAAG,GAEdkD,KAAKsN,OACAxQ,EAAM,GAAG,GAOdkD,KAAK+O,OAAS,EACT/O,KAAK8O,OAyFd9O,KAAK+O,OAAS/O,KAAK+O,OAAS,EAC5B/O,KAAK8O,MAAQ9O,KAAK8O,MAAMhM,MAAK,WAC3B,OArFa,WAMb,GAAI4K,EAAOjB,SACT,OAAO7P,EAET,IACI2S,EADAC,GAAe,EAQfC,EAAsB,IAAI/S,SAAQ,SAAUO,GAC9CsS,EAA6B,WAC3BC,GAAe,EACfvS,GACF,CACF,IACIyS,EAAgB,SAAuBlJ,GACrB,WAAhBA,EAAI+F,SAAwB/F,EAAIY,OAASsG,EAAOtG,QAC/B,UAAfZ,EAAI6F,QAEF7F,EAAIY,MAAQsG,EAAOtG,OAKrBmI,IAGe,SAAf/I,EAAI6F,SAENkD,IACA7B,EAAOhB,YAAa,GAG1B,EACAgB,EAAOtD,iBAAiB/C,iBAAiB,WAAYqI,GAYrD,IAAIC,EAAoBL,EAAwD,EAA/B5B,EAAOL,SAAS8B,aAAmBzB,EAAOL,SAAS8B,aACpG,OAAOhD,EAAkBuB,EAAQ,SAChC5K,MAAK,WACJ,OAAOpG,QAAQkT,KAAK,CAAC9S,EAAM6S,GAAoBF,EAAoB3M,MAAK,WACtE,OAAOpG,QAAQqC,OAAO,IAAIQ,MAC5B,KACF,IAECuD,MAAK,WACJ,OAAOqJ,EAAkBuB,EAAQ,QACnC,IAEC5K,MAAK,WACJ,OAAOpG,QAAQkT,KAAK,CAAC9S,EAAM6S,GAAoBF,EAAoB3M,MAAK,WACtE,OAAOpG,QAAQqC,OAAO,IAAIQ,MAC5B,KACF,IAAU,OAAE,WAAa,IAAGuD,MAAK,WAE/B,OADA4K,EAAOtD,iBAAiB7C,oBAAoB,WAAYmI,IACnDF,GAEIhD,EAASkB,GAAQ5K,MAAK,WAC3B,OAAO,CACT,GAKJ,GACF,CAGS+M,EACT,IAAG/M,MAAK,WACN4K,EAAOqB,OAASrB,EAAOqB,OAAS,CAClC,IACO/O,KAAK8O,MAAMhM,MAAK,WACrB,OAAO4K,EAAOjB,QAChB,IACF,EACAuB,gBAAiB,WAKf,OAHChO,KAAK8P,OACJ9P,KAAK8P,MA6BmB1D,EA7BSpM,MA8BnByM,SACT5P,EAEF,IAAIH,SAAQ,SAAUO,GAC3B,IAAI8S,GAAW,EACf,SAASC,IACHD,IAGJA,GAAW,EACX3D,EAAchC,iBAAiB7C,oBAAoB,WAAY0I,GAC/DhT,GAAI,GACN,CAGAmP,EAAciD,YAAYvM,MAAK,WACzBsJ,EAAcK,UAChBuD,GAEJ,IAMoB,SAASE,IAC3B,OAAOpT,EAAMsP,EAAciB,SAAS7L,kBAAkBsB,MAAK,WACzD,IAAIsJ,EAAckB,SAAUyC,EAG5B,OAAI3D,EAAcK,cAChBuD,IAEO5D,EAAciD,WAAU,GAAMvM,MAAK,WACpCsJ,EAAcK,SAChBuD,IAEAE,GAEJ,GAEJ,GACF,CACAA,GAGA,IAAID,EAAoB,SAA2BzJ,GAC7B,WAAhBA,EAAI+F,SAAuC,UAAf/F,EAAI6F,SAClCD,EAAcM,YAAa,EAC3BN,EAAciD,YAAYvM,MAAK,WACzBsJ,EAAcK,UAChBuD,GAEJ,IAEJ,EACA5D,EAAchC,iBAAiB/C,iBAAiB,WAAY4I,GAC5D7D,EAAce,OAAO/I,KAAK6L,EAC5B,KAtFSjQ,KAAK8P,KA2BhB,IAA8B1D,CA1B5B,EACA,eAAIoC,CAAY7P,GACdqB,KAAKkN,KAAOvO,CACd,EACAmO,IAAK,WACH,IAAImB,EAASjO,KAcb,OAbAA,KAAKmN,OAAOlI,SAAQ,SAAUiC,GAC5B,OAAO+G,EAAO7D,iBAAiB7C,oBAAoB,WAAYL,EACjE,IACAlH,KAAKmN,OAAS,GACdnN,KAAK+M,KAAK9H,SAAQ,SAAU0J,GAC1B,OAAOA,EAAI/B,QACb,IACA5M,KAAK+M,KAAO,GACR/M,KAAKyM,WACPzM,KAAK0M,YAAa,EAClB1M,KAAKyM,UAAW,GAElBzM,KAAKsN,QAAS,EACPnB,EAAkBnM,KAAM,QACjC,E","sources":["webpack:///../../node_modules/broadcast-channel/dist/esbrowser/util.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/methods/native.js","webpack:///../../node_modules/oblivious-set/dist/esm/src/index.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/options.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/methods/indexed-db.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/methods/localstorage.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/methods/simulate.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/method-chooser.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/broadcast-channel.js","webpack:///../../node_modules/unload/dist/es/index.js","webpack:///../../node_modules/unload/dist/es/node.js","webpack:///../../node_modules/unload/dist/es/browser.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/leader-election-util.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/leader-election-web-lock.js","webpack:///../../node_modules/broadcast-channel/dist/esbrowser/leader-election.js"],"sourcesContent":["/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\n\n/**\n * Returns the current unix time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ret = Date.now() * 1000; // milliseconds to microseconds\n  if (ret <= lastMs) {\n    ret = lastMs + 1;\n  }\n  lastMs = ret;\n  return ret;\n}\n\n/**\n * Check if WebLock API is supported.\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport function supportsWebLockAPI() {\n  if (typeof navigator !== 'undefined' && typeof navigator.locks !== 'undefined' && typeof navigator.locks.request === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}","import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    time: micro(),\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msgEvent) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msgEvent.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  // Deno runtime\n  // eslint-disable-next-line\n  if (typeof globalThis !== 'undefined' && globalThis.Deno && globalThis.Deno.args) {\n    return true;\n  }\n\n  // Browser runtime\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nexport class ObliviousSet {\n    ttl;\n    map = new Map();\n    /**\n     * Creating calls to setTimeout() is expensive,\n     * so we only do that if there is not timeout already open.\n     */\n    _to = false;\n    constructor(ttl) {\n        this.ttl = ttl;\n    }\n    has(value) {\n        return this.map.has(value);\n    }\n    add(value) {\n        this.map.set(value, now());\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(() => {\n                this._to = false;\n                removeTooOldValues(this);\n            }, 0);\n        }\n    }\n    clear() {\n        this.map.clear();\n    }\n}\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n    const olderThen = now() - obliviousSet.ttl;\n    const iterator = obliviousSet.map[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        const next = iterator.next().value;\n        if (!next) {\n            return; // no more elements\n        }\n        const value = next[0];\n        const time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nexport function now() {\n    return Date.now();\n}\n//# sourceMappingURL=index.js.map","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  return new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = Date.now();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = Date.now() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined sometimes\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  return !!getIdb();\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport var IndexedDBMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside webworkers because they have no access to localstorage\n * This is basically implemented to support IE9 or your grandmother's toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: Date.now(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport var LocalstorageMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    time: microSeconds(),\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport var SIMULATE_DELAY_TIME = 5;\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.forEach(function (channel) {\n        if (channel.name === channelState.name &&\n        // has same name\n        channel !== channelState &&\n        // not own channel\n        !!channel.messagesCallback &&\n        // has subscribers\n        channel.time < messageJson.time // channel not created after postMessage() call\n        ) {\n          channel.messagesCallback(messageJson);\n        }\n      });\n      res();\n    }, SIMULATE_DELAY_TIME);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return SIMULATE_DELAY_TIME;\n}\nexport var SimulateMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { NativeMethod } from './methods/native.js';\nimport { IndexedDBMethod } from './methods/indexed-db.js';\nimport { LocalstorageMethod } from './methods/localstorage.js';\nimport { SimulateMethod } from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexedDBMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage will be chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) {\n    throw new Error(\"No usable method found in \" + JSON.stringify(METHODS.map(function (m) {\n      return m.type;\n    })));\n  } else {\n    return useMethod;\n  }\n}","import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsent message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was really hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsent messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        if (msgObj.time >= listenerObject.time) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // no one is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","import { addBrowser } from './browser.js';\nimport { addNode } from './node.js';\n\n/**\n * Use the code directly to prevent import problems\n * with the detect-node package.\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar USE_METHOD = isNode ? addNode : addBrowser;\nvar LISTENERS = new Set();\nvar startedListening = false;\nfunction startListening() {\n  if (startedListening) {\n    return;\n  }\n  startedListening = true;\n  USE_METHOD(runAll);\n}\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') {\n    throw new Error('Listener is no function');\n  }\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","export function addNode(fn) {\n  process.on('exit', function () {\n    return fn();\n  });\n\n  /**\n   * on the following events,\n   * the process will not end if there are\n   * event-handlers attached,\n   * therefore we have to call process.exit()\n   */\n  process.on('beforeExit', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches ctrl+c event\n  process.on('SIGINT', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches uncaught exceptions\n  process.on('uncaughtException', function (err) {\n    return fn().then(function () {\n      console.trace(err);\n      process.exit(101);\n    });\n  });\n}","/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}","import { add as unloadAdd } from 'unload';\n\n/**\n * sends and internal message over the broadcast-channel\n */\nexport function sendLeaderMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector._hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      sendLeaderMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      sendLeaderMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return sendLeaderMessage(leaderElector, 'tell');\n}","import { randomToken } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\n\n/**\n * A faster version of the leader elector that uses the WebLock API\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport var LeaderElectionWebLock = function LeaderElectionWebLock(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  broadcastChannel._befC.push(function () {\n    return _this.die();\n  });\n  this._options = options;\n  this.isLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n  this._lstns = [];\n  this._unl = [];\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  this._wKMC = {}; // stuff for cleanup\n\n  // lock name\n  this.lN = 'pubkey-bc||' + broadcastChannel.method.type + '||' + broadcastChannel.name;\n};\nLeaderElectionWebLock.prototype = {\n  hasLeader: function hasLeader() {\n    var _this2 = this;\n    return navigator.locks.query().then(function (locks) {\n      var relevantLocks = locks.held ? locks.held.filter(function (lock) {\n        return lock.name === _this2.lN;\n      }) : [];\n      if (relevantLocks && relevantLocks.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    var _this3 = this;\n    if (!this._wLMP) {\n      this._wKMC.c = new AbortController();\n      var returnPromise = new Promise(function (res, rej) {\n        _this3._wKMC.res = res;\n        _this3._wKMC.rej = rej;\n      });\n      this._wLMP = new Promise(function (res) {\n        navigator.locks.request(_this3.lN, {\n          signal: _this3._wKMC.c.signal\n        }, function () {\n          // if the lock resolved, we can drop the abort controller\n          _this3._wKMC.c = undefined;\n          beLeader(_this3);\n          res();\n          return returnPromise;\n        })[\"catch\"](function () {});\n      });\n    }\n    return this._wLMP;\n  },\n  set onduplicate(_fn) {\n    // Do nothing because there are no duplicates in the WebLock version\n  },\n  die: function die() {\n    var _this4 = this;\n    this._lstns.forEach(function (listener) {\n      return _this4.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    if (this._wKMC.res) {\n      this._wKMC.res();\n    }\n    if (this._wKMC.c) {\n      this._wKMC.c.abort('LeaderElectionWebLock.die() called');\n    }\n    return sendLeaderMessage(this, 'death');\n  }\n};","import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE, supportsWebLockAPI } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\nimport { LeaderElectionWebLock } from './leader-election-web-lock.js';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this._hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this._hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this._hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  hasLeader: function hasLeader() {\n    return Promise.resolve(this._hasLeader);\n  },\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2._hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return sendLeaderMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return sendLeaderMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if ( /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this._hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return sendLeaderMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector._hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = supportsWebLockAPI() ? new LeaderElectionWebLock(channel, options) : new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}"],"names":["PROMISE_RESOLVED_FALSE","Promise","resolve","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_VOID","sleep","time","resolveWith","res","setTimeout","randomToken","Math","random","toString","substring","lastMs","microSeconds","ret","Date","now","NativeMethod","create","channelName","state","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msgEvent","data","close","channelState","onMessage","fn","postMessage","messageJson","err","reject","canBeUsed","globalThis","Deno","args","window","self","_pubkey","Error","type","averageResponseTime","ObliviousSet","ttl","map","Map","_to","constructor","this","has","value","add","set","obliviousSet","olderThen","iterator","Symbol","next","delete","removeTooOldValues","clear","fillOptionsWithDefaults","originalOptions","arguments","length","undefined","options","JSON","parse","stringify","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","methods","node","maxParallelWrites","useFastPath","OBJECT_STORE_ID","TRANSACTION_SETTINGS","durability","getIdb","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","commitIndexedDBTransaction","tx","commit","_readLoop","closed","readNewMessages","then","db","lastCursorId","transaction","objectStore","keyRangeValue","IDBKeyRange","bound","Infinity","getAll","getAllRequest","rej","onerror","onsuccess","e","target","result","openCursorRequest","openCursor","ev","cursor","id","push","getMessagesHigherThan","newerMessages","useMessages","filter","msgObj","uuid","eMIs","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","forEach","IndexedDBMethod","dbName","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","createDatabase","writeBlockPromise","readQueuePromises","readerUuid","writeObject","oncomplete","writeMessage","floor","msgObk","tooOld","ids","all","deleteRequest","removeMessagesById","msg","cleanOldMessages","getLocalStorage","localStorage","storageKey","ls","key","setItem","removeItem","LocalstorageMethod","listener","newValue","token","addEventListener","addStorageEventListener","removeEventListener","writeObj","document","createEvent","initEvent","dispatchEvent","userAgent","navigator","toLowerCase","includes","defaultTime","SIMULATE_CHANNELS","Set","SimulateMethod","name","Array","from","channel","METHODS","chooseMethod","chooseMethods","concat","Boolean","find","m","useMethod","method","ENFORCED_OPTIONS","OPEN_BROADCAST_CHANNELS","lastId","maybePromise","obj","_iL","_onML","_addEL","message","internal","_uMP","_befC","_prepP","s","_state","clearNodeFolder","enforceOptions","_post","broadcastChannel","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","_startListening","_removeListenerObject","o","_stopListening","prototype","postInternal","listenObj","_this","awaitPrepare","isClosed","USE_METHOD","Object","call","process","on","exit","console","trace","WorkerGlobalScope","oldClose","bind","LISTENERS","startedListening","runAll","promises","sendLeaderMessage","leaderElector","action","msgJson","context","beLeader","isLeader","_hasLeader","unloadFn","remove","run","die","_unl","isLeaderListener","_dpLC","_dpL","_lstns","LeaderElectionWebLock","_options","isDead","_wKMC","lN","hasLeader","_this2","locks","query","relevantLocks","held","lock","awaitLeadership","_this3","_wLMP","c","AbortController","returnPromise","request","signal","onduplicate","_fn","_this4","uFn","abort","LeaderElection","_aplQ","_aplQC","hasLeaderListener","createLeaderElection","_leaderElector","responseTime","elector","applyOnce","isFromFallbackInterval","stopCriteriaPromiseResolve","stopCriteria","stopCriteriaPromise","handleMessage","waitForAnswerTime","race","applyRun","_aLP","resolved","finish","whenDeathListener","tryOnFallBack"],"sourceRoot":""}
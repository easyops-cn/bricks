{"version":3,"file":"chunks/2980.c90cc3f1.js","mappings":"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","sources":["webpack:///./src/shared/workbench/WorkbenchActionsContext.ts","webpack:///./src/shared/workbench/WorkbenchTreeDndContext.ts","webpack:///./src/shared/workbench-mini-action-bar/WorkbenchMiniActionBar.tsx","webpack:///./src/shared/workbench/WorkbenchTree.tsx","webpack:///./src/utils/normalizeTreeNodeWithPath.ts","webpack:///./src/utils/setDragImage.ts","webpack:///./src/shared/workbench/WorkbenchTreeContext.ts","webpack:///./src/utils/deepMatch.ts","webpack:///./src/shared/workbench-mini-action-bar/WorkbenchMiniActionBar.shadow.css","webpack:///./src/workbench-tree/WorkbenchTree.shadow.css"],"sourcesContent":["import { createContext, useContext } from \"react\";\nimport type {\n  ActionClickDetail,\n  WorkbenchTreeAction,\n} from \"../../interfaces.js\";\n\nexport interface ContextOfWorkbenchActions {\n  actions?: WorkbenchTreeAction[];\n  actionsHidden?: boolean;\n  onActionClick?(detail: ActionClickDetail): void;\n}\n\nexport const WorkbenchActionsContext = createContext<ContextOfWorkbenchActions>(\n  {}\n);\n\nexport function useWorkbenchActionsContext(): ContextOfWorkbenchActions {\n  return useContext(WorkbenchActionsContext);\n}\n","import { createContext, useContext } from \"react\";\nimport { WorkbenchNodeData } from \"../../interfaces.js\";\n\nexport enum dragStatusEnum {\n  inside = \"inside\",\n  top = \"top\",\n  bottom = \"bottom\",\n}\n\ninterface WorkbenchTreeDndContext {\n  allow?: boolean;\n  allowDragToRoot?: boolean;\n  dragElement?: HTMLElement;\n  dragOverElement?: HTMLElement;\n  dragStatus?: dragStatusEnum;\n  onDragStart?: (\n    e: React.DragEvent<HTMLElement>,\n    node: WorkbenchNodeData\n  ) => void;\n  onDragOver?: (e: React.DragEvent<HTMLElement>) => void;\n  onDrop?: (e: React.DragEvent<HTMLElement>) => void;\n}\n\nexport const WorkbenchTreeDndContext = createContext<WorkbenchTreeDndContext>(\n  {} as WorkbenchTreeDndContext\n);\n\nexport function useWorkbenchTreeDndContext(): WorkbenchTreeDndContext {\n  return useContext(WorkbenchTreeDndContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport classNames from \"classnames\";\nimport { checkIfByTransform } from \"@next-core/runtime\";\nimport { WorkbenchTreeAction, ActionClickDetail } from \"../../interfaces.js\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\n\nexport const WrappedGeneralIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\n  \"eo-icon\"\n);\n\nexport interface WorkbenchSubActionBarProps {\n  data?: unknown;\n  className?: string;\n  gap?: number;\n  isFirst?: boolean;\n  isLast?: boolean;\n  actions?: WorkbenchTreeAction[];\n  actionsHidden?: boolean;\n  onActionClick?(detail: ActionClickDetail): void;\n}\n\nexport function WorkbenchMiniActionBar({\n  data,\n  className,\n  gap,\n  isFirst,\n  isLast,\n  actions,\n  actionsHidden,\n  onActionClick,\n}: WorkbenchSubActionBarProps): React.ReactElement {\n  const enabledActions = useMemo(\n    () => actions?.filter((item) => checkIfByTransform(item, data)),\n    [actions, data]\n  );\n\n  if (actionsHidden || !enabledActions?.length) {\n    return null;\n  }\n\n  return (\n    <div className={classNames(\"actionsBar\", className)} style={{ gap }}>\n      {enabledActions.map((item) => (\n        <WorkbenchSubAction\n          key={item.action}\n          action={item}\n          data={data}\n          isFirst={isFirst}\n          isLast={isLast}\n          onActionClick={onActionClick}\n        />\n      ))}\n    </div>\n  );\n}\n\ninterface WorkbenchSubActionProps {\n  action: WorkbenchTreeAction;\n  data?: unknown;\n  isFirst?: boolean;\n  isLast?: boolean;\n  onActionClick?(detail: ActionClickDetail): void;\n}\n\nfunction WorkbenchSubAction({\n  action,\n  data,\n  isFirst,\n  isLast,\n  onActionClick,\n}: WorkbenchSubActionProps): React.ReactElement {\n  const disabled =\n    (isFirst && action.action === \"move-up\") ||\n    (isLast && action.action === \"move-down\");\n\n  const handleActionClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      disabled ||\n        onActionClick?.({\n          action: action.action,\n          data: data,\n        });\n    },\n    [action.action, data, disabled, onActionClick]\n  );\n\n  const preventMouseEvent = useCallback((event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n\n  return (\n    <a\n      className={classNames(\"action\", { disabled: disabled })}\n      title={action.title}\n      role=\"button\"\n      onClick={handleActionClick}\n      onContextMenu={preventMouseEvent}\n      onMouseDown={preventMouseEvent}\n    >\n      <WrappedGeneralIcon {...action.icon} />\n    </a>\n  );\n}\n","import React, {\n  type ChangeEvent,\n  useCallback,\n  useMemo,\n  useState,\n  type ReactElement,\n  createContext,\n  useContext,\n  useEffect,\n} from \"react\";\n// import { Input } from \"antd\";\nimport { get, isMatch, pick } from \"lodash\";\nimport classNames from \"classnames\";\nimport { useWorkbenchTreeContext } from \"./WorkbenchTreeContext.js\";\nimport { useWorkbenchActionsContext } from \"./WorkbenchActionsContext.js\";\nimport {\n  useWorkbenchTreeDndContext,\n  dragStatusEnum,\n} from \"./WorkbenchTreeDndContext.js\";\nimport type { WorkbenchNodeData } from \"../../interfaces.js\";\nimport { WorkbenchMiniActionBar } from \"../workbench-mini-action-bar/WorkbenchMiniActionBar.js\";\nimport { checkIfOfComputed } from \"@next-core/runtime\";\nimport { WorkbenchTreeDndContext } from \"./WorkbenchTreeDndContext.js\";\nimport { setDragImage } from \"../../utils/setDragImage.js\";\nimport classnames from \"classnames\";\nimport {\n  getNodesByPathTree,\n  getNodeTreeByPath,\n} from \"../../utils/normalizeTreeNodeWithPath.js\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport type { Link, LinkProps } from \"@next-bricks/basic/link\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\n\nexport const WrappedLink = wrapBrick<Link, LinkProps>(\"eo-link\");\nexport const WrappedGeneralIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\n  \"eo-icon\"\n);\n\nconst treeLevelPadding = 10;\nconst borderStyle = \"0 0 0 1px #ba6d30\";\n\nexport interface dropEmitProps {\n  nodes: WorkbenchNodeData[];\n  curNode: WorkbenchNodeData;\n  overNode: WorkbenchNodeData;\n  status: dragStatusEnum;\n}\n\nexport interface WorkbenchTreeProps {\n  nodes: WorkbenchNodeData[];\n  placeholder?: string;\n  searchPlaceholder?: string;\n  noSearch?: boolean;\n  isDrag?: boolean;\n  allowDrag?: boolean;\n  allowDragToRoot?: boolean;\n  allowDragToInside?: boolean;\n  dropEmit?: (detail: dropEmitProps) => void;\n}\n\nexport interface TreeListProps {\n  nodes: WorkbenchNodeData[];\n  level: number;\n}\n\nconst SearchingContext = createContext(false);\n\nexport function WorkbenchTree({\n  nodes: originNode,\n  placeholder,\n  searchPlaceholder,\n  isDrag,\n  noSearch,\n  allowDrag,\n  allowDragToRoot,\n  allowDragToInside,\n  dropEmit,\n}: WorkbenchTreeProps): ReactElement {\n  const [q, setQ] = useState<string>(\"\");\n  const [isDragging, setIsDragging] = useState<boolean>(isDrag);\n  const [curNode, setCurNode] = useState<WorkbenchNodeData>();\n  const [curElement, setCurElement] = useState<HTMLElement>();\n  const [overNode, setOverNode] = useState<WorkbenchNodeData>();\n  const [overElement, setOverElement] = useState<HTMLElement>();\n  const [overStatus, setOverStatus] = useState<dragStatusEnum>();\n  const [isFocus, setIsFocus] = useState<boolean>();\n  const { nodeKey, onBrickDrop, contextMenuFactory, matchNode } =\n    useWorkbenchTreeContext();\n  const nodes = useMemo(\n    () => getNodeTreeByPath(originNode?.slice() ?? [], nodeKey),\n    [originNode, nodeKey]\n  );\n\n  const handleSearchChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setQ(event.target.value);\n    },\n    []\n  );\n\n  const handleClearInput = () => {\n    setQ(\"\");\n  };\n\n  const onContextMenu = useMemo(\n    () => contextMenuFactory?.(),\n    [contextMenuFactory]\n  );\n\n  const trimmedLowerQ = q?.trim().toLowerCase();\n  const filteredNodes = useMemo(() => {\n    if (noSearch || !trimmedLowerQ || !nodes) {\n      return nodes;\n    }\n    const walk = (node: WorkbenchNodeData): boolean => {\n      node.matchedSelf = matchNode(node, trimmedLowerQ);\n      const hasMatchedChildren = node.children?.map(walk).includes(true);\n      node.matched = node.matchedSelf || hasMatchedChildren;\n      return node.matched;\n    };\n    nodes.forEach(walk);\n    return nodes.slice();\n  }, [noSearch, trimmedLowerQ, nodes, matchNode]);\n\n  const findDragParent = (element: HTMLElement, equal = true): HTMLElement => {\n    let node = element;\n    while (node) {\n      if (\n        node.draggable &&\n        (equal || node !== element) &&\n        node.tagName !== \"A\"\n      ) {\n        return node;\n      }\n      node = node.parentElement;\n    }\n  };\n\n  const findNode = (\n    nodes: WorkbenchNodeData[],\n    id: string,\n    nodeKey: string,\n    node: WorkbenchNodeData = null\n  ): WorkbenchNodeData => {\n    for (const item of nodes) {\n      if ((item.data as Record<string, unknown>)[nodeKey] === id) {\n        node = item;\n      }\n      if (item.children) {\n        node = findNode(item.children, id, nodeKey, node);\n      }\n      if (node) break;\n    }\n    return node;\n  };\n\n  const getDragState = (\n    e: React.DragEvent<HTMLElement>\n  ): {\n    element: HTMLElement;\n    node: WorkbenchNodeData;\n    status: dragStatusEnum;\n  } => {\n    const element = findDragParent(e.target as HTMLElement);\n    const id = element.dataset.uid;\n    if (element === curElement || id?.includes(\":\")) {\n      return;\n    }\n    const { top, bottom } = element.getBoundingClientRect();\n    let status: dragStatusEnum;\n    const repair = allowDragToInside ? 5 : 10;\n    if (e.clientY < top + repair) {\n      status = dragStatusEnum.top;\n    } else if (e.clientY > bottom - repair) {\n      status = dragStatusEnum.bottom;\n    } else {\n      status = allowDragToInside ? dragStatusEnum.inside : overStatus;\n    }\n\n    return {\n      element,\n      node: findNode(nodes, id, nodeKey),\n      status,\n    };\n  };\n\n  const handleOnDragStart = (\n    e: React.DragEvent,\n    node: WorkbenchNodeData\n  ): void => {\n    e.stopPropagation();\n    if (!allowDrag) return;\n    const element = e.target as HTMLElement;\n    if (element.dataset?.container) return;\n    setIsDragging(true);\n    setDragImage(e, element.innerText);\n    setCurElement(element);\n    setCurNode(node);\n  };\n\n  const handleOnDragOver = (e: React.DragEvent<HTMLElement>): void => {\n    e.preventDefault();\n    if (!isDragging) return;\n    if ((e.target as HTMLElement).className === \"workbenchTree-placeholder-dom\")\n      return;\n    const dom = getDragState(e);\n    if (dom && !curElement?.contains(dom.element)) {\n      setOverElement(dom.element);\n      setOverNode(dom.node);\n      setOverStatus(dom.status);\n    }\n  };\n\n  const handleOnDragEnd = (): void => {\n    setCurElement(null);\n    setOverElement(null);\n    setOverNode(null);\n    setOverStatus(null);\n    setIsDragging(false);\n  };\n\n  const handleOnDrop = (e: React.DragEvent<HTMLElement>): void => {\n    if (!isDragging) return;\n    if (onBrickDrop) {\n      let parentElement = overElement;\n      if ([dragStatusEnum.top, dragStatusEnum.bottom].includes(overStatus)) {\n        parentElement = findDragParent(parentElement, false);\n      }\n      onBrickDrop(e, {\n        curElement,\n        overElement,\n        parentElement,\n        overStatus,\n      });\n    } else {\n      if (allowDragToRoot || Number(overElement.dataset.level) !== 1) {\n        let realOverNode = overNode;\n        const findRealNode = (\n          nodes: WorkbenchNodeData[],\n          key: string\n        ): void => {\n          for (let i = 0; i < nodes.length; i++) {\n            if (nodes[i].key === key) {\n              realOverNode = nodes[i];\n              break;\n            }\n            if (nodes[i].children) {\n              findRealNode(nodes[i].children, key);\n            }\n          }\n        };\n        const overUid = overElement.dataset.uid;\n        findRealNode(nodes, overUid);\n        const filterNodes = (\n          nodes: WorkbenchNodeData[]\n        ): WorkbenchNodeData[] => {\n          let flag = false;\n          const { container, uid } = overElement.dataset;\n          const realOverKey = container ? realOverNode.originKey : uid;\n          const newNodes = nodes.filter((node) => {\n            if (node.children) {\n              node.children = filterNodes(node.children);\n            }\n            if (node.key === realOverKey) flag = true;\n            return node.key !== curNode.key;\n          });\n          if (flag) {\n            newNodes.splice(\n              newNodes.findIndex((item) => item.key === realOverKey) +\n                (overStatus === \"bottom\" ? 1 : 0),\n              0,\n              curNode\n            );\n          }\n          return newNodes;\n        };\n\n        const normalizeNode = getNodesByPathTree(nodes);\n        const realCurNode = curNode.isContainer\n          ? normalizeNode.find((item) => item.key === curNode.originKey)\n          : curNode;\n        const curNodeData = realCurNode.data as Record<string, unknown>;\n        curNodeData.path = realOverNode.parentPath || realOverNode.path;\n\n        dropEmit({\n          nodes: filterNodes(normalizeNode),\n          curNode: realCurNode,\n          overNode: realOverNode,\n          status: overStatus,\n        });\n      }\n    }\n    handleOnDragEnd();\n  };\n\n  useEffect(() => {\n    setIsDragging(isDrag);\n  }, [isDrag]);\n\n  useEffect(() => {\n    window.addEventListener(\"dragend\", handleOnDragEnd);\n    return () => {\n      window.removeEventListener(\"dragend\", handleOnDragEnd);\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n      }}\n      className=\"tree-wrapper\"\n      onContextMenu={onContextMenu}\n    >\n      {nodes?.length ? (\n        <div>\n          {!noSearch && (\n            <div\n              className=\"searchBox\"\n              onContextMenu={(e) => e.stopPropagation()}\n            >\n              <span\n                className={classNames(\"filter-input-wrapper\", {\n                  focus: isFocus,\n                })}\n              >\n                <span className=\"prefix\">\n                  <WrappedGeneralIcon\n                    icon=\"search\"\n                    lib=\"antd\"\n                    theme=\"outlined\"\n                  />\n                </span>\n                <input\n                  value={q}\n                  onChange={handleSearchChange}\n                  onFocus={() => setIsFocus(true)}\n                  onBlur={() => setIsFocus(false)}\n                  autoComplete=\"off\"\n                  placeholder={searchPlaceholder}\n                />\n                <span className=\"suffix\">\n                  {q ? (\n                    <WrappedGeneralIcon\n                      className=\"clear-button\"\n                      icon=\"close-circle\"\n                      lib=\"antd\"\n                      theme=\"filled\"\n                      onClick={handleClearInput}\n                    />\n                  ) : null}\n                </span>\n              </span>\n            </div>\n          )}\n          <SearchingContext.Provider value={!!q}>\n            <WorkbenchTreeDndContext.Provider\n              value={{\n                allow: allowDrag,\n                allowDragToRoot: allowDragToRoot,\n                dragElement: curElement,\n                dragOverElement: overElement,\n                dragStatus: overStatus,\n                onDragStart: handleOnDragStart,\n              }}\n            >\n              <div\n                className={classnames({\n                  hightlight: isDrag,\n                })}\n                onDragOver={handleOnDragOver}\n                onDrop={handleOnDrop}\n              >\n                <TreeList nodes={filteredNodes} level={1} />\n              </div>\n            </WorkbenchTreeDndContext.Provider>\n          </SearchingContext.Provider>\n        </div>\n      ) : (\n        <div className=\"placeholder\">{placeholder}</div>\n      )}\n    </div>\n  );\n}\n\nfunction TreeList({ nodes, level }: TreeListProps): ReactElement {\n  const lastIndex = nodes.length - 1;\n  return (\n    <ul className=\"tree\">\n      {nodes\n        .filter((item) => checkIfOfComputed(item))\n        .map((node, index) => (\n          <TreeNode\n            key={node.key}\n            node={node}\n            level={level}\n            isFirst={index === 0}\n            isLast={index === lastIndex}\n          />\n        ))}\n    </ul>\n  );\n}\n\nfunction PlaceholderDOM({\n  style,\n}: {\n  style: React.CSSProperties;\n}): React.ReactElement {\n  const { dragStatus } = useWorkbenchTreeDndContext();\n  const styles: React.CSSProperties = {\n    height: 22,\n    border: \"1px dashed goldenrod\",\n    opacity: dragStatus === dragStatusEnum.inside ? \"0\" : \"1\",\n    ...style,\n  };\n\n  return <li className=\"workbenchTree-placeholder-dom\" style={styles} />;\n}\nexport interface TreeNodeProps {\n  node: WorkbenchNodeData;\n  level: number;\n  isFirst?: boolean;\n  isLast?: boolean;\n  skipNotify?: boolean;\n}\n\nfunction TreeNode({\n  node,\n  level,\n  isFirst,\n  isLast,\n}: TreeNodeProps): ReactElement {\n  const isLeaf = !node.children?.length;\n  const isContainer = node.isContainer;\n  const {\n    hoverKey,\n    activeKey,\n    basePaddingLeft,\n    showMatchedNodeOnly,\n    fixedActionsFor,\n    collapsible,\n    collapsedNodes,\n    nodeKey,\n    clickFactory,\n    mouseEnterFactory,\n    mouseLeaveFactory,\n    contextMenuFactory,\n    onNodeToggle,\n    getCollapsedId,\n    skipNotify,\n  } = useWorkbenchTreeContext();\n  const {\n    allow,\n    allowDragToRoot,\n    onDragStart,\n    dragElement,\n    dragOverElement,\n    dragStatus,\n  } = useWorkbenchTreeDndContext();\n\n  const { actions, actionsHidden, onActionClick } =\n    useWorkbenchActionsContext();\n\n  const nodePaddingLeft = level * treeLevelPadding + basePaddingLeft - 2;\n  const searching = useContext(SearchingContext);\n  const [cacheDragStatus, setCacheDragStatus] = useState(null);\n  const [collapseClicked, setCollapseClicked] = useState(false);\n  const [collapsed, setCollapsed] = useState(\n    collapsedNodes?.includes(getCollapsedId?.(node)) ?? false\n  );\n\n  const onMouseEnter = useMemo(\n    () => mouseEnterFactory?.(node),\n    [mouseEnterFactory, node]\n  );\n  const onMouseLeave = useMemo(\n    () => mouseLeaveFactory?.(node),\n    [mouseLeaveFactory, node]\n  );\n\n  const onContextMenu = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      contextMenuFactory?.(node)?.(e);\n    },\n    [contextMenuFactory, node]\n  );\n\n  const isActive = activeKey && node.key === activeKey;\n\n  const nodeLabelCallback = useMemo(\n    () =>\n      isActive\n        ? (element: HTMLElement) => {\n            element?.scrollIntoView?.({\n              block: \"center\",\n              inline: \"center\",\n              // behavior: \"smooth\",\n            });\n          }\n        : null,\n    // Only for initial active node.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const nodeUid = useMemo(() => {\n    if (isContainer) {\n      return node.key;\n    }\n    if (node.data) {\n      const getNodeUid = (data: Record<string, any>): number | string => {\n        return data.type === \"mount-point\"\n          ? data.parent[nodeKey] || `${data.parent.$$uid}:${data.mountPoint}`\n          : data[nodeKey] || data.$$uid;\n      };\n      return getNodeUid(node.data);\n    }\n  }, [nodeKey, node, isContainer]);\n\n  useEffect(() => {\n    if (dragStatus === dragStatusEnum.inside) {\n      return;\n    }\n    if ([dragStatusEnum.top, dragStatusEnum.bottom].includes(dragStatus)) {\n      setCacheDragStatus(dragStatus);\n    }\n  }, [dragStatus]);\n\n  const isDragElement = useMemo(() => {\n    if (dragElement) {\n      const dragUid = dragElement.dataset.uid;\n      return dragUid === String(nodeUid);\n    }\n    return false;\n  }, [dragElement, nodeUid]);\n\n  const isDragActive = useMemo(() => {\n    if (dragOverElement) {\n      const dragUid = dragOverElement.dataset.uid;\n      return dragUid === String(nodeUid);\n    }\n    return false;\n  }, [dragOverElement, nodeUid]);\n\n  const nodeStyle = useMemo((): React.CSSProperties => {\n    const commomStyle: React.CSSProperties = {};\n    let style: React.CSSProperties = {\n      opacity: isDragElement ? 0.2 : 1,\n    };\n    if (isDragActive) {\n      if (dragStatus === dragStatusEnum.inside) {\n        style = {\n          boxShadow: borderStyle,\n          background: \"rgba(255, 255, 255, 0.1)\",\n        };\n      }\n    }\n    return Object.assign(commomStyle, style);\n  }, [isDragActive, isDragElement, dragStatus]);\n\n  const handleCollapse = useCallback((event: React.MouseEvent | MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setCollapseClicked(true);\n    setCollapsed((prev) => !prev);\n  }, []);\n\n  const preventMouseEvent = useCallback((event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n\n  const onLinkClick = useCallback(\n    (e: MouseEvent | React.MouseEvent) => {\n      if (isContainer) {\n        handleCollapse(e);\n      } else {\n        return clickFactory?.(node)?.();\n      }\n    },\n    [clickFactory, handleCollapse, isContainer, node]\n  );\n\n  useEffect(() => {\n    if (collapseClicked) {\n      onNodeToggle?.(getCollapsedId?.(node), collapsed);\n    }\n  }, [collapseClicked, collapsed, getCollapsedId, node, onNodeToggle]);\n\n  // Disallow collapse leaf nodes, or any nodes when searching.\n  const allowCollapse = collapsible && !isLeaf && !searching;\n\n  if (searching && showMatchedNodeOnly && !node.matched) {\n    return null;\n  }\n\n  return (\n    <>\n      {isDragActive &&\n        (allowDragToRoot || level !== 1) &&\n        cacheDragStatus === dragStatusEnum.top && (\n          <PlaceholderDOM\n            style={{\n              marginLeft: nodePaddingLeft,\n            }}\n          />\n        )}\n      <li\n        draggable={allow}\n        onDragStart={(e) => onDragStart(e, node)}\n        data-uid={nodeUid}\n        data-level={level}\n        style={nodeStyle}\n        {...(isContainer\n          ? {\n              \"data-container\": isContainer,\n            }\n          : {})}\n      >\n        <WrappedLink\n          className=\"nodeLabelLink\"\n          tabIndex={0}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          onContextMenu={onContextMenu}\n          // noEmptyHref={true}\n          onClick={onLinkClick}\n          {...(skipNotify\n            ? {\n                // TODO: link should support\n                url: {\n                  pathname: get(node.link, \"url\", \"href\"),\n                  state: {\n                    notify: false,\n                  },\n                } as any,\n              }\n            : { ...pick(node.link, [\"url\", \"href\"]) })}\n        >\n          <span\n            className={classNames(\"nodeLabelRow\", {\n              active: isActive,\n              hover: hoverKey && node.key === hoverKey,\n              matched: searching && node.matchedSelf && !showMatchedNodeOnly,\n              fixedActions:\n                fixedActionsFor &&\n                []\n                  .concat(fixedActionsFor)\n                  .some((source) =>\n                    isMatch(node.data as Record<string, unknown>, source)\n                  ),\n              collapsed: allowCollapse && collapsed,\n              collapsible: allowCollapse,\n            })}\n          >\n            <span\n              className={classNames(\"nodeLabel\", {\n                unreachable: node.unreachable,\n              })}\n              style={{\n                paddingLeft: nodePaddingLeft,\n                color: node.labelColor,\n              }}\n              ref={nodeLabelCallback}\n            >\n              <span className=\"nodeIconWrapper\">\n                {allowCollapse && (\n                  <span\n                    className=\"collapseIcon\"\n                    onClick={handleCollapse}\n                    onMouseDown={preventMouseEvent}\n                    title={collapsed ? \"Expand\" : \"Collapse\"}\n                    role=\"button\"\n                  >\n                    <WrappedGeneralIcon\n                      lib=\"antd\"\n                      theme=\"outlined\"\n                      icon={collapsed ? \"right\" : \"down\"}\n                    />\n                  </span>\n                )}\n                <span className=\"nodeIcon\">\n                  <WrappedGeneralIcon\n                    {...node.icon}\n                    style={{\n                      fontSize: (node.icon as unknown as Record<string, string>)\n                        ?.imgSrc\n                        ? 14\n                        : null,\n                      color: node.icon?.color,\n                    }}\n                  />\n                </span>\n              </span>\n              <span className=\"nodeName\">\n                {node.labelPrefix && (\n                  <span style={node.labelPrefix.style}>\n                    {node.labelPrefix.text}\n                  </span>\n                )}\n                {/* {isTransformName\n                  ? smartDisplayForEvaluableString(node.name)\n                  : node.name} */}\n                {node.name}\n              </span>\n            </span>\n            <WorkbenchMiniActionBar\n              className=\"nodeActionsBar\"\n              data={node.data}\n              isFirst={isFirst}\n              isLast={isLast}\n              actions={actions}\n              onActionClick={onActionClick}\n              actionsHidden={actionsHidden}\n            />\n            {node.badge && (\n              <span className=\"badge\">\n                <WrappedGeneralIcon\n                  {...node.badge}\n                  style={{ color: node.badge.color }}\n                />\n              </span>\n            )}\n          </span>\n        </WrappedLink>\n        {isLeaf || <TreeList nodes={node.children} level={level + 1} />}\n      </li>\n      {isDragActive &&\n        (allowDragToRoot || level !== 1) &&\n        cacheDragStatus === dragStatusEnum.bottom && (\n          <PlaceholderDOM\n            style={{\n              marginLeft: nodePaddingLeft,\n            }}\n          />\n        )}\n    </>\n  );\n}\n","import _ from \"lodash\";\nimport { WorkbenchNodeData } from \"../interfaces.js\";\n\nexport function getNodeTreeByPath(\n  nodes: WorkbenchNodeData[],\n  nodeKey: string\n): Array<WorkbenchNodeData> {\n  const createNodeByPath = (\n    pathList: string[],\n    nodes: Array<WorkbenchNodeData>,\n    node: WorkbenchNodeData,\n    index?: number\n  ): void => {\n    const path = pathList.shift();\n    if (path) {\n      pathList.length > 0\n        ? pathList.splice(0, 1, `${path}/${pathList[0]}`)\n        : pathList;\n      const folder = nodes.find(\n        (node) => node && node.key === path && node.isContainer\n      );\n      if (folder) {\n        nodes[index] = null;\n        createNodeByPath(pathList, folder.children, node);\n      } else {\n        const newPathList = path.split(\"/\");\n        const newNode = {\n          name: newPathList.pop(),\n          key: path,\n          parentPath: newPathList ? newPathList.join(\"/\") : newPathList,\n          originKey: node.key,\n          data: {\n            [nodeKey]: path,\n            isContainer: true,\n          },\n          children: [],\n          icon: {\n            icon: \"folder\",\n            lib: \"antd\",\n            theme: \"filled\",\n            color: \"orange\",\n          },\n          isContainer: true,\n        } as WorkbenchNodeData;\n        if (typeof index === \"number\") {\n          nodes[index] = newNode;\n        } else {\n          nodes.push(newNode);\n        }\n        createNodeByPath(pathList, newNode.children, node);\n      }\n    } else {\n      nodes.push(node);\n    }\n  };\n\n  nodes.forEach((node, index) => {\n    if (node.path) {\n      const pathList = node.path.split(\"/\").filter(Boolean);\n      createNodeByPath(pathList, nodes, node, index);\n    }\n  });\n  return nodes.filter(Boolean);\n}\n\nexport function getNodesByPathTree(\n  nodes: Array<WorkbenchNodeData>\n): Array<WorkbenchNodeData> {\n  const result: Array<WorkbenchNodeData> = [];\n  const walk = (nodes: Array<WorkbenchNodeData>): void => {\n    nodes.forEach((item) => {\n      if (item.isContainer) {\n        walk(item.children);\n      } else {\n        result.push(_.omit(item, [\"path\", \"icon\"]) as WorkbenchNodeData);\n      }\n    });\n  };\n  walk(nodes);\n  return result;\n}\n","export function setDragImage(\n  e: DragEvent | React.DragEvent,\n  title: string\n): void {\n  const canvas = document.createElement(\"canvas\");\n  document.body.append(canvas);\n  const context = canvas.getContext(\"2d\");\n  canvas.width = context.measureText(title).width + 60;\n  canvas.height = 20;\n  canvas.style.position = \"absolute\";\n  canvas.style.left = \"-100%\";\n  canvas.style.zIndex = \"-100\";\n\n  context.fillStyle = \"#333333\";\n  context.fillRect(0, 0, canvas.width, canvas.height);\n\n  context.fillStyle = \"#999999\";\n  context.font = \"bold 14px Arial\";\n  context.fillText(title, 20, 15);\n\n  e.dataTransfer.setDragImage(canvas, 0, 0);\n}\n","import { createContext, useContext } from \"react\";\nimport type { WorkbenchNodeData } from \"../../interfaces.js\";\nimport { dragStatusEnum } from \"./WorkbenchTreeDndContext.js\";\n\nexport interface dropOptions {\n  curElement: HTMLElement;\n  overElement: HTMLElement;\n  parentElement: HTMLElement;\n  overStatus: dragStatusEnum;\n}\n\nexport interface ContextOfWorkbenchTree {\n  hoverKey?: string | number;\n  activeKey?: string | number;\n  basePaddingLeft?: number;\n  showMatchedNodeOnly?: boolean;\n  isTransformName?: boolean;\n  fixedActionsFor?: Record<string, unknown> | Record<string, unknown>[];\n  collapsible?: boolean;\n  collapsedNodes?: (string | number)[];\n  nodeKey?: string;\n  clickFactory?(node: WorkbenchNodeData): () => void;\n  mouseEnterFactory?(node: WorkbenchNodeData): () => void;\n  mouseLeaveFactory?(node: WorkbenchNodeData): () => void;\n  contextMenuFactory?(\n    node?: WorkbenchNodeData\n  ): (event: React.MouseEvent) => void;\n  matchNode?(node: WorkbenchNodeData, lowerTrimmedQuery?: string): boolean;\n  onNodeToggle?(nodeId: string | number, collapsed: boolean): void;\n  getCollapsedId?(node: WorkbenchNodeData): string | number;\n  onBrickDrop?(e: React.DragEvent<HTMLElement>, options: dropOptions): void;\n  skipNotify?: boolean;\n}\n\nexport const WorkbenchTreeContext = createContext<ContextOfWorkbenchTree>({});\n\nexport function useWorkbenchTreeContext(): ContextOfWorkbenchTree {\n  return useContext(WorkbenchTreeContext);\n}\n","export function deepFilter<T>(data: Array<T>, q: string): Array<T> {\n  const trimmedQuery = q?.trim();\n  if (!trimmedQuery) {\n    return data.slice();\n  }\n  return data.filter((item) => deepMatch(item, trimmedQuery.toLowerCase()));\n}\n\nexport function deepMatch(data: unknown, lowerTrimmedQuery: string): boolean {\n  switch (typeof data) {\n    case \"string\":\n      return data.toLowerCase().includes(lowerTrimmedQuery);\n    case \"boolean\":\n    case \"number\":\n      return String(data).includes(lowerTrimmedQuery);\n    case \"object\":\n      return data === null\n        ? \"null\".includes(lowerTrimmedQuery)\n        : (Array.isArray(data) ? data : Object.entries(data).flat()).some(\n            (item) => deepMatch(item, lowerTrimmedQuery)\n          );\n    default:\n      return false;\n  }\n}\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.actionsBar{display:flex;align-items:center;padding:0 3px}.action{display:flex;justify-content:center;align-items:center;width:20px;height:20px;border-radius:5px}.action:hover{color:#fff;background-color:rgba(90,93,94,0.31)}.action{color:#c5c5c5}.disabled,\n.disabled:hover{color:var(--color-disabled-text);cursor:not-allowed;background-color:initial}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host,\n:host-context(html[data-override-theme=\"light\"]){--search-box-background:#fff;--node-color:#595959;--node-color-focus:#595959;--node-background-active:#e0eeff;--node-background-focus:#e0eeff;--node-icon-background-hover:#fff}:host-context(html[data-theme=\"dark-v2\"]),\n:host-context(html[data-override-theme=\"dark-v2\"]){--search-box-background:#181818;--node-color:#c5c5c5;--node-color-focus:#fff;--node-background-active:rgba(255,255,255,0.08);--node-background-focus:#1a7aff;--node-icon-background-hover:rgba(90,93,94,0.31)}.searchBox{position:sticky;top:0;background-color:var(--search-box-background);padding:5px 10px 10px;z-index:1}.searchBox .filter-input-wrapper{background-color:var(--search-box-background);border:1px solid rgba(255,255,255,0.2);position:relative;width:100%;min-width:0;padding:2px 7px;color:var(--antd-input-color);font-size:14px;line-height:1.5715;display:inline-flex;border-radius:3px;transition:all 0.3s;box-sizing:border-box}.searchBox .filter-input-wrapper.focus{background-color:var(--search-box-background);border:1px solid rgba(255,255,255,0.2);border-right-width:1px!important;outline:0;box-shadow:0 0 0 2px rgba(0,113,235,0.2)}.searchBox .filter-input-wrapper input{text-overflow:ellipsis;border:none;outline:none;border-radius:3px;background-color:var(--search-box-background);box-sizing:border-box;margin:0;padding:0;color:var(--antd-text-color);font-variant:tabular-nums;list-style:none;font-feature-settings:\"tnum\";position:relative;display:inline-block;width:100%;min-width:0;color:var(--antd-input-color);font-size:14px;line-height:1.5715;background-image:none;transition:all 0.3s}.prefix{margin-right:4px}.suffix{margin-left:4px}.searchBox .prefix,\n.searchBox .suffix{display:flex;flex:none;align-items:center}.clear-button{cursor:pointer}.tree{list-style:none;margin:0;padding:0}.placeholder{color:var(--antd-input-placeholder-color);padding:0 15px}.nodeLabelLink{display:block}.nodeLabelLink::part(link){display:flex}.nodeLabelRow{display:flex;cursor:pointer;height:22px;padding-right:10px;flex:1;min-width:0}.nodeLabelRow:hover,\n.nodeLabelRow.hover{background-color:rgba(255,255,255,0.12)}.nodeLabelLink:focus .nodeLabelRow.active{background-color:var(--node-background-focus)}.nodeLabel{display:flex;align-items:center;min-width:0;flex:1}.unreachable{opacity:0.3}.nodeAction,\n.nodeAction:hover,\n.nodeLabelRow .nodeLabel{color:var(--node-color)}.nodeLabelLink:focus .nodeLabel{color:var(--node-color-focus)}.nodeLabelRow.matched .nodeLabel{color:var(--palette-orange-6)}.nodeLabelRow.active{background-color:var(--node-background-active)}.nodeIconWrapper{display:flex;width:24px;flex-shrink:0}.nodeIcon,\n.collapseIcon{display:flex;justify-content:center;align-items:center;width:20px;height:20px;border-radius:5px;font-size:13px}.collapseIcon{display:none}.nodeLabelRow.collapsed .nodeIcon,\n.nodeLabelRow.collapsible .nodeIconWrapper:hover .nodeIcon{display:none}.nodeLabelRow.collapsed .collapseIcon,\n.nodeLabelRow.collapsible .nodeIconWrapper:hover .collapseIcon{display:flex}.nodeLabelRow.collapsible .nodeIcon:hover,\n.nodeLabelRow.collapsible .collapseIcon:hover{background-color:var(--node-icon-background-hover)}.nodeName{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.nodeLabelRow:not(:hover, .fixedActions) .nodeActionsBar{display:none}.badge{margin:0 3px}.collapsed + .tree{display:none}.hightlight{outline-width:1px;outline-style:solid;outline-offset:-1px;outline-color:#fcd93f}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n"],"names":["WorkbenchActionsContext","createContext","useWorkbenchActionsContext","useContext","dragStatusEnum","WorkbenchTreeDndContext","useWorkbenchTreeDndContext","WrappedGeneralIcon","wrapBrick","WorkbenchMiniActionBar","_ref","data","className","gap","isFirst","isLast","actions","actionsHidden","onActionClick","enabledActions","useMemo","filter","item","checkIfByTransform","length","React","classNames","style","map","WorkbenchSubAction","key","action","_ref2","disabled","handleActionClick","useCallback","event","preventDefault","stopPropagation","preventMouseEvent","title","role","onClick","onContextMenu","onMouseDown","icon","WrappedLink","treeLevelPadding","borderStyle","SearchingContext","WorkbenchTree","nodes","originNode","placeholder","searchPlaceholder","isDrag","noSearch","allowDrag","allowDragToRoot","allowDragToInside","dropEmit","q","setQ","useState","isDragging","setIsDragging","curNode","setCurNode","curElement","setCurElement","overNode","setOverNode","overElement","setOverElement","overStatus","setOverStatus","isFocus","setIsFocus","nodeKey","onBrickDrop","contextMenuFactory","matchNode","useWorkbenchTreeContext","createNodeByPath","pathList","node","index","path","shift","splice","folder","find","isContainer","children","newPathList","split","newNode","name","pop","parentPath","join","originKey","lib","theme","color","push","forEach","Boolean","getNodeTreeByPath","slice","handleSearchChange","target","value","trimmedLowerQ","trim","toLowerCase","filteredNodes","walk","_node$children","matchedSelf","hasMatchedChildren","includes","matched","findDragParent","element","equal","arguments","undefined","draggable","tagName","parentElement","findNode","id","handleOnDragEnd","useEffect","window","addEventListener","removeEventListener","height","e","focus","onChange","onFocus","onBlur","autoComplete","handleClearInput","Provider","allow","dragElement","dragOverElement","dragStatus","onDragStart","handleOnDragStart","_element$dataset","dataset","container","canvas","document","createElement","body","append","context","getContext","width","measureText","position","left","zIndex","fillStyle","fillRect","font","fillText","dataTransfer","setDragImage","innerText","classnames","hightlight","onDragOver","dom","uid","top","bottom","getBoundingClientRect","status","repair","clientY","inside","getDragState","contains","onDrop","Number","level","realOverNode","findRealNode","i","overUid","filterNodes","flag","realOverKey","newNodes","findIndex","normalizeNode","result","_","getNodesByPathTree","realCurNode","TreeList","lastIndex","checkIfOfComputed","TreeNode","PlaceholderDOM","_ref3","styles","border","opacity","_ref4","_node$children2","_node$icon","_node$icon2","isLeaf","hoverKey","activeKey","basePaddingLeft","showMatchedNodeOnly","fixedActionsFor","collapsible","collapsedNodes","clickFactory","mouseEnterFactory","mouseLeaveFactory","onNodeToggle","getCollapsedId","skipNotify","nodePaddingLeft","searching","cacheDragStatus","setCacheDragStatus","collapseClicked","setCollapseClicked","collapsed","setCollapsed","onMouseEnter","onMouseLeave","_contextMenuFactory","isActive","nodeLabelCallback","_element$scrollIntoVi","scrollIntoView","call","block","inline","nodeUid","type","parent","$$uid","mountPoint","isDragElement","String","isDragActive","nodeStyle","boxShadow","background","Object","assign","handleCollapse","prev","onLinkClick","_clickFactory","allowCollapse","marginLeft","_extends","tabIndex","url","pathname","get","link","state","notify","pick","active","hover","fixedActions","concat","some","source","isMatch","unreachable","paddingLeft","labelColor","ref","fontSize","imgSrc","labelPrefix","text","badge","WorkbenchTreeContext","deepMatch","lowerTrimmedQuery","Array","isArray","entries","flat","___CSS_LOADER_EXPORT___","module","toString"],"sourceRoot":""}
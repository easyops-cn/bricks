{"version":3,"file":"chunks/editors/tpl-page-layout.8188cc5a.js","mappings":"oLAkBAA,EAAAA,cAAcC,OACZ,kCAdF,SAAuCC,GACrC,OAAO,SACLC,GAEA,MAAM,qBAAEC,EAAoB,uBAAEC,EAAsB,MAAEC,GAAUH,EAEhE,OAAOD,EAAMK,cAAcH,EAAsB,CAC/CI,OAAQH,EAAuBI,EAAAA,GAC/BH,SAEJ,CACF,G,kCChBO,MAAMG,EAAsB,CACjCC,KAAM,SACNC,KAAM,OACNC,UAAW,CACTF,KAAM,aACNP,MAAO,CACLU,OAAQ,aAGZC,SAAU,CACR,CACEJ,KAAM,sBACNC,KAAM,OACNI,UAAW,CACTL,KAAM,gBACNP,MAAO,CACLa,KAAM,QAIZ,CACEN,KAAM,YACNO,MAAO,OACPN,KAAM,UAER,CACED,KAAM,OACNO,MAAO,SACPN,KAAM,UAER,CACED,KAAM,cACNO,MAAO,UACPN,KAAM,UACN,cAAe,CACb,CACEO,OAAQ,cACRC,QAAS,CACPC,MAAO,CACLC,QAAS,yBAMnB,CACEX,KAAM,cACNO,MAAO,QACPN,KAAM,SACNC,UAAW,CACTF,KAAM,eAGV,CACEA,KAAM,iBACNO,MAAO,SACPN,KAAM,UACN,cAAe,CACb,CACEO,OAAQ,iBACRC,QAAS,CACPC,MAAO,CACLC,QAAS,yBAMnB,CACEX,KAAM,iBACNO,MAAO,SACPN,KAAM,SACNC,UAAW,CACTF,KAAM,eAGV,CACEA,KAAM,iBACNO,MAAO,UACPN,KAAM,WAER,CACED,KAAM,aACNO,MAAO,MACPN,KAAM,SACNC,UAAW,cAEb,CACEF,KAAM,cACNC,KAAM,UACNM,MAAO,YACPF,UAAW,CACTZ,MAAO,CACLmB,QAAS,oBACTT,OAAQ,eAGZD,UAAW,CACTF,KAAM,SACNP,MAAO,CACLoB,KAAM,UAGV,cAAe,CACb,CACEL,OAAQ,cACRC,QAAS,CACPC,MAAO,CACLC,QAAS,uBAIf,CACEH,OAAQ,oBACRC,QAAS,CACPC,MAAO,CACLC,QAAS,uBAIf,CACEH,OAAQ,cACRC,QAAS,CACPC,MAAO,CACLC,QAAS,uBAIf,CACEH,OAAQ,aACRC,QAAS,CACPC,MAAO,CACLC,QAAS,yBAMnB,CACEX,KAAM,cACNC,KAAM,SACNM,MAAO,aAET,CACEP,KAAM,oBACNC,KAAM,SACNM,MAAO,aAET,CACEP,KAAM,cACNC,KAAM,SACNM,MAAO,aAET,CACEP,KAAM,aACNC,KAAM,UACNM,MAAO,aAET,CACEP,KAAM,SACNC,KAAM,SACNM,MAAO,QACPL,UAAW,CACTF,KAAM,SACNP,MAAO,CACLqB,QAAS,CAAC,QAAS,SAAU,QAAS,QAAQC,KAAKC,IAAI,CACrDC,MAAOD,EACPE,MAAOF,SAKf,CACEhB,KAAM,gBACNC,KAAM,UACNM,MAAO,QAET,CACEP,KAAM,aACNC,KAAM,SACNM,MAAO,SACPL,UAAW,CACTF,KAAM,SACNP,MAAO,CACLqB,QAAS,CAAC,QAAS,UAAUC,KAAKC,IAAI,CACpCC,MAAOD,EACPE,MAAOF,SAKf,CACEhB,KAAM,aACNC,KAAM,UACNM,MAAO,SACP,cAAe,CACb,CACEC,OAAQ,cACRC,QAAS,CACPC,MAAO,CACLC,QAAS,yBAMnB,CACEX,KAAM,cACNC,KAAM,UACNM,MAAO,gB","sources":["webpack:///./src/editors/base-layout-v3/tpl-page-layout/index.tsx","webpack:///./src/editors/base-layout-v3/tpl-page-layout/tplPageLayout.schema.tsx"],"sourcesContent":["import type _React from \"react\";\nimport { customEditors } from \"@next-core/runtime\";\nimport type { EditorComponentProps } from \"@next-shared/property-editor\";\nimport { tplPageLayoutSchema } from \"./tplPageLayout.schema\";\n\nfunction TplPageLayoutComponentFactory(React: typeof _React) {\n  return function TplPageLayoutComponent(\n    props: EditorComponentProps\n  ): React.ReactElement {\n    const { SchemaFieldComponent, formilySchemaFormatter, scope } = props;\n\n    return React.createElement(SchemaFieldComponent, {\n      schema: formilySchemaFormatter(tplPageLayoutSchema as any),\n      scope,\n    });\n  };\n}\n\ncustomEditors.define(\n  \"base-layout-v3.tpl-page-layout\",\n  TplPageLayoutComponentFactory\n);\n","export const tplPageLayoutSchema = {\n  name: \"layout\",\n  type: \"void\",\n  component: {\n    name: \"FormLayout\",\n    props: {\n      layout: \"vertical\",\n    },\n  },\n  children: [\n    {\n      name: \"categoryTitle_basic\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"基础\",\n        },\n      },\n    },\n    {\n      name: \"pageTitle\",\n      title: \"页面标题\",\n      type: \"string\",\n    },\n    {\n      name: \"menu\",\n      title: \"顶栏菜单配置\",\n      type: \"string\",\n    },\n    {\n      name: \"showSidebar\",\n      title: \"是否展示侧边栏\",\n      type: \"boolean\",\n      \"x-reactions\": [\n        {\n          target: \"sidebarMenu\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"sidebarMenu\",\n      title: \"侧边栏配置\",\n      type: \"string\",\n      component: {\n        name: \"CodeEditor\",\n      },\n    },\n    {\n      name: \"showSubSidebar\",\n      title: \"子侧边栏菜单\",\n      type: \"boolean\",\n      \"x-reactions\": [\n        {\n          target: \"subSidebarMenu\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"subSidebarMenu\",\n      title: \"子侧边栏配置\",\n      type: \"string\",\n      component: {\n        name: \"CodeEditor\",\n      },\n    },\n    {\n      name: \"showBreadcrumb\",\n      title: \"是否展示面包屑\",\n      type: \"boolean\",\n    },\n    {\n      name: \"breadcrumb\",\n      title: \"面包屑\",\n      type: \"string\",\n      component: \"CodeEditor\",\n    },\n    {\n      name: \"bannerAlone\",\n      type: \"boolean\",\n      title: \"独立 banner\",\n      decorator: {\n        props: {\n          tooltip: \"启用时不显示默认的页面标题和面包屑\",\n          layout: \"horizontal\",\n        },\n      },\n      component: {\n        name: \"Switch\",\n        props: {\n          size: \"small\",\n        },\n      },\n      \"x-reactions\": [\n        {\n          target: \"bannerTitle\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n        {\n          target: \"bannerDescription\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n        {\n          target: \"bannerImage\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n        {\n          target: \"bannerSunk\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"bannerTitle\",\n      type: \"string\",\n      title: \"Banner 标题\",\n    },\n    {\n      name: \"bannerDescription\",\n      type: \"string\",\n      title: \"Banner 描述\",\n    },\n    {\n      name: \"bannerImage\",\n      type: \"string\",\n      title: \"Banner 图片\",\n    },\n    {\n      name: \"bannerSunk\",\n      type: \"boolean\",\n      title: \"Banner 下沉\",\n    },\n    {\n      name: \"narrow\",\n      type: \"string\",\n      title: \"使用窄布局\",\n      component: {\n        name: \"Select\",\n        props: {\n          options: [\"small\", \"medium\", \"large\", \"full\"].map((item) => ({\n            label: item,\n            value: item,\n          })),\n        },\n      },\n    },\n    {\n      name: \"fillContainer\",\n      type: \"boolean\",\n      title: \"填满容器\",\n    },\n    {\n      name: \"contentGap\",\n      type: \"string\",\n      title: \"内容间距大小\",\n      component: {\n        name: \"Select\",\n        props: {\n          options: [\"small\", \"medium\"].map((item) => ({\n            label: item,\n            value: item,\n          })),\n        },\n      },\n    },\n    {\n      name: \"showFooter\",\n      type: \"boolean\",\n      title: \"是否显示底栏\",\n      \"x-reactions\": [\n        {\n          target: \"fixedFooter\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"fixedFooter\",\n      type: \"boolean\",\n      title: \"底栏是否始终固定在底部\",\n    },\n  ],\n};\n"],"names":["customEditors","define","React","props","SchemaFieldComponent","formilySchemaFormatter","scope","createElement","schema","tplPageLayoutSchema","name","type","component","layout","children","decorator","text","title","target","fulfill","state","visible","tooltip","size","options","map","item","label","value"],"sourceRoot":""}
{"version":3,"file":"chunks/editors/tpl-base-page-module.4045a381.js","mappings":"oLAkBAA,EAAAA,cAAcC,OACZ,oCAdF,SAA2CC,GACzC,OAAO,SACLC,GAEA,MAAM,qBAAEC,EAAoB,uBAAEC,EAAsB,MAAEC,GAAUH,EAEhE,OAAOD,EAAMK,cAAcH,EAAsB,CAC/CI,OAAQH,EAAuBI,EAAAA,GAC/BH,SAEJ,CACF,G,kCChBO,MAAMG,EAAsB,CACjCC,KAAM,SACNC,KAAM,OACNC,UAAW,CACTF,KAAM,aACNP,MAAO,CACLU,OAAQ,aAGZC,SAAU,CACR,CACEJ,KAAM,sBACNC,KAAM,OACNI,UAAW,CACTL,KAAM,gBACNP,MAAO,CACLa,KAAM,QAIZ,CACEN,KAAM,YACNO,MAAO,OACPN,KAAM,UAER,CACED,KAAM,UACNO,MAAO,QACPN,KAAM,UAER,CACED,KAAM,SACNO,MAAO,UACPN,KAAM,UAER,CACED,KAAM,OACNO,MAAO,SACPN,KAAM,UAER,CACED,KAAM,kBACNO,MAAO,UACPN,KAAM,UACNC,UAAW,CACTF,KAAM,SACNP,MAAO,CACLe,cAAc,EACdC,KAAM,UAGV,cAAe,CACb,CACEC,OAAQ,cACRC,QAAS,CACPC,MAAO,CACLC,QAAS,wBAMnB,CACEb,KAAM,cACNO,MAAO,QACPN,KAAM,SACNC,UAAW,CACTF,KAAM,eAGV,CACEA,KAAM,qBACNO,MAAO,aACPN,KAAM,UACN,cAAe,CACb,CACES,OAAQ,iBACRC,QAAS,CACPC,MAAO,CACLC,QAAS,yBAMnB,CACEb,KAAM,iBACNO,MAAO,SACPN,KAAM,SACNC,UAAW,CACTF,KAAM,eAGV,CACEA,KAAM,mBACNO,MAAO,UACPN,KAAM,UACN,cAAe,CACb,CACES,OAAQ,aACRC,QAAS,CACPC,MAAO,CACLC,QAAS,yBAMnB,CACEb,KAAM,aACNO,MAAO,MACPN,KAAM,SACNC,UAAW,cAEb,CACEF,KAAM,iBACNO,MAAO,SACPN,KAAM,WAER,CACED,KAAM,WACNO,MAAO,eACPN,KAAM,WAER,CACED,KAAM,gBACNO,MAAO,OACPN,KAAM,WAER,CACED,KAAM,UACNO,MAAO,mBACPN,KAAM,UACNC,UAAW,CACTF,KAAM,SACNP,MAAO,CACLe,cAAc,EACdC,KAAM,WAIZ,CACET,KAAM,aACNO,MAAO,WACPN,KAAM,UACNC,UAAW,CACTF,KAAM,SACNP,MAAO,CACLe,cAAc,EACdC,KAAM,WAIZ,CACET,KAAM,gBACNO,MAAO,cACPN,KAAM,UACNC,UAAW,CACTF,KAAM,SACNP,MAAO,CACLe,cAAc,EACdC,KAAM,UAGV,cAAe,CACb,CACEC,OAAQ,UACRC,QAAS,CACPC,MAAO,CACLC,QAAS,yBAMnB,CACEb,KAAM,wBACNO,MAAO,oBACPN,KAAM,UACNC,UAAW,CACTF,KAAM,SACNP,MAAO,CACLe,cAAc,EACdC,KAAM,Y","sources":["webpack:///./src/editors/base-layout/tpl-base-page-module/index.tsx","webpack:///./src/editors/base-layout/tpl-base-page-module/tplPageModule.schema.tsx"],"sourcesContent":["import type _React from \"react\";\nimport { customEditors } from \"@next-core/runtime\";\nimport type { EditorComponentProps } from \"@next-shared/property-editor\";\nimport { tplPageModuleSchema } from \"./tplPageModule.schema\";\n\nfunction TplBasePageModuleComponentFactory(React: typeof _React) {\n  return function TplBasePageModuleComponent(\n    props: EditorComponentProps\n  ): React.ReactElement {\n    const { SchemaFieldComponent, formilySchemaFormatter, scope } = props;\n\n    return React.createElement(SchemaFieldComponent, {\n      schema: formilySchemaFormatter(tplPageModuleSchema as any),\n      scope,\n    });\n  };\n}\n\ncustomEditors.define(\n  \"base-layout.tpl-base-page-module\",\n  TplBasePageModuleComponentFactory\n);\n","export const tplPageModuleSchema = {\n  name: \"layout\",\n  type: \"void\",\n  component: {\n    name: \"FormLayout\",\n    props: {\n      layout: \"vertical\",\n    },\n  },\n  children: [\n    {\n      name: \"categoryTitle_basic\",\n      type: \"void\",\n      decorator: {\n        name: \"CategoryTitle\",\n        props: {\n          text: \"基础\",\n        },\n      },\n    },\n    {\n      name: \"pageTitle\",\n      title: \"页面标题\",\n      type: \"string\",\n    },\n    {\n      name: \"appName\",\n      title: \"app名称\",\n      type: \"string\",\n    },\n    {\n      name: \"appUrl\",\n      title: \"app跳转链接\",\n      type: \"string\",\n    },\n    {\n      name: \"menu\",\n      title: \"顶栏菜单配置\",\n      type: \"string\",\n    },\n    {\n      name: \"isHiddenSideBar\",\n      title: \"是否隐藏侧边栏\",\n      type: \"boolean\",\n      component: {\n        name: \"Switch\",\n        props: {\n          defaultValue: false,\n          size: \"small\",\n        },\n      },\n      \"x-reactions\": [\n        {\n          target: \"sideBarMenu\",\n          fulfill: {\n            state: {\n              visible: \"{{!$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"sideBarMenu\",\n      title: \"侧边栏配置\",\n      type: \"string\",\n      component: {\n        name: \"CodeEditor\",\n      },\n    },\n    {\n      name: \"showSubSidebarMenu\",\n      title: \"是否展示子侧边栏菜单\",\n      type: \"boolean\",\n      \"x-reactions\": [\n        {\n          target: \"subSidebarMenu\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"subSidebarMenu\",\n      title: \"子侧边栏配置\",\n      type: \"string\",\n      component: {\n        name: \"CodeEditor\",\n      },\n    },\n    {\n      name: \"isShowBreadcrumb\",\n      title: \"是否展示面包屑\",\n      type: \"boolean\",\n      \"x-reactions\": [\n        {\n          target: \"breadcrumb\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"breadcrumb\",\n      title: \"面包屑\",\n      type: \"string\",\n      component: \"CodeEditor\",\n    },\n    {\n      name: \"isHiddenNavBar\",\n      title: \"是否隐藏顶栏\",\n      type: \"boolean\",\n    },\n    {\n      name: \"isInCMDB\",\n      title: \"是否为CMDB资源大菜单\",\n      type: \"boolean\",\n    },\n    {\n      name: \"displayCenter\",\n      title: \"是否居中\",\n      type: \"boolean\",\n    },\n    {\n      name: \"isFixed\",\n      title: \"导航栏是否启动 fixed 布局\",\n      type: \"boolean\",\n      component: {\n        name: \"Switch\",\n        props: {\n          defaultValue: true,\n          size: \"small\",\n        },\n      },\n    },\n    {\n      name: \"isShowLogo\",\n      title: \"是否展示logo\",\n      type: \"boolean\",\n      component: {\n        name: \"Switch\",\n        props: {\n          defaultValue: true,\n          size: \"small\",\n        },\n      },\n    },\n    {\n      name: \"isShowAppName\",\n      title: \"是否展示 app 名称\",\n      type: \"boolean\",\n      component: {\n        name: \"Switch\",\n        props: {\n          defaultValue: true,\n          size: \"small\",\n        },\n      },\n      \"x-reactions\": [\n        {\n          target: \"appName\",\n          fulfill: {\n            state: {\n              visible: \"{{!!$self.value}}\",\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: \"isShowLaunchpadButton\",\n      title: \"是否展示 launchpad 按钮\",\n      type: \"boolean\",\n      component: {\n        name: \"Switch\",\n        props: {\n          defaultValue: true,\n          size: \"small\",\n        },\n      },\n    },\n  ],\n};\n"],"names":["customEditors","define","React","props","SchemaFieldComponent","formilySchemaFormatter","scope","createElement","schema","tplPageModuleSchema","name","type","component","layout","children","decorator","text","title","defaultValue","size","target","fulfill","state","visible"],"sourceRoot":""}
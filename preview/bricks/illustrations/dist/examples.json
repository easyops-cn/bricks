{
  "illustrations.get-illustration": {
    "doc": "获取插画。\n\n## Examples\n\n```yaml preview\nbrick: basic.general-button\nproperties:\n  textContent: View illustration\nevents:\n  click:\n    useProvider: illustrations.get-illustration\n    args:\n      - category: feedback\n        name: fail\n    callback:\n      success:\n        action: window.open\n        args:\n          - \"<% EVENT.detail %>\"\n          - _blank\n# -- YAML DELIMITER (1nbbm8) --\n# <basic.general-button id=\"brick-1\">View illustration</basic.general-button>\n# \n# <script>\n#   const brick_1 = document.getElementById(\"brick-1\");\n#   brick_1.addEventListener(\"click\", (e) => {\n#     const provider = document.createElement(\"illustrations.get-illustration\");\n#     const promise = Promise.resolve(\n#       provider.resolve({ category: \"feedback\", name: \"fail\" })\n#     );\n#     promise.then((r) => {\n#       window.open(r, \"_blank\");\n#     });\n#   });\n# </script>\n# \n```\n\n## Usage in pro-code\n\n```tsx\nimport { unwrapProvider } from \"@next-core/utils/general\";\nimport type { getIllustration as _getIllustration } from \"@next-bricks/illustrations/data-providers/get-illustration\";\n\n// Use `unwrapProvider` to get the original function of a provider\nconst getIllustration = unwrapProvider<typeof _getIllustration>(\n  \"illustrations.get-illustration\"\n);\n\nfunction MyComponent() {\n  const src = getIllustration({ category: \"feedback\", name: \"fail\" });\n  return <img src={src} />;\n}\n```\n"
  }
}
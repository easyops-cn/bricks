{
  "illustrations.loading-transition": {
    "doc": "构件 `illustrations.loading-transition`\n\n## Examples\n\n### Basic\n\n```yaml preview minHeight=\"300px\"\nbrick: div\nproperties:\n  style:\n    display: flex\n    justifyContent: center\n    alignItems: center\n    width: 100%\n    height: calc(100vh - 4em)\nchildren:\n  - brick: illustrations.loading-transition\n# -- YAML DELIMITER (1nbbm8) --\n# <div\n#   style=\"\n#     display: flex;\n#     justify-content: center;\n#     align-items: center;\n#     width: 100%;\n#     height: calc(100vh - 4em);\n#   \"\n# >\n#   <illustrations.loading-transition></illustrations.loading-transition>\n# </div>\n# \n```\n"
  },
  "illustrations.error-message": {
    "doc": "构件 `illustrations.error-message`\n\n## Examples\n\n### Basic\n\n```yaml preview\nbrick: illustrations.error-message\nproperties:\n  errorTitle: 糟糕！页面出现了一些问题\n  description: \"HttpParseError: OK\"\n# -- YAML DELIMITER (1nbbm8) --\n# <illustrations.error-message\n#   error-title=\"糟糕！页面出现了一些问题\"\n#   description=\"HttpParseError: OK\"\n# ></illustrations.error-message>\n# \n```\n\n### Variant\n\n```yaml preview\nbrick: illustrations.error-message\nproperties:\n  variant: internet-disconnected\n  errorTitle: 网络错误，请检查您的网络连接。\n# -- YAML DELIMITER (1nbbm8) --\n# <illustrations.error-message\n#   variant=\"internet-disconnected\"\n#   error-title=\"网络错误，请检查您的网络连接。\"\n# ></illustrations.error-message>\n# \n```\n\n### Children\n\n```yaml preview\nbrick: illustrations.error-message\nproperties:\n  errorTitle: 糟糕！页面出现了一些问题\n  description: \"HttpParseError: OK\"\nchildren:\n  - brick: eo-link\n    properties:\n      textContent: 回到上一页\n    events:\n      click:\n        action: history.goBack\n# -- YAML DELIMITER (1nbbm8) --\n# <illustrations.error-message\n#   error-title=\"糟糕！页面出现了一些问题\"\n#   description=\"HttpParseError: OK\"\n# >\n#   <eo-link id=\"brick-1\">回到上一页</eo-link>\n# </illustrations.error-message>\n# \n# <script>\n#   const brick_1 = document.getElementById(\"brick-1\");\n#   brick_1.addEventListener(\"click\", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n# </script>\n# \n```\n"
  },
  "illustrations.get-illustration": {
    "doc": "获取插画。\n\n## Examples\n\n```yaml preview\nbrick: eo-button\nproperties:\n  textContent: View illustration\nevents:\n  click:\n    useProvider: illustrations.get-illustration\n    args:\n      - category: feedback\n        name: fail\n    callback:\n      success:\n        action: window.open\n        args:\n          - \"<% EVENT.detail %>\"\n          - _blank\n# -- YAML DELIMITER (1nbbm8) --\n# <eo-button id=\"brick-1\">View illustration</eo-button>\n# \n# <script>\n#   const brick_1 = document.getElementById(\"brick-1\");\n#   brick_1.addEventListener(\"click\", (e) => {\n#     const provider = document.createElement(\"illustrations.get-illustration\");\n#     const promise = Promise.resolve(\n#       provider.resolve({ category: \"feedback\", name: \"fail\" })\n#     );\n#     promise.then((r) => {\n#       window.open(r, \"_blank\");\n#     });\n#   });\n# </script>\n# \n```\n\n## Usage in pro-code\n\n```tsx\nimport { unwrapProvider } from \"@next-core/utils/general\";\nimport type { getIllustration as _getIllustration } from \"@next-bricks/illustrations/data-providers/get-illustration\";\n\n// Use `unwrapProvider` to get the original function of a provider\nconst getIllustration = unwrapProvider<typeof _getIllustration>(\n  \"illustrations.get-illustration\"\n);\n\nfunction MyComponent() {\n  const src = getIllustration({ category: \"feedback\", name: \"fail\" });\n  return <img src={src} />;\n}\n```\n"
  }
}
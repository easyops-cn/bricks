{"version":3,"file":"chunks/sl-card.2f1311cd.js","mappings":"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","sources":["webpack:///./src/shared/common.ts","webpack:///./src/shared/common.css","webpack:///./src/shared/common.css?c6e5","webpack:///../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.NYIIDP5N.js","webpack:///../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.TUVJKY7S.js","webpack:///../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.A5D6FTFY.js","webpack:///../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.QXE4HSVY.js","webpack:///../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.MGEAXYVX.js","webpack:///src/directive.ts","webpack:///../src/directives/class-map.ts"],"sourcesContent":["// istanbul ignore file\nimport \"@shoelace-style/shoelace/dist/themes/light.css\";\nimport \"@shoelace-style/shoelace/dist/themes/dark.css\";\nimport { setBasePath } from \"@shoelace-style/shoelace/dist/utilities/base-path.js\";\nimport \"./common.css\";\n\n\nsetBasePath(process.env.NODE_ENV === \"test\" ? \"\" : __webpack_public_path__);\n\ntype SiteTheme = \"light\" | \"dark\" | \"dark-v2\";\n\nfunction syncTheme(theme: SiteTheme) {\n  document.documentElement.classList[theme === \"dark\" || theme === \"dark-v2\" ? \"add\" : \"remove\"](\n    \"sl-theme-dark\"\n  );\n}\n\nsyncTheme(document.documentElement.dataset.theme as SiteTheme);\n\nwindow.addEventListener(\"theme.change\", (event) => {\n  syncTheme((event as CustomEvent<SiteTheme>).detail);\n});\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root,\n.sl-theme-dark{--sl-z-index-drawer:1000;--sl-z-index-dialog:1000;--sl-z-index-dropdown:1050;--sl-z-index-toast:1060;--sl-z-index-tooltip:1070}.sl-toast-stack{width:100%;left:0;right:auto;overflow:initial;pointer-events:none}.sl-toast-stack > sl-alert{pointer-events:all}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./common.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./common.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// src/internal/slot.ts\nvar HasSlotController = class {\n  constructor(host, ...slotNames) {\n    this.slotNames = [];\n    this.handleSlotChange = (event) => {\n      const slot = event.target;\n      if (this.slotNames.includes(\"[default]\") && !slot.name || slot.name && this.slotNames.includes(slot.name)) {\n        this.host.requestUpdate();\n      }\n    };\n    (this.host = host).addController(this);\n    this.slotNames = slotNames;\n  }\n  hasDefaultSlot() {\n    return [...this.host.childNodes].some((node) => {\n      if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== \"\") {\n        return true;\n      }\n      if (node.nodeType === node.ELEMENT_NODE) {\n        const el = node;\n        const tagName = el.tagName.toLowerCase();\n        if (tagName === \"sl-visually-hidden\") {\n          return false;\n        }\n        if (!el.hasAttribute(\"slot\")) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  hasNamedSlot(name) {\n    return this.host.querySelector(`:scope > [slot=\"${name}\"]`) !== null;\n  }\n  test(slotName) {\n    return slotName === \"[default]\" ? this.hasDefaultSlot() : this.hasNamedSlot(slotName);\n  }\n  hostConnected() {\n    this.host.shadowRoot.addEventListener(\"slotchange\", this.handleSlotChange);\n  }\n  hostDisconnected() {\n    this.host.shadowRoot.removeEventListener(\"slotchange\", this.handleSlotChange);\n  }\n};\nfunction getTextContent(slot) {\n  if (!slot) {\n    return \"\";\n  }\n  const nodes = slot.assignedNodes({ flatten: true });\n  let text = \"\";\n  [...nodes].forEach((node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n  return text;\n}\n\nexport {\n  HasSlotController,\n  getTextContent\n};\n","// src/styles/component.styles.ts\nimport { css } from \"lit\";\nvar component_styles_default = css`\n  :host {\n    box-sizing: border-box;\n  }\n\n  :host *,\n  :host *::before,\n  :host *::after {\n    box-sizing: inherit;\n  }\n\n  [hidden] {\n    display: none !important;\n  }\n`;\n\nexport {\n  component_styles_default\n};\n","// src/components/card/card.styles.ts\nimport { css } from \"lit\";\nvar card_styles_default = css`\n  :host {\n    --border-color: var(--sl-color-neutral-200);\n    --border-radius: var(--sl-border-radius-medium);\n    --border-width: 1px;\n    --padding: var(--sl-spacing-large);\n\n    display: inline-block;\n  }\n\n  .card {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--sl-panel-background-color);\n    box-shadow: var(--sl-shadow-x-small);\n    border: solid var(--border-width) var(--border-color);\n    border-radius: var(--border-radius);\n  }\n\n  .card__image {\n    display: flex;\n    border-top-left-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n    margin: calc(-1 * var(--border-width));\n    overflow: hidden;\n  }\n\n  .card__image::slotted(img) {\n    display: block;\n    width: 100%;\n  }\n\n  .card:not(.card--has-image) .card__image {\n    display: none;\n  }\n\n  .card__header {\n    display: block;\n    border-bottom: solid var(--border-width) var(--border-color);\n    padding: calc(var(--padding) / 2) var(--padding);\n  }\n\n  .card:not(.card--has-header) .card__header {\n    display: none;\n  }\n\n  .card:not(.card--has-image) .card__header {\n    border-top-left-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n  }\n\n  .card__body {\n    display: block;\n    padding: var(--padding);\n  }\n\n  .card--has-footer .card__footer {\n    display: block;\n    border-top: solid var(--border-width) var(--border-color);\n    padding: var(--padding);\n  }\n\n  .card:not(.card--has-footer) .card__footer {\n    display: none;\n  }\n`;\n\nexport {\n  card_styles_default\n};\n","import {\n  card_styles_default\n} from \"./chunk.A5D6FTFY.js\";\nimport {\n  HasSlotController\n} from \"./chunk.NYIIDP5N.js\";\nimport {\n  component_styles_default\n} from \"./chunk.TUVJKY7S.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.TUZSOS6C.js\";\n\n// src/components/card/card.component.ts\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { html } from \"lit\";\nvar SlCard = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.hasSlotController = new HasSlotController(this, \"footer\", \"header\", \"image\");\n  }\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=${classMap({\n      card: true,\n      \"card--has-footer\": this.hasSlotController.test(\"footer\"),\n      \"card--has-image\": this.hasSlotController.test(\"image\"),\n      \"card--has-header\": this.hasSlotController.test(\"header\")\n    })}\n      >\n        <slot name=\"image\" part=\"image\" class=\"card__image\"></slot>\n        <slot name=\"header\" part=\"header\" class=\"card__header\"></slot>\n        <slot part=\"body\" class=\"card__body\"></slot>\n        <slot name=\"footer\" part=\"footer\" class=\"card__footer\"></slot>\n      </div>\n    `;\n  }\n};\nSlCard.styles = [component_styles_default, card_styles_default];\n\nexport {\n  SlCard\n};\n","import {\n  SlCard\n} from \"./chunk.QXE4HSVY.js\";\n\n// src/components/card/card.ts\nvar card_default = SlCard;\nSlCard.define(\"sl-card\");\n\nexport {\n  card_default\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = (typeof PartType)[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    for (const name of this._previousClasses) {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    }\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {ClassMapDirective};\n"],"names":["syncTheme","theme","document","documentElement","classList","setBasePath","__webpack_public_path__","dataset","window","addEventListener","event","detail","___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","HasSlotController","constructor","host","slotNames","this","handleSlotChange","slot","target","includes","name","requestUpdate","addController","hasDefaultSlot","childNodes","some","node","nodeType","TEXT_NODE","textContent","trim","ELEMENT_NODE","el","tagName","toLowerCase","hasAttribute","hasNamedSlot","querySelector","test","slotName","hostConnected","shadowRoot","hostDisconnected","removeEventListener","getTextContent","nodes","assignedNodes","flatten","text","forEach","Node","component_styles_default","card_styles_default","super","arguments","hasSlotController","render","card","styles","define","t","ATTRIBUTE","CHILD","PROPERTY","BOOLEAN_ATTRIBUTE","EVENT","ELEMENT","e","_len","length","Array","_key","_$litDirective$","values","i","_$AU","_$AM","_$AT","_$Ct","_$Ci","_$AS","update","s","_t$strings","type","r","strings","Error","Object","keys","filter","join","_ref","it","Set","st","split","_this$st","has","add","element","remove","delete","_this$st2"],"sourceRoot":""}
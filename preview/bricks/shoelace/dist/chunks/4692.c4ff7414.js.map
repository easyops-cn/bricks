{"version":3,"file":"chunks/4692.c4ff7414.js","mappings":"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","sources":["webpack:///../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.3KSWVBQ5.js","webpack:///../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack:///../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack:///../../node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","webpack:///../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack:///../../node_modules/composed-offset-position/dist/composed-offset-position.browser.min.mjs","webpack:///../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.UFYD5JS6.js"],"sourcesContent":["// src/components/popup/popup.styles.ts\nimport { css } from \"lit\";\nvar popup_styles_default = css`\n  :host {\n    --arrow-color: var(--sl-color-neutral-1000);\n    --arrow-size: 6px;\n\n    /*\n     * These properties are computed to account for the arrow's dimensions after being rotated 45º. The constant\n     * 0.7071 is derived from sin(45), which is the diagonal size of the arrow's container after rotating.\n     */\n    --arrow-size-diagonal: calc(var(--arrow-size) * 0.7071);\n    --arrow-padding-offset: calc(var(--arrow-size-diagonal) - var(--arrow-size));\n\n    display: contents;\n  }\n\n  .popup {\n    position: absolute;\n    isolation: isolate;\n    max-width: var(--auto-size-available-width, none);\n    max-height: var(--auto-size-available-height, none);\n  }\n\n  .popup--fixed {\n    position: fixed;\n  }\n\n  .popup:not(.popup--active) {\n    display: none;\n  }\n\n  .popup__arrow {\n    position: absolute;\n    width: calc(var(--arrow-size-diagonal) * 2);\n    height: calc(var(--arrow-size-diagonal) * 2);\n    rotate: 45deg;\n    background: var(--arrow-color);\n    z-index: -1;\n  }\n\n  /* Hover bridge */\n  .popup-hover-bridge:not(.popup-hover-bridge--visible) {\n    display: none;\n  }\n\n  .popup-hover-bridge {\n    position: fixed;\n    z-index: calc(var(--sl-z-index-dropdown) - 1);\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    clip-path: polygon(\n      var(--hover-bridge-top-left-x, 0) var(--hover-bridge-top-left-y, 0),\n      var(--hover-bridge-top-right-x, 0) var(--hover-bridge-top-right-y, 0),\n      var(--hover-bridge-bottom-right-x, 0) var(--hover-bridge-bottom-right-y, 0),\n      var(--hover-bridge-bottom-left-x, 0) var(--hover-bridge-bottom-left-y, 0)\n    );\n  }\n`;\n\nexport {\n  popup_styles_default\n};\n","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","function t(t){return r(t)}function e(t){return f(t,\"offsetTop\")}function n(t){return f(t,\"offsetLeft\")}function o(t){return t.assignedSlot?t.assignedSlot:t.parentNode instanceof ShadowRoot?t.parentNode.host:t.parentNode}function r(t){for(let e=t;e;e=o(e))if(e instanceof Element&&\"none\"===getComputedStyle(e).display)return null;for(let e=o(t);e;e=o(e)){if(!(e instanceof Element))continue;const t=getComputedStyle(e);if(\"contents\"!==t.display){if(\"static\"!==t.position||\"none\"!==t.filter)return e;if(\"BODY\"===e.tagName)return e}}return null}function f(t,e){let n=t[e],o=r(t);const f=function(t){const e=new Set;let n=t.getRootNode();for(;n;)e.add(n),n=n.parentNode?n.parentNode.getRootNode():null;return e}(t);for(;o&&!f.has(o.getRootNode());)n-=o[e],o=r(o);return n}export{n as offsetLeft,t as offsetParent,e as offsetTop};\n","import {\n  popup_styles_default\n} from \"./chunk.3KSWVBQ5.js\";\nimport {\n  component_styles_default\n} from \"./chunk.TUVJKY7S.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.TUZSOS6C.js\";\nimport {\n  __decorateClass,\n  __spreadProps,\n  __spreadValues\n} from \"./chunk.IFDWM6P4.js\";\n\n// src/components/popup/popup.component.ts\nimport { arrow, autoUpdate, computePosition, flip, offset, platform, shift, size } from \"@floating-ui/dom\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { html } from \"lit\";\nimport { offsetParent } from \"composed-offset-position\";\nimport { property, query } from \"lit/decorators.js\";\nfunction isVirtualElement(e) {\n  return e !== null && typeof e === \"object\" && \"getBoundingClientRect\" in e && (\"contextElement\" in e ? e instanceof Element : true);\n}\nvar SlPopup = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.active = false;\n    this.placement = \"top\";\n    this.strategy = \"absolute\";\n    this.distance = 0;\n    this.skidding = 0;\n    this.arrow = false;\n    this.arrowPlacement = \"anchor\";\n    this.arrowPadding = 10;\n    this.flip = false;\n    this.flipFallbackPlacements = \"\";\n    this.flipFallbackStrategy = \"best-fit\";\n    this.flipPadding = 0;\n    this.shift = false;\n    this.shiftPadding = 0;\n    this.autoSizePadding = 0;\n    this.hoverBridge = false;\n    this.updateHoverBridge = () => {\n      if (this.hoverBridge && this.anchorEl) {\n        const anchorRect = this.anchorEl.getBoundingClientRect();\n        const popupRect = this.popup.getBoundingClientRect();\n        const isVertical = this.placement.includes(\"top\") || this.placement.includes(\"bottom\");\n        let topLeftX = 0;\n        let topLeftY = 0;\n        let topRightX = 0;\n        let topRightY = 0;\n        let bottomLeftX = 0;\n        let bottomLeftY = 0;\n        let bottomRightX = 0;\n        let bottomRightY = 0;\n        if (isVertical) {\n          if (anchorRect.top < popupRect.top) {\n            topLeftX = anchorRect.left;\n            topLeftY = anchorRect.bottom;\n            topRightX = anchorRect.right;\n            topRightY = anchorRect.bottom;\n            bottomLeftX = popupRect.left;\n            bottomLeftY = popupRect.top;\n            bottomRightX = popupRect.right;\n            bottomRightY = popupRect.top;\n          } else {\n            topLeftX = popupRect.left;\n            topLeftY = popupRect.bottom;\n            topRightX = popupRect.right;\n            topRightY = popupRect.bottom;\n            bottomLeftX = anchorRect.left;\n            bottomLeftY = anchorRect.top;\n            bottomRightX = anchorRect.right;\n            bottomRightY = anchorRect.top;\n          }\n        } else {\n          if (anchorRect.left < popupRect.left) {\n            topLeftX = anchorRect.right;\n            topLeftY = anchorRect.top;\n            topRightX = popupRect.left;\n            topRightY = popupRect.top;\n            bottomLeftX = anchorRect.right;\n            bottomLeftY = anchorRect.bottom;\n            bottomRightX = popupRect.left;\n            bottomRightY = popupRect.bottom;\n          } else {\n            topLeftX = popupRect.right;\n            topLeftY = popupRect.top;\n            topRightX = anchorRect.left;\n            topRightY = anchorRect.top;\n            bottomLeftX = popupRect.right;\n            bottomLeftY = popupRect.bottom;\n            bottomRightX = anchorRect.left;\n            bottomRightY = anchorRect.bottom;\n          }\n        }\n        this.style.setProperty(\"--hover-bridge-top-left-x\", `${topLeftX}px`);\n        this.style.setProperty(\"--hover-bridge-top-left-y\", `${topLeftY}px`);\n        this.style.setProperty(\"--hover-bridge-top-right-x\", `${topRightX}px`);\n        this.style.setProperty(\"--hover-bridge-top-right-y\", `${topRightY}px`);\n        this.style.setProperty(\"--hover-bridge-bottom-left-x\", `${bottomLeftX}px`);\n        this.style.setProperty(\"--hover-bridge-bottom-left-y\", `${bottomLeftY}px`);\n        this.style.setProperty(\"--hover-bridge-bottom-right-x\", `${bottomRightX}px`);\n        this.style.setProperty(\"--hover-bridge-bottom-right-y\", `${bottomRightY}px`);\n      }\n    };\n  }\n  async connectedCallback() {\n    super.connectedCallback();\n    await this.updateComplete;\n    this.start();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.stop();\n  }\n  async updated(changedProps) {\n    super.updated(changedProps);\n    if (changedProps.has(\"active\")) {\n      if (this.active) {\n        this.start();\n      } else {\n        this.stop();\n      }\n    }\n    if (changedProps.has(\"anchor\")) {\n      this.handleAnchorChange();\n    }\n    if (this.active) {\n      await this.updateComplete;\n      this.reposition();\n    }\n  }\n  async handleAnchorChange() {\n    await this.stop();\n    if (this.anchor && typeof this.anchor === \"string\") {\n      const root = this.getRootNode();\n      this.anchorEl = root.getElementById(this.anchor);\n    } else if (this.anchor instanceof Element || isVirtualElement(this.anchor)) {\n      this.anchorEl = this.anchor;\n    } else {\n      this.anchorEl = this.querySelector('[slot=\"anchor\"]');\n    }\n    if (this.anchorEl instanceof HTMLSlotElement) {\n      this.anchorEl = this.anchorEl.assignedElements({ flatten: true })[0];\n    }\n    if (this.anchorEl) {\n      this.start();\n    }\n  }\n  start() {\n    if (!this.anchorEl) {\n      return;\n    }\n    this.cleanup = autoUpdate(this.anchorEl, this.popup, () => {\n      this.reposition();\n    });\n  }\n  async stop() {\n    return new Promise((resolve) => {\n      if (this.cleanup) {\n        this.cleanup();\n        this.cleanup = void 0;\n        this.removeAttribute(\"data-current-placement\");\n        this.style.removeProperty(\"--auto-size-available-width\");\n        this.style.removeProperty(\"--auto-size-available-height\");\n        requestAnimationFrame(() => resolve());\n      } else {\n        resolve();\n      }\n    });\n  }\n  /** Forces the popup to recalculate and reposition itself. */\n  reposition() {\n    if (!this.active || !this.anchorEl) {\n      return;\n    }\n    const middleware = [\n      // The offset middleware goes first\n      offset({ mainAxis: this.distance, crossAxis: this.skidding })\n    ];\n    if (this.sync) {\n      middleware.push(\n        size({\n          apply: ({ rects }) => {\n            const syncWidth = this.sync === \"width\" || this.sync === \"both\";\n            const syncHeight = this.sync === \"height\" || this.sync === \"both\";\n            this.popup.style.width = syncWidth ? `${rects.reference.width}px` : \"\";\n            this.popup.style.height = syncHeight ? `${rects.reference.height}px` : \"\";\n          }\n        })\n      );\n    } else {\n      this.popup.style.width = \"\";\n      this.popup.style.height = \"\";\n    }\n    if (this.flip) {\n      middleware.push(\n        flip({\n          boundary: this.flipBoundary,\n          // @ts-expect-error - We're converting a string attribute to an array here\n          fallbackPlacements: this.flipFallbackPlacements,\n          fallbackStrategy: this.flipFallbackStrategy === \"best-fit\" ? \"bestFit\" : \"initialPlacement\",\n          padding: this.flipPadding\n        })\n      );\n    }\n    if (this.shift) {\n      middleware.push(\n        shift({\n          boundary: this.shiftBoundary,\n          padding: this.shiftPadding\n        })\n      );\n    }\n    if (this.autoSize) {\n      middleware.push(\n        size({\n          boundary: this.autoSizeBoundary,\n          padding: this.autoSizePadding,\n          apply: ({ availableWidth, availableHeight }) => {\n            if (this.autoSize === \"vertical\" || this.autoSize === \"both\") {\n              this.style.setProperty(\"--auto-size-available-height\", `${availableHeight}px`);\n            } else {\n              this.style.removeProperty(\"--auto-size-available-height\");\n            }\n            if (this.autoSize === \"horizontal\" || this.autoSize === \"both\") {\n              this.style.setProperty(\"--auto-size-available-width\", `${availableWidth}px`);\n            } else {\n              this.style.removeProperty(\"--auto-size-available-width\");\n            }\n          }\n        })\n      );\n    } else {\n      this.style.removeProperty(\"--auto-size-available-width\");\n      this.style.removeProperty(\"--auto-size-available-height\");\n    }\n    if (this.arrow) {\n      middleware.push(\n        arrow({\n          element: this.arrowEl,\n          padding: this.arrowPadding\n        })\n      );\n    }\n    const getOffsetParent = this.strategy === \"absolute\" ? (element) => platform.getOffsetParent(element, offsetParent) : platform.getOffsetParent;\n    computePosition(this.anchorEl, this.popup, {\n      placement: this.placement,\n      middleware,\n      strategy: this.strategy,\n      platform: __spreadProps(__spreadValues({}, platform), {\n        getOffsetParent\n      })\n    }).then(({ x, y, middlewareData, placement }) => {\n      const isRtl = getComputedStyle(this).direction === \"rtl\";\n      const staticSide = { top: \"bottom\", right: \"left\", bottom: \"top\", left: \"right\" }[placement.split(\"-\")[0]];\n      this.setAttribute(\"data-current-placement\", placement);\n      Object.assign(this.popup.style, {\n        left: `${x}px`,\n        top: `${y}px`\n      });\n      if (this.arrow) {\n        const arrowX = middlewareData.arrow.x;\n        const arrowY = middlewareData.arrow.y;\n        let top = \"\";\n        let right = \"\";\n        let bottom = \"\";\n        let left = \"\";\n        if (this.arrowPlacement === \"start\") {\n          const value = typeof arrowX === \"number\" ? `calc(${this.arrowPadding}px - var(--arrow-padding-offset))` : \"\";\n          top = typeof arrowY === \"number\" ? `calc(${this.arrowPadding}px - var(--arrow-padding-offset))` : \"\";\n          right = isRtl ? value : \"\";\n          left = isRtl ? \"\" : value;\n        } else if (this.arrowPlacement === \"end\") {\n          const value = typeof arrowX === \"number\" ? `calc(${this.arrowPadding}px - var(--arrow-padding-offset))` : \"\";\n          right = isRtl ? \"\" : value;\n          left = isRtl ? value : \"\";\n          bottom = typeof arrowY === \"number\" ? `calc(${this.arrowPadding}px - var(--arrow-padding-offset))` : \"\";\n        } else if (this.arrowPlacement === \"center\") {\n          left = typeof arrowX === \"number\" ? `calc(50% - var(--arrow-size-diagonal))` : \"\";\n          top = typeof arrowY === \"number\" ? `calc(50% - var(--arrow-size-diagonal))` : \"\";\n        } else {\n          left = typeof arrowX === \"number\" ? `${arrowX}px` : \"\";\n          top = typeof arrowY === \"number\" ? `${arrowY}px` : \"\";\n        }\n        Object.assign(this.arrowEl.style, {\n          top,\n          right,\n          bottom,\n          left,\n          [staticSide]: \"calc(var(--arrow-size-diagonal) * -1)\"\n        });\n      }\n    });\n    requestAnimationFrame(() => this.updateHoverBridge());\n    this.emit(\"sl-reposition\");\n  }\n  render() {\n    return html`\n      <slot name=\"anchor\" @slotchange=${this.handleAnchorChange}></slot>\n\n      <span\n        part=\"hover-bridge\"\n        class=${classMap({\n      \"popup-hover-bridge\": true,\n      \"popup-hover-bridge--visible\": this.hoverBridge && this.active\n    })}\n      ></span>\n\n      <div\n        part=\"popup\"\n        class=${classMap({\n      popup: true,\n      \"popup--active\": this.active,\n      \"popup--fixed\": this.strategy === \"fixed\",\n      \"popup--has-arrow\": this.arrow\n    })}\n      >\n        <slot></slot>\n        ${this.arrow ? html`<div part=\"arrow\" class=\"popup__arrow\" role=\"presentation\"></div>` : \"\"}\n      </div>\n    `;\n  }\n};\nSlPopup.styles = [component_styles_default, popup_styles_default];\n__decorateClass([\n  query(\".popup\")\n], SlPopup.prototype, \"popup\", 2);\n__decorateClass([\n  query(\".popup__arrow\")\n], SlPopup.prototype, \"arrowEl\", 2);\n__decorateClass([\n  property()\n], SlPopup.prototype, \"anchor\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlPopup.prototype, \"active\", 2);\n__decorateClass([\n  property({ reflect: true })\n], SlPopup.prototype, \"placement\", 2);\n__decorateClass([\n  property({ reflect: true })\n], SlPopup.prototype, \"strategy\", 2);\n__decorateClass([\n  property({ type: Number })\n], SlPopup.prototype, \"distance\", 2);\n__decorateClass([\n  property({ type: Number })\n], SlPopup.prototype, \"skidding\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlPopup.prototype, \"arrow\", 2);\n__decorateClass([\n  property({ attribute: \"arrow-placement\" })\n], SlPopup.prototype, \"arrowPlacement\", 2);\n__decorateClass([\n  property({ attribute: \"arrow-padding\", type: Number })\n], SlPopup.prototype, \"arrowPadding\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlPopup.prototype, \"flip\", 2);\n__decorateClass([\n  property({\n    attribute: \"flip-fallback-placements\",\n    converter: {\n      fromAttribute: (value) => {\n        return value.split(\" \").map((p) => p.trim()).filter((p) => p !== \"\");\n      },\n      toAttribute: (value) => {\n        return value.join(\" \");\n      }\n    }\n  })\n], SlPopup.prototype, \"flipFallbackPlacements\", 2);\n__decorateClass([\n  property({ attribute: \"flip-fallback-strategy\" })\n], SlPopup.prototype, \"flipFallbackStrategy\", 2);\n__decorateClass([\n  property({ type: Object })\n], SlPopup.prototype, \"flipBoundary\", 2);\n__decorateClass([\n  property({ attribute: \"flip-padding\", type: Number })\n], SlPopup.prototype, \"flipPadding\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlPopup.prototype, \"shift\", 2);\n__decorateClass([\n  property({ type: Object })\n], SlPopup.prototype, \"shiftBoundary\", 2);\n__decorateClass([\n  property({ attribute: \"shift-padding\", type: Number })\n], SlPopup.prototype, \"shiftPadding\", 2);\n__decorateClass([\n  property({ attribute: \"auto-size\" })\n], SlPopup.prototype, \"autoSize\", 2);\n__decorateClass([\n  property()\n], SlPopup.prototype, \"sync\", 2);\n__decorateClass([\n  property({ type: Object })\n], SlPopup.prototype, \"autoSizeBoundary\", 2);\n__decorateClass([\n  property({ attribute: \"auto-size-padding\", type: Number })\n], SlPopup.prototype, \"autoSizePadding\", 2);\n__decorateClass([\n  property({ attribute: \"hover-bridge\", type: Boolean })\n], SlPopup.prototype, \"hoverBridge\", 2);\n\nexport {\n  SlPopup\n};\n"],"names":["popup_styles_default","Math","min","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","param","placement","split","axis","getAxisLength","includes","getAlignmentAxis","replace","alignment","getOppositePlacement","side","padding","expandPaddingObject","rect","width","height","computeCoordsFromPlacement","_ref","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","offset","name","fn","diffCoords","isRTL","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","data","size","apply","detectOverflowOptions","overflow","isYAxis","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","middlewareData","shift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","getDimensions","reset","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","test","isTableElement","isContainingBlock","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","filter","some","willChange","contain","CSS","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","concat","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","getTrueOffsetParent","polyfill","currentNode","getContainingBlock","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","getOffsetParentFn","getDimensionsFn","getClientRects","Array","from","t","e","o","tagName","r","SlPopup","constructor","super","arguments","active","distance","skidding","arrow","arrowPlacement","arrowPadding","flip","flipFallbackPlacements","flipFallbackStrategy","flipPadding","shiftPadding","autoSizePadding","hoverBridge","updateHoverBridge","anchorEl","anchorRect","popupRect","popup","topLeftX","topLeftY","topRightX","topRightY","bottomLeftX","bottomLeftY","bottomRightX","bottomRightY","style","setProperty","connectedCallback","updateComplete","disconnectedCallback","stop","updated","changedProps","has","handleAnchorChange","reposition","anchor","root","getRootNode","getElementById","querySelector","HTMLSlotElement","assignedElements","flatten","cleanup","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","prevRefRect","frameLoop","nextRefRect","removeEventListener","autoUpdate","Promise","resolve","removeAttribute","removeProperty","middleware","sync","push","syncWidth","syncHeight","_middlewareData$arrow","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","alignmentOffset","isBasePlacement","oppositePlacement","getExpandedPlacements","isStart","lr","rl","tb","bt","getSideList","map","getOppositeAxisPlacements","placements","overflows","overflowsData","sides","length","mainAlignmentSide","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","resetPlacement","d","sort","a","b","_overflowsData$map$so","acc","flipBoundary","shiftBoundary","limiter","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","autoSize","autoSizeBoundary","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","arrowEl","Map","mergedOptions","platformWithCache","config","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition","then","isRtl","staticSide","setAttribute","Object","assign","arrowX","arrowY","emit","render","styles","prototype","type","reflect","attribute","converter","fromAttribute","p","trim","toAttribute","join"],"sourceRoot":""}
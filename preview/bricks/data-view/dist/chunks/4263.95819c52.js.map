{"version":3,"file":"chunks/4263.95819c52.js","mappings":"qSAOA,MAAM,cAAEA,EAAa,SAAEC,IAAaC,EAAAA,EAAAA,oBAAmB,IAAAC,EAAA,IAAAC,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAYvD,MAAAG,UAG8BC,EAAAA,iBAAiDC,WAAAA,GAAA,SAAAC,YAC7EC,EAAAA,EAAAA,GAAA,KAAAR,EAAAS,EAAA,KAIwC,YAExCD,EAAAA,EAAAA,GAAA,KAAAN,GAAAQ,EAAA,MAAAC,EAAA,SAMAH,EAAAA,EAAAA,GAAA,KAAAL,GAAAS,EAAA,MAAAC,EAAA,QAAAC,EAAA,gBARSC,GAAM,OAAAC,EAAAA,EAAAA,GAAAhB,EAAA,gBAANe,CAAME,IAAAC,EAAAA,EAAAA,GAAAlB,EAAA,KAAAiB,EAAA,cAMNE,GAAS,OAAAH,EAAAA,EAAAA,GAAAd,EAAA,mBAATiB,CAASF,IAAAC,EAAAA,EAAAA,GAAAhB,EAAA,KAAAe,EAAA,gBAMTG,GAAW,OAAAJ,EAAAA,EAAAA,GAAAb,EAAA,qBAAXiB,CAAWH,IAAAC,EAAAA,EAAAA,GAAAf,EAAA,KAAAc,EAAA,CAEpBI,MAAAA,GACE,OACEC,IAAAA,cAACC,EAAsB,CACrBR,OAAQS,KAAKT,OACbI,UAAWK,KAAKL,UAChBC,YAAaI,KAAKJ,aAGxB,EAGF,SAASG,EACPE,GAEA,MAAM,OAAEV,EAAM,UAAEI,EAAS,YAAEC,GAAgBK,EAE3C,OACEH,IAAAA,cAAA,OACEI,UAAWC,IACT,sBACAZ,GAAU,UAAUA,MAGtBO,IAAAA,cAAA,OAAKI,UAAU,aACbJ,IAAAA,cAAA,OAAKI,UAAU,4BACbJ,IAAAA,cAAA,OAAKI,UAAU,mBAAmBP,GAClCG,IAAAA,cAAA,OAAKI,UAAU,yBAAyBN,KAKlD,CAtBCQ,EAAAxB,IAAAyB,GAAApB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAgB,GAAA/B,EAAAgC,KAAAC,EAAAA,EAAAA,GAAAJ,EAAA,CA/BAhC,EAAc,+BAAgC,CAC7CqC,WAAY,CAACC,EAAAA,EAAoBC,EAAAA,MACjC,EAKCtC,IAAU,aAMVA,IAAU,gBAMVA,IAAU,2BAhBiBQ,EAAAA,mBAAgB0B,G,kKCf9C,MAAM,cAAEnC,EAAa,SAAEC,IAAaC,EAAAA,EAAAA,oBAAmB,IAAAsC,EAAA,IAAApC,EAAA,IAAAC,QAUvD,MAAAoC,UAIUhC,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,EAAAsC,EAAA,KAOyC,SAAMC,EAAA,oBAAtCC,GAAU,OAAAxB,EAAAA,EAAAA,GAAAhB,EAAA,oBAAVwC,CAAUvB,IAAAC,EAAAA,EAAAA,GAAAlB,EAAA,KAAAiB,EAAA,CAEnBI,MAAAA,GACE,OAAOC,IAAAA,cAACmB,EAA0B,CAACD,WAAYhB,KAAKgB,YACtD,EAGF,SAASC,EACPhB,GAEA,MAAM,WAAEe,GAAef,EAEvB,OACEH,IAAAA,cAAA,OACEI,UAAWC,IACT,gBACAa,GAAc,eAAeA,MAIrC,CAfCE,EAAAL,IAAAR,GAAAS,EAAAC,GAAAT,GAAAM,EAAAL,KAAAC,EAAAA,EAAAA,GAAAU,EAAA,CAnBA9C,EAAc,mCAAoC,CACjDqC,WAAY,CAACC,EAAAA,EAAoBC,EAAAA,MACjC,EAWCtC,IAAU,0BATHQ,EAAAA,mBAAgB0B,G,+MCX1B,MAAM,cAAEnC,EAAa,SAAEC,EAAQ,MAAE8C,IAAU7C,EAAAA,EAAAA,oBACrC8C,GAAcC,EAAAA,EAAAA,WAAyC,WAAW,IAAAC,EAAA,IAAA9C,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA8C,EAAA,IAAA9C,QAAA+C,EAAA,IAAA/C,QAAAgD,EAAA,IAAAhD,QAAAiD,EAAA,IAAAC,QAmBxE,MAAAC,UAGyB/C,EAAAA,iBAA4CC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,EAAAA,GAAA,KAAAH,IACnE1C,EAAAA,EAAAA,GAAA,KAAAR,EAAAS,EAAA,KAS8B,YAE9BD,EAAAA,EAAAA,GAAA,KAAAN,GAAAQ,EAAA,MAAAC,EAAA,SAWAH,EAAAA,EAAAA,GAAA,KAAAL,GAAAS,EAAA,MAAA0C,EAAA,SAWA9C,EAAAA,EAAAA,GAAA,KAAAuC,GAAAQ,EAAA,MAAAC,EAAA,SAWAhD,EAAAA,EAAAA,GAAA,KAAAwC,GAAAS,EAAA,MAAAC,EAAA,SAWAlD,EAAAA,EAAAA,GAAA,KAAAyC,GAAAU,EAAA,MAAAC,EAAA,SAAAC,EAAAA,EAAAA,GAAA,oBAAAC,EAAA,MAOc,MACZC,EAAAA,EAAAA,GAAAb,EAAA1B,KAAKwC,GAAcC,MAAM,GAC1B,WAvDQlD,GAAM,OAAAC,EAAAA,EAAAA,GAAAhB,EAAA,gBAANe,CAAME,IAAAC,EAAAA,EAAAA,GAAAlB,EAAA,KAAAiB,EAAA,cAWNE,GAAS,OAAAH,EAAAA,EAAAA,GAAAd,EAAA,mBAATiB,CAASF,IAAAC,EAAAA,EAAAA,GAAAhB,EAAA,KAAAe,EAAA,aAWTiD,GAAQ,OAAAlD,EAAAA,EAAAA,GAAAb,EAAA,kBAAR+D,CAAQjD,IAAAC,EAAAA,EAAAA,GAAAf,EAAA,KAAAc,EAAA,eAWRkD,GAAU,OAAAnD,EAAAA,EAAAA,GAAA+B,EAAA,oBAAVoB,CAAUlD,IAAAC,EAAAA,EAAAA,GAAA6B,EAAA,KAAA9B,EAAA,mBAWVmD,GAAc,OAAApD,EAAAA,EAAAA,GAAAgC,EAAA,wBAAdoB,CAAcnD,IAAAC,EAAAA,EAAAA,GAAA8B,EAAA,KAAA/B,EAAA,CAavBI,MAAAA,GACE,OACEC,IAAAA,cAAC+C,EAAmB,CAClBF,WAAY3C,KAAK2C,WACjBpD,OAAQS,KAAKT,OACbI,UAAWK,KAAKL,UAChB+C,SAAU1C,KAAK0C,SACfI,YAAa9C,KAAK8C,YAClBF,eAAgB5C,KAAK4C,gBAG3B,EAGK,SAASC,EACd5C,GAEA,MAAM,SAEJyC,EAAQ,UACR/C,EAAS,WACTgD,EAAU,YACVG,EAAW,eACXF,GACE3C,EACE8C,GAAiBC,EAAAA,EAAAA,UAMvB,OAJAC,EAAAA,EAAAA,YAAU,KAAM,IAAAC,EAAAC,EACQ,QAAtBD,EAAAH,EAAeK,eAAO,IAAAF,GAAU,QAAVC,EAAtBD,EAAwBG,gBAAQ,IAAAF,GAAhCA,EAAAG,KAAAJ,EAAmC,EAAG,EAAE,GACvC,CAACR,IAGF5C,IAAAA,cAAA,OAAKI,UAAU,UAAUqD,MAAOX,GAC9B9C,IAAAA,cAAA,OAAKI,UAAU,WAAWsD,MAAO7D,GAC9BA,IAEF+C,aAAQ,EAARA,EAAUe,SACT3D,IAAAA,cAAA,OAAKI,UAAU,eAAewD,IAAKX,GAChCL,EAASiB,KAAI,CAACC,EAAMC,IACnB/D,IAAAA,cAAA,OAAKgE,IAAKD,EAAO3D,UAAU,oBACzBJ,IAAAA,cAAA,OAAKI,UAAU,WAAW0D,EAAKE,KAC/BhE,IAAAA,cAAA,OAAKI,UAAU,aAAa0D,EAAKG,WAKxCpB,GACC7C,IAAAA,cAAA,OAAKI,UAAU,gBAAgB8D,QAASlB,GACtChD,IAAAA,cAACsB,EAAW,CAAC6C,IAAI,OAAOC,KAAK,OAAOC,MAAM,aAC1CrE,IAAAA,cAAA,QAAMI,UAAU,cAAcyC,IAKxC,CA1CCyB,EAAAxC,IAAAvB,GAAApB,EAAAC,EAAAC,EAAAC,EAAA0C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAI,EAAA6B,EAAA/B,GAAAhC,GAAAgB,EAAAf,KAAAC,EAAAA,EAAAA,GAAA4D,EAAA,CAlFAhG,EAAc,iCAAkC,CAC/CqC,WAAY,CAACC,EAAAA,EAAoBC,EAAAA,MACjC,EAUCtC,EAAS,CAAEiG,WAAW,IAAQ,aAW9BjG,IAAU,gBAWVA,EAAS,CAAEiG,WAAW,IAAQ,eAW9BjG,IAAU,iBAWVA,EAAS,CAAEiG,WAAW,IAAQ,qBAO9BnD,EAAM,CAAEoD,KAAM,iBAAiB,iBAAAC,IAAAhF,EAAAA,EAAAA,GAAAiC,EAAA+C,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA+B,EAAA+C,EAAA/E,KAAA,GAAAgF,GAAA/C,EAAAgD,KAAAC,EAAAA,EAAAA,GAAAF,KA5DT5F,EAAAA,mBAAgB0B,G,8JC5BzC,MAAM,cAAEnC,EAAa,SAAEC,IAAaC,EAAAA,EAAAA,oBAAmB,IAAAsG,EAAA,IAAApG,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA8C,EAAA,IAAA9C,QAAA+C,EAAA,IAAA/C,QAavD,MAAAoG,UAGyBhG,EAAAA,iBAA4CC,WAAAA,GAAA,SAAAC,YACnEC,EAAAA,EAAAA,GAAA,KAAAR,EAAAsG,EAAA,QAQA9F,EAAAA,EAAAA,GAAA,KAAAN,GAAAqG,EAAA,MAAAC,EAAA,SAOAhG,EAAAA,EAAAA,GAAA,KAAAL,GAAAsG,EAAA,MAAA5F,EAAA,SAQAL,EAAAA,EAAAA,GAAA,KAAAuC,GAAAjC,EAAA,MAAA4F,EAAA,SAQAlG,EAAAA,EAAAA,GAAA,KAAAwC,GAAA2D,EAAA,MAAAC,EAAA,QAAAC,EAAA,gBAzBSC,GAAM,OAAA9F,EAAAA,EAAAA,GAAAhB,EAAA,gBAAN8G,CAAM7F,IAAAC,EAAAA,EAAAA,GAAAlB,EAAA,KAAAiB,EAAA,gBAQN8F,GAAW,OAAA/F,EAAAA,EAAAA,GAAAd,EAAA,qBAAX6G,CAAW9F,IAAAC,EAAAA,EAAAA,GAAAhB,EAAA,KAAAe,EAAA,gBAOXG,GAAW,OAAAJ,EAAAA,EAAAA,GAAAb,EAAA,qBAAXiB,CAAWH,IAAAC,EAAAA,EAAAA,GAAAf,EAAA,KAAAc,EAAA,UAQXsE,GAAK,OAAAvE,EAAAA,EAAAA,GAAA+B,EAAA,eAALwC,CAAKtE,IAAAC,EAAAA,EAAAA,GAAA6B,EAAA,KAAA9B,EAAA,aAQL+F,GAAQ,OAAAhG,EAAAA,EAAAA,GAAAgC,EAAA,kBAARgE,CAAQ/F,IAAAC,EAAAA,EAAAA,GAAA8B,EAAA,KAAA/B,EAAA,CAEjBI,MAAAA,GACE,OACEC,IAAAA,cAAC2F,EAAmB,CAClB1B,MAAO/D,KAAK+D,MACZuB,OAAQtF,KAAKsF,OACbC,YAAavF,KAAKuF,YAClB3F,YAAaI,KAAKJ,YAClB4F,SAAUxF,KAAKwF,UAGrB,EAGK,SAASC,EAAoBxF,GAClC,MAAM,MAAE8D,EAAK,OAAEuB,EAAM,YAAEC,EAAc,GAAE,YAAE3F,EAAW,SAAE4F,GAAavF,GAC5DyF,EAAGC,IAAQC,EAAAA,EAAAA,WAAkBN,IAC7BO,EAAGC,IAAQF,EAAAA,EAAAA,UAAiB,GACnC,SAASG,EAAYC,EAAaC,GAChC,GAAY,IAARD,EACF,MAAO,CAAEN,EAAGO,EAAGJ,EAAG,GAEpB,GAAY,MAARG,EACF,MAAO,CAAEN,GAAIO,EAAGJ,EAAG,GAErB,MAAMK,EAAOC,KAAKC,IAAK,EAAID,KAAKE,GAAKL,EAAO,KAC1CH,EAAIM,KAAKG,IAAIH,KAAKI,KAAK,GAAKL,EAAOA,EAAO,IAAMD,EAAIC,GAEtD,MAAO,CAAER,EADHG,EAAIK,EACEL,IACd,CAEA,MAAMW,GAAOC,EAAAA,EAAAA,UAAQ,KACnB,MACEC,EAAQ,IAAe,IAAR3C,EADL,IAEZ,IAAI4C,EAAY,IAGhB,MAAMC,EAAQC,OAAOC,aAAY,KAC3BH,GAAaD,GACfG,OAAOE,cAAcH,GAEvB,MAAMI,EAAWjB,EAAYY,EAAWrB,GACxCK,EAAKqB,EAAStB,GACdI,EAAKkB,EAASnB,GACdc,GAAa,CAAC,GACb,IAEH,IAAIM,EAAQ,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMlB,EAAMkB,GAAK,IAAM,GACjBC,EAAYpB,EAAYC,EAAKV,EAAS,IACtC8B,EAAYrB,EAAYC,EAAKV,EAAS,IAC5C2B,GAAS,IAAIE,EAAUzB,MAAMyB,EAAUtB,MACrCuB,EAAU1B,MACP0B,EAAUvB,IACjB,CACA,OAAOoB,CAAK,GACX,CAAClD,EAAOuB,IACL+B,GAAYZ,EAAAA,EAAAA,UAAQ,KAExB,MAAMa,EAAwB,GAAfhC,EAAS,IAClBiC,EAASjC,EAAS,GAClBkC,EAAUrB,KAAKsB,MAAMlC,EAAc,GAAK,EAC9C,MAAO,CACLG,EAAG4B,EAAQ,EACXzB,EAAGP,EAAS,GACZiC,OAAQA,EACRD,QACAE,UACD,GACA,CAAClC,IACEoC,EAAoBpC,EAASC,EAAc,EACjD,OACEzF,IAAAA,cAAA,OAAKI,UAAU,qBAEbJ,IAAAA,cAAA,OACEwH,MAAO,GAAGD,EAAUC,UACpBC,OAAQ,GAAGF,EAAUE,WACrBI,QAAQ,MACRC,MAAM,6BACNC,QAAS,OAAOR,EAAUC,SACxBD,EAAUE,OAASF,EAAUG,WAG/B1H,IAAAA,cAAA,YACEA,IAAAA,cAAA,kBAAgBgI,GAAG,kBACjBhI,IAAAA,cAAA,QAAMiI,OAAO,KAAKC,UAAU,uBAC5BlI,IAAAA,cAAA,QAAMiI,OAAO,OAAOC,UAAU,6BAEhClI,IAAAA,cAAA,kBAAgBgI,GAAG,gBACjBhI,IAAAA,cAAA,QAAMiI,OAAO,KAAKC,UAAU,YAC5BlI,IAAAA,cAAA,QAAMiI,OAAO,OAAOC,UAAU,aAEhClI,IAAAA,cAAA,kBAAgBgI,GAAG,uBACjBhI,IAAAA,cAAA,QAAMiI,OAAO,KAAKC,UAAU,6BAC5BlI,IAAAA,cAAA,QAAMiI,OAAO,OAAOC,UAAU,iBAEhClI,IAAAA,cAAA,UAAQgI,GAAG,UACThI,IAAAA,cAAA,gBAAcmI,GAAG,IAAIC,GAAG,IAAIC,aAAa,IAAIC,WAAW,cAI5DtI,IAAAA,cAAA,QACEuH,UAAW,aAAaA,EAAU3B,MAAM2B,EAAUxB,KAClDwC,EAAG,KAAK/C,SAAcA,KAAUA,eAAoBA,MACpDC,YAAaA,EACb+C,OAAO,8BACPC,KAAK,gBAGPzI,IAAAA,cAAA,QACEuH,UAAW,aAAaA,EAAU3B,MAAM2B,EAAUxB,KAClDwC,EAAG,KAAKX,SAAyBA,KAAqBA,eAA+BA,MACrFnC,YAAY,MACZ+C,OAAO,4BACPC,KAAK,gBAGPzI,IAAAA,cAAA,QACEuH,UAAW,aAAaA,EAAU3B,MAAM2B,EAAUxB,KAClDwC,EAAG,KAAK/C,SAAcA,KAAUA,eAAoBI,MAAMG,IAC1DN,YAAaA,EACb+C,OAAO,uBACPC,KAAK,gBAGPzI,IAAAA,cAAA,UACEuH,UAAW,aAAaA,EAAU3B,MAAM2B,EAAUxB,KAClD0C,KAAK,OACLC,GAAI9C,EACJ+C,IAAK5C,EACLI,EAAGoB,EAAUG,UAEf1H,IAAAA,cAAA,UACEuH,UAAW,aAAaA,EAAU3B,MAAM2B,EAAUxB,KAClD0C,KAAK,UACLC,GAAI9C,EACJ+C,IAAK5C,EACLI,EAAGoB,EAAUG,QAAU,IAGzB1H,IAAAA,cAAA,QACEuH,UAAW,aAAaA,EAAU3B,MAAM2B,EAAUxB,KAClDwC,EAAG7B,EACH8B,OAAO,YAGTxI,IAAAA,cAAA,QACE4F,EAAE,IACFG,EAAE,MACFwB,UAAW,aAAaA,EAAU3B,MAAM2B,EAAUxB,KAClDL,SAAUA,GAAY,iCACtBkD,WAAW,SACXC,WAAW,yBACXJ,KAAK,2BACLK,OAAO,gBAEN,GAAG7E,MAGNjE,IAAAA,cAAA,QACE4F,EAAE,IACFG,EAAE,KACFwB,UAAW,aAAaA,EAAU3B,MAAM2B,EAAUxB,KAClDL,SAAS,+BACTkD,WAAW,SACXH,KAAK,8BACLM,QAAQ,QAEPjJ,IAGLE,IAAAA,cAAA,aAGN,CAnKCgJ,EAAAjE,IAAAxE,GAAAyE,EAAAC,EAAAC,EAAAC,EAAA5F,EAAAC,EAAA4F,EAAAC,EAAAC,EAAAC,GAAA/E,GAAAsE,EAAArE,KAAAC,EAAAA,EAAAA,GAAAsI,EAAA,CAtDA1K,EAAc,wBAAyB,CACtCqC,WAAY,CAACC,EAAAA,EAAoBC,EAAAA,MACjC,EAOCtC,EAAS,CAAEkG,KAAMwE,SAAS,aAQ1B1K,EAAS,CAAEkG,KAAMwE,SAAS,kBAO1B1K,IAAU,kBAQVA,EAAS,CAAEkG,KAAMwE,SAAS,YAQ1B1K,EAAS,CAAEkG,KAAMwE,SAAS,wBArCJlK,EAAAA,mBAAgB0B,I,2CCfzC,MAAQnC,cAAa,EAAEC,SAAQA,IAAKC,EAAAA,EAAAA,oBAAmB,IAAA0K,EAAA,IAAAxK,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAevD,MAAAwK,WAIUpK,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,EAAA0K,EAAA,MAS6B,KAE7BlK,EAAAA,EAAAA,GAAA,KAAAN,GAAAyK,EAAA,MAAAC,EAAA,MAS8B,MAE9BpK,EAAAA,EAAAA,GAAA,KAAAL,GAAA0K,EAAA,MAAAC,EAAA,SASAtK,EAAAA,EAAAA,GAAA,KAAAuC,IAAAgI,EAAA,MAAAC,EAAA,SAWAxK,EAAAA,EAAAA,GAAA,KAAAwC,IAAAiI,EAAA,MAAAC,EAAA,QAAAC,EAAA,2BAjCSC,GAAiB,OAAApK,EAAAA,EAAAA,GAAAhB,EAAA,2BAAjBoL,CAAiBnK,IAAAC,EAAAA,EAAAA,GAAAlB,EAAA,KAAAiB,EAAA,uBAWjBoK,GAAkB,OAAArK,EAAAA,EAAAA,GAAAd,EAAA,4BAAlBmL,CAAkBpK,IAAAC,EAAAA,EAAAA,GAAAhB,EAAA,KAAAe,EAAA,mBASlBqK,GAAc,OAAAtK,EAAAA,EAAAA,GAAAb,EAAA,wBAAdmL,CAAcrK,IAAAC,EAAAA,EAAAA,GAAAf,EAAA,KAAAc,EAAA,mBAWdsK,GAAc,OAAAvK,EAAAA,EAAAA,GAAA+B,GAAA,wBAAdwI,CAActK,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,gBAWduK,GAAW,OAAAxK,EAAAA,EAAAA,GAAAgC,GAAA,qBAAXwI,CAAWvK,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,CAEpBI,MAAAA,GACE,OACEC,IAAAA,cAACmK,GAAgC,CAC/BL,kBAAmB5J,KAAK4J,kBACxBC,mBAAoB7J,KAAK6J,mBACzBC,eAAgB9J,KAAK8J,eACrBC,eAAgB/J,KAAK+J,eACrBC,YAAahK,KAAKgK,aAGxB,EAGF,SAASC,GACPhK,GAEA,MAAM,kBACJ2J,EAAiB,mBACjBC,EAAkB,eAClBC,EAAc,eACdC,EAAc,YACdC,GACE/J,EAEEiK,GAAiBC,EAAAA,EAAAA,cACrBC,IAAA,IAAC,UACClK,EAAS,YACT8J,GAIDI,EAAA,OACCtK,IAAAA,cAAA,OAAKI,UAAWA,GACdJ,IAAAA,cAAA,OAAKI,UAAU,2BACbJ,IAAAA,cAAA,OAAKI,UAAU,WACfJ,IAAAA,cAAA,OAAKI,UAAU,eACfJ,IAAAA,cAAA,OACEI,UAAU,aACVqD,MAAO,CAAE8G,gBAAiBL,MAG1B,GAER,IAGF,OACElK,IAAAA,cAAA,OAAKI,UAAU,YACX0J,GACA9J,IAAAA,cAACoK,EAAc,CACbhK,UAAU,uBACV8J,YAAaA,KAGfH,GACA/J,IAAAA,cAACoK,EAAc,CACbhK,UAAU,wBACV8J,YAAaA,IAGjBlK,IAAAA,cAAA,OACEI,UAAU,cACVqD,MAAO,CACL+G,KAAMV,EAAoB,EAAI,GAC9BW,MAAOV,EAAqB,EAAI,GAChCW,gBAAiB,qDAGbZ,EACI,cACA,yGAIJC,EACI,cACA,4DAKZ/J,IAAAA,cAAA,OACEI,UAAU,gBACVqD,MAAO,CACLkH,eACEb,IAAsBC,EAClB,eACA,kBAGPD,GACC9J,IAAAA,cAAA,WACEA,IAAAA,cAAA,QAAM4K,KAAK,aAGf5K,IAAAA,cAAA,OACEI,UAAU,uBACVqD,MAAO,CACLoH,WAAYf,IAAsBC,EAAqB,EAAI,GAC3De,YAAaf,IAAuBD,EAAoB,EAAI,GAC5DiB,cACEhB,IAAuBD,EAAoB,MAAQ,gBAGvD9J,IAAAA,cAAA,OAAKI,UAAU,aAAaqD,MAAOwG,GAChCD,GAEHhK,IAAAA,cAAA,QAAM4K,KAAK,iBAEZb,GACC/J,IAAAA,cAAA,WACEA,IAAAA,cAAA,QAAM4K,KAAK,cAMvB,CA1GCI,EAAA7B,KAAA5I,GAAA6I,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAArJ,GAAA0I,EAAAzI,KAAAC,EAAAA,EAAAA,GAAAsK,EAAA,CAvEA1M,EAAc,yCAA0C,CACvDqC,WAAY,CAACC,EAAAA,EAAoBC,EAAAA,MACjC,EAWCtC,EAAS,CACRkG,KAAMwG,UACN,wBASD1M,EAAS,CACRkG,KAAMwG,UACN,yBASD1M,IAAU,qBASVA,EAAS,CACRiG,WAAW,IACX,qBASDjG,EAAS,CACRiG,WAAW,IACX,2BArDMzF,EAAAA,mBAAgB0B,I,wDCnB1B,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAA0M,GAAA,IAAAxM,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAevD,MAAAwM,WAIUpM,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,GAAA0M,GAAA,QASAlM,EAAAA,EAAAA,GAAA,KAAAN,IAAAyM,GAAA,MAAA9L,GAAA,SASAL,EAAAA,EAAAA,GAAA,KAAAL,IAAAW,GAAA,MAAA8L,GAAA,SAWApM,EAAAA,EAAAA,GAAA,KAAAuC,IAAA8J,GAAA,MAAAC,GAAA,SAWAtM,EAAAA,EAAAA,GAAA,KAAAwC,IAAA+J,GAAA,MAAAC,GAAA,QAAAC,GAAA,mBAjCSC,GAAS,OAAAlM,EAAAA,EAAAA,GAAAhB,GAAA,mBAATkN,CAASjM,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,gBASTG,GAAW,OAAAJ,EAAAA,EAAAA,GAAAd,GAAA,qBAAXkB,CAAWH,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,oBAWXkM,GAAe,OAAAnM,EAAAA,EAAAA,GAAAb,GAAA,yBAAfgN,CAAelM,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,mBAWfmM,GAAc,OAAApM,EAAAA,EAAAA,GAAA+B,GAAA,wBAAdqK,CAAcnM,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,oBAWdoM,GAAe,OAAArM,EAAAA,EAAAA,GAAAgC,GAAA,yBAAfqK,CAAepM,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,CAExBI,MAAAA,GACE,OACEC,IAAAA,cAACgM,GAA2B,CAC1BJ,UAAW1L,KAAK0L,UAChB9L,YAAaI,KAAKJ,YAClB+L,gBAAiB3L,KAAK2L,gBACtBC,eAAgB5L,KAAK4L,eACrBC,gBAAiB7L,KAAK6L,iBAG5B,EAGF,SAASC,GACP7L,GAEA,MAAM,UACJyL,EAAS,YACT9L,EAAW,gBACX+L,EAAe,eACfC,EAAc,gBACdC,GACE5L,EAEJ,OACEH,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,OAAKI,UAAU,uBAAuBqD,MAAOoI,GAC3C7L,IAAAA,cAAA,OAAKI,UAAU,aAAaqD,MAAOqI,IACnC9L,IAAAA,cAAA,OAAKI,UAAU,cAAcqD,MAAOsI,KAEtC/L,IAAAA,cAAA,OACEwH,MAAM,OACNC,OAAO,OACPM,QAAQ,cACR3H,UAAU,MACV6L,oBAAoB,QAEpBjM,IAAAA,cAAA,YACEA,IAAAA,cAAA,kBAAgBgI,GAAG,YAAYkE,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,MAC1DrM,IAAAA,cAAA,QAAMiI,OAAO,KAAKC,UAAU,qBAAqBoE,YAAY,MAC7DtM,IAAAA,cAAA,QAAMiI,OAAO,MAAMC,UAAU,qBAAqBoE,YAAY,MAC9DtM,IAAAA,cAAA,QAAMiI,OAAO,MAAMC,UAAU,qBAAqBoE,YAAY,MAC9DtM,IAAAA,cAAA,QACEiI,OAAO,OACPC,UAAU,qBACVoE,YAAY,QAIlBtM,IAAAA,cAAA,QACEuI,EAAE,iFACF9C,YAAa,IACb+C,OAAO,kBACPC,KAAK,iBAGTzI,IAAAA,cAAA,OAAKI,UAAU,kBACbJ,IAAAA,cAAA,OAAKI,UAAU,cAAcwL,GAC7B5L,IAAAA,cAAA,OAAKI,UAAU,eAAeN,IAItC,CAnDCyM,GAAApB,KAAA5K,GAAA6K,GAAAC,GAAA9L,GAAAC,GAAA8L,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAAnL,GAAA0K,GAAAzK,MAAAC,EAAAA,EAAAA,GAAA6L,GAAA,CArEAjO,GAAc,oCAAqC,CAClDqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAWCtC,KAAU,gBASVA,KAAU,kBASVA,GAAS,CACRiG,WAAW,IACX,sBASDjG,GAAS,CACRiG,WAAW,IACX,qBASDjG,GAAS,CACRiG,WAAW,IACX,+BAnDMzF,EAAAA,mBAAgB0B,K,qKCT1B,MAAQnC,cAAa,GAAEC,SAAQ,GAAE8C,MAAK,UAAEmL,KAAWhO,EAAAA,EAAAA,oBAC7C8C,IAAcC,EAAAA,EAAAA,WAAyC,WAAW,IAAAkL,GAAA,IAAA/N,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAgD,GAAA,IAAAhD,QAAA+N,GAAA,IAAA/N,QAAAgO,GAAA,IAAAhO,QAAAiO,GAAA,IAAA/K,QAAAgL,GAAA,IAAAlO,QAAAmO,GAAA,IAAAnO,QAAAoO,GAAA,IAAApO,QAAAqO,GAAA,IAAArO,QAAAsO,GAAA,IAAAtO,QA4BxE,MAAAuO,WAGyBnO,EAAAA,iBAA4CC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAA6K,KACnE1N,EAAAA,EAAAA,GAAA,KAAAR,IAAAyO,GAAA,MAAAC,GAAA,SAQAlO,EAAAA,EAAAA,GAAA,KAAAN,IAAAyO,GAAA,MAAAC,GAAA,SAQApO,EAAAA,EAAAA,GAAA,KAAAL,IAAA0O,GAAA,MAAAC,GAAA,SAYAtO,EAAAA,EAAAA,GAAA,KAAAuC,IAAAgM,GAAA,MAAAC,GAAA,SAWAxO,EAAAA,EAAAA,GAAA,KAAAwC,IAAAiM,GAAA,MAAAC,GAAA,SAYA1O,EAAAA,EAAAA,GAAA,KAAAyC,IAAAkM,GAAA,MAAAC,GAAA,SAYA5O,EAAAA,EAAAA,GAAA,KAAAwN,IAAAqB,GAAA,MAAAC,GAAA,SAWA9O,EAAAA,EAAAA,GAAA,KAAAyN,IAAAsB,GAAA,MAAAC,GAAA,SAOAhP,EAAAA,EAAAA,GAAA,KAAA2N,IAAAsB,GAAA,MAAAC,GAAA,SAOAlP,EAAAA,EAAAA,GAAA,KAAA4N,IAAAuB,GAAA,MAAAC,GAAA,SAOApP,EAAAA,EAAAA,GAAA,KAAA6N,IAAgBwB,GAAA,MAAIvK,IAClB9D,KAAKsO,UAAYxK,GACjBvB,EAAAA,GAAAA,GAAAmK,GAAA1M,KAAKuO,IAAgB9L,KAAKqB,EAAI,KAEhC9E,EAAAA,EAAAA,GAAA,KAAA8N,IAAoB,KAClB9M,KAAKwO,SAAU,GACfjM,EAAAA,GAAAA,GAAAmK,GAAA1M,KAAKyO,IAAiBhM,MAAM,KAG9BzD,EAAAA,EAAAA,GAAA,KAAA+N,IAAqB,KACnB/M,KAAKwO,SAAU,GACfjM,EAAAA,GAAAA,GAAAmK,GAAA1M,KAAK0O,IAAkBjM,MAAM,GAC7B,YArGOkM,GAAO,OAAAnP,EAAAA,EAAAA,GAAAhB,GAAA,iBAAPmQ,CAAOlP,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,cAQP6O,GAAS,OAAA9O,EAAAA,EAAAA,GAAAd,GAAA,mBAAT4P,CAAS7O,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,UAYT6H,GAAK,OAAA9H,EAAAA,EAAAA,GAAAb,GAAA,eAAL2I,CAAK7H,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,gBAYLmP,GAAW,OAAApP,EAAAA,EAAAA,GAAA+B,GAAA,qBAAXqN,CAAWnP,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,cAWXoP,GAAS,OAAArP,EAAAA,EAAAA,GAAAgC,GAAA,mBAATqN,CAASpP,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,WAYTqP,GAAM,OAAAtP,EAAAA,EAAAA,GAAAiC,GAAA,gBAANqN,CAAMrP,IAAAC,EAAAA,EAAAA,GAAA+B,GAAA,KAAAhC,EAAA,YAYN+O,GAAO,OAAAhP,EAAAA,EAAAA,GAAAgN,GAAA,iBAAPgC,CAAO/O,IAAAC,EAAAA,EAAAA,GAAA8M,GAAA,KAAA/M,EAAA,CAwChBsP,IAAAA,IACEvP,EAAAA,EAAAA,GAAKsN,GAAL9M,MAAsBsD,KAAtBtD,KACF,CAKAgP,KAAAA,IACExP,EAAAA,EAAAA,GAAKuN,GAAL/M,MAAuBsD,KAAvBtD,KACF,CACAH,MAAAA,GACE,OACEC,IAAAA,cAACmP,GAAmB,CAClBN,QAAS3O,KAAK2O,SAAW,GACzBL,UAAWtO,KAAKsO,UAChBhH,MAAOtH,KAAKsH,MACZuH,UAAW7O,KAAK6O,UAChBD,YAAa5O,KAAK4O,YAClBE,OAAQ9O,KAAK8O,OACbN,QAASxO,KAAKwO,QACdU,SAAS1P,EAAAA,EAAAA,GAAKuN,GAAL/M,MACTmP,QAAQ3P,EAAAA,EAAAA,GAAKsN,GAAL9M,MACRoP,aAAa5P,EAAAA,EAAAA,GAAKqN,GAAL7M,OAGnB,EAEK,SAASiP,GACdhP,GAEA,MAAM,QACJ0O,EAAO,MACPrH,EAAQ,IAAG,YACXsH,EAAW,UACXC,EAAS,OACTC,EAAM,QACNI,EAAO,OACPC,EAAM,YACNC,EAAW,QACXZ,GACEvO,EACEoP,GAAarM,EAAAA,EAAAA,QAAuB,MACpCsM,GAAetM,EAAAA,EAAAA,QAAuB,OACrCsL,EAAWiB,IAAgB3J,EAAAA,EAAAA,UAAS3F,EAAMqO,WAW3CxL,GAAcqH,EAAAA,EAAAA,cACjBhJ,IACuBA,EACnBqO,eACAC,MAAMC,GAAQA,IAAQJ,EAAalM,WAEhCoL,GACFU,GAEJ,GAEF,CAACV,EAASU,KAEZjM,EAAAA,EAAAA,YAAU,KACJ0L,EAAQlL,QAxBSK,KACrB,MAAM6L,EAAeN,EAAWjM,QAChC,GAAIuM,EAAc,CAChB,MAAMC,EAAeD,EAAaE,iBAAiB,QACnDD,SAAAA,EAAcE,SAASC,IACrBA,EAAKC,OAASD,EAAKrF,OAAS5G,CAAG,IAEjCyL,EAAazL,EACf,GAiBEmM,CAAchQ,EAAMqO,WAAaK,EAAQ,GAAG7K,IAC9C,GACC,CAAC7D,EAAMqO,UAAWK,KAErB1L,EAAAA,EAAAA,YAAU,KACRiN,SAASC,iBAAiB,QAASrN,GAC5B,IAAMoN,SAASE,oBAAoB,QAAStN,KAClD,CAACA,IAEJ,MAAMuN,GAAc5J,EAAAA,EAAAA,UAClB,IACE3G,IAAAA,cAAA,OAAKI,UAAU,eACbJ,IAAAA,cAAA,OAAKI,UAAU,aACdyO,EAAQhL,KAAI,CAACC,EAAMC,IAClB/D,IAAAA,cAAA,OACEI,UAAWC,KAAW,eAAgB,CACpCmQ,oBAAqB1M,EAAK2M,QAC1BC,OAAQ5M,EAAKE,MAAQwK,IAEvBxK,IAAK,QAAQD,IACbG,QAASA,IAAMoL,aAAW,EAAXA,EAAcxL,EAAKE,MAEjCF,EAAKM,MAAQpE,IAAAA,cAACsB,GAAgBwC,EAAKM,MACnCN,EAAK2M,SACJzQ,IAAAA,cAAA,OAAKI,UAAU,mBAAmB0D,EAAK2M,cAMjD,CAACjC,EAAWc,EAAaT,IAE3B,OACE7O,IAAAA,cAAA,OACEI,UAAWC,KAAW,gBAAiB,CACrC4O,KAAMP,EACNQ,OAAQR,IAEVjL,MAAO,IACFqL,KACCE,EAAS,CAAEA,UAAW,CAAC,GAE7BpL,IAAK4L,GAELxP,IAAAA,cAAA,QACEI,UAAU,eACV8D,QAASA,IAAOwK,EAAUU,aAAO,EAAPA,IAAcC,aAAM,EAANA,KAExCrP,IAAAA,cAAA,QAAMI,UAAU,eAElBJ,IAAAA,cAAA,OACEI,UAAWC,KAAW,cACtBoD,MAAO,IACFsL,EACHvH,UAGD+I,EACDvQ,IAAAA,cAAA,OAAKI,UAAU,UAAUwD,IAAK2L,GAC3BV,EAAQhL,KAAI,CAACC,EAAMC,IAClB/D,IAAAA,cAAA,QAAM4K,KAAM9G,EAAKE,IAAKA,IAAK,QAAQD,UAM/C,CA7GC4M,GAAAzD,KAAA3M,GAAA6M,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAS,GAAAiC,GAAAzC,GAAAC,GAAAQ,GAAAiC,GAAAxC,GAAAC,GAAAG,GAAAqC,GAAAvC,GAAApB,IAAA3M,GAAAiM,GAAAhM,MAAAC,EAAAA,EAAAA,GAAAiQ,GAAA,CA/IArS,GAAc,wBAAyB,CACtCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAOCtC,GAAS,CAAEiG,WAAW,IAAQ,cAQ9BjG,KAAU,gBAUVA,GAAS,CACRiG,WAAW,IACX,YAUDjG,GAAS,CACRiG,WAAW,IACX,kBASDjG,GAAS,CACRiG,WAAW,IACX,gBAUDjG,GAAS,CACRkG,KAAMwE,SACN,aAUD1K,GAAS,CACRkG,KAAMwG,UACN,cAMD5J,GAAM,CAAEoD,KAAM,SAAS,oBAAAC,IAAAhF,EAAAA,EAAAA,GAAAiN,GAAAjI,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA+M,GAAAjI,EAAA/E,IAAA,CAOvB0B,GAAM,CAAEoD,KAAM,UAAU,qBAAAC,IAAAhF,EAAAA,EAAAA,GAAAmN,GAAAnI,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAAiN,GAAAnI,EAAA/E,IAAA,CAOxB0B,GAAM,CAAEoD,KAAM,eAAe,mBAAAC,IAAAhF,EAAAA,EAAAA,GAAAoN,GAAApI,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAAkN,GAAApI,EAAA/E,IAAA,CAoB7B6M,KAAQ,WAORA,KAAQ,eAAA7H,GAAAsI,GAAArI,KAAAC,EAAAA,GAAAA,GAAAF,KAxHc5F,EAAAA,mBAAgB0B,K,uNC1BzC,MAAQnC,cAAa,GAAEC,SAAQ,GAAE8C,MAAKA,KAAK7C,EAAAA,EAAAA,oBAAmB,IAEzDuS,GAAS,SAATA,GAAS,OAATA,EAAS,8BAATA,EAAS,0BAATA,EAAS,sCAATA,EAAS,4BAATA,EAAS,oCAATA,EAAS,kCAATA,CAAS,EAATA,IAAS,QAAAC,GAAA,IAAAtS,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAgD,GAAA,IAAAhD,QAAA+N,GAAA,IAAA/N,QAAAsS,GAAA,IAAApP,QAAAqP,GAAA,IAAAvS,QA8Bd,MAAAwS,WAIUpS,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAAkP,KACE/R,EAAAA,EAAAA,GAAA,KAAAR,GAAA0S,GAAA,QAWAlS,EAAAA,EAAAA,GAAA,KAAAN,IAAAyS,GAAA,MAAAC,GAAA,KAS2BP,GAA2B,oBAEtD7R,EAAAA,EAAAA,GAAA,KAAAL,IAAA0S,GAAA,MAAAC,GAAA,SAWAtS,EAAAA,EAAAA,GAAA,KAAAuC,IAAAgQ,GAAA,MAAAC,GAAA,SAWAxS,EAAAA,EAAAA,GAAA,KAAAwC,IAAAiQ,GAAA,MAAAC,GAAA,SAWA1S,EAAAA,EAAAA,GAAA,KAAAyC,IAAAkQ,GAAA,MAAAC,GAAA,SAWA5S,EAAAA,EAAAA,GAAA,KAAAwN,IAAAqF,GAAA,MAAAzP,GAAA,SAOApD,EAAAA,EAAAA,GAAA,KAAAgS,IAAY1O,GAAA,MAAIyB,KACdxB,EAAAA,GAAAA,GAAAwO,GAAA/Q,KAAKwC,IAAcC,KAAKsB,EAAM,GAC9B,SAlEO+N,GAAI,OAAAtS,EAAAA,EAAAA,GAAAhB,GAAA,cAAJsT,CAAIrS,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,SAWJsS,GAAI,OAAAvS,EAAAA,EAAAA,GAAAd,GAAA,cAAJqT,CAAItS,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,iBAWJuS,GAAY,OAAAxS,EAAAA,EAAAA,GAAAb,GAAA,sBAAZqT,CAAYvS,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,uBAWZwS,GAAkB,OAAAzS,EAAAA,EAAAA,GAAA+B,GAAA,4BAAlB0Q,CAAkBxS,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,oBAWlByS,GAAe,OAAA1S,EAAAA,EAAAA,GAAAgC,GAAA,yBAAf0Q,CAAezS,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,iBAWf0S,GAAY,OAAA3S,EAAAA,EAAAA,GAAAiC,GAAA,sBAAZ0Q,CAAY1S,IAAAC,EAAAA,EAAAA,GAAA+B,GAAA,KAAAhC,EAAA,CAarBI,MAAAA,GACE,OACEC,IAAAA,cAACsS,GAAyB,CACxBN,KAAM9R,KAAK8R,KACXC,KAAM/R,KAAK+R,KACXC,aAAchS,KAAKgS,aACnBC,mBAAoBjS,KAAKiS,mBACzBC,gBAAiBlS,KAAKkS,gBACtBC,aAAcnS,KAAKmS,aACnBrP,aAAatD,EAAAA,EAAAA,GAAKwR,GAALhR,OAGnB,EACDqS,GAAApB,KAAA5Q,GAAA6Q,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAzP,GAAAI,GAAA6B,GAAA/B,IAAAhC,GAAAwQ,GAAAvQ,MAAAC,EAAAA,EAAAA,GAAA6R,GAAA,CAjGAjU,GAAc,iCAAkC,CAC/CqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAWCtC,GAAS,CACRiG,WAAW,IACX,WASDjG,GAAS,CACRiG,WAAW,IACX,WASDjG,GAAS,CACRiG,WAAW,IACX,mBASDjG,GAAS,CACRiG,WAAW,IACX,yBASDjG,GAAS,CACRiG,WAAW,IACX,sBASDjG,GAAS,CACRiG,WAAW,IACX,mBAODnD,GAAM,CAAEoD,KAAM,kBAAkB,iBAAAC,IAAAhF,EAAAA,EAAAA,GAAAgN,GAAAhI,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA8M,GAAAhI,EAAA/E,KAAA,GAAAgF,GAAAuM,GAAAtM,KAAAC,EAAAA,GAAAA,GAAAF,KAzEzB5F,EAAAA,mBAAgB0B,KA+F1B,MAAM+R,GAAU,CACd,CAACzB,GAAyB,eAAI0B,GAAAA,EAC9B,CAAC1B,GAAuB,aAAI2B,GAAAA,EAC5B,CAAC3B,GAA6B,mBAAI4B,GAAAA,EAClC,CAAC5B,GAAwB,cAAI6B,GAAAA,EAC7B,CAAC7B,GAA4B,kBAAI8B,GAAAA,EACjC,CAAC9B,GAA2B,iBAAI+B,GAAAA,IAGlC,SAASR,GACPnS,GAEA,MAAM,KACJ6R,EAAI,KACJC,EAAI,aACJC,EAAY,mBACZC,EAAkB,gBAClBC,EAAe,aACfC,EAAY,YACZrP,GACE7C,GAGF4S,GACEC,YAAaC,EAAcC,aAAcC,KACzCC,EAAAA,GAAAA,MACGC,GAAcH,aAAcI,KACjCF,EAAAA,GAAAA,MACKG,EAAWC,IAAgB1N,EAAAA,EAAAA,UAI/B,CAAE2N,QAAS,EAAGC,QAAS,KACnBC,EAAiBC,IAAsB9N,EAAAA,EAAAA,YAExC+N,GAAmBlN,EAAAA,EAAAA,UAAQ,KAC/B,IAAKoM,EAAWzP,QAAS,OACzB,MAAMwQ,EAAoBf,EAAWzP,QAAQyQ,wBAEvCC,EAAaF,EAAkBtM,MAAQuL,EAAWzP,QAAQ0P,YAC1DiB,EACJH,EAAkBrM,OAASsL,EAAWzP,QAAQ4P,aAEhD,IAAIgB,EAAYC,EAChB,MAAM3J,EAAO+I,EAAUE,QAAUK,EAAkBtJ,KACnD,IAAI4J,EAAYb,EAAUG,QAAUI,EAAkBO,IACtD,MAAM5J,EAAQqJ,EAAkBrJ,MAAQ8I,EAAUE,QAC5Ca,EAASR,EAAkBQ,OAASf,EAAUG,SAE9C,MAAElM,EAAK,OAAEC,GAAW4L,EAAW/P,QAAQyQ,wBAS7C,GARAG,EAAa1J,EAAO,GAChBC,EAAQjD,IACV0M,EAAa1J,EAAOhD,EAAQ,GAC5B2M,EAAY,SAEV3J,EAAOhD,IACT2M,EAAY,QAEVG,EAAS7M,EAAS,GAAK2M,EAAY3M,EAAS,EAAG,CACjD,MAAM8M,EAAcD,EAAS7M,EAAS,EAAI,SAAW,MACrD2M,EACEE,EAAS7M,EAAS,EACd2M,EAAY3M,EAAS,EAAI,GACzB2M,EAAY3M,EAAS,EAAI,GACb,SAAd0M,GAAwB3J,EAAOhD,EAAQ,EAAI,GAC7C2M,EAAY,GAAGI,SACfL,EAAa1J,GACU,UAAd2J,GAAyB1J,EAAQjD,EAAQ,EAAI,GACtD2M,EAAY,GAAGI,UACfL,EAAa1J,EAAOhD,IAEpB2M,EAAYI,EACZL,EAAa1J,EAAOhD,EAAQ,EAEhC,CAGA,OAFAoM,EAAmBO,GAEZ,CACL3J,KAAS0J,EAAaF,EAAhB,KACNK,IAAQD,EAAYH,EAAcX,EAAgB,EAA7C,KACN,GACA,CACDP,EACAQ,EAAUE,QACVF,EAAUG,QACVL,EACAC,IAGIkB,GAAgB7N,EAAAA,EAAAA,UAAQ,KACrB8N,EAAAA,GAAAA,IAAUzC,GACd0C,KAAKnM,GAAMA,EAAEtE,QACb0Q,MAAK,CAACC,EAAGC,IAAMA,EAAE5Q,MAAQ2Q,EAAE3Q,SAC7B,CAAC+N,IAEE8C,GAAKnO,EAAAA,EAAAA,UAAQ,KACVoO,EAAAA,GAAAA,KACJC,KAAKxC,GAAQP,IACbgD,KAAK,CAAChC,EAAcE,IACpB+B,QAAQ,GACRvN,OAAM,IACR,CAACsK,EAAMgB,EAAcE,KAEjBgC,EAAQC,IAAazO,EAAAA,EAAAA,UAAQ,KAElC,MAEM0O,EAFOP,EAAGN,GAEKW,SAAStR,KAAKlE,IAAM,IAAWA,MACpD,MAAO,CAAC0V,GAASC,EAAAA,GAAAA,OAAMD,EAAS,aAAa,GAC5C,CAACP,EAAIN,IAEFe,GAAa5O,EAAAA,EAAAA,UAAQ,IAClBwO,EAAOtR,KAAK0E,IACjB,MAAM8L,EAAM9L,EAAEiN,GACZhL,EAAOjC,EAAEkN,GACTjO,EAAQe,EAAE2D,GAAK3D,EAAEkN,GACjBhO,EAASc,EAAE4D,GAAK5D,EAAEiN,GAEpB,OACExV,IAAAA,cAAA,OACEgE,IAAKuE,EAAEyJ,KAAKpH,KACZxK,UAAU,eACV,eAAcmI,EAAEyJ,KAAKpH,KACrBnH,MAAO,IACF0O,EACHkC,IAAK,EACL7J,KAAM,EACNjD,UAAW,aAAaiD,QAAW6J,OACnC7M,QACAC,UAEFvD,QAASA,IAAMlB,aAAW,EAAXA,EAAcuF,EAAEyJ,QAE9BE,aAAY,EAAZA,EAAcwD,WACb1V,IAAAA,cAAC2V,GAAAA,uBAAsB,CAACD,SAAUxD,EAAawD,SAAU1D,KAAMzJ,IAE7D,KAGT,CAACvF,EAAamP,EAAoBD,EAAawD,SAAUP,IAEtDS,GAAiBjP,EAAAA,EAAAA,UAAQ,KACtB,IAAKyO,EAAU7B,EAAU3I,SAC/B,CAACwK,EAAW7B,EAAU3I,OAEnBiL,GAAkBlP,EAAAA,EAAAA,UAAQ,KACvBmP,EAAAA,GAAAA,IAA0BvV,IAC/B,MAAMwV,EAAWxV,EAAEyV,OAA0BC,QAAQ,iBAC/CC,EAAUH,aAAO,EAAPA,EAASI,aAAa,gBACtC3C,GAAc4C,IACL,CACL3C,QAASlT,EAAEkT,QACXC,QAASnT,EAAEmT,QACX9I,KAAMmL,EAAUG,EAAUE,EAAIxL,QAEhC,KAEH,IAEH,OACE5K,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,OACEI,UAAU,UACVwD,IAAKmP,EACLsD,YAAaR,EACbS,aAAcA,KACZjD,EAAW/P,QAAQG,MAAM8S,WAAa,SAAS,EAEjDC,aAAcA,KACZnD,EAAW/P,QAAQG,MAAM8S,WAAa,QAAQ,GAG/ChB,GAEHvV,IAAAA,cAAA,OACEI,UAAWC,KAAW,UAAW,CAC/BiU,OAA4B,WAApBX,EACR8C,YAAiC,iBAApB9C,EACb+C,WAAgC,gBAApB/C,EACZgD,QAA6B,aAApBhD,EACTiD,SAA8B,cAApBjD,EACVU,IAAyB,QAApBV,EACLlJ,MAA2B,UAApBkJ,IAETlQ,MAAO,IACF4O,KACAwB,GAELjQ,IAAKyP,IAEJjB,aAAe,EAAfA,EAAiBsD,WAChB1V,IAAAA,cAAC2V,GAAAA,uBAAsB,CACrBD,SAAUtD,EAAgBsD,SAC1B1D,KAAM4D,KAMlB,C,wDC3VA,MAAQtX,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAqY,GAAA,IAAAnY,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAoBvD,MAAAmY,WAG2B/X,EAAAA,iBAAmDC,WAAAA,GAAA,SAAAC,YAC5EC,EAAAA,EAAAA,GAAA,KAAAR,GAAA0G,GAAA,QASAlG,EAAAA,EAAAA,GAAA,KAAAN,IAAAyG,GAAA,MAAA0R,GAAA,SASA7X,EAAAA,EAAAA,GAAA,KAAAL,IAAAmY,GAAA,MAAAC,GAAA,SASA/X,EAAAA,EAAAA,GAAA,KAAAuC,IAAAyV,GAAA,MAAAC,GAAA,SASAjY,EAAAA,EAAAA,GAAA,KAAAwC,IAAA0V,GAAA,MAAAC,GAAA,QAAAC,GAAA,eA7BSrT,GAAK,OAAAvE,EAAAA,EAAAA,GAAAhB,GAAA,eAALuF,CAAKtE,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,iBASL4X,GAAY,OAAA7X,EAAAA,EAAAA,GAAAd,GAAA,sBAAZ2Y,CAAY5X,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,kBASZ6X,GAAa,OAAA9X,EAAAA,EAAAA,GAAAb,GAAA,uBAAb2Y,CAAa7X,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,oBASb8X,GAAe,OAAA/X,EAAAA,EAAAA,GAAA+B,GAAA,yBAAfgW,CAAe9X,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,mBASf+X,GAAc,OAAAhY,EAAAA,EAAAA,GAAAgC,GAAA,wBAAdgW,CAAc/X,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,CAEvBI,MAAAA,GACE,OACEC,IAAAA,cAAC2X,GAAqB,CACpB1T,MAAO/D,KAAK+D,MACZyT,eAAgBxX,KAAKwX,eACrBD,gBAAiBvX,KAAKuX,gBACtBD,cAAetX,KAAKsX,cACpBD,aAAcrX,KAAKqX,cAGzB,EAGK,SAASI,GAAsBxX,GACpC,MAAMyX,EAAyB,CAC7B,CACEC,MAAO,oDACPC,WAAY,EACZC,SAAU,GACVC,YAAa,WAEf,CACEH,MAAO,oDACPC,WAAY,GACZC,SAAU,IACVC,YAAa,aAGX,MACJ/T,EAAK,cACLuT,EAAgB,GAAE,aAClBD,EAAe,GAAE,eACjBG,EAAiB,GAAE,gBACnBD,EAAkBG,GAChBzX,EACE8X,GAAmBtR,EAAAA,EAAAA,UAAQ,KAC/B,MAAMuR,EAAgBT,EAAgBA,EAAgB9T,OAAS,GACzDwU,EACJX,GAAiBU,EAAcH,SAAWN,EAAgB,GAAGK,YACzDM,EAAmBX,EAAgBY,MACtCC,GACCA,EAAUR,YAAc7T,GAASqU,EAAUP,UAAY9T,IAE3D,MAAO,CACLwD,OAAQ0Q,EAAalU,EACrB4T,MAAOO,aAAgB,EAAhBA,EAAkBP,MACzBG,aAAaI,aAAgB,EAAhBA,EAAkBJ,eAAeI,aAAgB,EAAhBA,EAAkBP,OAChEU,yBAA0BJ,EAAaT,EACvCc,YACEvU,IAAUiU,EAAcH,SAAWN,EAAgB,GAAGK,WACzD,GACA,CAAC7T,EAAOuT,EAAeC,EAAiBC,IAC3C,OACE1X,IAAAA,cAAA,OAAKI,UAAU,aACbJ,IAAAA,cAAA,OACEI,UAAU,SACVqD,MAAO,CACL+D,MAAOnB,KAAKsB,MAAM4P,EAAe,GACjCkB,WAAYR,EAAiBD,YAC7BU,UAAW,eAAeT,EAAiBD,iBAG/ChY,IAAAA,cAAA,OACEI,UAAU,UACVqD,MAAO,CACL+D,MAAO+P,EACP9P,OAAQ+P,IAGVxX,IAAAA,cAAA,OACEI,UAAU,YACVqD,MAAO,CACL6Q,OAAQ2D,EAAiBM,yBAA2B,KAGxDvY,IAAAA,cAAA,OACEI,UAAU,eACVqD,MAAO,CAAEgE,OAAQwQ,EAAiBxQ,SAElCzH,IAAAA,cAAA,OACEI,UAAU,QACVqD,MAAO,CACLgV,WAAYR,EAAiBJ,MAC7Ba,UAAW,gBAAgBT,EAAiBJ,QAC5Cc,aAAcV,EAAiBO,YAC3B,MACA,kBAIVxY,IAAAA,cAAA,OACEI,UAAU,OACVqD,MAAO,CACL4Q,IAAKmD,EAAgBS,EAAiBM,yBAA2B,KAGnEvY,IAAAA,cAAA,QAAM4K,KAAK,WAGf5K,IAAAA,cAAA,aAGN,CA3FC4Y,GAAA9B,KAAAvW,GAAA6E,GAAAC,GAAA0R,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAA9W,GAAAqW,GAAApW,MAAAC,EAAAA,EAAAA,GAAAkY,GAAA,CA5DAta,GAAc,0BAA2B,CACxCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAQCtC,GAAS,CAAEkG,KAAMwE,SAAS,YAS1B1K,GAAS,CAAEkG,KAAMwE,SAAS,mBAS1B1K,GAAS,CAAEkG,KAAMwE,SAAS,oBAS1B1K,GAAS,CAAEiG,WAAW,IAAQ,sBAS9BjG,GAAS,CAAEkG,KAAMwE,SAAS,8BA3CFlK,EAAAA,mBAAgB0B,K,qGCf3C,MAAMa,IAAcC,EAAAA,EAAAA,WAAyC,YAErDjD,cAAa,GAAEC,SAAQ,GAAE8C,MAAKA,KAAK7C,EAAAA,EAAAA,oBAAmB,IAAAqa,GAAA,IAAAna,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAma,GAAA,IAAAjX,QAAAkX,GAAA,IAAApa,QAgB9D,MAAAqa,WAG2Bja,EAAAA,iBAA8CC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAA+W,KACvE5Z,EAAAA,EAAAA,GAAA,KAAAR,GAAAua,GAAA,QAWA/Z,EAAAA,EAAAA,GAAA,KAAAN,IAAAsa,GAAA,MAAA9T,GAAA,SASAlG,EAAAA,EAAAA,GAAA,KAAAL,IAAAwG,GAAA,MAAA8T,GAAA,SASAja,EAAAA,EAAAA,GAAA,KAAAuC,IAAA2X,GAAA,MAAAC,GAAA,SASAna,EAAAA,EAAAA,GAAA,KAAAwC,IAAA4X,GAAA,MAAAC,GAAA,SAOAra,EAAAA,EAAAA,GAAA,KAAA6Z,IAAkBS,GAAA,MAAIvV,KACpBxB,EAAAA,GAAAA,GAAAqW,GAAA5Y,KAAKuZ,IAAa9W,KAAKsB,EAAM,GAC7B,YAtCOyV,GAAO,OAAAha,EAAAA,EAAAA,GAAAhB,GAAA,iBAAPgb,CAAO/Z,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,UASPsE,GAAK,OAAAvE,EAAAA,EAAAA,GAAAd,GAAA,eAALqF,CAAKtE,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,gBASLga,GAAW,OAAAja,EAAAA,EAAAA,GAAAb,GAAA,qBAAX8a,CAAWha,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,eASXia,GAAU,OAAAla,EAAAA,EAAAA,GAAA+B,GAAA,oBAAVmY,CAAUja,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,CAanBI,MAAAA,GACE,OACEC,IAAAA,cAAC6Z,GAAmB,CAClBC,WAAY5Z,KACZwZ,QAASxZ,KAAKwZ,QACdzV,MAAO/D,KAAK+D,MACZ0V,YAAazZ,KAAKyZ,YAClBI,UAAUra,EAAAA,EAAAA,GAAKqZ,GAAL7Y,MACV0Z,WAAY1Z,KAAK0Z,YAGvB,EAGF,SAASC,GAAoB1Z,GAC3B,MAAM,WAAE2Z,EAAU,QAAEJ,EAAO,YAAEC,EAAW,SAAEI,EAAQ,WAAEH,GAAezZ,GAE5D6Z,EAAcC,GAAmBja,IAAAA,UAAe,GAEjDka,GAAWhX,EAAAA,EAAAA,WACViX,EAAYC,GAAiBpa,IAAAA,SAAe,KAC5Cqa,EAAgBC,GAAqBta,IAAAA,UAAe,IAEpDiE,EAAOsW,IAAYzU,EAAAA,EAAAA,UAAS3F,EAAM8D,OACnCuW,GAAa7T,EAAAA,EAAAA,UAAQ,KAClB2O,EAAAA,GAAAA,OAAMoE,EAAS,UACrB,CAACA,KAEJvW,EAAAA,EAAAA,YAAU,KACRoX,EAASpa,EAAM8D,MAAM,GACpB,CAAC9D,EAAM8D,SAEVd,EAAAA,EAAAA,YAAU,KACR,MAAMsX,EAAuBla,IACtBuZ,EAAWY,SAASna,EAAEyV,UACzBiE,GAAgB,GAChBK,GAAkB,KAChBJ,EAAS5W,QAAQqX,OACjBP,EAAc,KACP,KAEX,EAGF,OADAhK,SAASC,iBAAiB,QAASoK,GAC5B,KACLrK,SAASE,oBAAoB,QAASmK,EAAoB,CAC3D,IAGH,MAAMG,GAAkBjU,EAAAA,EAAAA,UAAQ,IACvB+S,EAAQ5Q,QAAQnJ,IACrB,MAAMkb,GAASV,aAAU,EAAVA,EAAYW,OAAOC,gBAAiB,GACnD,OACEpb,EAAEqb,MAAMD,cAAcE,SAASJ,IAC/Blb,EAAEsE,MAAM8W,cAAcE,SAASJ,EAAO,KAGzC,CAACV,EAAYT,IAEhB,OACE1Z,IAAAA,cAAA,OAAKI,UAAU,aACbJ,IAAAA,cAAA,OACEI,UAAWC,KAAW,SAAU,CAC9B,iBAAkBga,EAClB,uBAAwBT,KAG1B5Z,IAAAA,cAAA,OACEI,UAAU,kBACV8D,QAASA,KACP+V,GAAgB,GAChBK,GAAmBlE,IACZA,GACHgE,EAAc,IAEhBF,EAAS5W,QAAQ4X,SACV,IACP,GAGJlb,IAAAA,cAAA,OAAKI,UAAU,0BACbJ,IAAAA,cAAA,SACEI,UAAU,+BACVqE,KAAK,SACL0W,aAAa,MACbvX,IAAKsW,EACLjW,MAAOkW,EACPJ,SAAWxZ,IACT6Z,EAAc7Z,EAAEyV,OAAO/R,MAAM,KAIlCA,EACCjE,IAAAA,cAAA,OACEI,UAAU,uBACVqD,MAAO,CAAE8S,WAAY4D,EAAa,SAAW,YAE5CK,EAAWvW,GAASuW,EAAWvW,GAAO+W,MAAQ/W,GAGjDjE,IAAAA,cAAA,OACEI,UAAU,+BACVqD,MAAO,CAAE8S,WAAY4D,EAAa,SAAW,YAE5CR,GAGL3Z,IAAAA,cAAA,OAAKI,UAAU,gBACZia,EACCra,IAAAA,cAACsB,GAAW,CACVlB,UAAU,gCACV+D,IAAI,OACJE,MAAM,WACND,KAAK,WAGPpE,IAAAA,cAACsB,GAAW,CACVlB,UAAU,8BACV+D,IAAI,OACJE,MAAM,WACND,KAAK,UAIVwV,GACC5Z,IAAAA,cAAA,OACEI,UAAU,eACVqD,MAAO,CAAE8S,WAAatS,EAAmB,UAAX,UAC9BmX,YAAc7a,IAEZA,EAAE8a,iBACF9a,EAAE+a,kBACFlB,EAAc,IACdG,EAAS,MACTR,SAAAA,EAAW,KAAK,GAGlB/Z,IAAAA,cAACsB,GAAW,CACVlB,UAAU,+BACV+D,IAAI,OACJE,MAAM,SACND,KAAK,oBAMfpE,IAAAA,cAAA,OACEI,UAAU,kBACVqD,MAAO,CAAE8X,QAASvB,EAAe,OAAS,UAEzCY,EAAgBjX,OACf3D,IAAAA,cAAA,OAAKI,UAAU,iBACbJ,IAAAA,cAAA,OAAKI,UAAU,uBACZwa,EAAgB/W,KAAKlE,GAElBK,IAAAA,cAAA,OACEI,UAAWC,KAAW,cAAe,CACnCmb,SAAUvX,IAAUtE,EAAEsE,QAExBD,IAAKrE,EAAEsE,MACPC,QAASA,KACPqW,EAAS5a,EAAEsE,OACXgW,GAAgB,GAChBK,GAAkB,KAChBJ,EAAS5W,QAAQqX,OACjBP,EAAc,KACP,KAETL,SAAAA,EAAWpa,EAAEsE,MAAM,GAGrBjE,IAAAA,cAAA,OAAKI,UAAU,8BAA8BT,EAAEqb,YAOzDhb,IAAAA,cAAA,OAAKI,UAAU,eACbJ,IAAAA,cAAA,OAAKyb,IAAKC,GAAUtb,UAAU,gBAC9BJ,IAAAA,cAAA,OAAKI,UAAU,qBAAoB,UAM/C,CA/KCub,GAAA3C,KAAAzY,GAAA0Y,GAAAC,GAAA9T,GAAAC,GAAA8T,GAAAC,GAAAC,GAAAC,GAAAC,GAAAE,GAAAmC,GAAApC,IAAAhZ,GAAAqY,GAAApY,MAAAC,EAAAA,EAAAA,GAAAib,GAAA,CAjEArd,GAAc,0BAA2B,CACxCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAQCtC,GAAS,CACRiG,WAAW,IACX,cASDjG,KAAU,YASVA,KAAU,kBASVA,KAAU,iBAOV8C,GAAM,CAAEoD,KAAM,iBAAiB,gBAAAC,IAAAhF,EAAAA,EAAAA,GAAAgC,GAAAgD,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA8B,GAAAgD,EAAA/E,KAAA,GAAAgF,GAAAoU,GAAAnU,KAAAC,EAAAA,GAAAA,GAAAF,KA3CP5F,EAAAA,mBAAgB0B,K,mDClCpC,IAAKob,GAAC,SAADA,GAAC,OAADA,EAAC,wBAADA,CAAC,MAIb,MAQaC,GAAK,kC,kGCIlB,MAAQxd,cAAa,GAAEC,SAAQ,GAAE8C,MAAKA,KAAK7C,EAAAA,EAAAA,qBAC3Cud,EAAAA,GAAAA,qBAAoBD,GDHG,CAAEE,GAVN,CACfC,WAAY,cASaC,GANV,CACfD,WAAY,SCShB,MAAM3a,IAAcC,EAAAA,EAAAA,WAAyC,WAAW,IAAA4a,GAAA,IAAAzd,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAyd,GAAA,IAAAva,QAAAF,GAAA,IAAAhD,QAAA+N,GAAA,IAAA/N,QAAAgO,GAAA,IAAAhO,QAAAkO,GAAA,IAAAlO,QAyBxE,MAAA0d,WAG4Btd,EAAAA,iBAA+CC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAAqa,KACzEld,EAAAA,EAAAA,GAAA,KAAAR,GAAA0G,GAAA,QAUAlG,EAAAA,EAAAA,GAAA,KAAAN,IAAAyG,GAAA,MAAA8T,GAAA,SAWAja,EAAAA,EAAAA,GAAA,KAAAL,IAAAua,GAAA,MAAAH,GAAA,SAWA/Z,EAAAA,EAAAA,GAAA,KAAAuC,IAAAyX,GAAA,MAAAtH,GAAA,SAWA1S,EAAAA,EAAAA,GAAA,KAAAwC,IAAAmQ,GAAA,MAAAyK,GAAA,SAOApd,EAAAA,EAAAA,GAAA,KAAAyC,IAAA4a,GAAA,MAAAC,GAAA,SAOAtd,EAAAA,EAAAA,GAAA,KAAAwN,IAAA+P,GAAA,MAAAC,GAAA,SAOAxd,EAAAA,EAAAA,GAAA,KAAAyN,IAAAgQ,GAAA,MAAAC,GAAA,SAOA1d,EAAAA,EAAAA,GAAA,KAAA2N,IAAAgQ,GAAA,MAAAC,GAAA,SAAAva,EAAAA,GAAAA,GAAA,0BAAAwa,GAAA,MAOqB9Y,KACnBxB,EAAAA,GAAAA,GAAA2Z,GAAAlc,KAAK8c,IAAkBra,KAAKsB,EAAM,KACnC1B,EAAAA,GAAAA,GAAA,qBACe0B,KACdxB,EAAAA,GAAAA,GAAA2Z,GAAAlc,KAAK+c,IAAeta,KAAKsB,EAAM,KAChC1B,EAAAA,GAAAA,GAAA,oBACa,MACZE,EAAAA,GAAAA,GAAA2Z,GAAAlc,KAAKgd,IAAcva,MAAM,KAC1BJ,EAAAA,GAAAA,GAAA,mBACY,MACXE,EAAAA,GAAAA,GAAA2Z,GAAAlc,KAAKid,IAAaxa,MAAM,KACzBJ,EAAAA,GAAAA,GAAA,qBACeyP,KACdvP,EAAAA,GAAAA,GAAA2Z,GAAAlc,KAAKkd,IAAeza,KAAKqP,EAAK,GAC/B,UAnFQ/N,GAAK,OAAAvE,EAAAA,EAAAA,GAAAhB,GAAA,eAALuF,CAAKtE,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,gBAULga,GAAW,OAAAja,EAAAA,EAAAA,GAAAd,GAAA,qBAAX+a,CAAWha,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,YAWX+Z,GAAO,OAAAha,EAAAA,EAAAA,GAAAb,GAAA,iBAAP6a,CAAO/Z,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,oBAWPyS,GAAe,OAAA1S,EAAAA,EAAAA,GAAA+B,GAAA,yBAAf2Q,CAAezS,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,CAqDxBI,MAAAA,GACE,OACEC,IAAAA,cAACqd,GAAsB,CACrBpZ,MAAO/D,KAAK+D,MACZqZ,cAAepd,KAAKqd,kBACpBC,SAAUtd,KAAKud,aACfC,OAAQxd,KAAKyd,WACbC,QAAS1d,KAAK2d,YACdzL,gBAAiBlS,KAAKkS,gBACtBuH,YAAazZ,KAAKyZ,YAClBmE,SAAU5d,KAAK6d,aACfrE,QAASxZ,KAAKwZ,SAGpB,EAGK,SAAS2D,GACdld,GAEA,MAAM,cACJmd,EAAa,SACbE,EAAQ,OACRE,EAAM,QACNE,EAAO,gBACPxL,EAAe,YACfuH,EAAW,SACXmE,EAAQ,QACRpE,EAAU,IACRvZ,GACE,EAAE6d,IAAMC,EAAAA,GAAAA,gBAAenC,KACtBlC,EAAYsE,IAAiBpY,EAAAA,EAAAA,WAAkB,GAChDyJ,GAAarM,EAAAA,EAAAA,QAAuB,OACnCwL,EAASyP,IAAcrY,EAAAA,EAAAA,WAAS,IAChCsY,EAAaC,IAAkBvY,EAAAA,EAAAA,aAC/BwY,EAAaC,IAAkBzY,EAAAA,EAAAA,UAAiB,IAChD0Y,EAAgBC,IAAqB3Y,EAAAA,EAAAA,WAAkB,IACvD7B,EAAOsW,IAAYzU,EAAAA,EAAAA,UAAS3F,EAAM8D,QAkBzCd,EAAAA,EAAAA,YAAU,KACRoX,EAASpa,EAAM8D,MAAM,GACpB,CAAC9D,EAAM8D,SACVd,EAAAA,EAAAA,YAAU,KACR+a,IAAgBja,EAAM,GACrB,CAACA,IAEJ,MAAMjB,EAAe3B,IACGA,EACnBqO,eACAC,MAAMC,GAAQA,IAAQL,EAAWjM,WAElC6a,GAAW,EACb,EAuBIO,GAAe/X,EAAAA,EAAAA,UAAQ,IACtByL,SAAAA,EAAiBsD,SAIlB1V,IAAAA,cAAA,OACEI,UAAU,0BACVqD,MAAO,CACL4Q,IAAKiK,EACL/H,WAAYiI,EAAiB,UAAY,SACzCzV,QAASyV,EAAiB,EAAI,GAEhClI,aAAcA,IAAMmI,GAAkB,GACtCjI,aAAcA,IAAMiI,GAAkB,IAEtCze,IAAAA,cAAA,OAAKI,UAAU,mBACbJ,IAAAA,cAAC2V,GAAAA,uBAAsB,CACrBD,SAAUtD,EAAgBsD,SAC1B1D,KAAMoM,GAAe,CAAC,WAhB9B,GAsBD,CAACA,EAAahM,EAAiBkM,EAAaE,IAM/C,OALArb,EAAAA,EAAAA,YAAU,KACRiN,SAASC,iBAAiB,QAASrN,GAC5B,IAAMoN,SAASE,oBAAoB,QAAStN,KAClD,IAGDhD,IAAAA,cAAA,OAAKI,UAAU,UAAUwD,IAAK2L,GAC5BvP,IAAAA,cAAA,OAAKI,UAAU,gBACbJ,IAAAA,cAAA,SACE2Z,YAAaA,EACb1V,MAAOA,GAAS,GAChBQ,KAAK,OACLsV,SAAWxZ,IACToe,OAhDiBC,EAgDCre,EAAEyV,OAAO/R,MA/CnCsW,EAASqE,GACTtB,EAAcsB,QACdT,GAAW,GAHcS,KAiDlB,EACDhB,QA7FYC,KAElBM,GAAW,GACXP,GAAS,EA2FHF,OAAQA,EACRmB,UA1Fete,IACP,UAAVA,EAAEyD,MACJma,GAAW,GACX5D,EAAUha,EAAEyV,OAA4B/R,OACxCuZ,EAAUjd,EAAEyV,OAA4B/R,OAC1C,IAuFIjE,IAAAA,cAACsB,GAAW,CACVlB,UAAU,kBACV+D,IAAI,OACJC,KAAK,SACLC,MAAM,aAEPuV,GACC5Z,IAAAA,cAACsB,GAAW,CACVlB,UAAU,iBACV8D,QA1DW4a,KACnBvE,EAAS,MACT+C,EAAc,IACda,GAAW,EAAM,EAwDTha,IAAI,OACJC,KAAK,eACLC,MAAM,YAIZrE,IAAAA,cAAA,OACEI,UAAU,kBACVqD,MAAO,CACL8S,WAAY7H,EAAU,UAAY,WAGnCgL,EAAQ/V,OACP3D,IAAAA,cAAA,OAAKI,UAAU,gBACZsZ,EAAQ7V,KAAI,CAACkb,EAAQhb,IACpB/D,IAAAA,cAAA,OACEI,UAAU,mBACV4D,IAAKD,EACLuS,aAAe/V,GA7FJye,EACvBze,EACAyR,KAEAqM,EAAerM,GACfyM,GAAkB,GAClB,MAAMpK,EACH9T,EAAEyV,OAA0BjC,wBAAwBM,IACrD9E,EAAWjM,QAAQyQ,wBAAwBM,IAC7CkK,EAAelK,EAAI,EAoFc2K,CAAiBze,EAAGwe,GACzCvI,aAAcA,IAAMiI,GAAkB,GACtCva,QAASA,KAAM6Z,OAlH3BxD,GADoBvI,EAmHoB+M,GAlH1BnU,MACdkT,EAAS9L,QACTmM,GAAW,GAHSnM,KAmH4B,GAEpChS,IAAAA,cAACsB,IAAW2d,EAAAA,GAAAA,GAAA,GAAKF,EAAO3a,KAAI,CAAEhE,UAAU,cACxCJ,IAAAA,cAAA,QAAMI,UAAU,aAAa2e,EAAOnU,UAK1C5K,IAAAA,cAAA,OAAKI,UAAU,aACbJ,IAAAA,cAAA,OAAKyb,IAAKyD,GAAOC,IAAKnB,EAAEnC,GAAEI,cAC1Bjc,IAAAA,cAAA,YAAOge,EAAEnC,GAAEI,eAIhByC,EAGP,CAvKCU,GAAA/C,KAAA9b,GAAA6E,GAAAC,GAAA8T,GAAAC,GAAAH,GAAAC,GAAAtH,GAAAC,GAAAyK,GAAAU,GAAAqC,GAAA9C,GAAAC,GAAAS,GAAAqC,GAAA7C,GAAAC,GAAAU,GAAAmC,GAAA5C,GAAAC,GAAAM,GAAAsC,GAAA3C,GAAAC,GAAAK,GAAAsC,GAAA1C,IAAAvc,GAAA2b,GAAA1b,MAAAC,EAAAA,EAAAA,GAAA0e,GAAA,CAjHA9gB,GAAc,2BAA4B,CACzCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAUCtC,KAAU,YAUVA,KAAU,kBAWVA,GAAS,CAAEiG,WAAW,IAAQ,cAS9BjG,GAAS,CACRiG,WAAW,IACX,sBAODnD,GAAM,CAAEoD,KAAM,WAAW,qBAAAC,IAAAhF,EAAAA,EAAAA,GAAAgC,GAAAgD,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA8B,GAAAgD,EAAA/E,IAAA,CAOzB0B,GAAM,CAAEoD,KAAM,WAAW,kBAAAC,IAAAhF,EAAAA,EAAAA,GAAAiC,GAAA+C,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA+B,GAAA+C,EAAA/E,IAAA,CAOzB0B,GAAM,CAAEoD,KAAM,WAAW,kBAAAC,IAAAhF,EAAAA,EAAAA,GAAAgN,GAAAhI,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA8M,GAAAhI,EAAA/E,IAAA,CAOzB0B,GAAM,CAAEoD,KAAM,UAAU,iBAAAC,IAAAhF,EAAAA,EAAAA,GAAAiN,GAAAjI,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA+M,GAAAjI,EAAA/E,IAAA,CAOxB0B,GAAM,CAAEoD,KAAM,SAAS,gBAAAC,IAAAhF,EAAAA,EAAAA,GAAAmN,GAAAnI,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAAiN,GAAAnI,EAAA/E,KAAA,GAAAgF,GAAAyX,GAAAxX,KAAAC,EAAAA,GAAAA,GAAAF,KA5EE5F,EAAAA,mBAAgB0B,K,oECzC5C,MAAQnC,cAAa,GAAEC,SAAQ,GAAE8C,MAAKA,KAAK7C,EAAAA,EAAAA,oBACK,IAAAkhB,GAAA,IAAAhhB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAgD,GAAA,IAAAhD,QAAAghB,GAAA,IAAA9d,QAehD,MAAA+d,WAG2B7gB,EAAAA,iBAA8CC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAA4d,KACvEzgB,EAAAA,EAAAA,GAAA,KAAAR,GAAAmhB,GAAA,QASA3gB,EAAAA,EAAAA,GAAA,KAAAN,IAAAkhB,GAAA,MAAAC,GAAA,SASA7gB,EAAAA,EAAAA,GAAA,KAAAL,IAAAmhB,GAAA,MAAAC,GAAA,MAOwC,MACxC/gB,EAAAA,EAAAA,GAAA,KAAAuC,IAAAye,GAAA,MAAAC,GAAA,SASAjhB,EAAAA,EAAAA,GAAA,KAAAwC,IAAA0e,GAAA,MAAAC,GAAA,SASAnhB,EAAAA,EAAAA,GAAA,KAAAyC,IAAA2e,GAAA,MAAAC,GAAA,SAAAhe,EAAAA,GAAAA,GAAA,cAAAie,GAAA,MAOQ,MACN/d,EAAAA,GAAAA,GAAAkd,GAAAzf,KAAKugB,IAAY9d,MAAM,GACxB,gBA9CQ+d,GAAW,OAAAhhB,EAAAA,EAAAA,GAAAhB,GAAA,qBAAXgiB,CAAW/gB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,YASXghB,GAAO,OAAAjhB,EAAAA,EAAAA,GAAAd,GAAA,iBAAP+hB,CAAOhhB,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,wBASPihB,GAAmB,OAAAlhB,EAAAA,EAAAA,GAAAb,GAAA,6BAAnB+hB,CAAmBjhB,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,aAQnBkhB,GAAQ,OAAAnhB,EAAAA,EAAAA,GAAA+B,GAAA,kBAARof,CAAQlhB,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,iBASRmhB,GAAY,OAAAphB,EAAAA,EAAAA,GAAAgC,GAAA,sBAAZof,CAAYnhB,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,CAarBI,MAAAA,GACE,OACEC,IAAAA,cAAC+gB,GAAqB,CACpBJ,QAASzgB,KAAKygB,QACdD,YAAaxgB,KAAKwgB,YAClBG,SAAU3gB,KAAK2gB,SACfD,oBAAqB1gB,KAAK0gB,oBAC1BE,aAAc5gB,KAAK4gB,aACnBE,MAAO9gB,KAAK8gB,OAGlB,EAEK,SAASD,GACd5gB,GAEA,MAAM,YACJugB,EAAW,QACXC,EAAO,SACPE,EAAQ,oBACRD,EAAmB,aACnBE,EAAe,IAAG,MAClBE,GACE7gB,GACG8gB,EAAeC,IAAoBpb,EAAAA,EAAAA,UAAiB,GACrDqb,GAAWje,EAAAA,EAAAA,QAAe,MAwB1Bke,GAAeC,EAAAA,GAAAA,GAAYR,GAC3BS,EAAUA,CAACC,EAAgBC,EAAeC,IACvCF,GAAUC,EAAQ,EAAInb,KAAKqb,MAAMD,EAAMF,GAAU,IA0B1D,OAxBApe,EAAAA,EAAAA,YAAU,KACR,IAAIwe,EAAO,EAaX,OAZKf,GAAwBD,IAE3BgB,EAAOL,EAAQL,EAAe,GAAI,MAEhCL,IACFe,EAAOL,EAAQL,EAAeG,EAAcP,IAlCzBe,KAKrB,MAAM,OAAEL,EAAM,KAAEI,EAAI,KAAEE,GAASD,EAC/B,IACEH,EADEK,EAAOP,EAGTE,EADEb,EACIC,EAEAF,EAAU,GAAK,IAEvBQ,EAAS7d,QAAUyD,OAAOC,aAAY,KAChC8a,GAAQL,IACV1a,OAAOE,cAAcka,EAAS7d,SAC9Bwe,EAAOL,GAETP,EAAiBY,GAEjBA,GAAcH,CAAI,GACjBE,EAAK,EAeRE,CAAc,CACZJ,KAAMA,EACNJ,OAAQN,GAAiB,EACzBY,KAAMf,IAED,KACL/Z,OAAOE,cAAcka,EAAS7d,QAAQ,CACvC,GACA,CAACqd,EAASE,EAAUD,EAAqBE,KAC5C3d,EAAAA,EAAAA,YAAU,KACc,MAAlB8d,IACFD,SAAAA,IACF,GACC,CAACC,IAGFjhB,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,OAAKI,UAAU,gBACbJ,IAAAA,cAAA,OAAKI,UAAU,SAASsgB,GAAe,WACvC1gB,IAAAA,cAAA,OAAKI,UAAU,eAAc,eAE/BJ,IAAAA,cAAA,OAAKI,UAAU,YAAY,GAAG6gB,MAGpC,CA1ECe,GAAApC,KAAArf,GAAAsf,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAE,GAAAwB,GAAAzB,IAAAhgB,GAAAkf,GAAAjf,MAAAC,EAAAA,EAAAA,GAAAshB,GAAA,CAvEA1jB,GAAc,0BAA2B,CACxCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAQCtC,KAAU,kBASVA,GAAS,CAAEkG,KAAMwG,UAAU,cAS3B1M,GAAS,CAAEkG,KAAMwG,UAAU,0BAQ3B1M,GAAS,CAAEkG,KAAMwE,SAAS,eAS1B1K,GAAS,CAAEkG,KAAMwE,SAAS,mBAO1B5H,GAAM,CAAEoD,KAAM,QAAQ,eAAAC,IAAAhF,EAAAA,EAAAA,GAAAiC,GAAA+C,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA+B,GAAA+C,EAAA/E,KAAA,GAAAgF,GAAAgb,GAAA/a,KAAAC,EAAAA,GAAAA,GAAAF,KAjDE5F,EAAAA,mBAAgB0B,K,sCClB3C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAA0jB,GAAA,IAAAxjB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAkBvD,MAAAwjB,WAIUpjB,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,GAAA0jB,GAAA,QASAljB,EAAAA,EAAAA,GAAA,KAAAN,IAAAyjB,GAAA,MAAAjgB,GAAA,QAAAC,GAAA,gBAFSigB,GAAM,OAAA5iB,EAAAA,EAAAA,GAAAhB,GAAA,gBAAN4jB,CAAM3iB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,mBASNmD,GAAc,OAAApD,EAAAA,EAAAA,GAAAd,GAAA,wBAAdkE,CAAcnD,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,CAEvBI,MAAAA,GACE,OACEC,IAAAA,cAACuiB,GAA0B,CACzBD,OAAQpiB,KAAKoiB,OACbxf,eAAgB5C,KAAK4C,gBAG3B,EAGK,SAASyf,GACdpiB,GAEA,MAAM,OAAEmiB,EAAM,eAAExf,GAAmB3C,EAmC7BqiB,EAAqB,IAAIC,MAAM,GAAGha,KAAK,GAC7C,OACEzI,IAAAA,cAAA,OAAKI,UAAU,oBAAoBqD,MAAOX,GAnCf,CAC3B,CACE4f,EAAG,GACHC,EAAG,EACHnY,KAAM,MACN8J,OAAQ,MAEV,CACEoO,EAAG,GACHC,EAAG,EACHnY,KAAM,MACN8J,OAAQ,KAEV,CACEoO,EAAG,GACHC,EAAG,EACHnY,KAAM,MACN8J,OAAQ,OAEV,CACEoO,EAAG,GACHC,EAAG,EACHnY,KAAM,MACN8J,OAAQ,OAEV,CACEoO,EAAG,GACHC,EAAG,EACHnY,KAAM,MACN8J,OAAQ,QAOczQ,KAAI,CAAC+e,EAAU7e,KACnC,MAAM8e,EAAgB,CACpBrb,MAAO,GAAGob,EAASD,MACnBlb,OAAQ,GAAGmb,EAASF,MACpBjK,WAAY,0BAA0B6J,EAAOQ,kBAAkBR,EAAOS,qBAAqBT,EAAOU,kBAEpG,OACEhjB,IAAAA,cAAA,OACEI,UAAU,mBACV4D,IAAKD,EACLN,MAAO,CACL+D,MAAO,GAAGob,EAASD,MACnBlb,OAAwB,EAAbmb,EAASF,EAAZ,KACRpO,OAAQsO,EAAStO,OACjB9J,KAAMoY,EAASpY,OAGjBxK,IAAAA,cAAA,OAAKI,UAAU,WAAWqD,MAAOof,IACjC7iB,IAAAA,cAAA,OAAKI,UAAU,QAAQqD,MAAOof,IAC1B,IAGV7iB,IAAAA,cAAA,OAAKI,UAAU,mBAAmBqD,MAAO,CAAEoU,MAAOyK,EAAOS,cACtDP,EAAmB3e,KAAI,CAACof,EAAQlf,IAC/B/D,IAAAA,cAAA,OAAKI,UAAU,SAAS4D,IAAKD,OAGjC/D,IAAAA,cAAA,aAGN,CAzECkjB,GAAAf,KAAA5hB,GAAA6hB,GAAAC,GAAAjgB,GAAAC,IAAA7B,GAAA0hB,GAAAzhB,MAAAC,EAAAA,EAAAA,GAAAwiB,GAAA,CAjCA5kB,GAAc,+BAAgC,CAC7CqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAWCtC,GAAS,CAAEiG,WAAW,IAAQ,aAS9BjG,GAAS,CAAEiG,WAAW,IAAQ,8BAlBvBzF,EAAAA,mBAAgB0B,K,wDCtB1B,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAA2kB,GAAA,IAAAzkB,GAAA,IAAAC,QAUvD,MAAAykB,WAG4BrkB,EAAAA,iBAA+CC,WAAAA,GAAA,SAAAC,YACzEC,EAAAA,EAAAA,GAAA,KAAAR,GAAA2kB,GAAA,OAAAC,GAAA,qBAOSC,GAAW,OAAA7jB,EAAAA,EAAAA,GAAAhB,GAAA,qBAAX6kB,CAAW5jB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,CAEpBI,MAAAA,GACE,OAAOC,IAAAA,cAAA,QAAMI,UAAU,WAAWqD,MAAOvD,KAAKqjB,aAChD,EACDC,GAAAJ,KAAA7iB,GAAA8iB,GAAAC,IAAA9iB,GAAA2iB,GAAA1iB,MAAAC,EAAAA,EAAAA,GAAA8iB,GAAA,CAhBAllB,GAAc,2BAA4B,CACzCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAQCtC,GAAS,CAAEiG,WAAW,IAAQ,2BAPLzF,EAAAA,mBAAgB0B,K,4MCJ5C,MAAMgjB,GAAW,CACf,kBAAmBC,GACnB,kBAAmBC,GACnB,mBAAoBC,GACpB,0B,0BACA,0BAA2BC,GAC3B,2BAA4BC,GAC5BC,I,0BACA,c,4BAGMzlB,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAwlB,GAAA,IAAAtlB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAavD,MAAAslB,WAG0BllB,EAAAA,iBAA6CC,WAAAA,GAAA,SAAAC,YACrEC,EAAAA,EAAAA,GAAA,KAAAR,GAAAwlB,GAAA,QAaAhlB,EAAAA,EAAAA,GAAA,KAAAN,IAAAulB,GAAA,MAAAC,GAAA,SASAllB,EAAAA,EAAAA,GAAA,KAAAL,IAAAwlB,GAAA,MAAAllB,GAAA,SASAD,EAAAA,EAAAA,GAAA,KAAAuC,IAAArC,GAAA,MAAAklB,GAAA,QAAAC,GAAA,cAxBS9f,GAAI,OAAA/E,EAAAA,EAAAA,GAAAhB,GAAA,cAAJ+F,CAAI9E,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,cAaJ6kB,GAAS,OAAA9kB,EAAAA,EAAAA,GAAAd,GAAA,mBAAT4lB,CAAS7kB,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,WASTF,GAAM,OAAAC,EAAAA,EAAAA,GAAAb,GAAA,gBAANY,CAAME,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,YASN8kB,GAAO,OAAA/kB,EAAAA,EAAAA,GAAA+B,GAAA,iBAAPgjB,CAAO9kB,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,CAEhBI,MAAAA,GACE,OACEC,IAAAA,cAAC0kB,GAAkB,CACjBjgB,KAAMvE,KAAKuE,KACX+f,UAAWtkB,KAAKskB,UAChB/kB,OAAQS,KAAKT,OACbglB,QAASvkB,KAAKukB,SAGpB,EAGF,SAASC,GAAmBvkB,GAC1B,MAAM,KAAEsE,EAAI,UAAE+f,EAAS,OAAE/kB,EAAM,QAAEglB,GAAYtkB,EAE7C,OACEH,IAAAA,cAAA,OACEI,UAAWC,KACT,YACAoE,GAAQ,QAAQA,IAChBhF,GAAU,UAAUA,MAGtBO,IAAAA,cAAA,OACEI,UAAU,QACVqb,IAAKgI,GAAS,GAAGhf,IAAOggB,EAAU,WAAa,MAC/CtF,IAAK1a,IAEPzE,IAAAA,cAAA,OAAKI,UAAU,aAAasD,MAAO8gB,GAChCA,GAIT,CAvBCG,GAAAV,KAAA1jB,GAAA2jB,GAAAC,GAAAC,GAAAC,GAAAllB,GAAAC,GAAAklB,GAAAC,IAAA/jB,GAAAwjB,GAAAvjB,MAAAC,EAAAA,EAAAA,GAAAikB,GAAA,CAtDArmB,GAAc,yBAA0B,CACvCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAQCtC,KAAU,WAaVA,KAAU,gBASVA,KAAU,aASVA,GAAS,CAAEkG,KAAMwG,UAAU,uBAtCJlM,EAAAA,mBAAgB0B,K,sCCnC1C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAomB,GAAA,IAAAlmB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAWvD,MAAAkmB,WAG8B9lB,EAAAA,iBAAiDC,WAAAA,GAAA,SAAAC,YAC7EC,EAAAA,EAAAA,GAAA,KAAAR,GAAAomB,GAAA,QASA5lB,EAAAA,EAAAA,GAAA,KAAAN,IAAAmmB,GAAA,MAAA5lB,GAAA,QAAAC,GAAA,kBAFS4lB,GAAQ,OAAAtlB,EAAAA,EAAAA,GAAAhB,GAAA,kBAARsmB,CAAQrlB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,WASRF,GAAM,OAAAC,EAAAA,EAAAA,GAAAd,GAAA,gBAANa,CAAME,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,CAEfI,MAAAA,GACE,OACEC,IAAAA,cAACilB,GAAsB,CAACD,SAAU9kB,KAAK8kB,SAAUvlB,OAAQS,KAAKT,QAElE,EAGF,SAASwlB,GACP9kB,GAEA,MAAM,SAAE6kB,EAAQ,OAAEvlB,GAAWU,EAE7B,OACEH,IAAAA,cAAA,OAAKI,UAAWC,KAAW,YAAaZ,GAAU,UAAUA,MAC1DO,IAAAA,cAAA,OAAKI,UAAU,YAAYsD,MAAOshB,GAC/BA,GAEHhlB,IAAAA,cAAA,OAAKI,UAAU,YAGrB,CAfC8kB,GAAAL,KAAAtkB,GAAAukB,GAAAC,GAAA5lB,GAAAC,IAAAoB,GAAAokB,GAAAnkB,MAAAC,EAAAA,EAAAA,GAAAwkB,GAAA,CA3BA5mB,GAAc,8BAA+B,CAC5CqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAQCtC,KAAU,eASVA,KAAU,sBAhBiBQ,EAAAA,mBAAgB0B,K,0ECZ9C,MAAQnC,cAAa,GAAEC,SAAQ,GAAE8C,MAAKA,KAAK7C,EAAAA,EAAAA,oBAErC2mB,IAAc5jB,EAAAA,EAAAA,WAClB,0BACA,IAAA6jB,GAAA,IAAA1mB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAA0mB,GAAA,IAAAxjB,QAAAF,GAAA,IAAAhD,QAmBF,MAAA2mB,WAIUvmB,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAAsjB,KACEnmB,EAAAA,EAAAA,GAAA,KAAAR,GAAAwlB,GAAA,KAO+B,UAE/BhlB,EAAAA,EAAAA,GAAA,KAAAN,IAAAulB,GAAA,MAAA/S,GAAA,KAOoC,OAEpClS,EAAAA,EAAAA,GAAA,KAAAL,IAAAwS,GAAA,MAAAlS,GAAA,SASAD,EAAAA,EAAAA,GAAA,KAAAuC,IAAArC,GAAA,MAAAygB,GAAA,SASA3gB,EAAAA,EAAAA,GAAA,KAAAwC,IAAAoe,GAAA,MAAAyF,GAAA,SAOArmB,EAAAA,EAAAA,GAAA,KAAAyC,IAAA6jB,GAAA,MAAAC,GAAA,SAAAljB,EAAAA,GAAAA,GAAA,oBAAAmjB,GAAA,MAOe9D,KACbnf,EAAAA,GAAAA,GAAA4iB,GAAAnlB,KAAKylB,IAAehjB,KAAKif,EAAO,KACjCrf,EAAAA,GAAAA,GAAA,sBACgBqf,KACfnf,EAAAA,GAAAA,GAAA4iB,GAAAnlB,KAAK0lB,IAAiBjjB,KAAKif,EAAO,GACnC,SAhDQnd,GAAI,OAAA/E,EAAAA,EAAAA,GAAAhB,GAAA,cAAJ+F,CAAI9E,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,SASJqS,GAAI,OAAAtS,EAAAA,EAAAA,GAAAd,GAAA,cAAJoT,CAAIrS,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,WASJF,GAAM,OAAAC,EAAAA,EAAAA,GAAAb,GAAA,gBAANY,CAAME,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,gBASN+gB,GAAW,OAAAhhB,EAAAA,EAAAA,GAAA+B,GAAA,qBAAXif,CAAW/gB,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,CAuBpBI,MAAAA,GACE,OACEC,IAAAA,cAAC6lB,GAAyB,CACxBphB,KAAMvE,KAAKuE,KACXuN,KAAM9R,KAAK8R,KACXvS,OAAQS,KAAKT,OACbihB,YAAaxgB,KAAKwgB,YAClB1d,YAAa9C,KAAK8C,YAClB8iB,cAAe5lB,KAAK4lB,eAG1B,EAGK,SAASD,GACd1lB,GAEA,MAAM,KAAEsE,EAAI,KAAEuN,EAAI,OAAEvS,EAAM,YAAEihB,EAAW,YAAE1d,EAAW,cAAE8iB,GAAkB3lB,EAClE4lB,GAAY7iB,EAAAA,EAAAA,SAAgB,GAC5Bie,GAAWje,EAAAA,EAAAA,WAEVsM,GAAc,YAAEwD,EAAW,aAAEE,KAClCE,EAAAA,GAAAA,KACI4S,GAAe3b,EAAAA,EAAAA,cACnB,CACE4b,EACAC,EACAC,EACAC,KAGA,MAAMC,EAAShgB,KAAKigB,IAAIF,EAAYD,GAClCI,EAASlgB,KAAKmgB,IAAIJ,EAAYD,GAC9BM,EAASpgB,KAAKmgB,IAAIN,EAAYD,GAC9BS,EAASrgB,KAAKigB,IAAIJ,EAAYD,GAC1BU,EAAYtgB,KAAKqb,MAAMuE,EAAaC,GAAc,GAClDU,EAAYvgB,KAAKqb,MAAMyE,EAAaC,GAAc,GAClDS,EAAUxgB,KAAKqb,KAAK1P,EAAKrO,OAASgjB,GACxC,OAAIA,GAAa,EACR,CACLG,IAAK,EACLC,IAAK/U,EAAKrO,QAIZkjB,IAAYD,GACZH,IAAWC,GACXD,IAAWE,GACXD,IAAWC,EAEJ,CACLG,IAAKH,EACLI,IAAKF,GAGLA,EAAUD,EAELZ,EAAaW,EAAWD,EAAQG,EAASN,GAE9CM,EAAUD,EAELZ,EAAaS,EAAQE,EAAWN,EAAQQ,QAFjD,CAGA,GAEF,CAAC7U,EAAKrO,SAEFqjB,GAAcrgB,EAAAA,EAAAA,UAAQ,KAC1B,IAAKqL,EAAKrO,OACR,OAOF,MAIMsjB,EAAYjU,EAAc,GAC1BkU,EAAahU,EAAe,GAClC,GAAI+T,GAAa,GAAKC,GAAc,EAClC,OAEF,MAAMjB,EAAa5f,KAAK8gB,MAAMF,EATb,KAUfd,EAAa9f,KAAK8gB,MAAMD,EARZ,KASZhB,EAAa7f,KAAK8gB,MAAMF,EAVb,IAWXb,EAAa/f,KAAK8gB,MAAMD,EATZ,IAURE,EAAanB,EAAaE,EAC9BkB,EAAanB,EAAaE,EACtBkB,EAAStV,EAAKrO,OACpB,GAAI2jB,GAAUF,EACZ,MAAO,CACL5f,MAAOnB,KAAK8gB,MAAMF,EAAYhB,GAC9BsB,UAnBa,KAqBV,GAAID,GAAUD,EACnB,MAAO,CACL7f,MAAOnB,KAAK8gB,MAAMF,EAAYf,GAC9BqB,UAvBS,IAyBN,CAEL,MAAM,IAAET,GAAQd,EACdC,EACAC,EACAC,EACAC,GAEF,MAAO,CACL5e,MAAOnB,KAAK8gB,MAAMF,EAAYH,GAC9BS,UAAWlhB,KAAKigB,IAAIW,EAAYH,EAAM,GAnC7B,IAqCb,IACC,CAAC9U,EAAKrO,OAAQqP,EAAaE,EAAc8S,IAEtCwB,EAAgBA,CACpBjnB,EACAyR,EACAvN,KAEAlE,EAAE+a,kBACFvU,OAAO0gB,aAAatG,EAAS7d,SAC7ByiB,EAAUziB,SAAU,EACpB6d,EAAS7d,QAAUyD,OAAO2gB,YAAW,WAC9B3B,EAAUziB,SACbN,SAAAA,EAAc,CACZgP,OACAvN,QAGN,GAAG,IAAI,EAEHkjB,EAAkBA,CACtBpnB,EACAyR,EACAvN,KAEAsC,OAAO0gB,aAAatG,EAAS7d,SAC7ByiB,EAAUziB,SAAU,EACpB/C,EAAE+a,kBACFwK,SAAAA,EAAgB,CACd9T,OACAvN,QACA,EAGJ,OACEzE,IAAAA,cAAA,OACEI,UAAWC,KACT,UACA,CACEunB,YAAsB,SAATnjB,GAA4B,aAATA,EAChCojB,WAAqB,QAATpjB,GAEdhF,GAAU,WAAWA,KAEvBmE,IAAK4L,EACLtL,QAAU3D,GAAMinB,EAAcjnB,OAAGunB,EAAW,aAC5CC,cAAgBxnB,GAAMonB,EAAgBpnB,OAAGunB,EAAW,cAEpD9nB,IAAAA,cAAA,OACEI,UAAWC,KACT,YACA,CACE2nB,cAAwB,SAATvjB,GAA4B,aAATA,EAClCwjB,aAAuB,QAATxjB,GAEhBhF,GAAU,aAAaA,MAGzBO,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,OAAKI,UAAU,iBACZ4R,EAAKnO,KAAI,CAACC,EAAMC,IACf/D,IAAAA,cAAA,OACEgE,IAAKD,EACL3D,UAAU,cACVqD,MAAO,CAAE+D,MAAOwf,aAAW,EAAXA,EAAaxf,QAE7BxH,IAAAA,cAAA,OACEI,UAAU,OACVqD,MAAO,CAAE+D,MAAOwf,aAAW,EAAXA,EAAaO,WAC7BrjB,QAAU3D,GAAMinB,EAAcjnB,EAAGuD,EAAM,QACvCikB,cAAgBxnB,GAAMonB,EAAgBpnB,EAAGuD,EAAM,SAE/C9D,IAAAA,cAACmlB,GAAW,CACV1gB,KAAMX,EAAKW,KACX+f,UAAW1gB,EAAK0gB,UAChB/kB,OAAQqE,EAAKrE,OACbglB,QAAS3gB,EAAK2gB,gBAOzB/D,GACC1gB,IAAAA,cAAA,OAAKI,UAAU,UACbJ,IAAAA,cAAA,OAAKI,UAAU,eAAesgB,KAM1C,CAhMCwH,GAAA5C,KAAA/kB,GAAA2jB,GAAAC,GAAA/S,GAAAC,GAAAlS,GAAAC,GAAAygB,GAAAC,GAAAyF,GAAAI,GAAAwC,GAAA3C,GAAAC,GAAAG,GAAAwC,GAAA1C,IAAAllB,GAAA4kB,GAAA3kB,MAAAC,EAAAA,EAAAA,GAAAwnB,GAAA,CA5EA5pB,GAAc,8BAA+B,CAC5CqC,WAAY,CAAC0nB,EAAAA,EAAexnB,GAAAA,MAC5B,EAWCtC,GAAS,CAAEiG,WAAW,IAAQ,WAS9BjG,GAAS,CAAEiG,WAAW,IAAQ,WAS9BjG,KAAU,aASVA,KAAU,kBAOV8C,GAAM,CAAEoD,KAAM,oBAAoB,kBAAAC,IAAAhF,EAAAA,EAAAA,GAAAgC,GAAAgD,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA8B,GAAAgD,EAAA/E,IAAA,CAOlC0B,GAAM,CAAEoD,KAAM,sBAAsB,oBAAAC,IAAAhF,EAAAA,EAAAA,GAAAiC,GAAA+C,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA+B,GAAA+C,EAAA/E,KAAA,GAAAgF,GAAA0gB,GAAAzgB,KAAAC,EAAAA,GAAAA,GAAAF,KAlD7B5F,EAAAA,mBAAgB0B,K,4CCvB1B,MAAM6nB,IAAyB/mB,EAAAA,EAAAA,WAC7B,gCAEMjD,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAE9B2mB,IAAc5jB,EAAAA,EAAAA,WAClB,0BACA,IAAAgnB,GAAA,IAAA7pB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAiBF,MAAA6pB,WAIUzpB,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,GAAA+pB,GAAA,KAOgC,MAEhCvpB,EAAAA,EAAAA,GAAA,KAAAN,IAAA8pB,GAAA,MAAAC,GAAA,KAO2B,MAE3BzpB,EAAAA,EAAAA,GAAA,KAAAL,IAAA+pB,GAAA,MAAAC,GAAA,QAAAC,GAAA,kBAXSC,GAAQ,OAAArpB,EAAAA,EAAAA,GAAAhB,GAAA,kBAARqqB,CAAQppB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,YASRqpB,GAAO,OAAAtpB,EAAAA,EAAAA,GAAAd,GAAA,iBAAPoqB,CAAOrpB,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,YASPspB,GAAO,OAAAvpB,EAAAA,EAAAA,GAAAb,GAAA,iBAAPoqB,CAAOtpB,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,CAEhBI,MAAAA,GACE,OACEC,IAAAA,cAACkpB,GAAyB,CACxBH,SAAU7oB,KAAK6oB,SACfC,QAAS9oB,KAAK8oB,QACdC,QAAS/oB,KAAK+oB,SAGpB,EAGK,SAASC,GACd/oB,GAEA,MAAM,SAAE4oB,EAAQ,QAAEC,EAAO,QAAEC,GAAY9oB,EACjCqP,GAAetM,EAAAA,EAAAA,UACfimB,GAAYjmB,EAAAA,EAAAA,WACXkmB,EAAOC,IAAYvjB,EAAAA,EAAAA,YACpBwjB,GAAWjI,EAAAA,GAAAA,GAAY+H,GAe7B,OAbAG,EAAAA,EAAAA,kBAAgB,KACd,GAAMR,EAASplB,QAAUqlB,EAAU,EAAG,CAEpC,MAAMQ,EACJha,EAAalM,QAAQ0P,aACpBmW,EAAU7lB,QAAQ0P,aAAesW,GAAY,IAC1CG,EACJja,EAAalM,QAAQ4P,cACpBiW,EAAU7lB,QAAQ4P,cAAgBoW,GAAY,IACjDD,EAAShjB,KAAKmgB,IAAIngB,KAAK8gB,MAAiC,IAA3B9gB,KAAKmgB,IAAIgD,EAAQC,IAAiB,IAAK,GACtE,IACC,CAACV,EAAUO,EAAUN,IAGtBhpB,IAAAA,cAAA,OAAK4D,IAAK4L,EAAcpP,UAAU,WAChCJ,IAAAA,cAAA,OACEI,UAAU,kBACVwD,IAAKulB,EACL1lB,MAAO,IACD2lB,EAAQ,CAAE7hB,UAAW,SAAS6hB,MAAa,CAAC,IAGlDppB,IAAAA,cAACsoB,GAAsB,CAACloB,UAAU,WAAW4kB,SAAUiE,IACvDjpB,IAAAA,cAAA,OAAKI,UAAU,UACZ2oB,EAASllB,KAAI,CAACC,EAAMC,IACnB/D,IAAAA,cAAA,OAAKI,UAAU,iBAAiB4D,IAAKD,GACnC/D,IAAAA,cAAA,OACEI,UAAWC,KAAW,mBAAoB,CACxCqpB,qBACgB,SAAd5lB,EAAKW,MAAiC,aAAdX,EAAKW,KAC/BklB,oBAAmC,QAAd7lB,EAAKW,QAG5BzE,IAAAA,cAAA,OAAKI,UAAU,kBACbJ,IAAAA,cAAA,OACEI,UAAU,uBACVqD,MAAO,CAAEmmB,oBAAqB,UAAUZ,WAEvCllB,EAAKkO,KAAKnO,KAAI,CAACgmB,EAAM9lB,IACpB/D,IAAAA,cAAA,OAAKgE,IAAKD,EAAO3D,UAAU,eACzBJ,IAAAA,cAACmlB,GAAW,CACV1gB,KAAMolB,EAAKplB,KACX+f,UAAWqF,EAAKrF,iBAM1BxkB,IAAAA,cAAA,OAAKI,UAAU,gBACbJ,IAAAA,cAAA,OAAKI,UAAU,SAAS0D,EAAKJ,cAS/C,CArEComB,GAAAtB,KAAAjoB,GAAAkoB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAAtoB,GAAA+nB,GAAA9nB,MAAAC,EAAAA,EAAAA,GAAAopB,GAAA,CA3CAxrB,GAAc,8BAA+B,CAC5CqC,WAAY,CAAC0nB,EAAAA,EAAexnB,GAAAA,MAC5B,EAWCtC,GAAS,CAAEiG,WAAW,IAAQ,eAS9BjG,GAAS,CAAEkG,KAAMwE,SAAS,cAS1B1K,KAAU,uBA3BHQ,EAAAA,mBAAgB0B,K,gFCvB1B,MAAM6nB,IAAyB/mB,EAAAA,EAAAA,WAC7B,+BAEIwoB,IAAuBxoB,EAAAA,EAAAA,WAC3B,4BAEIyoB,IAA0BzoB,EAAAA,EAAAA,WAG9B,gCAEMjD,cAAa,GAAEC,SAAQ,GAAE8C,MAAKA,KAAK7C,EAAAA,EAAAA,oBAAmB,IAAAyrB,GAAA,IAAAvrB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAAurB,GAAA,IAAAroB,QAAAH,GAAA,IAAA/C,QAAAgD,GAAA,IAAAhD,QAAAwrB,GAAA,IAAAxrB,QAAAyrB,GAAA,IAAAzrB,QAAA0rB,GAAA,IAAA1rB,QA6C9D,MAAA2rB,WAG2BvrB,EAAAA,iBAA8CC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAAmoB,KACvEhrB,EAAAA,EAAAA,GAAA,KAAAR,GAAA6rB,GAAA,QAWArrB,EAAAA,EAAAA,GAAA,KAAAN,IAAA4rB,GAAA,MAAAld,GAAA,SASApO,EAAAA,EAAAA,GAAA,KAAAL,IAAA0O,GAAA,MAAAkd,GAAA,SASAvrB,EAAAA,EAAAA,GAAA,KAAAuC,IAAAipB,GAAA,MAAAC,GAAA,SAOAzrB,EAAAA,EAAAA,GAAA,KAAAwC,IAAAkpB,GAAA,MAAAC,GAAA,SAUA3rB,EAAAA,EAAAA,GAAA,KAAAyC,IAAAmpB,GAAA,MAAAC,GAAA,SAUA7rB,EAAAA,EAAAA,GAAA,KAAAirB,IAAoBa,GAAA,MAAG,MACrBvoB,EAAAA,GAAAA,GAAAynB,GAAAhqB,KAAK+qB,IAAoBtoB,MAAM,KAEjCzD,EAAAA,EAAAA,GAAA,KAAAkrB,IAAiB,CACfc,EACAzmB,EACAuN,KAEA9R,KAAKsO,UAAY0c,EACbA,IACFzoB,EAAAA,GAAAA,GAAAynB,GAAAhqB,KAAKirB,IAAqBxoB,KAAK,CAC7B8B,OACAuN,QAEJ,KAGF9S,EAAAA,EAAAA,GAAA,KAAAmrB,IAAyB,CACvBa,EACAzmB,EACAuN,KAEA9R,KAAKsO,UAAY0c,EACbA,IACFzoB,EAAAA,GAAAA,GAAAynB,GAAAhqB,KAAKkrB,IAAmBzoB,KAAK,CAC3B8B,OACAuN,QAEJ,GACA,eA5EOqZ,GAAU,OAAA3rB,EAAAA,EAAAA,GAAAhB,GAAA,oBAAV2sB,CAAU1rB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,cASV6O,GAAS,OAAA9O,EAAAA,EAAAA,GAAAd,GAAA,mBAAT4P,CAAS7O,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,mBAST2rB,GAAc,OAAA5rB,EAAAA,EAAAA,GAAAb,GAAA,wBAAdysB,CAAc3rB,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,CA4DvBI,MAAAA,GACE,OACEC,IAAAA,cAACurB,GAAmB,CAClB/c,UAAWtO,KAAKsO,UAChB6c,WAAYnrB,KAAKmrB,WACjBG,iBAAiB9rB,EAAAA,EAAAA,GAAKyqB,GAALjqB,MACjBurB,mBAAmB/rB,EAAAA,EAAAA,GAAK2qB,GAALnqB,MACnB4lB,eAAepmB,EAAAA,EAAAA,GAAK0qB,GAALlqB,MACforB,eAAgBprB,KAAKorB,gBAG3B,EAGF,SAASC,GAAoBprB,GAC3B,MAAM,WACJkrB,EAAU,UACV7c,EAAS,gBACTgd,EAAe,kBACfC,EAAiB,cACjB3F,EAAa,eACbwF,GACEnrB,EACEurB,GAAa/kB,EAAAA,EAAAA,UAAQ,IAClB,GAAGglB,OAAOnd,IAChB,CAACA,IAEEod,GAAajlB,EAAAA,EAAAA,UAAQ,KACzB,MAAMklB,EAAiB,GAWvB,OAVAR,EAAWtC,SAASllB,KAAKioB,IACnBJ,EAAWzQ,SAAS6Q,EAAI9nB,MAC1B6nB,EAAKE,KAAKD,EAAI9nB,KAEhB8nB,EAAIE,MAAMnoB,KAAKgmB,IACT6B,EAAWzQ,SAAS4O,EAAK7lB,MAC3B6nB,EAAKE,KAAKlC,EAAK7lB,IACjB,GACA,IAEG6nB,CAAI,GACV,CAACR,EAAYK,IAEhB,OACE1rB,IAAAA,cAAA,OACEI,UAAU,UACV8D,QAASA,KACPunB,EAAkB,KAAK,GAGzBzrB,IAAAA,cAAA,OAAKI,UAAU,aACbJ,IAAAA,cAACsoB,GAAsB,CACrBloB,UAAU,YACV4kB,SAAUqG,EAAWpC,QACrB/kB,QAAU3D,IACRA,EAAE+a,kBACFmQ,EAAkBJ,EAAWrnB,IAAK,QAAQ,EAE5CvE,OAAQisB,EAAWzQ,SAASoQ,EAAWrnB,KAAO,cAAW8jB,IAE3D9nB,IAAAA,cAAA,OACEI,UAAU,oBACVqD,MAAO,CACLmmB,oBAAqB,UAAUyB,EAAWtC,SAASplB,iBAGpD0nB,EAAWtC,SAASllB,KAAKioB,IACxB,MAAMG,EAAaL,EAAW3Q,SAAS6Q,EAAI9nB,KAC3C,OACEhE,IAAAA,cAACgqB,GAAuB,CACtBhmB,IAAK8nB,EAAI9nB,IACTS,KAAMqnB,EAAIrnB,KACVrE,UAAU,kBACVsgB,YAAaoL,EAAII,YACjBla,KAAM8Z,EAAIE,MAAMnoB,KAAKgmB,IACnB,MAAMsC,EAAcP,EAAW3Q,SAAS4O,EAAK7lB,KAC7C,MAAO,CACLwgB,UAAWqF,EAAKrF,UAChB/f,KAAMolB,EAAKplB,KACXT,IAAK6lB,EAAK7lB,IACVygB,QAASoF,EAAKpF,QACdhlB,OACE0sB,GAAeF,EACXA,OACEnE,EACA,SACF8D,EAAWjoB,OACX,aACAmkB,EACP,IAEH9kB,YAAasH,IAAoB,IAAnB,KAAE7F,EAAI,KAAEuN,GAAM1H,EAC1B,OAAQ7F,GACN,IAAK,YACHgnB,EAAkBK,EAAI9nB,IAAK,UAAW8nB,GACtC,MAEF,IAAK,OACHL,EAAmBzZ,EAAahO,IAAK,OAAQgO,GAGjD,EAEFvS,OACsBqsB,EAAIE,MAAMrc,MAAMka,GAClC+B,EAAW3Q,SAAS4O,EAAK7lB,QAELioB,EAClBA,EACE,cACAnE,EACF8D,EAAWjoB,OACX,aACAmkB,EAENhC,cAAesG,IAAoB,IAAnB,KAAE3nB,EAAI,KAAEuN,GAAMoa,EAC5B,OAAQ3nB,GACN,IAAK,YACHqhB,EAAcgG,EAAI9nB,IAAK,UAAW8nB,GAClC,MAEF,IAAK,OACHhG,EAAe9T,EAAahO,IAAK,OAAQgO,GAG7C,GAEF,MAINsZ,GACAtrB,IAAAA,cAAC+pB,GAAoB,CACnB3pB,UAAU,eACV8D,QAAU3D,IACRA,EAAE+a,kBACFkQ,SAAAA,GAAmB,KAOjC,CAlICa,GAAA/B,KAAA/pB,GAAAgqB,GAAAC,GAAAld,GAAAC,GAAAkd,GAAAC,GAAAC,GAAAM,GAAAqB,GAAA1B,GAAAC,GAAAO,GAAAmB,GAAAzB,GAAAC,GAAAI,GAAAqB,GAAAxB,IAAAxqB,GAAAypB,GAAAxpB,MAAAC,EAAAA,EAAAA,GAAA2rB,GAAA,CAvGA/tB,GAAc,0BAA2B,CACxCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAQCtC,GAAS,CACRiG,WAAW,IACX,iBASDjG,GAAS,CAAEiG,WAAW,IAAQ,gBAS9BjG,GAAS,CAAEkG,KAAMwG,UAAU,qBAO3B5J,GAAM,CAAEoD,KAAM,uBAAuB,uBAAAC,IAAAhF,EAAAA,EAAAA,GAAA+B,GAAAiD,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA6B,GAAAiD,EAAA/E,IAAA,CAOrC0B,GAAM,CAAEoD,KAAM,kBAAkB,sBAAAC,IAAAhF,EAAAA,EAAAA,GAAAgC,GAAAgD,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA8B,GAAAgD,EAAA/E,IAAA,CAUhC0B,GAAM,CAAEoD,KAAM,oBAAoB,wBAAAC,IAAAhF,EAAAA,EAAAA,GAAAiC,GAAA+C,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA+B,GAAA+C,EAAA/E,KAAA,GAAAgF,GAAA0lB,GAAAzlB,KAAAC,EAAAA,GAAAA,GAAAF,KAnDV5F,EAAAA,mBAAgB0B,K,oKCpE3C,MAAQnC,cAAa,GAAEC,SAAQ,GAAE8C,MAAKA,KAAK7C,EAAAA,EAAAA,oBAAmB,IAAAiuB,GAAA,IAAA/tB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAgD,GAAA,IAAAhD,QAAA+N,GAAA,IAAA/N,QAAAgO,GAAA,IAAAhO,QAAAkO,GAAA,IAAAlO,QAAAmO,GAAA,IAAAnO,QAAA+tB,GAAA,IAAA/tB,QAAAguB,GAAA,IAAAhuB,QAAAiuB,GAAA,IAAA/qB,QAAAgrB,GAAA,IAAAluB,QAAAmuB,GAAA,IAAAnuB,QAAAouB,GAAA,IAAApuB,QAAAquB,GAAA,IAAAruB,QAAAsuB,GAAA,IAAAtuB,QA0B9D,MAAAuuB,WASsBnuB,EAAAA,iBAAyCC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAA6qB,KAC7D1tB,EAAAA,EAAAA,GAAA,KAAAR,GAAA6rB,GAAA,QAQArrB,EAAAA,EAAAA,GAAA,KAAAN,IAAA4rB,GAAA,MAAA2C,GAAA,SAQAjuB,EAAAA,EAAAA,GAAA,KAAAL,IAAAuuB,GAAA,MAAAC,GAAA,SAQAnuB,EAAAA,EAAAA,GAAA,KAAAuC,IAAA6rB,GAAA,MAAAC,GAAA,SAQAruB,EAAAA,EAAAA,GAAA,KAAAwC,IAAA8rB,GAAA,MAAAC,GAAA,SAQAvuB,EAAAA,EAAAA,GAAA,KAAAyC,IAAA+rB,GAAA,MAAAC,GAAA,KAM8B,CAC5BnmB,MAAO,IACPC,OAAQ,IACRmmB,WAAY,IACZC,YAAa,IACbC,QAAS,IACTC,SAAU,SAGZ7uB,EAAAA,EAAAA,GAAA,KAAAwN,IAAAshB,GAAA,MAAAC,GAAA,KAOE,mCAEF/uB,EAAAA,EAAAA,GAAA,KAAAyN,IAAAuhB,GAAA,MAAAC,GAAA,SAKAjvB,EAAAA,EAAAA,GAAA,KAAA2N,IAAAuhB,GAAA,MAAAC,GAAA,SAMAnvB,EAAAA,EAAAA,GAAA,KAAA4N,IAAAwhB,GAAA,MAAAC,GAAA,KAI+B,QAE/BrvB,EAAAA,EAAAA,GAAA,KAAAwtB,IAAA8B,GAAA,MAAAC,GAAA,SAMAvvB,EAAAA,EAAAA,GAAA,KAAAytB,IAAA+B,GAAA,MAAAC,GAAA,SAMAzvB,EAAAA,EAAAA,GAAA,KAAA2tB,IAA4B+B,GAAA,MAAI5c,KAC9BvP,EAAAA,GAAAA,GAAAmqB,GAAA1sB,KAAK2uB,IAA4BlsB,KAAKqP,EAAK,KAE7C9S,EAAAA,EAAAA,GAAA,KAAA4tB,GAAAgC,GAAA,QAOA5vB,EAAAA,EAAAA,GAAA,KAAA6tB,IAAAgC,GAAA,MAAAC,GAAA,SAOA9vB,EAAAA,EAAAA,GAAA,KAAA8tB,IAAAiC,GAAA,MAAAC,GAAA,SAOAhwB,EAAAA,EAAAA,GAAA,KAAA+tB,IAAAkC,GAAA,MAAA7sB,GAAA,SAAAC,EAAAA,GAAAA,GAAA,wBAAAC,GAAA,MAOmBwP,KACjBvP,EAAAA,GAAAA,GAAAmqB,GAAA1sB,KAAKkvB,IAAkBzsB,KAAKqP,EAAK,KAClCzP,EAAAA,GAAAA,GAAA,yBACmByP,KAClBvP,EAAAA,GAAAA,GAAAmqB,GAAA1sB,KAAKmvB,IAAmB1sB,KAAKqP,EAAK,KACnCzP,EAAAA,GAAAA,GAAA,0BACoByP,KACnBvP,EAAAA,GAAAA,GAAAmqB,GAAA1sB,KAAKovB,IAAgB3sB,KAAKqP,EAAK,KAChCzP,EAAAA,GAAAA,GAAA,wBACkByP,KACjBvP,EAAAA,GAAAA,GAAAmqB,GAAA1sB,KAAKwC,IAAcC,KAAKqP,EAAK,GAC9B,eAjIQqZ,GAAU,OAAA3rB,EAAAA,EAAAA,GAAAhB,GAAA,oBAAV2sB,CAAU1rB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,cAQV4vB,GAAS,OAAA7vB,EAAAA,EAAAA,GAAAd,GAAA,mBAAT2wB,CAAS5vB,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,gBAQT6vB,GAAW,OAAA9vB,EAAAA,EAAAA,GAAAb,GAAA,qBAAX2wB,CAAW7vB,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,sBAQX8vB,GAAiB,OAAA/vB,EAAAA,EAAAA,GAAA+B,GAAA,2BAAjBguB,CAAiB9vB,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,8BAQjB+vB,GAAyB,OAAAhwB,EAAAA,EAAAA,GAAAgC,GAAA,mCAAzBguB,CAAyB/vB,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,aAQzBgwB,GAAQ,OAAAjwB,EAAAA,EAAAA,GAAAiC,GAAA,kBAARguB,CAAQhwB,IAAAC,EAAAA,EAAAA,GAAA+B,GAAA,KAAAhC,EAAA,kBAeRiwB,GAAa,OAAAlwB,EAAAA,EAAAA,GAAAgN,GAAA,uBAAbkjB,CAAajwB,IAAAC,EAAAA,EAAAA,GAAA8M,GAAA,KAAA/M,EAAA,gBAObkwB,GAAW,OAAAnwB,EAAAA,EAAAA,GAAAiN,GAAA,qBAAXkjB,CAAWlwB,IAAAC,EAAAA,EAAAA,GAAA+M,GAAA,KAAAhN,EAAA,aAKXmwB,GAAQ,OAAApwB,EAAAA,EAAAA,GAAAmN,GAAA,kBAARijB,CAAQnwB,IAAAC,EAAAA,EAAAA,GAAAiN,GAAA,KAAAlN,EAAA,gBAMRowB,GAAW,OAAArwB,EAAAA,EAAAA,GAAAoN,GAAA,qBAAXijB,CAAWpwB,IAAAC,EAAAA,EAAAA,GAAAkN,GAAA,KAAAnN,EAAA,qBAMXqwB,GAAgB,OAAAtwB,EAAAA,EAAAA,GAAAgtB,GAAA,0BAAhBsD,CAAgBrwB,IAAAC,EAAAA,EAAAA,GAAA8sB,GAAA,KAAA/sB,EAAA,CAoDzBI,MAAAA,GACE,OACEC,IAAAA,cAACiwB,GAAAA,EAAc,CACb5E,WAAYnrB,KAAKmrB,WACjBkE,UAAWrvB,KAAKqvB,UAChBW,yBAAyBxwB,EAAAA,EAAAA,GAAKmtB,GAAL3sB,MACzBsvB,YAAatvB,KAAKsvB,YAClBC,kBAAmBvvB,KAAKuvB,kBACxBU,eAAgBjwB,KAAKkwB,gBACrBC,gBAAiBnwB,KAAKowB,iBACtBC,kBAAmBrwB,KAAKqwB,kBACxBb,0BAA2BxvB,KAAKwvB,0BAChCc,gBAAiBtwB,KAAKswB,gBACtBb,SAAUzvB,KAAKyvB,SACfC,cAAe1vB,KAAK0vB,cACpBC,YAAa3vB,KAAK2vB,YAClBC,SAAU5vB,KAAK4vB,SACfC,YAAa7vB,KAAK6vB,YAClBC,iBAAkB9vB,KAAK8vB,kBAG7B,EACDS,GAAAvD,KAAA3sB,GAAAgqB,GAAAC,GAAA2C,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAK,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAE,GAAA6B,GAAA9B,GAAAE,GAAAM,GAAAuB,GAAA5B,GAAAC,GAAAK,GAAAuB,GAAA3B,GAAAC,GAAAI,GAAAuB,GAAA1B,GAAA7sB,GAAAI,GAAA6B,GAAA/B,IAAAhC,GAAAisB,GAAAhsB,MAAAC,EAAAA,EAAAA,GAAA+vB,GAAA,CAzKAnyB,GAAc,qBAAsB,CACnCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,GACjCiwB,aAAc,CACZ,+BACA,8BACA,6BACA,6BAEF,EAKCvyB,GAAS,CACRiG,WAAW,IACX,iBAMDjG,GAAS,CACRiG,WAAW,IACX,gBAMDjG,GAAS,CACRiG,WAAW,IACX,kBAMDjG,GAAS,CACRiG,WAAW,IACX,wBAMDjG,GAAS,CACRiG,WAAW,IACX,gCAMDjG,GAAS,CACRiG,WAAW,IACX,eAaDjG,GAAS,CACRiG,WAAW,IACX,oBAODjG,KAAU,kBAKVA,GAAS,CAAEkG,KAAMwG,UAAU,eAM3B1M,GAAS,CAAEkG,KAAMwE,SAAS,kBAM1B1K,GAAS,CAAEiG,WAAW,IAAQ,uBAM9BnD,GAAM,CAAEoD,KAAM,6BAA6B,+BAAAC,IAAAhF,EAAAA,EAAAA,GAAAitB,GAAAjoB,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAA+sB,GAAAjoB,EAAA/E,IAAA,CAU3C0B,GAAM,CAAEoD,KAAM,mBAAmB,qBAAAC,IAAAhF,EAAAA,EAAAA,GAAAotB,GAAApoB,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAAktB,GAAApoB,EAAA/E,IAAA,CAOjC0B,GAAM,CAAEoD,KAAM,oBAAoB,sBAAAC,IAAAhF,EAAAA,EAAAA,GAAAqtB,GAAAroB,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAAmtB,GAAAroB,EAAA/E,IAAA,CAOlC0B,GAAM,CAAEoD,KAAM,oBAAoB,mBAAAC,IAAAhF,EAAAA,EAAAA,GAAAstB,GAAAtoB,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAAotB,GAAAtoB,EAAA/E,IAAA,CAOlC0B,GAAM,CAAEoD,KAAM,eAAe,iBAAAC,IAAAhF,EAAAA,EAAAA,GAAAutB,GAAAvoB,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAAqtB,GAAAvoB,EAAA/E,KAAA,GAAAgF,GAAAkoB,GAAAjoB,KAAAC,EAAAA,GAAAA,GAAAF,KA1HV5F,EAAAA,mBAAgB0B,K,eC5C/B,IAAKob,GAAC,SAADA,GAAC,OAADA,EAAC,gBAADA,CAAC,MAIb,MAQaC,GAAK,8B,2BCLlBC,EAAAA,GAAAA,qBAAoBD,GDOG,CAAEE,GAVN,CACjB+U,OAAQ,KASmB7U,GANV,CACjB6U,OAAQ,OCDV,MAAQzyB,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAwyB,GAAA,IAAAtyB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAWvD,MAAAsyB,WAGwBlyB,EAAAA,iBAA2CC,WAAAA,GAAA,SAAAC,YACjEC,EAAAA,EAAAA,GAAA,KAAAR,GAAAwyB,GAAA,QASAhyB,EAAAA,EAAAA,GAAA,KAAAN,IAAAuyB,GAAA,MAAA/rB,GAAA,QAAAC,GAAA,cAFS+rB,GAAI,OAAA1xB,EAAAA,EAAAA,GAAAhB,GAAA,cAAJ0yB,CAAIzxB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,UASJsE,GAAK,OAAAvE,EAAAA,EAAAA,GAAAd,GAAA,eAALqF,CAAKtE,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,CAEdI,MAAAA,GACE,OAAOC,IAAAA,cAACqxB,GAAkB,CAACD,KAAMlxB,KAAKkxB,KAAMntB,MAAO/D,KAAK+D,OAC1D,EAGK,SAASotB,GAAmBlxB,GACjC,MAAM,IAAQ8d,EAAAA,GAAAA,gBAAenC,IAC7B,OACE9b,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,QAAMI,UAAU,QAAQD,EAAMixB,MAC9BpxB,IAAAA,cAAA,QAAMI,UAAU,UAAU4d,EAAEnC,GAAEkV,SAC9B/wB,IAAAA,cAAA,QAAMI,UAAU,SAASD,EAAM8D,OAGrC,CAXCqtB,GAAAL,KAAA1wB,GAAA2wB,GAAAC,GAAA/rB,GAAAC,IAAA7E,GAAAwwB,GAAAvwB,MAAAC,EAAAA,EAAAA,GAAA4wB,GAAA,CAzBAhzB,GAAc,uBAAwB,CACrCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAQCtC,KAAU,WASVA,KAAU,qBAhBWQ,EAAAA,mBAAgB0B,K,mECfxC,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAA+yB,GAAA,IAAA7yB,GAAA,IAAAC,QAWvD,MAAA6yB,WAGwBzyB,EAAAA,iBAA2CC,WAAAA,GAAA,SAAAC,YAEjEC,EAAAA,EAAAA,GAAA,KAAAR,GAAA+yB,GAAA,OAAAC,GAAA,aAOSC,GAAG,OAAAjyB,EAAAA,EAAAA,GAAAhB,GAAA,aAAHizB,CAAGhyB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,CAEZI,MAAAA,GACE,OAAOC,IAAAA,cAAC4xB,GAAkB,CAACD,IAAKzxB,KAAKyxB,KACvC,EAGK,SAASC,GAAmBzxB,GACjC,OACEH,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,OAAKI,UAAU,QACbJ,IAAAA,cAAA,OAAKyb,IAAKtb,EAAMwxB,IAAKxS,IAAI,gBAE3Bnf,IAAAA,cAAA,OAAKyb,IAAKoW,GAAS1S,IAAI,eAG7B,CAXC2S,GAAAN,KAAAjxB,GAAAkxB,GAAAC,IAAAlxB,GAAA+wB,GAAA9wB,MAAAC,EAAAA,EAAAA,GAAAoxB,GAAA,CAjBAxzB,GAAc,uBAAwB,CACrCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EASCtC,KAAU,mBARWQ,EAAAA,mBAAgB0B,K,kDCbxC,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAE9BuzB,IAAmBxwB,EAAAA,EAAAA,WACvB,wBAEIywB,IAAmBzwB,EAAAA,EAAAA,WACvB,wBACA,IAAA0wB,GAAA,IAAAvzB,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAgBF,MAAAuzB,WAG8BnzB,EAAAA,iBAAiDC,WAAAA,GAAA,SAAAC,YAC7EC,EAAAA,EAAAA,GAAA,KAAAR,GAAAiqB,GAAA,QASAzpB,EAAAA,EAAAA,GAAA,KAAAN,IAAAgqB,GAAA,MAAAuJ,GAAA,SASAjzB,EAAAA,EAAAA,GAAA,KAAAL,IAAAuzB,GAAA,MAAAC,GAAA,SASAnzB,EAAAA,EAAAA,GAAA,KAAAuC,IAAA6wB,GAAA,MAAA/H,GAAA,QAAAC,GAAA,iBApBSxB,GAAO,OAAAtpB,EAAAA,EAAAA,GAAAhB,GAAA,iBAAPsqB,CAAOrpB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,SASP4yB,GAAI,OAAA7yB,EAAAA,EAAAA,GAAAd,GAAA,cAAJ2zB,CAAI5yB,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,cASJ6yB,GAAS,OAAA9yB,EAAAA,EAAAA,GAAAb,GAAA,mBAAT2zB,CAAS7yB,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,eAST0rB,GAAU,OAAA3rB,EAAAA,EAAAA,GAAA+B,GAAA,oBAAV4pB,CAAU1rB,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,CAEnBI,MAAAA,GACE,OACEC,IAAAA,cAACyyB,GAAwB,CACvBF,KAAMryB,KAAKqyB,KACXvJ,QAAS9oB,KAAK8oB,QACdwJ,UAAWtyB,KAAKsyB,UAChBnH,WAAYnrB,KAAKmrB,YAGvB,EAGK,SAASoH,GACdtyB,GAEA,MAAM,KAAEoyB,EAAI,QAAEvJ,EAAO,UAAEwJ,EAAS,WAAEnH,GAAelrB,EAC3CuyB,GAAc/rB,EAAAA,EAAAA,UAAQ,KAC1B,MAAMgsB,EAAQ,GACd,IAAK,IAAIvrB,EAAI,EAAGA,GAAKmrB,EAAMnrB,IACzB,IAAK,IAAIwrB,EAAI,EAAGA,GAAK5J,EAAS4J,IAC5B,GACGJ,IACGprB,EAAI,GAAM,GAAKwrB,EAAI,GAAM,GAAOxrB,EAAI,GAAM,GAAKwrB,EAAI,GAAM,KAC3DJ,IACEprB,EAAI,GAAM,GAAKwrB,EAAI,GAAM,GAAOxrB,EAAI,GAAM,GAAKwrB,EAAI,GAAM,GAC7D,CAGA,MAAMC,EAA0BxH,aAAU,EAAVA,EAAasH,EAAMhvB,QACnDgvB,EAAM5G,KACJ/rB,IAAAA,cAAA,OACEgE,IAAK,GAAGoD,KAAKwrB,IACbxyB,UAAU,OACVqD,MAAO,CACLqvB,SAAU,GAAG1rB,OAAOwrB,EAAI5J,GAAWA,MAAY5hB,OAC7CwrB,EAAI5J,GAAWA,MAIlB6J,GACC7yB,IAAAA,cAACA,IAAAA,SAAc,KACbA,IAAAA,cAACgyB,GAAgB,CACfZ,KAAMyB,EAAQzB,KACdntB,MAAO4uB,EAAQ5uB,MACf7D,UAAU,SAEZJ,IAAAA,cAAC+xB,GAAgB,CAACJ,IAAKkB,EAAQlB,IAAKvxB,UAAU,WAKxD,CAGJ,OAAOuyB,CAAK,GACX,CAACJ,EAAMvJ,EAASwJ,EAAWnH,IAE9B,OACErrB,IAAAA,cAAA,OACEI,UAAU,YACVqD,MAAO,CACLmmB,oBAAqB,UAAUZ,YAGhC0J,EAGP,CAzDCK,GAAAb,KAAA3xB,GAAAooB,GAAAC,GAAAuJ,GAAAC,GAAAC,GAAAC,GAAA/H,GAAAC,IAAAhqB,GAAAyxB,GAAAxxB,MAAAC,EAAAA,EAAAA,GAAAqyB,GAAA,CAlDAz0B,GAAc,8BAA+B,CAC5CqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAQCtC,GAAS,CAAEkG,KAAMwE,SAAS,cAS1B1K,GAAS,CAAEkG,KAAMwE,SAAS,WAS1B1K,GAAS,CAAEkG,KAAMwG,UAAU,gBAS3B1M,GAAS,CAAEiG,WAAW,IAAQ,0BAlCHzF,EAAAA,mBAAgB0B,K,4CC7B9C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAw0B,GAAA,I,GAAAt0B,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAiBvD,MAAAs0B,WAG6Bl0B,EAAAA,iBAAgDC,WAAAA,GAAA,SAAAC,YAC3EC,EAAAA,EAAAA,GAAA,KAAAR,GAAAw0B,GAAA,KAO+C,aAE/Ch0B,EAAAA,EAAAA,GAAA,KAAAN,IAAAu0B,GAAA,MAAAC,GAAA,SASAl0B,EAAAA,EAAAA,GAAA,KAAAL,IAAAw0B,GAAA,MAAAC,GAAA,KAOwC,CACtCxQ,WAAY,YACZE,SAAU,gBACXuQ,GAAA,eArBQ1b,GAAK,OAAAnY,EAAAA,EAAAA,GAAAhB,GAAA,eAALmZ,CAAKlY,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,cASL6zB,GAAS,OAAA9zB,EAAAA,EAAAA,GAAAd,GAAA,mBAAT40B,CAAS7zB,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,kBAST8zB,GAAa,OAAA/zB,EAAAA,EAAAA,GAAAb,GAAA,uBAAb40B,CAAa9zB,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,CAItBI,MAAAA,GACE,OACEC,IAAAA,cAAC0zB,GAAuB,CACtB7b,MAAO3X,KAAK2X,MACZ4b,cAAevzB,KAAKuzB,cACpBD,UAAWtzB,KAAKszB,WAGtB,EAGK,SAASE,GACdvzB,GAEA,MAAM,MAAE0X,EAAK,cAAE4b,EAAa,UAAED,GAAcrzB,EAE5C,OACEH,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,OACE8H,MAAM,6BACNC,QAAQ,gBACRF,QAAQ,OAER7H,IAAAA,cAAA,YACEA,IAAAA,cAAA,kBACE0I,GAAG,cACHC,GAAG,cACHgrB,GAAG,cACHC,GAAG,cACHztB,EAAE,cACF0tB,kBAAkB,kIAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,MAAMrE,OAAO,OACjDjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,MAAMrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACE0I,GAAG,cACHC,GAAG,cACHgrB,GAAG,cACHC,GAAG,cACHztB,EAAE,cACF0tB,kBAAkB,kIAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAO5P,OAAO,OAC/BjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,MAAMrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACE0I,GAAG,cACHC,GAAG,cACHgrB,GAAG,cACHC,GAAG,cACHztB,EAAE,cACF0tB,kBAAkB,oIAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAO5P,OAAO,OAC/BjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,MAAMrE,OAAO,UAEnDjI,IAAAA,cAAA,kBAAgBgI,GAAG,kBACjBhI,IAAAA,cAAA,QAAMiI,OAAO,KAAKC,UAAW,GAAGurB,EAAczQ,aAC9ChjB,IAAAA,cAAA,QAAMiI,OAAO,MAAMC,UAAW,GAAGurB,EAAc3Q,eAC/C9iB,IAAAA,cAAA,QAAMiI,OAAO,OAAOC,UAAW,GAAGurB,EAAczQ,eAGpDhjB,IAAAA,cAAA,KAAGwI,OAAO,OAAO/C,YAAY,IAAIgD,KAAK,OAAOqrB,SAAS,WACpD9zB,IAAAA,cAAA,KAAGuH,UAAU,mCACXvH,IAAAA,cAAA,QACEuI,EAAE,07GACFP,GAAG,OACHQ,OAAO,yBACPO,QAAQ,gBAEV/I,IAAAA,cAAA,QACEuI,EAAE,m9GACFP,GAAG,YACHQ,OAAO,yBACPO,QAAQ,gBAEV/I,IAAAA,cAAA,QACEuI,EAAE,smpBACFP,GAAG,OACHQ,OAAO,yBACP/C,YAAY,MAEdzF,IAAAA,cAAA,QACEuI,EAAE,09pDACFP,GAAG,YACHS,KAAK,yBACLqrB,SAAS,UACTvsB,UAAU,2FAGZvH,IAAAA,cAAA,QACEkM,GAAG,aACHC,GAAG,aACH/L,UAAU,QACVgM,GAAG,aACHC,GAAG,aACH7D,OAAO,uBACP/C,YAAY,MAEdzF,IAAAA,cAAA,QACEkM,GAAG,aACHC,GAAG,aACH/L,UAAU,cACVgM,GAAG,YACHC,GAAG,aACH7D,OAAO,uBACP/C,YAAY,MAEdzF,IAAAA,cAAA,QACEkM,GAAG,aACHC,GAAG,cACH/L,UAAU,QACVgM,GAAG,aACHC,GAAG,aACH7D,OAAO,uBACP/C,YAAY,SAKpBzF,IAAAA,cAAA,OAAKI,UAAU,OAAOqD,MAAO+vB,IAGnC,C,aAtHCO,GAAAd,KAAA1yB,GAAA2yB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAA/yB,GAAAwyB,GAAAvyB,MAAAC,EAAAA,EAAAA,GAAAqzB,GAAA,CA1CAz1B,GAAc,4BAA6B,CAC1CqC,WAAY,CAACE,GAAAA,MACb,EAQCtC,GAAS,CAAEiG,WAAW,IAAQ,YAS9BjG,GAAS,CAAEiG,WAAW,IAAQ,gBAS9BjG,GAAS,CAAEiG,WAAW,IAAQ,6BAzBJzF,EAAAA,mBAAgB0B,KCrB7C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAw1B,GAAA,IAAAt1B,GAAA,IAAAC,QAWvD,MAAAs1B,WAC6Bl1B,EAAAA,iBAAgDC,WAAAA,GAAA,SAAAC,YAC3EC,EAAAA,EAAAA,GAAA,KAAAR,GAAAw0B,GAAA,KAO+C,YAASC,GAAA,eAA/Ctb,GAAK,OAAAnY,EAAAA,EAAAA,GAAAhB,GAAA,eAALmZ,CAAKlY,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,CAEdI,MAAAA,GACE,OAAOC,IAAAA,cAACk0B,GAAuB,CAACrc,MAAO3X,KAAK2X,OAC9C,EAGK,SAASqc,GAAwB/zB,GACtC,MAAM,MAAE0X,GAAU1X,EAElB,OACEH,IAAAA,cAAA,OAAK8H,MAAM,6BAA6BC,QAAQ,cAAcF,QAAQ,OACpE7H,IAAAA,cAAA,YACEA,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,IAAIrE,OAAO,OAC/CjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAO5P,OAAO,UAEjCjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,IAAIrE,OAAO,OAC/CjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAO5P,OAAO,UAEjCjI,IAAAA,cAAA,kBACE0I,GAAG,aACHC,GAAG,cACHgrB,GAAG,aACHC,GAAG,cACHztB,EAAE,OACF6B,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAO5P,OAAO,OAC/BjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,IAAIrE,OAAO,UAEjDjI,IAAAA,cAAA,kBACE0I,GAAG,aACHC,GAAG,cACHgrB,GAAG,aACHC,GAAG,cACHztB,EAAE,OACF6B,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAO5P,OAAO,OAC/BjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,IAAIrE,OAAO,UAEjDjI,IAAAA,cAAA,kBACE0I,GAAG,aACHC,GAAG,cACHgrB,GAAG,aACHC,GAAG,cACHztB,EAAE,cACF0tB,kBAAkB,2GAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAO5P,OAAO,OAC/BjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,IAAIrE,OAAO,UAEjDjI,IAAAA,cAAA,kBACE0I,GAAG,cACHC,GAAG,MACHgrB,GAAG,cACHC,GAAG,MACHztB,EAAE,cACF6B,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,MAAMrE,OAAO,UAErDjI,IAAAA,cAAA,kBACE0I,GAAG,aACHC,GAAG,cACHgrB,GAAG,aACHC,GAAG,cACHztB,EAAE,cACF6B,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAO5P,OAAO,OAC/BjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,IAAIrE,OAAO,UAEjDjI,IAAAA,cAAA,kBACE0I,GAAG,cACHC,GAAG,cACHgrB,GAAG,cACHC,GAAG,cACHztB,EAAE,cACF0tB,kBAAkB,yGAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAO5P,OAAO,OAC/BjI,IAAAA,cAAA,QAAMkI,UAAW2P,EAAOvL,YAAY,IAAIrE,OAAO,UAEjDjI,IAAAA,cAAA,QACEuI,EAAE,uSACFP,GAAG,WAELhI,IAAAA,cAAA,QACEgI,GAAG,UACHmsB,iBAAiB,iBACjBC,UAAU,oBACVxuB,EAAE,IACFG,EAAE,IACFyB,MAAM,MACNC,OAAO,MACPgB,KAAK,SAELzI,IAAAA,cAAA,OAAKq0B,UAAU,cAGnBr0B,IAAAA,cAAA,KAAGwI,OAAO,OAAO/C,YAAY,IAAIgD,KAAK,OAAOqrB,SAAS,WACpD9zB,IAAAA,cAAA,KAAGuH,UAAU,sCACXvH,IAAAA,cAAA,KAAGuH,UAAU,qCACXvH,IAAAA,cAAA,QACEuI,EAAE,w2kCACFE,KAAK,yBACLqrB,SAAS,UACT/qB,QAAQ,MACRxB,UAAU,6FAEZvH,IAAAA,cAAA,QACEuI,EAAE,qhPACFE,KAAK,yBACLqrB,SAAS,UACTvsB,UAAU,4FAEVvH,IAAAA,cAAA,WACEs0B,cAAc,UACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,KACJC,YAAY,IACZlsB,KAAK,YAGTzI,IAAAA,cAAA,QACEuI,EAAE,gkBACFE,KAAK,yBACLqrB,SAAS,UACT/qB,QAAQ,gBAEV/I,IAAAA,cAAA,QACEuI,EAAE,4kBACFE,KAAK,yBACLqrB,SAAS,UACT/qB,QAAQ,gBAEV/I,IAAAA,cAAA,QACEuI,EAAE,updACFE,KAAK,yBACLqrB,SAAS,UACTvsB,UAAU,6FAEVvH,IAAAA,cAAA,WACEs0B,cAAc,UACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,KACJC,YAAY,IACZlsB,KAAK,YAGTzI,IAAAA,cAAA,QACEuI,EAAE,mSACFE,KAAK,yBACLM,QAAQ,cACRxB,UAAU,8FAEZvH,IAAAA,cAAA,QACEuI,EAAE,uSACFC,OAAO,yBACP/C,YAAY,KACZsD,QAAQ,OACR6rB,cAAc,QACdC,eAAe,QACfC,gBAAgB,OAChBvtB,UAAU,0FAEVvH,IAAAA,cAAA,oBACE+0B,cAAc,MACdT,cAAc,YACd7vB,KAAK,SACL8vB,KAAK,0BACLC,GAAG,4BACHE,IAAI,MACJC,YAAY,gBAGhB30B,IAAAA,cAAA,QACEuI,EAAE,4hyCACFE,KAAK,yBACLqrB,SAAS,UACTvsB,UAAU,0FAEVvH,IAAAA,cAAA,oBACE+0B,cAAc,MACdT,cAAc,YACd7vB,KAAK,SACL8vB,KAAK,0BACLC,GAAG,4BACHE,IAAI,MACJC,YAAY,gBAGhB30B,IAAAA,cAAA,OACEwI,OAAQqP,EACRmd,KAAK,gBACLvvB,YAAY,IACZsD,QAAQ,MACR+rB,gBAAgB,KAChBT,UAAU,eAOxB,CA9NCY,GAAAhB,KAAA1zB,GAAA2yB,GAAAC,IAAA3yB,GAAAwzB,GAAAvzB,MAAAC,EAAAA,EAAAA,GAAAu0B,GAAA,CAdA32B,GAAc,8BAA4B,EAQxCC,GAAS,CAAEiG,WAAW,IAAQ,qBAPJzF,EAAAA,mBAAgB0B,K,gBCGtC,MAAMy0B,GAAW,CACtB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GAA6B,CACxCC,SAAU,CACRC,UAAW,yBAEbC,WAAY,CACVnvB,EAAG,EACHovB,YAAa,OACbF,UAAW,OACXG,UAAW,IAEbC,SAAU,CACRF,YAAa,UACbC,UAAW,IAGFE,GAA8B,CACzCC,EAAG,EACHC,oBAAqB,GACrBC,WAAY,GACZC,SAAU,GACVC,mBAAoB,GACpBC,iBAAkB,GAClBxwB,OAAQ,GA4FGywB,GAAc,SACzBC,EACAxc,GAGA,MAAMic,EAAIjc,EAAQic,EAChBxvB,EAAIuT,EAAQvT,EACZgwB,EAASzc,EAAQyc,OACjBZ,EAAc7b,EAAQ6b,YACtBC,EAAY9b,EAAQ8b,UAAY9b,EAAQ0c,MAG1CF,EAAQG,OACRH,EAAQI,YACR,MAAM1vB,EAAmB,EAAVP,KAAKE,GAAUovB,EAC9BO,EAAQK,UAAUJ,EAAO,GAAIA,EAAO,IACpCD,EAAQM,OAAO,GAAIrwB,GACnB,IAAK,IAAIiB,EAAI,EAAGA,EAAIuuB,EAAGvuB,IACrB8uB,EAAQO,OAAO7vB,GACfsvB,EAAQQ,OAAO,GAAIvwB,GAUrB,GARA+vB,EAAQS,YACRT,EAAQ1tB,SAEJkR,EAAQ6b,cACVW,EAAQX,YAAcA,EACtBW,EAAQV,UAAYA,EACpBU,EAAQU,QAjBE,QAmBRld,EAAQ2b,UAAW,CACrB,GAAiC,iBAAtB3b,EAAQ2b,UACjBa,EAAQb,UAAY3b,EAAQ2b,eACvB,GAAI3b,EAAQ2b,qBAAqB5S,MAAO,CAE7C,MAAMoU,EAAWX,EAAQY,sBAAsB3wB,GAAIA,EAAGA,EAAGA,GACzDuT,EAAQ2b,UAAUrlB,SAASsS,IACzBuU,EAASE,aAAa,EAAGzU,EAAO,IAChCuU,EAASE,aAAa,EAAGzU,EAAO,GAAG,IAErC4T,EAAQb,UAAYwB,CACtB,CAEAX,EAAQztB,MACV,CACAytB,EAAQc,SACV,EAUaC,GAAsB,SACjCf,EACAxc,GAGA,MAAM,EAAEic,EAAC,EAAExvB,EAAC,OAAEgwB,EAAM,YAAEZ,GAAgB7b,EAChC8b,EAAY9b,EAAQ8b,UAAY9b,EAAQ0c,MAE9CF,EAAQG,OACR,MAAMzvB,EAAmB,EAAVP,KAAKE,GAAUovB,EAC9BO,EAAQK,UAAUJ,EAAO,GAAIA,EAAO,IAGpCD,EAAQV,UAAYA,EACpBU,EAAQU,QAPI,OASZV,EAAQO,QAAQpwB,KAAKE,GAAK,GAE1B,IAAK,IAAIa,EAAI,EAAGA,EAAIuuB,EAAGvuB,IAAK,CAE1B,MAAM8vB,EAAS/wB,EAAIE,KAAK8wB,IAAIvwB,EAAQQ,GAClCgwB,EAASjxB,EAAIE,KAAKgxB,IAAIzwB,EAAQQ,GAC9BkwB,EAAOnxB,EAAIE,KAAK8wB,IAAIvwB,GAASQ,EAAI,IACjCmwB,EAAOpxB,EAAIE,KAAKgxB,IAAIzwB,GAASQ,EAAI,IAEnC8uB,EAAQI,YAERJ,EAAQM,OAAOU,EAAQE,GACvBlB,EAAQQ,OAAOY,EAAMC,GAErB,MAAMV,EAAWX,EAAQY,qBAAqBI,EAAQE,EAAQE,EAAMC,GACpEV,EAASE,aAAa,EAAGxB,GACzBsB,EAASE,aAAa,GAAK,WAC3BF,EAASE,aAAa,GAAK,WAC3BF,EAASE,aAAa,EAAGxB,GAEzBW,EAAQX,YAAcsB,EACtBX,EAAQ1tB,QACV,CACA0tB,EAAQc,SACV,EAuLO,SAASQ,GACdtB,EACAxc,GAEA,MAAM,EAAE9T,EAAC,EAAEG,EAAC,EAAEI,EAAC,QAAEsxB,EAAO,QAAEC,EAAO,YAAEnC,EAAW,UAAEC,EAAS,UAAEH,GACzD3b,EACFwc,EAAQG,OACRH,EAAQI,YACRJ,EAAQK,UAAUkB,EAASC,GAC3BxB,EAAQyB,IAAI/xB,EAAGG,EAAGI,EAAG,EAAa,EAAVE,KAAKE,IAC7B2vB,EAAQS,YACRT,EAAQX,YAAcA,EACtBW,EAAQV,UAAYA,EACpBU,EAAQ0B,SAAW,QACnB1B,EAAQb,UAAYA,EACpBa,EAAQ1tB,SACR0tB,EAAQztB,OACRytB,EAAQc,SACV,CC3aO,SAASa,GAAKvtB,GASQ,IATP,WACpB+gB,EAAU,OACV7lB,EAAM,MACNvB,EAAK,SACLmxB,EAAQ,WACRE,EAAU,SACVG,EAAQ,MACRrM,KACGjpB,GACQmK,EACX,MAAMwtB,GAAY50B,EAAAA,EAAAA,QAA0B,MACtC60B,GAAa70B,EAAAA,EAAAA,QAAiC,OAC7C80B,EAAYC,IAAiBnyB,EAAAA,EAAAA,UAAqB4vB,KAClDwC,EAAYC,IAAiBryB,EAAAA,EAAAA,UAAqBqvB,IAEnDiB,EAAQrvB,OAAOqxB,iBAuGrB,OAtGAj1B,EAAAA,EAAAA,YAAU,KACR,MAAMk1B,EAASP,EAAUx0B,QACnB4yB,EAAUmC,EAAOC,WAAW,MAC5BC,EAAcF,EAAOrlB,YACrBwlB,EAAeH,EAAOnlB,aAE5BmlB,EAAO7wB,MAAQ+wB,EAAcnC,EAC7BiC,EAAO5wB,OAAS+wB,EAAepC,EAC/B,MAAMqC,EAAgBpyB,KAAKmgB,IAAI6R,EAAO7wB,MAAO6wB,EAAO5wB,QAAU2hB,EAE9D2O,EAAWz0B,QAAU4yB,EACrB+B,EDoB+B,SACjC5M,EACA7lB,GAEA,MAAMwyB,GAAyBU,EAAAA,GAAAA,WAAUhD,IAEzC,GADAsC,EAAWxyB,OAASA,GAChB6lB,aAAU,EAAVA,EAAY1nB,QAAS,EAAG,OAAOq0B,EACnCA,EAAWhC,iBAAmB3K,EAC9B2M,EAAWrC,EAAItK,EAAW1nB,OAC1B,MAAMg1B,EAAsB,EAAVtyB,KAAKE,GAAUyxB,EAAWrC,EAM5C,OALAtK,EAAWrb,SAAQ,CAACgC,EAAM5K,KACxB4wB,EAAWpC,oBAAoBxuB,GAAK4K,EAAK/N,MAAQ+N,EAAK4mB,SACtDZ,EAAWnC,WAAWzuB,GAAK4wB,EAAWpC,oBAAoBxuB,GAAK5B,EAC/DwyB,EAAWlC,SAAS1uB,GAAKA,EAAIuxB,CAAQ,IAEhCX,CACT,CCpCkBa,CAAoBxN,EAAY7lB,GAAUizB,GAAe,GACtE,CAACpN,EAAY7lB,EAAQ4jB,KACxBjmB,EAAAA,EAAAA,YAAU,KACRg1B,EDmC+B,SACjC/C,EACAE,EACAG,GAEA,MAAMyC,GAAyBQ,EAAAA,GAAAA,WAAUvD,IAIzC,OAHA2D,EAAAA,GAAAA,OAAMZ,EAAW9C,SAAUA,IAC3B0D,EAAAA,GAAAA,OAAMZ,EAAW5C,WAAYA,IAC7BwD,EAAAA,GAAAA,OAAMZ,EAAWzC,SAAUA,GACpByC,CACT,CC7CkBa,CAAoB3D,EAAUE,EAAYG,GAAU,GACjE,CAACL,EAAUE,EAAYG,KAE1BtyB,EAAAA,EAAAA,YAAU,KACR,IAAI61B,EAAgB,EAClBlyB,EAAQ,KACV,MAAMuxB,EAASP,EAAUx0B,QACnB4yB,EAAU6B,EAAWz0B,QACrB6yB,EAAS,CAACkC,EAAO7wB,MAAQ,EAAG6wB,EAAO5wB,OAAS,GAElD,GAAIyuB,EAAS,CAEX,MAAM+C,EAAYA,KAChBnyB,EAAQC,OAAOmyB,sBAAsBD,GAErCD,GAAiB,IACbA,GAAiB,GACnBjyB,OAAOoyB,qBAAqBryB,GAG9BovB,EAAQkD,UAAU,EAAG,EAAGf,EAAO7wB,MAAO6wB,EAAO5wB,QDublB,SACjCyuB,EACAxc,GAEA,MAAM,MAAE2f,EAAK,EAAE1D,EAAC,EAAExvB,EAAC,MAAEiwB,EAAK,OAAED,EAAM,UAAEX,GAAc9b,EAGhD4f,EAAgB,CAAC,CAAC,UAAW,YAG/B,IAAK,IAAIlyB,EAAIiyB,EAAOjyB,EAAI,EAAGA,IACrBA,IAAMiyB,GACRpC,GAAoBf,EAAS,CAC3BP,IACAxvB,IACAgwB,SACAC,QACAZ,YACAD,YAAa,uBAEf0B,GAAoBf,EAAS,CAC3BP,IACAxvB,EAAO,IAAJA,EACHgwB,SACAC,QACAb,YAAa,uBACbC,eAOFS,GAAYC,EAAS,CACnBP,IACAxvB,EANoB,IAAJA,EAAYkzB,EAGJjyB,EAIxB+uB,SACAd,UAPgBjuB,EAAI,GAAK,EAtBd,UAsBiCkyB,EAQ5C/D,YAhCa,cAiCbC,YACAY,SAIR,CCjeQmD,CAAoBrD,EAAS,CAC3BmD,MAAO,EACP1D,EAAGqC,EAAWrC,EACdxvB,EAAG6xB,EAAWxyB,OACd4wB,QACAD,SACAX,UAAW,IAGb,MAAMK,EAAamC,EAAWnC,WAAWhyB,KAAKI,GACrCA,EAAQ+0B,IAEXQ,EDmBkB,SAC9B7D,EACA8D,EACA3D,GAEA,MAAM0D,EAAqB,GAC3B,IAAK,IAAIpyB,EAAI,EAAGA,EAAIuuB,EAAGvuB,IAAK,CAC1B,MAAMsyB,EAAoB,CACxB9zB,EAAG,EACHG,EAAG,GAEL2zB,EAAY9zB,EAAI6zB,EAAcryB,GAAKf,KAAKgxB,IAAIvB,EAAS1uB,IACrDsyB,EAAY3zB,GAAK0zB,EAAcryB,GAAKf,KAAK8wB,IAAIrB,EAAS1uB,IACtDoyB,EAAmBzN,KAAK2N,EAC1B,CACA,OAAOF,CACT,CCnCmCG,CACzB3B,EAAWrC,EACXE,EACAmC,EAAWlC,UAEP8D,EAAkB,CACtBC,WAAYL,EACZjE,YAAa2C,EAAWzC,SAASF,YACjCC,UAAW0C,EAAWzC,SAASD,WAE3BsE,EAAoB,CACxBD,WAAYL,EACZrzB,EAAG+xB,EAAW5C,WAAWnvB,EACzBovB,YAAa2C,EAAW5C,WAAWC,YACnCF,UAAW6C,EAAW5C,WAAWD,UACjCG,UAAW0C,EAAW5C,WAAWE,WAE7BuE,EAAkB,CACtBF,WAAYL,EACZnE,UAAW6C,EAAW9C,SAASC,YDyXb,SAC1Ba,EACAC,EACAC,EACA1c,GAEA,MAAM,gBAAEkgB,EAAe,gBAAEG,EAAe,kBAAED,GAAsBpgB,EAElC,IADAkgB,EAAgBC,WAAWl2B,SAzO/B,SAC1BuyB,EACAC,EACAzc,GAEA,MAAM,YAAE6b,EAAW,UAAEC,EAAS,WAAEqE,GAAengB,EACzCsgB,EAAgBH,EAAWl2B,OACjCuyB,EAAQG,OACRH,EAAQI,YACRJ,EAAQK,UAAUJ,EAAO,GAAIA,EAAO,IACpCD,EAAQM,OAAOqD,EAAW,GAAGj0B,EAAGi0B,EAAW,GAAG9zB,GAC9C,IAAK,IAAIqB,EAAI,EAAGA,EAAI4yB,EAAe5yB,IACjC8uB,EAAQQ,OAAOmD,EAAWzyB,GAAGxB,EAAGi0B,EAAWzyB,GAAGrB,GAEhDmwB,EAAQS,YACRT,EAAQX,YAAcA,EACtBW,EAAQV,UAAYA,EACpBU,EAAQ0B,SAAW,QACnB1B,EAAQ1tB,SACR0tB,EAAQc,SACV,CAwNEiD,CAAa/D,EAASC,EAAQyD,GApCJ,SAC1B1D,EACAC,EACAzc,GAEA,MAAM,UAAE2b,EAAS,WAAEwE,GAAengB,EAC5BwgB,EAAwBL,EAAWl2B,OACzCuyB,EAAQG,OACRH,EAAQI,YACRJ,EAAQK,UAAUJ,EAAO,GAAIA,EAAO,IACpCD,EAAQM,OAAOqD,EAAW,GAAGj0B,EAAGi0B,EAAW,GAAG9zB,GAC9C,IAAK,IAAIqB,EAAI,EAAGA,EAAI8yB,EAAuB9yB,IACzC8uB,EAAQQ,OAAOmD,EAAWzyB,GAAGxB,EAAGi0B,EAAWzyB,GAAGrB,GAEhDmwB,EAAQS,YACRT,EAAQb,UAAYA,EACpBa,EAAQztB,OACRytB,EAAQc,SACV,CAoBEmD,CAAajE,EAASC,EAAQ4D,GAnGF,SAC5B7D,EACAC,EACAC,EACA1c,GAEA,MAAM,YAAE6b,EAAW,UAAEF,EAAS,WAAEwE,GAAengB,EACzCvT,EAAIuT,EAAQvT,EAAIiwB,EACpBZ,EAAY9b,EAAQ8b,UAAYY,EAE5B8D,EAAwBL,EAAWl2B,OACzC,IAAK,IAAIyD,EAAI,EAAGA,EAAI8yB,EAAuB9yB,IACzCowB,GAAWtB,EAAS,CAClBtwB,EAAGi0B,EAAWzyB,GAAGxB,EACjBG,EAAG8zB,EAAWzyB,GAAGrB,EACjBI,EAAGA,EACHsxB,QAAStB,EAAO,GAChBuB,QAASvB,EAAO,GAChBZ,YAAaA,EACbC,UAAWA,EACXH,UAAWA,GAGjB,CA8EE+E,CAAelE,EAASC,EAAQC,EAAO0D,GACzC,CCtYQO,CAAanE,EAASC,EAAQC,EAAO,CACnCwD,gBAAiBA,EACjBG,gBAAiBA,EACjBD,kBAAmBA,IAIrB,MAAMQ,EDee,SAAU3E,EAAWxvB,EAAWgwB,GAC3D,MAAMoE,EAAY,GACZ3zB,EAAmB,EAAVP,KAAKE,GAAUovB,EAC9B,IAAK,IAAIvuB,EAAI,EAAGA,EAAIuuB,EAAGvuB,IAAK,CAC1B,MAAMozB,EAAe,CACnB50B,EAAG,EACHG,EAAG,GAELy0B,EAAO50B,EAAIO,EAAIE,KAAKgxB,IAAIjwB,EAAIR,GAASuvB,EAAO,GAC5CqE,EAAOz0B,GAAKI,EAAIE,KAAK8wB,IAAI/vB,EAAIR,GAASuvB,EAAO,GAC7CoE,EAAUxO,KAAKyO,EACjB,CACA,OAAOD,CACT,CC5ByCE,CAC/BzC,EAAWrC,EACXqC,EAAWxyB,OACX2wB,GAUF,GD4JsB,SAC5BD,EACAC,EACA0D,GAEA3D,EAAQG,OACRH,EAAQI,YACRuD,EAAWh2B,KAAK62B,IACdxE,EAAQM,OAAOL,EAAO,GAAIA,EAAO,IACjCD,EAAQQ,OAAOgE,EAAM90B,EAAG80B,EAAM30B,EAAE,IAElCmwB,EAAQX,YAAc,UACtBW,EAAQV,UAAY,EACpBU,EAAQ1tB,SACR0tB,EAAQc,SACV,CCnLQ2D,CAAezE,EAASC,EAAQmE,GDoLL,SACjCpE,EACAC,EACAhwB,EACA0zB,EACAxO,GAEA6K,EAAQG,OACR,MAAMuE,EAAUz0B,EAAI,EAClB00B,EAAU10B,EAAI,EACd20B,EAAa30B,EAAI,GAAK,GAAKA,EAAI,GAAK,GAEtC0zB,EAAWh2B,KAAI,CAAC62B,EAAOtzB,KAAM,IAAA2zB,EAAAC,EAAAC,EAAAC,EAC3B,IAAIC,EAAUT,EAAM90B,EAClBw1B,EAAgBV,EAAM90B,EACtBy1B,EAAaX,EAAM90B,EACnB01B,EAAUZ,EAAM30B,EAChBw1B,EAAQb,EAAM90B,EAChB,MAAMiS,GAAqB,QAAbkjB,EAAA1P,EAAWjkB,UAAE,IAAA2zB,OAAA,EAAbA,EAAeljB,QAASqd,GAAS9tB,IAAM,OACrD8uB,EAAQI,YACRJ,EAAQM,OAAOkE,EAAM90B,EAAG80B,EAAM30B,GAE1B20B,EAAM90B,EAAIuwB,EAAO,IAAM,GAEzBgF,GAAWP,EACXQ,EAAgBD,EAAUP,EAC1BS,EAAaD,EAAgBN,EAC7BS,EAAQJ,EAhBC,IAiBAT,EAAM90B,EAAIuwB,EAAO,GAAK,IAE/BgF,GAAWP,EACXQ,EAAgBD,EAAUP,EAC1BS,EAAaD,EAAgBN,EAC7BS,EAAQH,EAtBC,IAyBPV,EAAM30B,EAAIowB,EAAO,GAAK,EACxBmF,GAAWT,EACFH,EAAM30B,EAAIowB,EAAO,GAAK,IAC/BmF,GAAWT,GAEb3E,EAAQQ,OAAOyE,EAASG,GACxBpF,EAAQQ,OAAO2E,EAAYC,GAC3BpF,EAAQX,YAAc,0BACtBW,EAAQ1tB,SACR0tB,EAAQI,YACRJ,EAAQM,OAAO4E,EAAeE,GAC9BpF,EAAQQ,OAAO2E,EAAYC,GAC3BpF,EAAQX,YAAc1d,EACtBqe,EAAQV,UAAY,EACpBU,EAAQ1tB,SAGR,MAAMgzB,EAAqB,QAAbR,EAAA3P,EAAWjkB,UAAE,IAAA4zB,GAAbA,EAAeS,aACzBH,EAAUn1B,EAAI,IACdm1B,EAAUn1B,EAAI,IACZu1B,EAAav1B,EAAI,GAgBvB,GAdiB,QAAjB80B,EAAI5P,EAAWjkB,UAAE,IAAA6zB,GAAbA,EAAerwB,OACjBsrB,EAAQb,UAAYxd,EACpBqe,EAAQyF,SAASJ,EAAOC,EAjDf,OAmDTtF,EAAQ0F,UAAY,OACpB1F,EAAQ2F,KAAO,OAAOH,8BACtBxF,EAAQb,UAAY,0BACpBa,EAAQ4F,SACN,GAAGzQ,EAAWjkB,GAAGwD,OACjB2wB,EAAQQ,GACRP,EAAQO,GAEV7F,EAAQ1tB,UAEO,QAAjB0yB,EAAI7P,EAAWjkB,UAAE,IAAA8zB,GAAbA,EAAeO,aAAc,KAAAO,EAC/B,MAAMC,EAAc91B,EAAI,GACxB+vB,EAAQ0F,UAAY,OACpB1F,EAAQ2F,KAAO,OAAOI,8BACtB/F,EAAQb,UAAY,OACpBa,EAAQ4F,SACN,GAAgB,QAAhBE,EAAG3Q,EAAWjkB,UAAE,IAAA40B,OAAA,EAAbA,EAAeP,eAClBF,EAAQQ,GACRP,EAAQO,EAA4B,IAAbL,GAEzBxF,EAAQ1tB,QACV,KAEF0tB,EAAQc,SACV,CCzQQkF,CACEhG,EACAC,EACA6B,EAAWxyB,OACX80B,EACAtC,EAAWhC,kBAET/xB,EAAO,CACT,MAAMyB,EAAWsyB,EAAWxyB,OAAS,EACrC0wB,EAAQ2F,KAAO,QAAQn2B,8BACvBwwB,EAAQb,UAAY,OACpBa,EAAQ0F,UAAY,SACpB1F,EAAQiG,aAAe,SACvBjG,EAAQ4F,SAAS,GAAG73B,IAASkyB,EAAO,GAAIA,EAAO,GACjD,GAEF8C,GACF,IACC,CAACjB,EAAYE,EAAYj0B,IAG1BjE,IAAAA,cAAA,OACEI,UAAU,YACVqD,MAAO,CAAE+D,MAAO,GAAGrH,EAAMqH,UAAWC,OAAQ,GAAGtH,EAAMsH,aAErDzH,IAAAA,cAAA,UAAQI,UAAU,aAAawD,IAAKk0B,IAG1C,C,oEC/HA,MAAQx5B,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAEpC,IAAA49B,GAAA,IAAA19B,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAgD,GAAA,IAAAhD,QAAA+N,GAAA,IAAA/N,QAAAgO,GAAA,IAAAhO,QAAAkO,GAAA,IAAAlO,QAKA,MAAA09B,WAGyBt9B,EAAAA,iBAAuCC,WAAAA,GAAA,SAAAC,YAC9DC,EAAAA,EAAAA,GAAA,KAAAR,GAAA6rB,GAAA,QAUArrB,EAAAA,EAAAA,GAAA,KAAAN,IAAA4rB,GAAA,MAAAhd,GAAA,SAUAtO,EAAAA,EAAAA,GAAA,KAAAL,IAAA4O,GAAA,MAAAzI,GAAA,SAUA9F,EAAAA,EAAAA,GAAA,KAAAuC,IAAAwD,GAAA,MAAAq3B,GAAA,KAQyB,QAEzBp9B,EAAAA,EAAAA,GAAA,KAAAwC,IAAA66B,GAAA,MAAAC,GAAA,SAUAt9B,EAAAA,EAAAA,GAAA,KAAAyC,IAAA86B,GAAA,MAAAr3B,GAAA,SAUAlG,EAAAA,EAAAA,GAAA,KAAAwN,IAAArH,GAAA,MAAAq3B,GAAA,SAUAx9B,EAAAA,EAAAA,GAAA,KAAAyN,IAAAgwB,GAAA,MAAAC,GAAA,SAUA19B,EAAAA,EAAAA,GAAA,KAAA2N,IAAAgwB,GAAA,MAAAC,GAAA,QAAAC,GAAA,oBAxES1R,GAAU,OAAA3rB,EAAAA,EAAAA,GAAAhB,GAAA,oBAAV2sB,CAAU1rB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,UAUV6H,GAAK,OAAA9H,EAAAA,EAAAA,GAAAd,GAAA,eAAL4I,CAAK7H,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,WAUL6F,GAAM,OAAA9F,EAAAA,EAAAA,GAAAb,GAAA,gBAAN2G,CAAM7F,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,UAUNypB,GAAK,OAAA1pB,EAAAA,EAAAA,GAAA+B,GAAA,eAAL2nB,CAAKzpB,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,WAUL8H,GAAM,OAAA/H,EAAAA,EAAAA,GAAAgC,GAAA,gBAAN+F,CAAM9H,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,UAUNsE,GAAK,OAAAvE,EAAAA,EAAAA,GAAAiC,GAAA,eAALsC,CAAKtE,IAAAC,EAAAA,EAAAA,GAAA+B,GAAA,KAAAhC,EAAA,aAULy1B,GAAQ,OAAA11B,EAAAA,EAAAA,GAAAgN,GAAA,kBAAR0oB,CAAQz1B,IAAAC,EAAAA,EAAAA,GAAA8M,GAAA,KAAA/M,EAAA,eAUR21B,GAAU,OAAA51B,EAAAA,EAAAA,GAAAiN,GAAA,oBAAV2oB,CAAU31B,IAAAC,EAAAA,EAAAA,GAAA+M,GAAA,KAAAhN,EAAA,aAUV81B,GAAQ,OAAA/1B,EAAAA,EAAAA,GAAAmN,GAAA,kBAAR4oB,CAAQ91B,IAAAC,EAAAA,EAAAA,GAAAiN,GAAA,KAAAlN,EAAA,CAEjBI,MAAAA,GACE,OACEC,IAAAA,cAAC63B,GAAK,CACJxM,WAAYnrB,KAAKmrB,WACjB7jB,MAAOtH,KAAKsH,MACZC,OAAQvH,KAAKuH,OACbjC,OAAQtF,KAAKsF,OACb4jB,MAAOlpB,KAAKkpB,MACZnlB,MAAO/D,KAAK+D,MACZmxB,SAAUl1B,KAAKk1B,SACfE,WAAYp1B,KAAKo1B,WACjBG,SAAUv1B,KAAKu1B,UAGrB,EACDuH,GAAAX,KAAA97B,GAAAgqB,GAAAC,GAAAhd,GAAAC,GAAAzI,GAAAC,GAAAq3B,GAAAC,GAAAC,GAAAC,GAAAr3B,GAAAC,GAAAq3B,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAAv8B,GAAA47B,GAAA37B,MAAAC,EAAAA,EAAAA,GAAAs8B,GAAA,CA7GA1+B,GAAc,wBAAyB,CACtCqC,WAAY,CAACE,GAAAA,MACb,EAOCtC,GAAS,CACRiG,WAAW,IACX,iBAQDjG,GAAS,CACRiG,WAAW,IACX,YAQDjG,GAAS,CACRiG,WAAW,IACX,aAQDjG,GAAS,CACRiG,WAAW,IACX,YAQDjG,GAAS,CACRiG,WAAW,IACX,aAQDjG,GAAS,CACRiG,WAAW,IACX,YAQDjG,GAAS,CACRiG,WAAW,IACX,eAQDjG,GAAS,CACRiG,WAAW,IACX,iBAQDjG,GAAS,CACRiG,WAAW,IACX,wBAxFqBzF,EAAAA,mBAAgB0B,K,uDClBzC,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAy+B,GAAA,IAAAv+B,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAevD,MAAAu+B,WAGwBn+B,EAAAA,iBAA2CC,WAAAA,GAAA,SAAAC,YACjEC,EAAAA,EAAAA,GAAA,KAAAR,GAAAwlB,GAAA,KAK2B,YAE3BhlB,EAAAA,EAAAA,GAAA,KAAAN,IAAAulB,GAAA,MAAA+M,GAAA,SAOAhyB,EAAAA,EAAAA,GAAA,KAAAL,IAAAsyB,GAAA,MAAA7rB,GAAA,SAOApG,EAAAA,EAAAA,GAAA,KAAAuC,IAAA8D,GAAA,MAAA43B,GAAA,SAOAj+B,EAAAA,EAAAA,GAAA,KAAAwC,IAAA07B,GAAA,MAAAC,GAAA,QAAAC,GAAA,cAvBS74B,GAAI,OAAA/E,EAAAA,EAAAA,GAAAhB,GAAA,cAAJ+F,CAAI9E,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,SAOJyxB,GAAI,OAAA1xB,EAAAA,EAAAA,GAAAd,GAAA,cAAJwyB,CAAIzxB,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,aAOJ+F,GAAQ,OAAAhG,EAAAA,EAAAA,GAAAb,GAAA,kBAAR6G,CAAQ/F,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,eAORkJ,GAAU,OAAAnJ,EAAAA,EAAAA,GAAA+B,GAAA,oBAAVoH,CAAUlJ,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,kBAOV49B,GAAa,OAAA79B,EAAAA,EAAAA,GAAAgC,GAAA,uBAAb67B,CAAa59B,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,CAEtBI,MAAAA,GACE,OACEC,IAAAA,cAACw9B,GAAkB,CACjB/4B,KAAMvE,KAAKuE,KACX2sB,KAAMlxB,KAAKkxB,KACX1rB,SAAUxF,KAAKwF,SACfmD,WAAY3I,KAAK2I,WACjB00B,cAAer9B,KAAKq9B,eAG1B,EAGK,SAASC,GAAmBr9B,GACjC,MAAM,KAAEsE,EAAI,KAAE2sB,EAAI,cAAEmM,EAAa,SAAE73B,EAAQ,WAAEmD,GAAe1I,EAC5D,OACEH,IAAAA,cAAA,OAAKI,UAAU,WACH,WAATqE,GACCzE,IAAAA,cAACA,IAAAA,SAAc,KACbA,IAAAA,cAAA,OACEI,UAAW,SAASqE,WACpBhB,MAAO,CACLiC,WACA63B,gBACA10B,aACA40B,WAAY/3B,IAGb0rB,GAEHpxB,IAAAA,cAAA,OACEI,UAAW,SAASqE,WACpBhB,MAAO,CACLiC,WACA63B,gBACA10B,aACA40B,WAAY/3B,IAGb0rB,IAIPpxB,IAAAA,cAAA,OACEI,UAAW,SAASqE,SACpBhB,MAAO,CAAEiC,WAAU63B,gBAAe10B,aAAY40B,WAAY/3B,IAEzD0rB,GAIT,CAxCCsM,GAAAR,KAAA38B,GAAA2jB,GAAAC,GAAA+M,GAAAC,GAAA7rB,GAAAC,GAAA43B,GAAAC,GAAAC,GAAAC,IAAA98B,GAAAy8B,GAAAx8B,MAAAC,EAAAA,EAAAA,GAAAg9B,GAAA,CAlDAp/B,GAAc,uBAAwB,CACrCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAMCtC,GAAS,CAAEiG,WAAW,IAAQ,WAO9BjG,KAAU,WAOVA,KAAU,eAOVA,KAAU,iBAOVA,KAAU,6BAjCWQ,EAAAA,mBAAgB0B,K,sCCdxC,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAC9B8C,IAAcC,EAAAA,EAAAA,WAAyC,WAE7D,IAAAo8B,GAAA,IAAAj/B,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QASA,MAAAi/B,WAIU7+B,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,GAAAm/B,GAAA,QAMA3+B,EAAAA,EAAAA,GAAA,KAAAN,IAAAk/B,GAAA,MAAAC,GAAA,QAAAC,GAAA,iBADSC,GAAO,OAAAv+B,EAAAA,EAAAA,GAAAhB,GAAA,iBAAPu/B,CAAOt+B,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,SAMPyE,GAAI,OAAA1E,EAAAA,EAAAA,GAAAd,GAAA,cAAJwF,CAAIzE,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,CAEbI,MAAAA,GACE,OACEC,IAAAA,cAACk+B,GAA0B,CAACD,QAAS/9B,KAAK+9B,QAAS75B,KAAMlE,KAAKkE,MAElE,EAEK,SAAS85B,GAA2B/9B,GACzC,OACEH,IAAAA,cAAA,OAAKI,UAAU,aACbJ,IAAAA,cAACsB,IAAW2d,EAAAA,GAAAA,GAAA,CACV7e,UAAU,QACJD,EAAMiE,KAA4CjE,EAAMiE,KAA3C,CAAED,IAAK,KAAMC,KAAM,iBAExCpE,IAAAA,cAAA,QAAMI,UAAU,WAAWD,EAAM89B,SAGvC,CAXCE,GAAAP,KAAAr9B,GAAAs9B,GAAAC,GAAAC,GAAAC,IAAAx9B,GAAAm9B,GAAAl9B,MAAAC,EAAAA,EAAAA,GAAAy9B,GAAA,CAzBA7/B,GAAc,+BAAgC,CAC7CqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EASCtC,KAAU,cAMVA,GAAS,CAAEiG,WAAW,IAAQ,oBAbvBzF,EAAAA,mBAAgB0B,K,kDCrB1B,MAAQnC,cAAa,GAAEC,SAAQ,GAAE8C,MAAKA,KAAK7C,EAAAA,EAAAA,oBAAmB,IAAA4/B,GAAA,IAAA1/B,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA0/B,GAAA,IAAAx8B,QAAAkL,GAAA,IAAApO,QAwB9D,MAAA2/B,WAG4Bv/B,EAAAA,iBAA+CC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAAs8B,KACzEn/B,EAAAA,EAAAA,GAAA,KAAAR,GAAA0O,GAAA,QAOAlO,EAAAA,EAAAA,GAAA,KAAAN,IAAAyO,GAAA,MAAAC,GAAA,SAOApO,EAAAA,EAAAA,GAAA,KAAAL,IAAA0O,GAAA,MAAAe,GAAA,SAOApP,EAAAA,EAAAA,GAAA,KAAA6N,IAAgBwB,GAAA,MAAIvK,IAClB9D,KAAKsO,UAAYxK,GACjBvB,EAAAA,GAAAA,GAAA47B,GAAAn+B,KAAKuO,IAAgB9L,KAAKqB,EAAI,GAC9B,YAnBO6K,GAAO,OAAAnP,EAAAA,EAAAA,GAAAhB,GAAA,iBAAPmQ,CAAOlP,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,cAOP6O,GAAS,OAAA9O,EAAAA,EAAAA,GAAAd,GAAA,mBAAT4P,CAAS7O,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,CAalBI,MAAAA,GACE,OACEC,IAAAA,cAACu+B,GAAsB,CACrB1vB,QAAS3O,KAAK2O,QACdL,UAAWtO,KAAKsO,UAChBc,aAAa5P,EAAAA,EAAAA,GAAKqN,GAAL7M,OAGnB,EAGK,SAASq+B,GAAuBp+B,GACrC,MAAM,QAAE0O,EAAO,UAAEL,EAAS,YAAEc,GAAgBnP,EAEtCoP,GAAarM,EAAAA,EAAAA,QAAuB,OACnCs7B,EAAQC,IAAa34B,EAAAA,EAAAA,aAa5B3C,EAAAA,EAAAA,YAAU,KACJ0L,SAAAA,EAASlL,QAZQK,KACrB,MAAM6L,EAAeN,EAAWjM,QAChC,GAAIuM,EAAc,CAChB,MAAMC,EACJD,EAAaE,iBAAiB,gBAChCD,SAAAA,EAAcE,SAASC,IACrBA,EAAKC,OAASD,EAAKrF,OAAS5G,CAAG,IAEjCy6B,EAAUz6B,EACZ,GAIEmM,CAAc3B,GAAaK,EAAQ,GAAG7K,IACxC,GACC,CAACwK,EAAWK,IACf,MAAM6vB,GAAa/3B,EAAAA,EAAAA,UAAQ,IAEvB3G,IAAAA,cAAA,OAAKI,UAAYyO,SAAAA,EAASlL,OAA0B,aAAjB,iBAChCkL,aAAO,EAAPA,EAASlL,SACR3D,IAAAA,cAAA,OAAKI,UAAU,WACZyO,EAAQ8vB,MAAM,EAAGt4B,KAAK8gB,MAAMtY,EAAQlL,OAAS,IAAIE,KAAKC,GACrD9D,IAAAA,cAAA,OAAKgE,IAAKF,EAAKE,IAAK5D,UAAU,WAC5BJ,IAAAA,cAAA,OACEI,UAAWC,KAAW,OAAQ,CAC5BqQ,OAAQ5M,EAAKE,MAAQw6B,IAEvBt6B,QAASA,IAAMoL,aAAW,EAAXA,EAAcxL,EAAKE,MAEjCF,EAAKstB,UAMhBpxB,IAAAA,cAAA,QAAMI,UAAU,oBACfyO,aAAO,EAAPA,EAASlL,SACR3D,IAAAA,cAAA,OAAKI,UAAU,YACZyO,EAAQ8vB,MAAMt4B,KAAK8gB,MAAMtY,EAAQlL,OAAS,IAAIE,KAAKC,GAClD9D,IAAAA,cAAA,OAAKgE,IAAKF,EAAKE,IAAK5D,UAAU,WAC5BJ,IAAAA,cAAA,OACEI,UAAWC,KAAW,OAAQ,CAC5BqQ,OAAQ5M,EAAKE,MAAQw6B,IAEvBt6B,QAASA,IAAMoL,aAAW,EAAXA,EAAcxL,EAAKE,MAEjCF,EAAKstB,YAQnB,CAACviB,EAAS2vB,EAAQlvB,IAErB,OACEtP,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,OAAKI,UAAU,UACbJ,IAAAA,cAAA,OACEwH,MAAM,OACNC,OAAO,OACPrH,UAAU,MACV2H,QAAQ,iBACRF,QAAQ,MACRoE,oBAAoB,QAEpBjM,IAAAA,cAAA,YACEA,IAAAA,cAAA,kBACE0I,GAAG,MACHC,GAAG,aACHgrB,GAAG,MACHC,GAAG,aACHztB,EAAE,cACF0tB,kBAAkB,yGAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,UAEnCjI,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBAAgBqI,aAAa,KAAKw2B,GAAG,mBAEvC7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBAAgBqI,aAAa,KAAKw2B,GAAG,mBAEvC7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBAAgBqI,aAAa,KAAKw2B,GAAG,mBAEvC7+B,IAAAA,cAAA,kBACE0I,GAAG,MACHC,GAAG,aACHgrB,GAAG,MACHC,GAAG,aACHztB,EAAE,cACF0tB,kBAAkB,0GAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,UAEnCjI,IAAAA,cAAA,UACE4F,EAAE,UACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBAAgBqI,aAAa,KAAKw2B,GAAG,mBAEvC7+B,IAAAA,cAAA,UACE4F,EAAE,UACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBAAgBqI,aAAa,KAAKw2B,GAAG,mBAEvC7+B,IAAAA,cAAA,UACE4F,EAAE,UACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBAAgBqI,aAAa,KAAKw2B,GAAG,mBAEvC7+B,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,aACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,aACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,MACHC,GAAG,OACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,OAAOrE,OAAO,OACpDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,OAAOrE,OAAO,UAEtDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,OAAOrE,OAAO,OACpDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,OAAOrE,OAAO,UAEtDjI,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,KACHC,GAAG,OACHC,GAAG,KACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,MACHC,GAAG,OACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,eACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,MAAMrE,OAAO,UAErDjI,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,eACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,MAAMrE,OAAO,OACnDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,OAAOrE,OAAO,UAEtDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,aACHC,GAAG,cACHC,GAAG,MACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,QACEuI,EAAE,uaACFP,GAAG,YAELhI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,OACHC,GAAG,cACHC,GAAG,OACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,OAAOrE,OAAO,OACpDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,OAAOrE,OAAO,UAEtDjI,IAAAA,cAAA,kBACEkM,GAAG,gBACHC,GAAG,cACHC,GAAG,cACHC,GAAG,MACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,WAGrDjI,IAAAA,cAAA,KAAGwI,OAAO,OAAO/C,YAAY,IAAIgD,KAAK,OAAOqrB,SAAS,WACpD9zB,IAAAA,cAAA,SACEA,IAAAA,cAAA,KAAGuH,UAAU,sBACXvH,IAAAA,cAAA,WACEyI,KAAK,yBACLM,QAAQ,cACRD,OAAO,iBACPJ,GAAG,QACHC,GAAG,OACHm2B,GAAG,QACHC,GAAG,SAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRD,OAAO,iBACPJ,GAAG,QACHC,GAAG,MACHm2B,GAAG,QACHC,GAAG,QAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLK,OAAO,iBACPJ,GAAG,QACHC,GAAG,MACHm2B,GAAG,QACHC,GAAG,SAGP/+B,IAAAA,cAAA,KAAG+I,QAAQ,cAAcxB,UAAU,uBACjCvH,IAAAA,cAAA,WACEyI,KAAK,yBACLM,QAAQ,cACRD,OAAO,iBACPJ,GAAG,OACHC,GAAG,OACHm2B,GAAG,OACHC,GAAG,SAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRD,OAAO,iBACPJ,GAAG,OACHC,GAAG,MACHm2B,GAAG,OACHC,GAAG,QAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLK,OAAO,iBACPJ,GAAG,KACHC,GAAG,MACHm2B,GAAG,KACHC,GAAG,SAGP/+B,IAAAA,cAAA,QACEuI,EAAE,iSACFC,OAAO,yBACP/C,YAAY,QAEdzF,IAAAA,cAAA,QACEuI,EAAE,wQACFC,OAAO,0BACP/C,YAAY,MACZ8B,UAAU,wFAEZvH,IAAAA,cAAA,QACEuI,EAAE,kSACFC,OAAO,0BACP/C,YAAY,MACZmvB,cAAc,QACdrtB,UAAU,wFAEZvH,IAAAA,cAAA,QACEkM,GAAG,MACHC,GAAG,UACHC,GAAG,SACHC,GAAG,QACH7D,OAAO,0BACP/C,YAAY,QAEdzF,IAAAA,cAAA,QACEkM,GAAG,SACHC,GAAG,KACHC,GAAG,OACHC,GAAG,OACH7D,OAAO,0BACP/C,YAAY,IACZ8B,UAAU,gEAEZvH,IAAAA,cAAA,QACEkM,GAAG,MACHC,GAAG,KACHC,GAAG,QACHC,GAAG,OACH7D,OAAO,0BACP/C,YAAY,OAEboJ,aAAO,EAAPA,EAASlL,SACR3D,IAAAA,cAAAA,IAAAA,SAAA,KACEA,IAAAA,cAAA,KACEuH,UAAU,sBACVkB,KAAK,0BACLM,QAAQ,OAER/I,IAAAA,cAAA,QAAMuI,EAAE,4JAEVvI,IAAAA,cAAA,KACEuH,UAAU,2GACVkB,KAAK,0BACLM,QAAQ,OAER/I,IAAAA,cAAA,QAAMuI,EAAE,6JAIdvI,IAAAA,cAAA,QACEkM,GAAG,OACHC,GAAG,OACHC,GAAG,OACHC,GAAG,OACH7D,OAAO,0BACP/C,YAAY,IACZ8B,UAAU,wFAEZvH,IAAAA,cAAA,QACEkM,GAAG,MACHC,GAAG,SACHC,GAAG,SACHC,GAAG,OACH7D,OAAO,0BACP/C,YAAY,MAEdzF,IAAAA,cAAA,QACEuI,EAAE,oRACFC,OAAO,yBACP/C,YAAY,MACZ8B,UAAU,sFAEZvH,IAAAA,cAAA,SACEA,IAAAA,cAAA,OAAKyI,KAAK,0BAA0B4rB,UAAU,aAC9Cr0B,IAAAA,cAAA,OAAKyI,KAAK,0BAA0B4rB,UAAU,aAC9Cr0B,IAAAA,cAAA,OAAKyI,KAAK,0BAA0B4rB,UAAU,cAEhDr0B,IAAAA,cAAA,QACEuI,EAAE,mQACFC,OAAO,0BACP/C,YAAY,QAEdzF,IAAAA,cAAA,QACEuI,EAAE,wRACFC,OAAO,0BACP/C,YAAY,MACZmvB,cAAc,UAEhB50B,IAAAA,cAAA,QACEkM,GAAG,QACHC,GAAG,UACHC,GAAG,OACHC,GAAG,QACH7D,OAAO,0BACP/C,YAAY,IACZ8B,UAAU,wFAEZvH,IAAAA,cAAA,QACEkM,GAAG,OACHC,GAAG,OACHC,GAAG,QACHC,GAAG,OACH7D,OAAO,0BACP/C,YAAY,MAEdzF,IAAAA,cAAA,QACEkM,GAAG,QACHC,GAAG,SACHC,GAAG,OACHC,GAAG,OACH7D,OAAO,0BACP/C,YAAY,IACZ8B,UAAU,yFAKlBvH,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,QAAM4K,KAAK,UACX5K,IAAAA,cAAA,QAAM4K,KAAK,SAEZ8zB,IAEF7vB,aAAO,EAAPA,EAASlL,SACR3D,IAAAA,cAAA,OAAKI,UAAU,UAAUwD,IAAK2L,GAC3BV,EAAQhL,KAAI,CAACC,EAAMC,IAClB/D,IAAAA,cAAA,QAAM4K,KAAM9G,EAAKE,IAAKA,IAAK,QAAQD,IAAS3D,UAAU,eAMlE,CA7iBC4+B,GAAAV,KAAA/9B,GAAA6M,GAAAC,GAAAC,GAAAC,GAAAe,GAAAG,GAAAqC,GAAAvC,IAAA/N,GAAA49B,GAAA39B,MAAAC,EAAAA,EAAAA,GAAAs+B,GAAA,CAtCA1gC,GAAc,4BAA6B,CAC1CqC,WAAY,CAACE,GAAAA,MACb,EAMCtC,GAAS,CAAEiG,WAAW,IAAQ,cAO9BjG,KAAU,gBAOV8C,GAAM,CAAEoD,KAAM,eAAe,mBAAAC,IAAAhF,EAAAA,EAAAA,GAAAb,GAAA6F,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAAf,GAAA6F,EAAA/E,KAAA,GAAAgF,GAAAoI,GAAAnI,KAAAC,EAAAA,GAAAA,GAAAF,KAnBJ5F,EAAAA,mBAAgB0B,K,qCCzB5C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAygC,GAAA,IAAAvgC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAWvD,MAAAugC,WAG0BngC,EAAAA,iBAA6CC,WAAAA,GAAA,SAAAC,YACrEC,EAAAA,EAAAA,GAAA,KAAAR,GAAAwyB,GAAA,QAOAhyB,EAAAA,EAAAA,GAAA,KAAAN,IAAAuyB,GAAA,MAAAjN,GAAA,KAK8B,YAAQC,GAAA,cAP7BiN,GAAI,OAAA1xB,EAAAA,EAAAA,GAAAhB,GAAA,cAAJ0yB,CAAIzxB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,SAOJ8E,GAAI,OAAA/E,EAAAA,EAAAA,GAAAd,GAAA,cAAJ6F,CAAI9E,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,CAEbI,MAAAA,GACE,OAAOC,IAAAA,cAACm/B,GAAoB,CAAC/N,KAAMlxB,KAAKkxB,KAAM3sB,KAAMvE,KAAKuE,MAC3D,EAGK,SAAS06B,GAAqBh/B,GACnC,MAAM,KAAEixB,EAAI,KAAE3sB,GAAStE,EACvB,OACEH,IAAAA,cAAA,WACEA,IAAAA,cAAA,OAAKI,UAAW,WAAWqE,YACf,WAATA,GACCzE,IAAAA,cAAA,OACEI,UAAU,MACVoH,MAAM,OACNC,OAAO,OACPM,QAAQ,qBACRkE,oBAAoB,OACpBpE,QAAQ,OAER7H,IAAAA,cAAA,YACEA,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,UAGXjI,IAAAA,cAAA,kBACE0I,GAAG,MACHC,GAAG,aACHgrB,GAAG,MACHC,GAAG,aACHztB,EAAE,cACF0tB,kBAAkB,yGAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,UAEnCjI,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,kBACE0I,GAAG,MACHC,GAAG,aACHgrB,GAAG,MACHC,GAAG,aACHztB,EAAE,cACF0tB,kBAAkB,yGAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,UAEnCjI,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,UACFG,EAAE,WACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,YACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,eACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,eACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,IACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,KACHC,GAAG,OACHC,GAAG,KACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,eAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,KACHC,GAAG,OACHC,GAAG,KACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,KACHC,GAAG,OACHC,GAAG,KACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,gBACHC,GAAG,cACHC,GAAG,cACHC,GAAG,MACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,WAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,gBACHC,GAAG,cACHC,GAAG,cACHC,GAAG,MACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,WAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,eACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,eACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,IACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,OACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,IACZrE,OAAO,kBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,UAGXjI,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,eACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,UAGXjI,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,eACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,MAAMrE,OAAO,OACnDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,UAGXjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,aACHC,GAAG,cACHC,GAAG,MACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,QACEuI,EAAE,sRACFP,GAAG,YAELhI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,UAGXjI,IAAAA,cAAA,QACEuI,EAAE,sRACFP,GAAG,YAELhI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,UAGXjI,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,UACFG,EAAE,WACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,KACHC,GAAG,OACHC,GAAG,KACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,eAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,UAGXjI,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,MACHC,GAAG,OACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,IACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,OACHC,GAAG,cACHC,GAAG,OACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,OAAOrE,OAAO,OACpDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,WAIbjI,IAAAA,cAAA,KAAGwI,OAAO,OAAO/C,YAAY,IAAIgD,KAAK,OAAOqrB,SAAS,WACpD9zB,IAAAA,cAAA,KAAGuH,UAAU,mBACXvH,IAAAA,cAAA,KAAGuH,UAAU,mBACXvH,IAAAA,cAAA,WACEyI,KAAK,yBACLM,QAAQ,MACRxB,UAAU,2FACV63B,OAAO,4FAETp/B,IAAAA,cAAA,WACEyI,KAAK,yBACLM,QAAQ,cACRD,OAAO,iBACPJ,GAAG,aACHC,GAAG,aACHm2B,GAAG,QACHC,GAAG,SAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRD,OAAO,iBACPJ,GAAG,aACHC,GAAG,aACHm2B,GAAG,MACHC,GAAG,QAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLK,OAAO,iBACPJ,GAAG,aACHC,GAAG,aACHm2B,GAAG,MACHC,GAAG,QAEL/+B,IAAAA,cAAA,WACEyI,KAAK,yBACLM,QAAQ,cACRD,OAAO,iBACPvB,UAAU,wFACVmB,GAAG,aACHC,GAAG,aACHm2B,GAAG,QACHC,GAAG,SAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRD,OAAO,iBACPvB,UAAU,wFACVmB,GAAG,aACHC,GAAG,aACHm2B,GAAG,MACHC,GAAG,QAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLK,OAAO,iBACPvB,UAAU,wFACVmB,GAAG,aACHC,GAAG,aACHm2B,GAAG,MACHC,GAAG,QAEL/+B,IAAAA,cAAA,KAAGuH,UAAU,iCACXvH,IAAAA,cAAA,WACEyI,KAAK,yBACLM,QAAQ,cACRD,OAAO,kBACPJ,GAAG,aACHC,GAAG,aACHm2B,GAAG,YACHC,GAAG,eAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRD,OAAO,kBACPJ,GAAG,WACHC,GAAG,YACHm2B,GAAG,aACHC,GAAG,eAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLK,OAAO,kBACPJ,GAAG,aACHC,GAAG,YACHm2B,GAAG,aACHC,GAAG,eAEL/+B,IAAAA,cAAA,QACEuI,EAAE,gKACFC,OAAO,0BACP/C,YAAY,MACZ8B,UAAU,0FAEZvH,IAAAA,cAAA,YACEwI,OAAO,0BACP/C,YAAY,MACZ8B,UAAU,wFACV63B,OAAO,0FAETp/B,IAAAA,cAAA,YACEwI,OAAO,0BACP/C,YAAY,IACZ8B,UAAU,uGACV63B,OAAO,sIAETp/B,IAAAA,cAAA,YACEwI,OAAO,0BACP/C,YAAY,IACZ8B,UAAU,wFACV63B,OAAO,0FAETp/B,IAAAA,cAAA,QACEkM,GAAG,aACHC,GAAG,aACHC,GAAG,WACHC,GAAG,YACH7D,OAAO,0BACP/C,YAAY,IACZsD,QAAQ,gBAEV/I,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRxB,UAAU,uGACV63B,OAAO,0FAETp/B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRxB,UAAU,uGACV63B,OAAO,4FAETp/B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRxB,UAAU,uGACV63B,OAAO,2FAETp/B,IAAAA,cAAA,QACEuI,EAAE,6TACF82B,YAAY,OACZ52B,KAAK,0BACLlB,UAAU,+FAEZvH,IAAAA,cAAA,QACEuI,EAAE,8TACF82B,YAAY,OACZ52B,KAAK,0BACLlB,UAAU,6FAEZvH,IAAAA,cAAA,YACEwI,OAAO,0BACPjB,UAAU,wFACV63B,OAAO,sEAETp/B,IAAAA,cAAA,QACEuI,EAAE,kwCACFE,KAAK,0BACLlB,UAAU,2GAEZvH,IAAAA,cAAA,QACEuI,EAAE,gwCACFE,KAAK,0BACLlB,UAAU,wGAEZvH,IAAAA,cAAA,SACEA,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,cAGft/B,IAAAA,cAAA,SACEA,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,cAGft/B,IAAAA,cAAA,WACEyI,KAAK,0BACLM,QAAQ,MACRxB,UAAU,2FACV63B,OAAO,4FAETp/B,IAAAA,cAAA,WACEyI,KAAK,yBACLM,QAAQ,cACRD,OAAO,kBACPvB,UAAU,sFACVmB,GAAG,aACHC,GAAG,aACHm2B,GAAG,YACHC,GAAG,eAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRD,OAAO,kBACPvB,UAAU,sFACVmB,GAAG,aACHC,GAAG,YACHm2B,GAAG,aACHC,GAAG,eAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLK,OAAO,kBACPvB,UAAU,sFACVmB,GAAG,aACHC,GAAG,YACHm2B,GAAG,aACHC,GAAG,eAEL/+B,IAAAA,cAAA,QACEuI,EAAE,gKACFC,OAAO,0BACP/C,YAAY,QAEdzF,IAAAA,cAAA,YACEwI,OAAO,0BACP/C,YAAY,MACZ25B,OAAO,4FAETp/B,IAAAA,cAAA,YACEwI,OAAO,0BACP/C,YAAY,IACZ8B,UAAU,wFACV63B,OAAO,uIAETp/B,IAAAA,cAAA,YACEwI,OAAO,0BACP/C,YAAY,IACZ25B,OAAO,0FAETp/B,IAAAA,cAAA,QACEkM,GAAG,aACHC,GAAG,aACHC,GAAG,aACHC,GAAG,YACH7D,OAAO,0BACP/C,YAAY,IACZsD,QAAQ,cACRxB,UAAU,sFAEZvH,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRxB,UAAU,wFACV63B,OAAO,0FAETp/B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRxB,UAAU,wFACV63B,OAAO,4FAETp/B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRxB,UAAU,wFACV63B,OAAO,0FAETp/B,IAAAA,cAAA,QACEuI,EAAE,4TACF82B,YAAY,OACZ52B,KAAK,0BACLlB,UAAU,0GAEZvH,IAAAA,cAAA,QACEuI,EAAE,gUACF82B,YAAY,OACZ52B,KAAK,0BACLlB,UAAU,wGAEZvH,IAAAA,cAAA,YACEwI,OAAO,0BACP42B,OAAO,sEAETp/B,IAAAA,cAAA,WACEyI,KAAK,0BACLM,QAAQ,MACRxB,UAAU,sGACV63B,OAAO,6FAGXp/B,IAAAA,cAAA,KAAGuH,UAAU,qCACXvH,IAAAA,cAAA,QACEkM,GAAG,OACHC,GAAG,OACHC,GAAG,MACHC,GAAG,OACH7D,OAAO,0BACP/C,YAAY,MAEdzF,IAAAA,cAAA,QACEkM,GAAG,IACHC,GAAG,QACHC,GAAG,QACHC,GAAG,MACH7D,OAAO,0BACP/C,YAAY,IACZ8B,UAAU,yFAQd,WAAT9C,GACCzE,IAAAA,cAAA,OACEI,UAAU,MACVoH,MAAM,OACNC,OAAO,OACPM,QAAQ,cACRkE,oBAAoB,OACpBpE,QAAQ,OAER7H,IAAAA,cAAA,YACEA,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,eACHC,GAAG,MACHC,GAAG,OACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,UAEnCjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,MAAMrE,OAAO,OACnDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,cACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,MAAMrE,OAAO,OACnDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,QACEuI,EAAE,oqBACFP,GAAG,WAELhI,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,KACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,UAEnCjI,IAAAA,cAAA,QACEuI,EAAE,kpBACFP,GAAG,WAELhI,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,QACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,IACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,kBACE0I,GAAG,cACHC,GAAG,OACHgrB,GAAG,cACHC,GAAG,OACHztB,EAAE,cACF0tB,kBAAkB,yGAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,IACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,kBACE0I,GAAG,cACHC,GAAG,OACHgrB,GAAG,cACHC,GAAG,OACHztB,EAAE,cACF0tB,kBAAkB,yGAClB7rB,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,OACHC,GAAG,cACHC,GAAG,eACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,cACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,WAGrDjI,IAAAA,cAAA,KAAGwI,OAAO,OAAO/C,YAAY,IAAIgD,KAAK,OAAOqrB,SAAS,WACpD9zB,IAAAA,cAAA,KAAGuH,UAAU,wCACXvH,IAAAA,cAAA,KAAGuH,UAAU,+BACXvH,IAAAA,cAAA,QACEuI,EAAE,ycACFE,KAAK,YAEPzI,IAAAA,cAAA,SACEA,IAAAA,cAAA,OACEyI,KAAK,yBACL4rB,UAAU,YAEZr0B,IAAAA,cAAA,OACEyI,KAAK,yBACL4rB,UAAU,YAEZr0B,IAAAA,cAAA,OACEyI,KAAK,yBACL4rB,UAAU,aAGdr0B,IAAAA,cAAA,QAAMyI,KAAK,SACTzI,IAAAA,cAAA,OAAKq0B,UAAU,aAEjBr0B,IAAAA,cAAA,SACEA,IAAAA,cAAA,OAAKyI,KAAK,UAAU4rB,UAAU,YAC9Br0B,IAAAA,cAAA,OACEyI,KAAK,yBACL4rB,UAAU,aAGdr0B,IAAAA,cAAA,QACEuI,EAAE,ymBACFC,OAAO,UACP/C,YAAY,IACZuvB,KAAK,iBAEPh1B,IAAAA,cAAA,QACEuI,EAAE,2mBACFC,OAAO,UACP/C,YAAY,IACZuvB,KAAK,iBAEPh1B,IAAAA,cAAA,QACEuI,EAAE,kmBACFC,OAAO,UACP/C,YAAY,IACZqD,OAAO,mBAET9I,IAAAA,cAAA,QACEuI,EAAE,kmBACFC,OAAO,UACP/C,YAAY,MAEdzF,IAAAA,cAAA,QACEuI,EAAE,2vBACFC,OAAO,yBACP/C,YAAY,IACZqD,OAAO,oBAET9I,IAAAA,cAAA,QACEuI,EAAE,2vBACFC,OAAO,0BACP/C,YAAY,MAEdzF,IAAAA,cAAA,QACEuI,EAAE,+JACFC,OAAO,0BACP/C,YAAY,QAEdzF,IAAAA,cAAA,QACEuI,EAAE,+JACFC,OAAO,0BACP/C,YAAY,MACZ8B,UAAU,0FAOZ,WAAT9C,GACCzE,IAAAA,cAAA,OACEI,UAAU,MACVoH,MAAM,OACNC,OAAO,OACPM,QAAQ,cACRkE,oBAAoB,OACpBpE,QAAQ,OAER7H,IAAAA,cAAA,YACEA,IAAAA,cAAA,kBACE0I,GAAG,MACHC,GAAG,aACHgrB,GAAG,MACHC,GAAG,aACHztB,EAAE,cACF0tB,kBAAkB,sFAClB7rB,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,UAEnCjI,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,UACFyB,MAAM,SACNC,OAAO,UACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,KACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,KACHC,GAAG,OACHC,GAAG,KACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,KACHC,GAAG,KACHC,GAAG,OACHC,GAAG,KACHrE,GAAG,oBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,IACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,MACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,YAEHhI,IAAAA,cAAA,kBACEqI,aAAa,MACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,MACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,MACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,eACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,UAGXjI,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,eACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,MAAMrE,OAAO,OACnDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,UAGXjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,aACHC,GAAG,cACHC,GAAG,MACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,WACEgI,GAAG,UACHo3B,OAAO,sEAETp/B,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,IACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,OACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,OACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,OACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,eACHC,GAAG,cACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,MAAMrE,OAAO,OACnDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,IACZrE,OAAO,iBAGXjI,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,OACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,OACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,IACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,MACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,MACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,MACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,MACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,WACEgI,GAAG,UACHo3B,OAAO,8DAETp/B,IAAAA,cAAA,UACE4F,EAAE,QACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,IACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,OACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,OACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,SACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,OACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,UACE4F,EAAE,SACFG,EAAE,OACFyB,MAAM,SACNC,OAAO,SACPm3B,YAAY,oBACZ52B,GAAG,aAEHhI,IAAAA,cAAA,kBACEqI,aAAa,OACbw2B,GAAG,mBAGP7+B,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,eACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,MACZrE,OAAO,UAGXjI,IAAAA,cAAA,kBACEkM,GAAG,MACHC,GAAG,eACHC,GAAG,MACHC,GAAG,cACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,MAAMrE,OAAO,OACnDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,UAGXjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,aACHC,GAAG,cACHC,GAAG,MACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,OACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,WACEgI,GAAG,UACHo3B,OAAO,kEAETp/B,IAAAA,cAAA,kBACEkM,GAAG,mBACHC,GAAG,mBACHC,GAAG,OACHC,GAAG,KACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,OACjDjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,gBAETjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,IACZrE,OAAO,gBAETjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,IAAIrE,OAAO,UAEnDjI,IAAAA,cAAA,kBACEkM,GAAG,cACHC,GAAG,OACHC,GAAG,cACHC,GAAG,OACHrE,GAAG,qBAEHhI,IAAAA,cAAA,QAAMkI,UAAU,UAAUoE,YAAY,OAAOrE,OAAO,OACpDjI,IAAAA,cAAA,QAAMkI,UAAU,UAAUD,OAAO,gBACjCjI,IAAAA,cAAA,QACEkI,UAAU,UACVoE,YAAY,OACZrE,OAAO,WAIbjI,IAAAA,cAAA,KAAGwI,OAAO,OAAO/C,YAAY,IAAIgD,KAAK,OAAOqrB,SAAS,WACpD9zB,IAAAA,cAAA,KAAGuH,UAAU,0BACXvH,IAAAA,cAAA,KAAGuH,UAAU,wBACXvH,IAAAA,cAAA,WACEyI,KAAK,yBACLM,QAAQ,cACRD,OAAO,iBACPJ,GAAG,QACHC,GAAG,OACHm2B,GAAG,QACHC,GAAG,SAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLM,QAAQ,cACRD,OAAO,iBACPJ,GAAG,QACHC,GAAG,OACHm2B,GAAG,QACHC,GAAG,QAEL/+B,IAAAA,cAAA,WACEyI,KAAK,UACLK,OAAO,iBACPJ,GAAG,QACHC,GAAG,OACHm2B,GAAG,QACHC,GAAG,QAEL/+B,IAAAA,cAAA,QACEkM,GAAG,SACHC,GAAG,OACHC,GAAG,SACHC,GAAG,OACH7D,OAAO,yBACP/C,YAAY,IACZ8B,UAAU,mEAEZvH,IAAAA,cAAA,QACEkM,GAAG,QACHC,GAAG,OACHC,GAAG,QACHC,GAAG,OACH7D,OAAO,yBACP/C,YAAY,IACZ8B,UAAU,iEAEZvH,IAAAA,cAAA,YACEwI,OAAO,yBACP/C,YAAY,IACZqD,OAAO,iBACPvB,UAAU,6EACV63B,OAAO,uJAETp/B,IAAAA,cAAA,UACEwI,OAAO,UACP/C,YAAY,MACZsD,QAAQ,MACRD,OAAO,iBACPJ,GAAG,SACHC,GAAG,OACHxC,EAAE,QAEJnG,IAAAA,cAAA,UACEwI,OAAO,UACP/C,YAAY,MACZsD,QAAQ,MACRD,OAAO,iBACPJ,GAAG,SACHC,GAAG,OACHxC,EAAE,QAEJnG,IAAAA,cAAA,UACEwI,OAAO,UACP/C,YAAY,MACZsD,QAAQ,MACRD,OAAO,kBACPJ,GAAG,SACHC,GAAG,OACHxC,EAAE,QAEJnG,IAAAA,cAAA,UACEyI,KAAK,UACLM,QAAQ,MACRD,OAAO,kBACPJ,GAAG,SACHC,GAAG,OACHxC,EAAE,QAEJnG,IAAAA,cAAA,KACE8I,OAAO,kBACPvB,UAAU,8EAEVvH,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,cAGft/B,IAAAA,cAAA,UACEwI,OAAO,UACP/C,YAAY,OACZsD,QAAQ,MACRD,OAAO,kBACPvB,UAAU,yDACVmB,GAAG,OACHC,GAAG,KACHxC,EAAE,SAEJnG,IAAAA,cAAA,UACEyI,KAAK,UACLM,QAAQ,MACRD,OAAO,kBACPvB,UAAU,yDACVmB,GAAG,OACHC,GAAG,KACHxC,EAAE,MAEJnG,IAAAA,cAAA,UACEyI,KAAK,UACLM,QAAQ,MACRD,OAAO,kBACPvB,UAAU,yDACVmB,GAAG,OACHC,GAAG,KACHxC,EAAE,MAEJnG,IAAAA,cAAA,QACEuI,EAAE,umFACFE,KAAK,0BACLK,OAAO,oBAET9I,IAAAA,cAAA,YACEwI,OAAO,yBACP/C,YAAY,IACZqD,OAAO,kBACPvB,UAAU,4EACV63B,OAAO,qJAETp/B,IAAAA,cAAA,UACEwI,OAAO,UACP/C,YAAY,MACZsD,QAAQ,WACRD,OAAO,kBACPvB,UAAU,+DACVmB,GAAG,QACHC,GAAG,OACHxC,EAAE,QAEJnG,IAAAA,cAAA,UACEwI,OAAO,UACP/C,YAAY,MACZsD,QAAQ,WACRD,OAAO,kBACPvB,UAAU,+DACVmB,GAAG,QACHC,GAAG,OACHxC,EAAE,QAEJnG,IAAAA,cAAA,UACEwI,OAAO,UACP/C,YAAY,MACZsD,QAAQ,WACRD,OAAO,kBACPvB,UAAU,+DACVmB,GAAG,QACHC,GAAG,OACHxC,EAAE,QAEJnG,IAAAA,cAAA,UACEyI,KAAK,UACLM,QAAQ,WACRD,OAAO,kBACPvB,UAAU,+DACVmB,GAAG,QACHC,GAAG,OACHxC,EAAE,QAEJnG,IAAAA,cAAA,KAAG8I,OAAO,mBACR9I,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,cAGft/B,IAAAA,cAAA,UACEwI,OAAO,UACP/C,YAAY,OACZsD,QAAQ,MACRD,OAAO,kBACPJ,GAAG,MACHC,GAAG,KACHxC,EAAE,SAEJnG,IAAAA,cAAA,UACEyI,KAAK,UACLM,QAAQ,MACRD,OAAO,kBACPJ,GAAG,MACHC,GAAG,KACHxC,EAAE,MAEJnG,IAAAA,cAAA,UACEyI,KAAK,UACLM,QAAQ,MACRD,OAAO,kBACPJ,GAAG,MACHC,GAAG,KACHxC,EAAE,MAEJnG,IAAAA,cAAA,QACEuI,EAAE,ylFACFE,KAAK,0BACLK,OAAO,kBACPvB,UAAU,mEAEZvH,IAAAA,cAAA,SACEA,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,aAEbt/B,IAAAA,cAAA,OACEyI,KAAK,0BACL62B,WAAW,cAGft/B,IAAAA,cAAA,YACEwI,OAAO,0BACP/C,YAAY,IACZ25B,OAAO,+EAETp/B,IAAAA,cAAA,QACEkM,GAAG,MACHC,GAAG,SACHC,GAAG,SACHC,GAAG,OACH7D,OAAO,0BACP/C,YAAY,IACZ8B,UAAU,iEAOtBvH,IAAAA,cAAA,OAAKI,UAAU,kBACbJ,IAAAA,cAAA,OAAKI,UAAW,cAAcqE,SAAa2sB,KAKrD,CAj2DCmO,GAAAL,KAAA3+B,GAAA2wB,GAAAC,GAAAjN,GAAAC,IAAA3jB,GAAAy+B,GAAAx+B,MAAAC,EAAAA,EAAAA,GAAA6+B,GAAA,CArBAjhC,GAAc,0BAA2B,CACxCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAMCtC,KAAU,WAOVA,KAAU,oBAZaQ,EAAAA,mBAAgB0B,K,sCChB1C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAghC,GAAA,IAAA9gC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAavD,MAAA8gC,WAIU1gC,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,GAAA8K,GAAA,QAMAtK,EAAAA,EAAAA,GAAA,KAAAN,IAAA6K,GAAA,MAAAi2B,GAAA,QAAAC,GAAA,wBADS31B,GAAc,OAAAtK,EAAAA,EAAAA,GAAAhB,GAAA,wBAAdsL,CAAcrK,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,UAOd0E,GAAK,OAAA3E,EAAAA,EAAAA,GAAAd,GAAA,eAALyF,CAAK1E,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,CACdI,MAAAA,GACE,OACEC,IAAAA,cAAC4/B,GAA6B,CAC5B51B,eAAgB9J,KAAK8J,eACrB3F,MAAOnE,KAAKmE,OAGlB,EAEK,SAASu7B,GACdz/B,GAEA,MAAM,eAAE6J,EAAc,MAAE3F,EAAQ,SAAYlE,EAC5C,OACEH,IAAAA,cAAA,OAAKI,UAAU,WACbJ,IAAAA,cAAA,OAAKI,UAAqB,SAAViE,EAAmB,cAAgB,gBACtC,UAAVA,GAAqBrE,IAAAA,cAAA,OAAKI,UAAU,cAC1B,SAAViE,GAAoBrE,IAAAA,cAAA,OAAKI,UAAU,aACpCJ,IAAAA,cAAA,OAAKI,UAAqB,SAAViE,EAAmB,YAAc,cAC9C2F,IAKX,CAhBC61B,GAAAJ,KAAAl/B,GAAAiJ,GAAAC,GAAAi2B,GAAAC,IAAAn/B,GAAAg/B,GAAA/+B,MAAAC,EAAAA,EAAAA,GAAAm/B,GAAA,CA5BAvhC,GAAc,mCAAoC,CACjDqC,WAAY,CAACE,GAAAA,MACb,EASCtC,KAAU,qBAOVA,KAAU,qBAdHQ,EAAAA,mBAAgB0B,K,4CCH1B,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAEpC,IAAAshC,GAAA,IAAAphC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAKA,MAAAohC,WAG2BhhC,EAAAA,iBAA8CC,WAAAA,GAAA,SAAAC,YACvEC,EAAAA,EAAAA,GAAA,KAAAR,GAAAwlB,GAAA,QAGAhlB,EAAAA,EAAAA,GAAA,KAAAN,IAAAulB,GAAA,MAAAd,GAAA,SAQAnkB,EAAAA,EAAAA,GAAA,KAAAL,IAAAykB,GAAA,MAAA0c,GAAA,QAAAC,GAAA,cAVqBx7B,GAAI,OAAA/E,EAAAA,EAAAA,GAAAhB,GAAA,cAAJ+F,CAAI9E,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,gBAMgB4jB,GAAW,OAAA7jB,EAAAA,EAAAA,GAAAd,GAAA,qBAAX2kB,CAAW5jB,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,aAW3CugC,GAAQ,OAAAxgC,EAAAA,EAAAA,GAAAb,GAAA,kBAARqhC,CAAQvgC,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,CAEjBI,MAAAA,GACE,OACEC,IAAAA,cAACmgC,GAAqB,CACpB17B,KAAMvE,KAAKuE,KACX8e,YAAarjB,KAAKqjB,YAClB2c,SAAUhgC,KAAKggC,UAGrB,EAGK,SAASC,GAAqB71B,GAIf,IAJgB,KACpC7F,EAAO,UAAS,YAChB8e,EAAW,SACX2c,GACkB51B,EAgBlB,OAfe3D,EAAAA,EAAAA,UACb,IACE3G,IAAAA,cAAA,UACEkgC,SAAUA,EACV9/B,UAAW,iBAAiBqE,IAC5BhB,MAAO8f,GAEPvjB,IAAAA,cAAA,OAAKI,UAAU,oBACbJ,IAAAA,cAAA,gBAIN,CAACyE,GAIL,CAvBC27B,GAAAL,KAAAx/B,GAAA2jB,GAAAC,GAAAd,GAAAC,GAAA0c,GAAAC,IAAAz/B,GAAAs/B,GAAAr/B,MAAAC,EAAAA,EAAAA,GAAA0/B,GAAA,CAjCA9hC,GAAc,2BAA4B,CACzCqC,WAAY,CAACC,EAAAA,EAAoBC,GAAAA,MACjC,EAGCtC,KAAU,WAMVA,GAAS,CAAEiG,WAAW,IAAQ,kBAQ9BjG,GAAS,CACRkG,KAAMwG,UACN,wBAlBuBlM,EAAAA,mBAAgB0B,K,mCCvB3C,MAAQnC,cAAaA,KAAKE,EAAAA,EAAAA,oBAE1B,IAAA6hC,GAOA,MAAAC,WAG+BvhC,EAAAA,iBAC7BgB,MAAAA,GACE,OAAOC,IAAAA,cAACugC,GAAyB,KACnC,EAGK,SAASA,KACd,OACEvgC,IAAAA,cAAA,OAAKI,UAAU,kBACbJ,IAAAA,cAAA,WACEA,IAAAA,cAAA,QAAM4K,KAAK,cAEb5K,IAAAA,cAAA,OAAKI,UAAU,kBACbJ,IAAAA,cAAA,QAAM4K,KAAK,aAInB,CAbC41B,GAAAF,IAAAD,GAAA5/B,KAAAC,EAAAA,EAAAA,GAAA8/B,GAAA,CAPAliC,GAAc,gCAAiC,CAC9CqC,WAAY,CAACE,GAAAA,MACb,YAC6B9B,EAAAA,kBAAgByB,EAAAC,K,0ECX/C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAiiC,GAAA,IAAA/hC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAgD,GAAA,IAAAhD,QAAA+N,GAAA,IAAA/N,QAAAgO,GAAA,IAAAhO,QAuBvD,MAAA+hC,WAG6B3hC,EAAAA,iBAAiBC,WAAAA,GAAA,SAAAC,YAC5CC,EAAAA,EAAAA,GAAA,KAAAR,GAAAS,GAAA,KAIwC,YAExCD,EAAAA,EAAAA,GAAA,KAAAN,IAAAQ,GAAA,MAAAC,GAAA,SAMAH,EAAAA,EAAAA,GAAA,KAAAL,IAAAS,GAAA,MAAAqhC,GAAA,SAMAzhC,EAAAA,EAAAA,GAAA,KAAAuC,IAAAm/B,GAAA,MAAArhC,GAAA,SAMAL,EAAAA,EAAAA,GAAA,KAAAwC,IAAAlC,GAAA,MAAA0zB,GAAA,SAMAh0B,EAAAA,EAAAA,GAAA,KAAAyC,IAAAwxB,GAAA,MAAA0N,GAAA,SAMA3hC,EAAAA,EAAAA,GAAA,KAAAwN,IAAAo0B,GAAA,MAAAC,GAAA,SAMA7hC,EAAAA,EAAAA,GAAA,KAAAyN,IAAAq0B,GAAA,MAAAC,GAAA,QAAAC,GAAA,gBAtCSzhC,GAAM,OAAAC,EAAAA,EAAAA,GAAAhB,GAAA,gBAANe,CAAME,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,cAMNE,GAAS,OAAAH,EAAAA,EAAAA,GAAAd,GAAA,mBAATiB,CAASF,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,eAMTwhC,GAAU,OAAAzhC,EAAAA,EAAAA,GAAAb,GAAA,oBAAVsiC,CAAUxhC,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,gBAMVG,GAAW,OAAAJ,EAAAA,EAAAA,GAAA+B,GAAA,qBAAX3B,CAAWH,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,UAMXkY,GAAK,OAAAnY,EAAAA,EAAAA,GAAAgC,GAAA,eAALmW,CAAKlY,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,aAMLyhC,GAAQ,OAAA1hC,EAAAA,EAAAA,GAAAiC,GAAA,kBAARy/B,CAAQzhC,IAAAC,EAAAA,EAAAA,GAAA+B,GAAA,KAAAhC,EAAA,oBAMR0hC,GAAe,OAAA3hC,EAAAA,EAAAA,GAAAgN,GAAA,yBAAf20B,CAAe1hC,IAAAC,EAAAA,EAAAA,GAAA8M,GAAA,KAAA/M,EAAA,eAMf8Y,GAAU,OAAA/Y,EAAAA,EAAAA,GAAAiN,GAAA,oBAAV8L,CAAU9Y,IAAAC,EAAAA,EAAAA,GAAA+M,GAAA,KAAAhN,EAAA,CACnBI,MAAAA,GACE,OACEC,IAAAA,cAACshC,GAAuB,CACtBzhC,UAAWK,KAAKL,UAChBC,YAAaI,KAAKJ,YAClBqhC,WAAYjhC,KAAKihC,WACjBC,SAAUlhC,KAAKkhC,SACf3hC,OAAQS,KAAKT,OACbgZ,WAAYvY,KAAKuY,WACjBZ,MAAO3X,KAAK2X,MACZwpB,gBAAiBnhC,KAAKmhC,iBAG5B,EAGK,SAASC,GAAwBnhC,GACtC,MAAM,OAAEV,EAAM,UAAEI,EAAS,YAAEC,EAAW,WAAE2Y,EAAU,MAAEZ,EAAK,gBAAEwpB,GACzDlhC,EACF,OACEH,IAAAA,cAAA,OACEI,UAAWC,KACT,sBACAZ,GAAU,UAAUA,KAEtBgE,MAAO,CACLgV,aACAZ,UAGF7X,IAAAA,cAAA,OAAKI,UAAU,aACbJ,IAAAA,cAAA,OAAKI,UAAU,4BACZP,GACCG,IAAAA,cAAA,OAAKI,UAAU,kBAAkBqD,MAAOtD,EAAMghC,YAC3CthC,GAGJC,GACCE,IAAAA,cAAA,OAAKI,UAAU,wBAAwBqD,MAAOtD,EAAMihC,UACjDthC,KAGFuhC,UAAAA,EAAiB19B,SAClB3D,IAAAA,cAAA,OAAKI,UAAU,8BACZihC,EAAgBx9B,KAAI,CAACC,EAAMC,IAC1B/D,IAAAA,cAAA,OAAKgE,IAAKD,GACR/D,IAAAA,cAAA,YAAO8D,EAAKE,IAAI,KAChBhE,IAAAA,cAAA,YAAO8D,EAAKG,aAS9B,CA1CCs9B,GAAAb,KAAAngC,GAAApB,GAAAC,GAAAC,GAAAC,GAAAqhC,GAAAC,GAAArhC,GAAAC,GAAA0zB,GAAAC,GAAA0N,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAA1gC,GAAAigC,GAAAhgC,MAAAC,EAAAA,EAAAA,GAAA6gC,GAAA,CAjEAjjC,GAAc,6BAA8B,CAC3CqC,WAAY,CAACE,GAAAA,MACb,EAKCtC,KAAU,aAMVA,KAAU,gBAMVA,GAAS,CAAEiG,WAAW,IAAQ,iBAM9BjG,KAAU,kBAMVA,GAAS,CAAEiG,WAAW,IAAQ,YAM9BjG,GAAS,CAAEiG,WAAW,IAAQ,eAM9BjG,GAAS,CAAEiG,WAAW,IAAQ,sBAM9BjG,GAAS,CAAEiG,WAAW,IAAQ,0BA9CJzF,EAAAA,mBAAgB0B,K,kDC1B7C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAEpC,IAAAgjC,GAAA,IAAA9iC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAwBA,MAAA8iC,WAG8B1iC,EAAAA,iBAAiBC,WAAAA,GAAA,SAAAC,YAC7CC,EAAAA,EAAAA,GAAA,KAAAR,GAAAsD,GAAA,QAQA9C,EAAAA,EAAAA,GAAA,KAAAN,IAAAqD,GAAA,MAAAuL,GAAA,SAOAtO,EAAAA,EAAAA,GAAA,KAAAL,IAAA4O,GAAA,MAAAi0B,GAAA,SAQAxiC,EAAAA,EAAAA,GAAA,KAAAuC,IAAAkgC,GAAA,MAAAC,GAAA,QAAAC,GAAA,kBAhBSj/B,GAAQ,OAAAlD,EAAAA,EAAAA,GAAAhB,GAAA,kBAARkE,CAAQjD,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,UAOR6H,GAAK,OAAA9H,EAAAA,EAAAA,GAAAd,GAAA,eAAL4I,CAAK7H,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,QAQLmiC,GAAG,OAAApiC,EAAAA,EAAAA,GAAAb,GAAA,aAAHijC,CAAGniC,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,WAQHoiC,GAAM,OAAAriC,EAAAA,EAAAA,GAAA+B,GAAA,gBAANsgC,CAAMpiC,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,CACfI,MAAAA,GACE,OACEC,IAAAA,cAACgiC,GAAwB,CACvBx6B,MAAOtH,KAAKsH,MACZ5E,SAAU1C,KAAK0C,SACfk/B,IAAK5hC,KAAK4hC,IACVC,OAAQ7hC,KAAK6hC,QAGnB,EAGF,SAASC,GAAyB7hC,GAChC,MAAM,SAAEyC,EAAQ,MAAE4E,EAAK,IAAEs6B,EAAG,OAAEC,GAAW5hC,EACnC8hC,EAAa,IACbz6B,EAAQ,CAAEA,MAAO,GAAGA,OAAc,CAAC,EAClCs6B,IAAKA,EAAM,GAAGA,MAAU,QAG/B,OACE9hC,IAAAA,cAAA,OAAKI,UAAU,eAAeqD,MAAOw+B,GAClCr/B,aAAQ,EAARA,EAAUiB,KAAI,CAACC,EAA2BC,IAEvC/D,IAAAA,cAAA,OACEgE,IAAKD,EACL3D,UAAW,eACE,eAAX2hC,EAA0B,mBAAqB,uBAC7CG,EAAAA,GAAAA,OAAMp+B,EAAKhE,aAAe,WAAa,MAE3CE,IAAAA,cAAA,OACEI,UAAW,eAAe0D,EAAKW,MAAQ,KACvChB,MACEK,EAAKq+B,OAAS,CAAEz3B,gBAAiB,OAAO5G,EAAKq+B,WAAc,CAAC,IAGhEniC,IAAAA,cAAA,OACEI,UAAW,oBACT8hC,EAAAA,GAAAA,OAAMp+B,EAAKhE,cAA2B,eAAXiiC,EACvB,gBACA,mBAGN/hC,IAAAA,cAAA,OAAKI,UAAU,gBAAgB0D,EAAKJ,OACpC1D,IAAAA,cAAA,OAAKI,UAAU,iBAAiB0D,EAAKs+B,UACnCF,EAAAA,GAAAA,OAAMp+B,EAAKhE,cAA2B,eAAXiiC,GAC3B/hC,IAAAA,cAAA,OAAKI,UAAU,wBACV0D,EAAKu+B,WACNriC,IAAAA,cAAA,QAAMI,UAAW,aAAa0D,EAAKu+B,cAErCriC,IAAAA,cAAA,QAAMI,UAAU,mBAAmB0D,EAAKhE,kBAS1D,CAhDCwiC,GAAAb,KAAAlhC,GAAAyB,GAAAC,GAAAuL,GAAAC,GAAAi0B,GAAAC,GAAAC,GAAAC,IAAArhC,GAAAghC,GAAA/gC,MAAAC,EAAAA,EAAAA,GAAA4hC,GAAA,CA7CAhkC,GAAc,8BAA+B,CAC5CqC,WAAY,CAACE,GAAAA,MACb,EAMCtC,GAAS,CACRiG,WAAW,IACX,eAKDjG,GAAS,CACRiG,WAAW,IACX,YAMDjG,GAAS,CACRiG,WAAW,IACX,UAMDjG,GAAS,CACRiG,WAAW,IACX,sBA9B0BzF,EAAAA,mBAAgB0B,K,oEC9B9C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAA+jC,GAAA,IAAA7jC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAgD,GAAA,IAAAhD,QAAA+N,GAAA,IAAA/N,QAiBvD,MAAA6jC,WAIUzjC,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,GAAA+jC,GAAA,QAGAvjC,EAAAA,EAAAA,GAAA,KAAAN,IAAA8jC,GAAA,MAAAC,GAAA,SAQAzjC,EAAAA,EAAAA,GAAA,KAAAL,IAAA+jC,GAAA,MAAAxxB,GAAA,SAMAlS,EAAAA,EAAAA,GAAA,KAAAuC,IAAA4P,GAAA,MAAAwxB,GAAA,SAMA3jC,EAAAA,EAAAA,GAAA,KAAAwC,IAAAohC,GAAA,MAAAC,GAAA,SASA7jC,EAAAA,EAAAA,GAAA,KAAAyC,IAAAqhC,GAAA,MAAAC,GAAA,SASA/jC,EAAAA,EAAAA,GAAA,KAAAwN,IAAAw2B,GAAA,MAAAC,GAAA,QAAAC,GAAA,sBAxCqBC,GAAY,OAAA3jC,EAAAA,EAAAA,GAAAhB,GAAA,sBAAZ2kC,CAAY1jC,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,iBAMQ2jC,GAAY,OAAA5jC,EAAAA,EAAAA,GAAAd,GAAA,sBAAZ0kC,CAAY3jC,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,SAQ5CqS,GAAI,OAAAtS,EAAAA,EAAAA,GAAAb,GAAA,cAAJmT,CAAIrS,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,SAMJ4jC,GAAI,OAAA7jC,EAAAA,EAAAA,GAAA+B,GAAA,cAAJ8hC,CAAI5jC,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,sBASJ6jC,GAAiB,OAAA9jC,EAAAA,EAAAA,GAAAgC,GAAA,2BAAjB8hC,CAAiB7jC,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,sBASjB8jC,GAAiB,OAAA/jC,EAAAA,EAAAA,GAAAiC,GAAA,2BAAjB8hC,CAAiB9jC,IAAAC,EAAAA,EAAAA,GAAA+B,GAAA,KAAAhC,EAAA,cAMjB+jC,GAAS,OAAAhkC,EAAAA,EAAAA,GAAAgN,GAAA,mBAATg3B,CAAS/jC,IAAAC,EAAAA,EAAAA,GAAA8M,GAAA,KAAA/M,EAAA,CAElBI,MAAAA,GACE,OACEC,IAAAA,cAAC2jC,GAA2B,CAC1BN,aAAcnjC,KAAKmjC,aACnBC,aAAcpjC,KAAKojC,aACnBtxB,KAAM9R,KAAK8R,KACXuxB,KAAMrjC,KAAKqjC,KACXC,kBAAmBtjC,KAAKsjC,kBACxBC,kBAAmBvjC,KAAKujC,kBACxBC,UAAWxjC,KAAKwjC,WAGtB,EAGK,SAASC,GAA4BxjC,GAC1C,MAAM,aACJkjC,EAAY,KACZrxB,EAAI,KACJuxB,EAAI,aACJD,EAAY,kBACZE,EAAiB,kBACjBC,GAAoB,EAAI,UACxBC,GACEvjC,EACJ,OACEH,IAAAA,cAAA,OAAKI,UAAU,iBAAiBqD,MAAO,IAAK6/B,IAC1CtjC,IAAAA,cAAA,WAEIA,IAAAA,cAAA,OAAKI,UAAU,UACZojC,GAAqBxjC,IAAAA,cAAA,QAAM4K,KAAK,iBAC/B44B,GAAqBC,GACrBzjC,IAAAA,cAAA,OAAKI,UAAU,2BAKvBJ,IAAAA,cAAA,WACEA,IAAAA,cAAA,OAAKI,UAAU,iBACbJ,IAAAA,cAAA,OAAKI,UAAU,iBACbJ,IAAAA,cAAA,QAAMI,UAAU,SAASijC,KAG7BrjC,IAAAA,cAAA,OACEI,UAAU,eACVqD,MACEggC,GAAqBD,EAAoB,CAAEI,UAAW,IAAO,CAAC,GAGhE5jC,IAAAA,cAAA,OAAKI,UAAU,gBACbJ,IAAAA,cAAA,OAAKI,UAAU,QAAQ4R,aAAI,EAAJA,EAAM6xB,kBAC7B7jC,IAAAA,cAAA,OAAKI,UAAU,QACZsjC,GAAa,IACbH,MAOf,CA/CCO,GAAAtB,KAAAjiC,GAAAkiC,GAAAC,GAAAC,GAAAC,GAAAxxB,GAAAC,GAAAwxB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAA5iC,GAAA+hC,GAAA9hC,MAAAC,EAAAA,EAAAA,GAAAojC,GAAA,CAnEAxlC,GAAc,iCAAkC,CAC/CqC,WAAY,CAACE,GAAAA,MACb,EAMCtC,KAAU,mBAMVA,GAAS,CAAEiG,WAAW,IAAQ,mBAO9BjG,GAAS,CAAEiG,WAAW,IAAQ,WAM9BjG,GAAS,CAAEiG,WAAW,IAAQ,WAO9BjG,GAAS,CACRkG,KAAMwG,UACN,wBAOD1M,GAAS,CACRkG,KAAMwG,UACN,wBAMD1M,GAAS,CAAEiG,WAAW,IAAQ,yBA/CvBzF,EAAAA,mBAAgB0B,K,8DCrB1B,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAAulC,GAAA,IAAArlC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAA8C,GAAA,IAAA9C,QAAA+C,GAAA,IAAA/C,QAAAgD,GAAA,IAAAhD,QAevD,MAAAqlC,WAIUjlC,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,GAAA+jC,GAAA,QAGAvjC,EAAAA,EAAAA,GAAA,KAAAN,IAAA8jC,GAAA,MAAAC,GAAA,SAQAzjC,EAAAA,EAAAA,GAAA,KAAAL,IAAA+jC,GAAA,MAAAxxB,GAAA,SAMAlS,EAAAA,EAAAA,GAAA,KAAAuC,IAAA4P,GAAA,MAAAwxB,GAAA,SAMA3jC,EAAAA,EAAAA,GAAA,KAAAwC,IAAAohC,GAAA,MAAAC,GAAA,SASA7jC,EAAAA,EAAAA,GAAA,KAAAyC,IAAAqhC,GAAA,MAAAC,GAAA,QAAAC,GAAA,sBA/BqBG,GAAY,OAAA3jC,EAAAA,EAAAA,GAAAhB,GAAA,sBAAZ2kC,CAAY1jC,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,iBAMQ2jC,GAAY,OAAA5jC,EAAAA,EAAAA,GAAAd,GAAA,sBAAZ0kC,CAAY3jC,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,SAQ5CqS,GAAI,OAAAtS,EAAAA,EAAAA,GAAAb,GAAA,cAAJmT,CAAIrS,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,SAMJ4jC,GAAI,OAAA7jC,EAAAA,EAAAA,GAAA+B,GAAA,cAAJ8hC,CAAI5jC,IAAAC,EAAAA,EAAAA,GAAA6B,GAAA,KAAA9B,EAAA,sBASJ6jC,GAAiB,OAAA9jC,EAAAA,EAAAA,GAAAgC,GAAA,2BAAjB8hC,CAAiB7jC,IAAAC,EAAAA,EAAAA,GAAA8B,GAAA,KAAA/B,EAAA,sBASjB8jC,GAAiB,OAAA/jC,EAAAA,EAAAA,GAAAiC,GAAA,2BAAjB8hC,CAAiB9jC,IAAAC,EAAAA,EAAAA,GAAA+B,GAAA,KAAAhC,EAAA,CAE1BI,MAAAA,GACE,OACEC,IAAAA,cAACikC,GAAqC,CACpCZ,aAAcnjC,KAAKmjC,aACnBC,aAAcpjC,KAAKojC,aACnBtxB,KAAM9R,KAAK8R,KACXuxB,KAAMrjC,KAAKqjC,KACXC,kBAAmBtjC,KAAKsjC,kBACxBC,kBAAmBvjC,KAAKujC,mBAG9B,EAGK,SAASQ,GACd9jC,GAEA,MAAM,aACJkjC,EAAY,KACZrxB,EAAI,KACJuxB,EAAI,aACJD,EAAY,kBACZE,EAAiB,kBACjBC,GAAoB,GAClBtjC,EACJ,OACEH,IAAAA,cAAA,OAAKI,UAAU,iBAAiBqD,MAAO,IAAK6/B,IAC1CtjC,IAAAA,cAAA,OAAKI,UAAU,iBACbJ,IAAAA,cAAA,OAAKI,UAAU,iBACbJ,IAAAA,cAAA,OAAKI,UAAU,UACZojC,GAAqBxjC,IAAAA,cAAA,QAAM4K,KAAK,iBAC/B44B,GAAqBC,GACrBzjC,IAAAA,cAAA,OAAKI,UAAU,0BAGnBJ,IAAAA,cAAA,QAAMI,UAAU,SAASijC,KAG7BrjC,IAAAA,cAAA,OAAKI,UAAU,gBACbJ,IAAAA,cAAA,OAAKI,UAAU,gBACbJ,IAAAA,cAAA,OAAKI,UAAU,QAAQ4R,aAAI,EAAJA,EAAM6xB,kBAC7B7jC,IAAAA,cAAA,OAAKI,UAAU,QAAQmjC,KAKjC,CAlCCW,GAAAF,KAAAzjC,GAAAkiC,GAAAC,GAAAC,GAAAC,GAAAxxB,GAAAC,GAAAwxB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAA1iC,GAAAujC,GAAAtjC,MAAAC,EAAAA,EAAAA,GAAAwjC,GAAA,CA5DA5lC,GAAc,uCAAwC,CACrDqC,WAAY,CAACE,GAAAA,MACb,EAMCtC,KAAU,mBAMVA,GAAS,CAAEiG,WAAW,IAAQ,mBAO9BjG,GAAS,CAAEiG,WAAW,IAAQ,WAM9BjG,GAAS,CAAEiG,WAAW,IAAQ,WAO9BjG,GAAS,CACRkG,KAAMwG,UACN,wBAOD1M,GAAS,CACRkG,KAAMwG,UACN,iCAzCMlM,EAAAA,mBAAgB0B,K,4CCnB1B,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAAmB,IAAA2lC,GAAA,IAAAzlC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAavD,MAAAylC,WAIUrlC,EAAAA,iBAEVC,WAAAA,GAAA,SAAAC,YACEC,EAAAA,EAAAA,GAAA,KAAAR,GAAA+jC,GAAA,QAGAvjC,EAAAA,EAAAA,GAAA,KAAAN,IAAA8jC,GAAA,MAAAC,GAAA,SAQAzjC,EAAAA,EAAAA,GAAA,KAAAL,IAAA+jC,GAAA,MAAAxxB,GAAA,QAAAC,GAAA,sBAVqBgyB,GAAY,OAAA3jC,EAAAA,EAAAA,GAAAhB,GAAA,sBAAZ2kC,CAAY1jC,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,iBAMQ2jC,GAAY,OAAA5jC,EAAAA,EAAAA,GAAAd,GAAA,sBAAZ0kC,CAAY3jC,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,SAQ5CqS,GAAI,OAAAtS,EAAAA,EAAAA,GAAAb,GAAA,cAAJmT,CAAIrS,IAAAC,EAAAA,EAAAA,GAAAf,GAAA,KAAAc,EAAA,CAEbI,MAAAA,GACE,OACEC,IAAAA,cAACqkC,GAAgC,CAC/BhB,aAAcnjC,KAAKmjC,aACnBC,aAAcpjC,KAAKojC,aACnBtxB,KAAM9R,KAAK8R,MAGjB,EAGK,SAASqyB,GACdlkC,GAEA,MAAM,aAAEkjC,EAAY,KAAErxB,EAAI,aAAEsxB,GAAiBnjC,EAC7C,OACEH,IAAAA,cAAA,OAAKI,UAAU,iBAAiBqD,MAAO,IAAK6/B,IAC1CtjC,IAAAA,cAAA,OAAKI,UAAU,iBACbJ,IAAAA,cAAA,OAAKI,UAAU,iBACbJ,IAAAA,cAAA,QAAMI,UAAU,SAASijC,KAG7BrjC,IAAAA,cAAA,OAAKI,UAAU,gBACbJ,IAAAA,cAAA,OAAKI,UAAU,gBACbJ,IAAAA,cAAA,OAAKI,UAAU,QAAQ4R,aAAI,EAAJA,EAAM6xB,oBAGjC7jC,IAAAA,cAAA,OAAKI,UAAU,cAGrB,CArBCkkC,GAAAF,KAAA7jC,GAAAkiC,GAAAC,GAAAC,GAAAC,GAAAxxB,GAAAC,IAAA7Q,GAAA2jC,GAAA1jC,MAAAC,EAAAA,EAAAA,GAAA4jC,GAAA,CAjCAhmC,GAAc,uCAAwC,CACrDqC,WAAY,CAACE,GAAAA,MACb,EAMCtC,KAAU,mBAMVA,GAAS,CAAEiG,WAAW,IAAQ,mBAO9BjG,GAAS,CAAEiG,WAAW,IAAQ,oBAjBvBzF,EAAAA,mBAAgB0B,K,6ECf1B,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAEpC,IAAA+lC,GAAA,IAAA7lC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAMA,MAAA6lC,WAG4BzlC,EAAAA,iBAAiBC,WAAAA,GAAA,SAAAC,YAC3CC,EAAAA,EAAAA,GAAA,KAAAR,GAAAkjC,GAAA,KAK0B,YAE1B1iC,EAAAA,EAAAA,GAAA,KAAAN,IAAAijC,GAAA,MAAA4C,GAAA,KAKoC,MAAEC,GAAA,gBAP7B3C,GAAM,OAAAriC,EAAAA,EAAAA,GAAAhB,GAAA,gBAANqjC,CAAMpiC,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,eAONglC,GAAU,OAAAjlC,EAAAA,EAAAA,GAAAd,GAAA,oBAAV+lC,CAAUhlC,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,CAEnBI,MAAAA,GACE,OACEC,IAAAA,cAAC4kC,GAAsB,CACrBD,WAAYzkC,KAAKykC,WACjB5C,OAAQ7hC,KAAK6hC,QAGnB,EAaK,SAAS6C,GAAsBt6B,GAGN,IAHO,WACrCq6B,EAAU,OACV5C,GAC4Bz3B,EAC5B,MAAMu6B,GAAmBl+B,EAAAA,EAAAA,UAAQ,IACxBg+B,EAAW9gC,KAAI,CAACmO,EAAMjO,IAC3B/D,IAAAA,cAAA,OAAKgE,IAAKD,EAAO3D,UAAW0kC,KAAW,8BACrC9kC,IAAAA,cAAA,OAAKI,UAAW,aAAc4R,EAAK/N,OACnCjE,IAAAA,cAAA,OAAKI,UAAW,YAAa4R,EAAK+yB,MAClC/kC,IAAAA,cAAA,OAAKI,UAAW,YAAa4R,EAAKuxB,UAGrC,CAACoB,IAEEK,GAAgBr+B,EAAAA,EAAAA,UAAQ,IACrBg+B,EAAW9gC,KAAI,CAACmO,EAAMjO,IAC3B/D,IAAAA,cAAA,OAAKgE,IAAKD,EAAO3D,UAAW,6BAC1BJ,IAAAA,cAAA,OAAKI,UAAW,YACdJ,IAAAA,cAAA,OAAKyb,IAAKwpB,MAEZjlC,IAAAA,cAAA,OAAKI,UAAW,2BACdJ,IAAAA,cAAA,OAAKI,UAAW,YAAa4R,EAAK+yB,MAClC/kC,IAAAA,cAAA,OAAKI,UAAW,aAAa,IAAE4R,EAAK/N,YAIzC,CAAC0gC,IAEJ,OACE3kC,IAAAA,cAAA,OACEI,UAAW0kC,KAAW,2BAA4B,CAChDI,UAAsB,qBAAXnD,GAA4C,kBAAXA,KAG7CA,EAAO9mB,SAAS,OAAS+pB,EAAgBH,EAGhD,CAjDCM,GAAAX,KAAAjkC,GAAAqhC,GAAAC,GAAA4C,GAAAC,IAAAlkC,GAAA+jC,GAAA9jC,MAAAC,EAAAA,EAAAA,GAAAykC,GAAA,CA1BA7mC,GAAc,2BAA4B,CACzCqC,WAAY,CAACE,GAAAA,MACb,EAMCtC,GAAS,CAAEiG,WAAW,IAAQ,aAO9BjG,GAAS,CAAEiG,WAAW,IAAQ,0BAZLzF,EAAAA,mBAAgB0B,K,+BCV5C,MAAQnC,cAAa,GAAEC,SAAQA,KAAKC,EAAAA,EAAAA,oBAEpC,IAAA4mC,GAAA,IAAA1mC,GAAA,IAAAC,QAIA,MAAA0mC,WAG8BtmC,EAAAA,iBAAiBC,WAAAA,GAAA,SAAAC,YAC7CC,EAAAA,EAAAA,GAAA,KAAAR,GAAA6rB,GAAA,OAAAC,GAAA,oBAQSa,GAAU,OAAA3rB,EAAAA,EAAAA,GAAAhB,GAAA,oBAAV2sB,CAAU1rB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,CACnBI,MAAAA,GACE,OAAOC,IAAAA,cAACslC,GAAwB,CAACja,WAAYnrB,KAAKmrB,YACpD,EAaK,SAASia,GAAyBnlC,GACvC,MAAM,WAAEkrB,EAAa,IAAOlrB,GACrBolC,EAAUC,IAAe1/B,EAAAA,EAAAA,aACzB2/B,EAAMC,IAAW5/B,EAAAA,EAAAA,UAAuC,KACxD0J,GAAc,YAAEwD,KAAiBI,EAAAA,GAAAA,KAkBxC,OAjBAjQ,EAAAA,EAAAA,YAAU,KACQqM,EAAalM,SAE3BkiC,EAAYxyB,EAAc,IAC5B,GACC,CAACA,KACJ7P,EAAAA,EAAAA,YAAU,KACR,GAAIoiC,GAAYla,EAAW1nB,OAAQ,CACjC,MAAMgiC,GAAUC,EAAAA,GAAAA,OAAMva,EAAY,SAClCqa,EACEra,EAAWxnB,KAAKuD,IAAC,IACZA,EACHI,MAAQ+9B,EAAWn+B,EAAEy+B,MAASF,EAAQE,UAG5C,IACC,CAACxa,EAAYka,IAEdvlC,IAAAA,cAAA,OAAKI,UAAU,YAAYwD,IAAK4L,GAC7Bi2B,EAAK5hC,KAAI,CAACuD,EAAGrD,IACZ/D,IAAAA,cAAA,OAAKI,UAAU,qBAAqB4D,IAAKD,GACvC/D,IAAAA,cAAA,OAAKI,UAAU,aAAagH,EAAE1D,OAC9B1D,IAAAA,cAAA,OAAKI,UAAU,qBACbJ,IAAAA,cAAA,OACEI,UAAU,eACVqD,MAAO,CACL+D,MAAOJ,EAAEI,MACTgD,MAAOpD,EAAEI,MACTiR,WACErR,EAAE0+B,eACF,iEAGJ9lC,IAAAA,cAAA,OACEI,UAAU,YACVqD,MAAO,CACLgV,WAAYrR,EAAE2+B,gBAAkB,aAIpC/lC,IAAAA,cAAA,OACEyD,MAAO,CACLuiC,OAAQ,aAAa5+B,EAAE2+B,gBAAkB,aAE3C3lC,UAAU,aAGdJ,IAAAA,cAAA,OACEI,UAAU,eACVqD,MAAO,CACL+D,MAAO+9B,MAKbvlC,IAAAA,cAAA,OAAKI,UAAU,aAAagH,EAAEy+B,UAKxC,CA7ECI,GAAAZ,KAAA9kC,GAAAgqB,GAAAC,IAAAhqB,GAAA4kC,GAAA3kC,MAAAC,EAAAA,EAAAA,GAAAulC,GAAA,CAhBA3nC,GAAc,8BAA+B,CAC5CqC,WAAY,CAACE,GAAAA,MACb,EAOCtC,GAAS,CACRiG,WAAW,IACX,0BAR0BzF,EAAAA,mBAAgB0B,K,yHCJ9C,MAAQnC,cAAa,GAAEC,SAAQ,GAAE8C,MAAKA,KAAK7C,EAAAA,EAAAA,oBAE3C,IAAA0nC,GAAA,IAAAxnC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAAwnC,GAAA,IAAAtkC,QAAAukC,GAAA,IAAAznC,QAIA,MAAA0nC,WAG4BtnC,EAAAA,iBAAiBC,WAAAA,GAAA,SAAAC,YAAA8C,EAAAA,GAAAA,GAAA,KAAAokC,KAC3CjnC,EAAAA,EAAAA,GAAA,KAAAR,GAAA6rB,GAAA,QAMArrB,EAAAA,EAAAA,GAAA,KAAAN,IAAA4rB,GAAA,MAAA8b,GAAA,SAKApnC,EAAAA,EAAAA,GAAA,KAAAL,IAAA0nC,GAAA,MAAAC,GAAA,SASAtnC,EAAAA,EAAAA,GAAA,KAAAknC,IAAiBK,GAAA,MAAG,CAACx3B,EAAe+C,MAClCvP,EAAAA,GAAAA,GAAA0jC,GAAAjmC,KAAKwmC,IAAiB/jC,KAAK,CAAEsM,OAAM+C,QAAO,GAC1C,eAlBOqZ,GAAU,OAAA3rB,EAAAA,EAAAA,GAAAhB,GAAA,oBAAV2sB,CAAU1rB,IAAAC,EAAAA,EAAAA,GAAAlB,GAAA,KAAAiB,EAAA,uBAMVgnC,GAAkB,OAAAjnC,EAAAA,EAAAA,GAAAd,GAAA,4BAAlB+nC,CAAkBhnC,IAAAC,EAAAA,EAAAA,GAAAhB,GAAA,KAAAe,EAAA,CAc3BI,MAAAA,GACE,OACEC,IAAAA,cAAC4mC,GAAsB,CACrBvb,WAAYnrB,KAAKmrB,WACjBwb,oBAAoBnnC,EAAAA,EAAAA,GAAK0mC,GAALlmC,MACpBymC,mBAAoBzmC,KAAKymC,oBAG/B,EAgBK,SAASC,GAAuBzmC,GACrC,MAAM,mBACJ0mC,EAAkB,WAClBxb,EAAa,GAAE,mBACfsb,EAAqB,CAAC,GACpBxmC,EACE2mC,GAAS5jC,EAAAA,EAAAA,UACT6jC,GAAU7jC,EAAAA,EAAAA,WACT8jC,EAAUC,IAAenhC,EAAAA,EAAAA,YAC1BohC,GAAchkC,EAAAA,EAAAA,WACbikC,EAAcC,IAAmBthC,EAAAA,EAAAA,YA0WxC,OAzVA3C,EAAAA,EAAAA,YAAU,KACR,MAAMkkC,EAAQ,IAAIC,GAAAA,GAAM,CACtBt/B,GAAI8+B,EAAOxjC,QACXikC,aAAa,EACb1jC,IAAK,IAAI2jC,GAAAA,EAAI,CACXC,OAAQ,CAAC,OAAQ,SACjBC,MAAO,GACPC,KAAM,MAGVN,EAAMO,aAAa,CAAEC,iBAAiB,EAAOC,YAAY,IACzD,MAAMC,EAAa,IAAIC,MACvBD,EAAWtsB,IAAMwsB,GAEjB,MAAMC,EAAc,IAAIF,MAuTxB,OAtTAE,EAAYzsB,IAAM0sB,GAElBd,EAAMe,SAAS,UAAWL,GAC1BV,EAAMe,SAAS,WAAYF,GAC3Bb,EAAMe,SAAS,UAAWC,IAE1BhB,EAAMiB,GAAG,UAAU,KACjB,MAAMt2B,EAAO,IACRu2B,GAAAA,EACHC,SAAUD,GAAAA,EAAMC,SAAS7J,MAAM,EAAG4J,GAAAA,EAAMC,SAAS7kC,OAAS,IAEtD8kC,EAAe,IAChBF,GAAAA,EACHC,SAAUD,GAAAA,EAAMC,SAAS7J,MACvB4J,GAAAA,EAAMC,SAAS7kC,OAAS,EACxB4kC,GAAAA,EAAMC,SAAS7kC,SAGb+kC,EAAsB,IAAIC,GAAAA,GAAa,CAC3CC,SAAS,IACRC,OAAO72B,GAEV02B,EACGI,MAAM,WACNjxB,MAAM,4BACNpU,MAAM,CACLslC,aAAa,EACbC,WAAW,EACXjgC,QAAS,EACTkgC,eAAgB,OAGpB,MAAMC,EAAoB,IAAIP,GAAAA,GAAa,CACzCC,SAAS,IACRC,OAAO72B,GAEVk3B,EAAkBJ,MAAM,WAAWjxB,MAAM,0BAA0BpU,MAAM,CACvEslC,aAAa,EACbC,WAAW,EACXjgC,QAAS,EACTkgC,eAAgB,OAGlB,MAAME,EAAoB,IAAIR,GAAAA,GAAa,CACzCC,SAAS,IACRC,OAAO72B,GAEVm3B,EAAkBL,MAAM,WAAWjxB,MAAM,0BAA0BpU,MAAM,CACvEslC,aAAa,EACbC,WAAW,EACXjgC,QAAS,EACTkgC,eAAgB,MAElB,MAAMG,EAAqB,IAAIT,GAAAA,GAAa,CAC1CC,SAAS,IACRC,OAAO72B,GAEVo3B,EAAmBN,MAAM,WAAWjxB,MAAM,uBAAuBpU,MAAM,CACrEslC,aAAa,EACbC,WAAW,EACXjgC,QAAS,EACTkgC,eAAgB,MAGlB,MAAMI,EAAoB,IAAIV,GAAAA,GAAa,CACzCC,SAAS,IACRC,OAAO72B,GAEVq3B,EAAkBP,MAAM,WAAWjxB,MAAM,WAAWpU,MAAM,CACxDslC,aAAa,EACbC,WAAW,EACXjgC,QAAS,EACTkgC,eAAgB,MAElB,MAAMK,EAAqB,IAAIX,GAAAA,GAAa,CAC1CC,SAAS,IACRC,OAAO72B,GAEVs3B,EAAmBR,MAAM,WAAWjxB,MAAM,WAAWpU,MAAM,CACzDslC,aAAa,EACbC,WAAW,EACXjgC,QAAS,EACTkgC,eAAgB,MAGlB,MAAMM,EAAoB,IAAIZ,GAAAA,GAAa,CACzCC,SAAS,IACRC,OAAO72B,GAEVu3B,EAAkBT,MAAM,QAAQjxB,MAAM,0BAKtC,MAAM2xB,EAAgB,IAAIC,GAAAA,GAAW,CACnCb,SAAS,EACT55B,OAAQ,IACP65B,OAAOR,GAAU,CAClBqB,OAAQ,CACNjlC,KAAM,QACNklC,OAAQ,CAAC,MAAO,KAAM,OAAQ,UAIlCH,EAAcV,MAAM,OAAOrlC,MAAM,CAC/BsF,QAAS,IAGX,MAAM6gC,GAAkB,IAAIC,GAAAA,IACzBhB,OAAO72B,GACP82B,MAAM,QACNjxB,MAAM,yBACN5C,KAAK,GACLxR,MAAM,CACLwlC,eAAgB,OAGda,GAAiB,IAAID,GAAAA,IACxBhB,OAAO72B,GACP82B,MAAM,QACNjxB,MAAM,yBACN5C,KAAK,GACLxR,MAAM,CACLwlC,eAAgB,OAGdc,GAAkB,IAAIF,GAAAA,IACzBhB,OAAO72B,GACP82B,MAAM,QACNjxB,MAAM,yBACN5C,KAAK,GACLxR,MAAM,CACLwlC,eAAgB,MAGde,EAAiB,IAAIH,GAAAA,GAAU,CAAE76B,OAAQ,IAC5C65B,OAAO72B,GACP82B,MAAM,QACNjxB,MAAM,WACN5C,KAAK,GACLxR,MAAM,CACLwlC,cAAe,IAEhB7f,MAAM,UAAW,CAChB3kB,KAAM,aA+BV4iC,EAAM4C,SAASvB,GACfrB,EAAM4C,SAASf,GACf7B,EAAM4C,SAASd,GACf9B,EAAM4C,SAASb,GACf/B,EAAM4C,SAASZ,GACfhC,EAAM4C,SAASX,GACfjC,EAAM4C,SAAST,GAGfnC,EAAM4C,SAASV,GAEflC,EAAM4C,SAASL,GACfvC,EAAM4C,SAASH,GACfzC,EAAM4C,SAASF,GACf1C,EAAM4C,SAASD,GAcf,MAAME,EAAuB,IAAIvB,GAAAA,GAAa,CAC5CC,SAAS,IACRC,OAAOJ,GAEVyB,EAAqBpB,MAAM,QAAQjxB,MAAM,SAEzC,MAAMsyB,EAAoB,IAAIN,GAAAA,GAAU,CAAE76B,OAAQ,IAC/C65B,OAAOJ,GACPK,MAAM,QACNjxB,MAAM,yBACN5C,KAAK,IACLxR,MAAM,CACLwlC,cAAe,IAEhB7f,MAAM,UAAW,CAChB3kB,KAAM,aAEV4iC,EAAM4C,SAASC,GACf7C,EAAM4C,SAASE,GAEf9e,EAAWxnB,KAAKuD,IACd,MAAMgjC,EAAKh6B,SAASi6B,cAAc,OAClC,IAAIC,EAAgB,OACpBF,EAAGG,YAAcnjC,EAAEgqB,KACnB,MAAMoZ,EAAOx4B,EAAKw2B,SAASnwB,MAAMoyB,GAC/BA,EAAEC,WAAW9/B,KAAKqQ,SAAS7T,EAAEojC,QAI7B,CACE,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACAvvB,SAASuvB,EAAKxiC,MAEhBsiC,EAAgB,GAAGA,aACnBljC,EAAEujC,cAAe,GAGjB,CACE,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA1vB,SAASuvB,EAAKxiC,MAEhBsiC,EAAgB,GAAGA,YACnBljC,EAAEwjC,aAAc,GAElBR,EAAGhqC,UAAYkqC,EAEfF,EAAGS,QAAWtqC,IACZ6G,EAAEI,MAAQ4iC,EAAGr2B,wBAAwBvM,MA7S3BsjC,EAACvqC,EAAeyR,KAChCzR,EAAE+a,mBACEyvB,EAAAA,GAAAA,SAAQ/4B,EAAMk1B,EAAY5jC,SAC5B2jC,EAAY,OAGdA,EAAYj1B,GACZo1B,EAAgB,CACd58B,KAAM,IAAGwgC,EAAAA,GAAAA,UAAUzqC,EAAEyV,OAAevS,MAAM+G,KAAKygC,QAAQ,KAAM,KAAO,OACpE52B,IAAK,IAAG22B,EAAAA,GAAAA,UAAUzqC,EAAEyV,OAAevS,MAAM4Q,IAAI42B,QAAQ,KAAM,KAAO,SAClE,EAoSIH,CAAUvqC,EAAG6G,EAAE,EAGjB,MAAM8jC,EAAQ96B,SAASi6B,cAAc,OACrCa,EAAMzvB,IAAMwsB,GACZiD,EAAM9qC,UAAY,UAElB,MAAMqnC,EAAS+C,EAAKE,WAAWjD,OAC/B,IAAI0D,EAAM1D,EAAO,GAEf,CACE,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACAxsB,SAASuvB,EAAKxiC,MAEhBmjC,GAAO,GAGT,MAAMC,EAAS,IAAIC,GAAAA,GAAO,CACxBC,QAASlB,IACRmB,UAAU,CAAEC,IAAK/D,EAAO,GAAI0D,QACzBM,EAAY,IAAIJ,GAAAA,GAAO,CAC3BC,QAASJ,IACRK,UAAU,CAAEC,IAAK/D,EAAO,GAAI0D,QAC/B9D,EAAMqE,UAAUN,GAChB/D,EAAMqE,UAAUD,EAAU,GAC1B,IAGG,KACLpE,EAAMsE,SAAS,CAChB,GACA,KAEHxoC,EAAAA,EAAAA,YAAU,KAAM,IAAAyoC,EACd,MAAM5oC,EAAezC,IACfwmC,EAAQzjC,SAAW/C,EAAEmP,eAAeuL,SAAS8rB,EAAQzjC,UACzD2jC,EAAY,KAAK,EAGnB,OADQ,QAAR2E,EAAAx7B,gBAAQ,IAAAw7B,GAARA,EAAUv7B,iBAAiB,QAASrN,GAC7B,KAAM,IAAA6oC,EACH,QAARA,EAAAz7B,gBAAQ,IAAAy7B,GAARA,EAAUv7B,oBAAoB,QAAStN,EAAY,CACpD,GACA,KAEHG,EAAAA,EAAAA,YAAU,KACR+jC,EAAY5jC,SAAUo1B,EAAAA,GAAAA,WAAUsO,GAChCH,IAAoBiF,EAAAA,GAAAA,SAAQ9E,GAAWA,EAAS,GAC/C,CAACA,IAEFhnC,IAAAA,cAAA,WACEA,IAAAA,cAAA,OAAKgI,GAAG,MAAMpE,IAAKkjC,EAAQ1mC,UAAU,QACpC4mC,GACChnC,IAAAA,cAAA,OACEI,UAAU,gBACV8D,QAAU3D,IACRA,EAAE+a,iBAAiB,EAErB7X,MAAO,IACkC,eAAnCujC,EAAS+E,sBACT,CACEvhC,KAAM28B,EAAa38B,KACnB6J,IAAK8yB,EAAa9yB,IAClB9M,UAAW,aAAay/B,EAAS2D,cAAgB3D,EAASx/B,MAAQ,QAAQw/B,EAAS4D,aAAe,IAAM,SAE1G,CACErjC,UAAW,sBACX8M,IAAK,MACL7J,KAAM,UAETm8B,IAGL3mC,IAAAA,cAAA,QAAM4K,KAAK,SAAShH,IAAKmjC,KAKnC,CAhaCiF,GAAA3F,KAAA9lC,GAAAgqB,GAAAC,GAAA8b,GAAAC,GAAAC,GAAAE,GAAAuF,GAAAxF,IAAAjmC,GAAA0lC,GAAAzlC,MAAAC,EAAAA,EAAAA,GAAAsrC,GAAA,CArCA1tC,GAAc,4BAA6B,CAC1CqC,WAAY,CAACE,GAAAA,MACb,EAKCtC,GAAS,CAAEiG,WAAW,IAAQ,iBAM9BjG,GAAS,CAAEiG,WAAW,IAAQ,yBAM9BnD,GAAM,CAAEoD,KAAM,uBAAuB,oBAAAC,IAAAhF,EAAAA,EAAAA,GAAAb,GAAA6F,GAAA,CAAAA,EAAA/E,KAAAC,EAAAA,EAAAA,GAAAf,GAAA6F,EAAA/E,KAAA,GAAAgF,GAAAyhC,GAAAxhC,KAAAC,EAAAA,GAAAA,GAAAF,KAhBZ5F,EAAAA,mBAAgB0B,I,mGCnBxCyrC,EAAgC,IAAIC,IAAI,cACxCC,EAAgC,IAAID,IAAI,cACxCE,EAAgC,IAAIF,IAAI,cACxCG,EAAgC,IAAIH,IAAI,cACxCI,EAAgC,IAAIJ,IAAI,cACxCK,EAAgC,IAAIL,IAAI,cACxCM,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCR,GACrES,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GAEzEC,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,ygBAAygB0kC,oEAAqGC,sEAAuGC,uEAAwGC,+xBAAg0BC,+GAAgJC,gBAAkD,KAEx2D,QAAeN,EAAwBQ,U,sECjBnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,i5BAAk5B,KAE37B,QAAeykC,EAAwBQ,U,sECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,mNAAoN,KAE7P,QAAeykC,EAAwBQ,U,sECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,ssBAI+C,KAExF,QAAeykC,EAAwBQ,U,oECRnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,uqBAEwH,KAEjK,QAAeykC,EAAwBQ,U,sECNnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,y3FAesB,KAE/D,QAAeykC,EAAwBQ,U,qECnBnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,k5BAQiF,KAE1H,QAAeykC,EAAwBQ,U,sECZnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,skDAGq8C,KAE9+C,QAAeykC,EAAwBQ,U,sECPnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,6jBAEuc,KAEhf,QAAeykC,EAAwBQ,U,sECNnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,4mEAA6mE,KAEtpE,QAAeykC,EAAwBQ,U,mGCHnCf,EAAgC,IAAIC,IAAI,cACxCC,EAAgC,IAAID,IAAI,cACxCM,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCR,GACrES,EAAqC,IAAgCP,GAEzEK,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,6GAA6G0kC,qSAAsUC,6kBAA+mB,KAE3kC,QAAeF,EAAwBQ,U,mGCRnCf,EAAgC,IAAIC,IAAI,cACxCM,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCR,GAEzEO,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,03BAA03B0kC,8FAAgI,KAEniC,QAAeD,EAAwBQ,U,mGCNnCf,EAAgC,IAAIC,IAAI,cACxCC,EAAgC,IAAID,IAAI,cACxCM,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCR,GACrES,EAAqC,IAAgCP,GAEzEK,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,mOAAmO0kC,0vBAA2xBC,8JAAgM,KAEvuC,QAAeF,EAAwBQ,U,sECTnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,m8GAOqZ,KAE9b,QAAeykC,EAAwBQ,U,sECXnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,+EAAgF,KAEzH,QAAeykC,EAAwBQ,U,sECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,6jBAA8jB,KAEvmB,QAAeykC,EAAwBQ,U,sECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,4GAA6G,KAEtJ,QAAeykC,EAAwBQ,U,qECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,o+BAC+Q,KAExT,QAAeykC,EAAwBQ,U,sECLnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,gpBAAipB,KAE1rB,QAAeykC,EAAwBQ,U,mGCHnCf,EAAgC,IAAIC,IAAI,cACxCC,EAAgC,IAAID,IAAI,cACxCE,EAAgC,IAAIF,IAAI,cACxCG,EAAgC,IAAIH,IAAI,cACxCI,EAAgC,IAAIJ,IAAI,cACxCM,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCR,GACrES,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GAEzEE,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,0PAA0P0kC,2EAA4GC,0EAA2GC,qEAAsGC,mEAAoGC,4ZAA8b,KAEloC,QAAeL,EAAwBQ,U,mGCdnCf,EAAgC,IAAIC,IAAI,cACxCC,EAAgC,IAAID,IAAI,cACxCE,EAAgC,IAAIF,IAAI,cACxCM,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCR,GACrES,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GAEzEI,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,iOAAiO0kC,gUAAiWC,+gBAAgjBC,6OAA+Q,KAE16C,QAAeH,EAAwBQ,U,mGCVnCf,EAAgC,IAAIC,IAAI,cACxCC,EAAgC,IAAID,IAAI,cACxCE,EAAgC,IAAIF,IAAI,aACxCG,EAAgC,IAAIH,IAAI,cACxCM,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCR,GACrES,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GAEzEG,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,qRAAqR0kC,2OAA4QC,yNAA0PC,wEAAyGC,uBAAyD,KAEt+B,QAAeJ,EAAwBQ,U,sECbnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,mmBAAomB,KAE7oB,QAAeykC,EAAwBQ,U,sECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,+6BAAg7B,KAEz9B,QAAeykC,EAAwBQ,U,sECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,8uCAA+uC,KAExxC,QAAeykC,EAAwBQ,U,sECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,qpEAAspE,KAE/rE,QAAeykC,EAAwBQ,U,qECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,q8BAAs8B,KAE/+B,QAAeykC,EAAwBQ,U,sECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,mHAAoH,KAE7J,QAAeykC,EAAwBQ,U,mGCHnCf,EAAgC,IAAIC,IAAI,cACxCM,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCR,GAEzEO,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,ibAAib0kC,8rBAAguB,KAE1rC,QAAeD,EAAwBQ,U,sECPnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,syEAE+b,KAExe,QAAeykC,EAAwBQ,U,sECNnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,qkCAImnB,KAE5pB,QAAeykC,EAAwBQ,U,mGCPnCf,EAAgC,IAAIC,IAAI,cACxCC,EAAgC,IAAID,IAAI,cACxCE,EAAgC,IAAIF,IAAI,cACxCG,EAAgC,IAAIH,IAAI,cACxCM,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCR,GACrES,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GACrEQ,EAAqC,IAAgCP,GAEzEG,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,2SAA2S0kC,UAA2CC,UAA2CC,UAA2CC,4IAA8K,KAEnoB,QAAeJ,EAAwBQ,U,qECbnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,g0BAAi0B,KAE12B,QAAeykC,EAAwBQ,U,qECJnCR,E,MAA0B,GAA4B,KAE1DA,EAAwB1gB,KAAK,CAACihB,EAAOhlC,GAAI,+pBAAgqB,KAEzsB,QAAeykC,EAAwBQ,U","sources":["webpack:///./src/app-wall/card-item/index.tsx","webpack:///./src/app-wall/relation-line/index.tsx","webpack:///./src/app-wall/system-card/index.tsx","webpack:///./src/gauge-chart/index.tsx","webpack:///./src/modern-style-component-title/index.tsx","webpack:///./src/modern-style-page-title/index.tsx","webpack:///./src/tabs-drawer/index.tsx","webpack:///./src/modern-style-treemap/index.tsx","webpack:///./src/battery-chart/index.tsx","webpack:///./src/dropdown-menu/index.tsx","webpack:///./src/complex-search/i18n.ts","webpack:///./src/complex-search/index.tsx","webpack:///./src/loading-panel/index.tsx","webpack:///./src/particle-animation/index.tsx","webpack:///./src/cabinet/cabinet-button/index.tsx","webpack:///./src/cabinet/cabinet-node/index.tsx","webpack:///./src/cabinet/cabinet-app-layer/index.tsx","webpack:///./src/cabinet/cabinet-container/index.tsx","webpack:///./src/cabinet/cabinet-thumbnail/index.tsx","webpack:///./src/cabinet/index.tsx","webpack:///./src/app-wall/index.tsx","webpack:///./src/graph/text/i18n.ts","webpack:///./src/graph/text/index.tsx","webpack:///./src/graph/node/index.tsx","webpack:///./src/graph/layout-grid/index.tsx","webpack:///./src/grid-background/index.tsx","webpack:///./src/gear-background/index.tsx","webpack:///./src/radar-chart/utils.ts","webpack:///./src/radar-chart/radar.tsx","webpack:///./src/radar-chart/index.tsx","webpack:///./src/title-text/index.tsx","webpack:///./src/brick-notification/index.tsx","webpack:///./src/tabs-page-title/index.tsx","webpack:///./src/top-title-bar/index.tsx","webpack:///./src/lights-component-title/index.tsx","webpack:///./src/hi-tech-button/index.tsx","webpack:///./src/tech-mesh-base-view/index.tsx","webpack:///./src/simple-card-item/index.tsx","webpack:///./src/basic-index-group/index.tsx","webpack:///./src/data-display-flipper/index.tsx","webpack:///./src/data-display-flipper-fifth/index.tsx","webpack:///./src/data-display-flipper-sixth/index.tsx","webpack:///./src/indicator-card/index.tsx","webpack:///./src/progress-bar-list/index.tsx","webpack:///./src/china-map-chart/index.tsx","webpack:///./src/basic-index-group/styles.shadow.css","webpack:///./src/battery-chart/battery-chart.shadow.css","webpack:///./src/brick-notification/styles.shadow.css","webpack:///./src/cabinet/cabinet-app-layer/cabinet-app-layer.shadow.css","webpack:///./src/cabinet/cabinet-button/cabinet-button.shadow.css","webpack:///./src/cabinet/cabinet-container/cabinet-container.shadow.css","webpack:///./src/cabinet/cabinet-node/cabinet-node.shadow.css","webpack:///./src/cabinet/cabinet-thumbnail/cabinet-thumbnail.shadow.css","webpack:///./src/cabinet/cabinet.shadow.css","webpack:///./src/complex-search/complex-search.shadow.css","webpack:///./src/data-display-flipper-fifth/styles.shadow.css","webpack:///./src/data-display-flipper-sixth/styles.shadow.css","webpack:///./src/data-display-flipper/styles.shadow.css","webpack:///./src/dropdown-menu/dropdown-menu.shadow.css","webpack:///./src/gauge-chart/gauge-chart.shadow.css","webpack:///./src/graph/layout-grid/graph-layout-grid.shadow.css","webpack:///./src/graph/node/graph-node.shadow.css","webpack:///./src/graph/text/graph-text.shadow.css","webpack:///./src/grid-background/grid-background.shadow.css","webpack:///./src/hi-tech-button/styles.shadow.css","webpack:///./src/indicator-card/styles.shadow.css","webpack:///./src/lights-component-title/styles.shadow.css","webpack:///./src/loading-panel/loading-panel.shadow.css","webpack:///./src/modern-style-component-title/modern-style-component-title.shadow.css","webpack:///./src/modern-style-page-title/modern-style-page-title.shadow.css","webpack:///./src/particle-animation/particle-animation.shadow.css","webpack:///./src/progress-bar-list/styles.shadow.css","webpack:///./src/radar-chart/styles.shadow.css","webpack:///./src/simple-card-item/styles.shadow.css","webpack:///./src/tabs-drawer/tabs-drawer.shadow.css","webpack:///./src/tabs-page-title/styles.shadow.css","webpack:///./src/tech-mesh-base-view/styles.shadow.css","webpack:///./src/title-text/styles.shadow.css","webpack:///./src/top-title-bar/styles.shadow.css"],"sourcesContent":["import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../../data-view-variables.shadow.css\";\nimport styleText from \"./card-item.shadow.css\";\nimport classNames from \"classnames\";\n\nconst { defineElement, property } = createDecorators();\n\nexport interface AppWallCardItemProps {\n  status?: \"normal\" | \"warning\";\n  cardTitle: string;\n  description: string;\n}\n\n/**\n * 应用墙子构件----卡片项\n * @author nlicroshan\n */\n@defineElement(\"data-view.app-wall-card-item\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass AppWallCardItem extends ReactNextElement implements AppWallCardItemProps {\n  /**\n   *  状态\n   */\n  @property()\n  accessor status: \"normal\" | \"warning\" = \"normal\";\n\n  /**\n   *  标题\n   */\n  @property()\n  accessor cardTitle: string;\n\n  /**\n   * 描述\n   */\n  @property()\n  accessor description: string;\n\n  render() {\n    return (\n      <AppWallCardItemElement\n        status={this.status}\n        cardTitle={this.cardTitle}\n        description={this.description}\n      />\n    );\n  }\n}\n\nfunction AppWallCardItemElement(\n  props: AppWallCardItemProps\n): React.ReactElement {\n  const { status, cardTitle, description } = props;\n\n  return (\n    <div\n      className={classNames(\n        \"card-item-container\",\n        status && `status-${status}`\n      )}\n    >\n      <div className=\"card-item\">\n        <div className=\"card-item-text-container\">\n          <div className=\"card-item-title\">{cardTitle}</div>\n          <div className=\"card-item-description\">{description}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { AppWallCardItem };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../../data-view-variables.shadow.css\";\nimport styleText from \"./relation-line.shadow.css\";\nimport classNames from \"classnames\";\n\nconst { defineElement, property } = createDecorators();\n\nexport interface AppWallRelationLineProps {\n  lightColor: \"blue\" | \"purple\";\n}\n\n/**\n * 应用墙子构件----关联连线\n * @author nlicroshan\n */\n@defineElement(\"data-view.app-wall-relation-line\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass AppWallRelationLine\n  extends ReactNextElement\n  implements AppWallRelationLineProps\n{\n  /**\n   * @kind \"blue\" | \"purple\"\n   * @required false\n   * @default \"blue\"\n   * @description 光线颜色\n   */\n  @property()\n  accessor lightColor: \"blue\" | \"purple\" = \"blue\";\n\n  render() {\n    return <AppWallRelationLineElement lightColor={this.lightColor} />;\n  }\n}\n\nfunction AppWallRelationLineElement(\n  props: AppWallRelationLineProps\n): React.ReactElement {\n  const { lightColor } = props;\n\n  return (\n    <div\n      className={classNames(\n        \"relation-line\",\n        lightColor && `light-color-${lightColor}`\n      )}\n    />\n  );\n}\n\nexport { AppWallRelationLine };\n","import React, { useEffect, useRef } from \"react\";\nimport { ReactNextElement, wrapBrick } from \"@next-core/react-element\";\nimport { createDecorators, EventEmitter } from \"@next-core/element\";\nimport styleText from \"./system-card.shadow.css\";\nimport variablesStyleText from \"../../data-view-variables.shadow.css\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\n\nconst { defineElement, property, event } = createDecorators();\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\ntype StatusType = \"normal\" | \"warning\";\ninterface DescriptionItem {\n  key: string;\n  value: string;\n}\nexport interface SystemCardProps {\n  status: StatusType;\n  cardTitle: string | undefined;\n  itemList?: DescriptionItem[];\n  buttonName?: string;\n  handleClick?: () => void;\n  containerStyle?: React.CSSProperties;\n}\n\n/**\n * 应用墙系统卡片\n * @author astrid\n */\n@defineElement(\"data-view.app-wall-system-card\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass SystemCard extends ReactNextElement implements SystemCardProps {\n  /**\n   * @kind StatusType\n   * @required true\n   * @default normal\n   * @description 卡片状态\n   * @enums\n   * @group basic\n   */\n  @property({ attribute: false })\n  accessor status: StatusType = \"normal\";\n\n  /**\n   * @kind string\n   * @required -\n   * @default -\n   * @description 卡片标题\n   * @enums\n   * @group basic\n   */\n  @property()\n  accessor cardTitle: string | undefined;\n\n  /**\n   * @kind DescriptionItem[]\n   * @required false\n   * @default -\n   * @description 卡片信息数据\n   * @enums\n   * @group basic\n   */\n  @property({ attribute: false })\n  accessor itemList: DescriptionItem[];\n\n  /**\n   * @kind string\n   * @required -\n   * @default -\n   * @description 按钮名称\n   * @enums\n   * @group basic\n   */\n  @property()\n  accessor buttonName: string | undefined;\n\n  /**\n   * @kind React.CSSProperties\n   * @required -\n   * @default -\n   * @description 外层容器样式\n   * @enums\n   * @group basic\n   */\n  @property({ attribute: false })\n  accessor containerStyle: React.CSSProperties;\n\n  /**\n   * @detail\n   * @description 按钮点击\n   */\n  @event({ type: \"button-click\" })\n  accessor #onClickEvent!: EventEmitter<void>;\n\n  handleClick = () => {\n    this.#onClickEvent.emit();\n  };\n\n  render(): React.ReactNode {\n    return (\n      <SystemCardComponent\n        buttonName={this.buttonName}\n        status={this.status}\n        cardTitle={this.cardTitle}\n        itemList={this.itemList}\n        handleClick={this.handleClick}\n        containerStyle={this.containerStyle}\n      />\n    );\n  }\n}\n\nexport function SystemCardComponent(\n  props: SystemCardProps\n): React.ReactElement {\n  const {\n    // status,\n    itemList,\n    cardTitle,\n    buttonName,\n    handleClick,\n    containerStyle,\n  } = props;\n  const descriptionRef = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    descriptionRef.current?.scrollTo?.(0, 0);\n  }, [itemList]);\n\n  return (\n    <div className=\"wrapper\" style={containerStyle}>\n      <div className=\"cardName\" title={cardTitle}>\n        {cardTitle}\n      </div>\n      {itemList?.length && (\n        <div className=\"descriptions\" ref={descriptionRef}>\n          {itemList.map((item, index) => (\n            <div key={index} className=\"descriptionsItem\">\n              <div className=\"itemKey\">{item.key}</div>\n              <div className=\"itemValue\">{item.value}</div>\n            </div>\n          ))}\n        </div>\n      )}\n      {buttonName && (\n        <div className=\"buttonContent\" onClick={handleClick}>\n          <WrappedIcon lib=\"antd\" icon=\"fall\" theme=\"outlined\" />\n          <span className=\"buttonName\">{buttonName}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport { SystemCard };\n","import React, { useMemo, useState } from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./gauge-chart.shadow.css\";\nconst { defineElement, property } = createDecorators();\ninterface GaugeChartProps {\n  value: number;\n  radius: number;\n  strokeWidth?: number;\n  description?: string | undefined;\n  fontSize?: number;\n}\n/**\n * 大屏仪表盘\n * @author astrid\n * @category big-screen-content\n */\n@defineElement(\"data-view.gauge-chart\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass GaugeChart extends ReactNextElement implements GaugeChartProps {\n  /**\n   * @default -\n   * @required false\n   * @description 仪表盘半径\n   */\n  @property({ type: Number })\n  accessor radius: number;\n\n  /**\n   * @default 20\n   * @required false\n   * @description 仪表盘的圆弧的宽度设置，这边会通过此变量去计算值终点圆点的大小;\n   */\n  @property({ type: Number })\n  accessor strokeWidth: number;\n  /**\n   * @default -\n   * @required false\n   * @description 描述\n   */\n  @property()\n  accessor description: string | undefined;\n\n  /**\n   * @default -\n   * @required false\n   * @description 值, 范围在[0-100]\n   */\n  @property({ type: Number })\n  accessor value: number;\n\n  /**\n   * @default 35\n   * @required false\n   * @description 值的字体大小，默认35\n   */\n  @property({ type: Number })\n  accessor fontSize: number;\n\n  render() {\n    return (\n      <GaugeChartComponent\n        value={this.value}\n        radius={this.radius}\n        strokeWidth={this.strokeWidth}\n        description={this.description}\n        fontSize={this.fontSize}\n      />\n    );\n  }\n}\n\nexport function GaugeChartComponent(props: GaugeChartProps) {\n  const { value, radius, strokeWidth = 20, description, fontSize } = props;\n  const [x, setX] = useState<number>(-radius);\n  const [y, setY] = useState<number>(0);\n  function calculateXy(deg: number, r: number): { x: number; y: number } {\n    if (deg === 0) {\n      return { x: r, y: 0 };\n    }\n    if (deg === 180) {\n      return { x: -r, y: 0 };\n    }\n    const tanQ = Math.tan((2 * Math.PI * deg) / 360), // 倾斜角度的正切值\n      y = Math.abs(Math.sqrt(1 / (tanQ * tanQ + 1)) * r * tanQ), // y始终大于0，所以取绝对值。\n      x = y / tanQ;\n    return { x, y };\n  }\n\n  const path = useMemo(() => {\n    const max = 100, // 总分\n      angle = 180 - (value * 180) / max; // 角度\n    let initAngle = 180;\n\n    // 添加动效\n    const timer = window.setInterval(() => {\n      if (initAngle <= angle) {\n        window.clearInterval(timer);\n      }\n      const location = calculateXy(initAngle, radius);\n      setX(location.x);\n      setY(location.y);\n      initAngle -= 1;\n    }, 10);\n\n    let _path = \"\";\n    for (let i = 0; i < 8; i++) {\n      const deg = i * (180 / 7);\n      const location1 = calculateXy(deg, radius + 24); // 刻度线外端\n      const location2 = calculateXy(deg, radius + 30); // 刻度线外端\n      _path += `M${location1.x} ${-location1.y} L${\n        location2.x\n      } ${-location2.y} `;\n    }\n    return _path;\n  }, [value, radius]);\n  const transform = useMemo(() => {\n    //例如半径为 150， 那么最外围的刻度线就是180, 30是上述间隔， 求最小高度和宽度 height、width\n    const width = (radius + 30) * 2;\n    const height = radius + 30;\n    const circleR = Math.round(strokeWidth + 4) / 2;\n    return {\n      x: width / 2,\n      y: radius + 30,\n      height: height,\n      width,\n      circleR,\n    };\n  }, [radius]);\n  const innerStrokeRadius = radius - strokeWidth / 2;\n  return (\n    <div className=\"gaugeChartWrapper\">\n      {/* 盒子比例: 视图高度永远要比height高 circleR */}\n      <svg\n        width={`${transform.width}px`}\n        height={`${transform.height}px`}\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox={`0 0 ${transform.width} ${\n          transform.height + transform.circleR\n        }`}\n      >\n        <defs>\n          <linearGradient id=\"strokeGradient\">\n            <stop offset=\"0%\" stopColor=\"var(--color-brand)\" />\n            <stop offset=\"100%\" stopColor=\"var(--color-contrast-1)\" />\n          </linearGradient>\n          <linearGradient id=\"wordGradient\">\n            <stop offset=\"0%\" stopColor=\"#FFCF02\" />\n            <stop offset=\"100%\" stopColor=\"#FF7352\" />\n          </linearGradient>\n          <linearGradient id=\"innerStrokeGradient\">\n            <stop offset=\"0%\" stopColor=\"var(--color-normal-text)\" />\n            <stop offset=\"100%\" stopColor=\"transparent\" />\n          </linearGradient>\n          <filter id=\"shadow\">\n            <feDropShadow dx=\"0\" dy=\"1\" stdDeviation=\"4\" floodColor=\"#2863ee\" />\n          </filter>\n        </defs>\n        {/* 底部进度 */}\n        <path\n          transform={`translate(${transform.x}, ${transform.y})`}\n          d={`M-${radius} 0 A ${radius} ${radius}, 0, 0, 1, ${radius} 0`}\n          strokeWidth={strokeWidth}\n          stroke=\"var(--color-fill-bg-base-4)\"\n          fill=\"transparent\"\n        />\n        {/* 底部进度白边 */}\n        <path\n          transform={`translate(${transform.x}, ${transform.y})`}\n          d={`M-${innerStrokeRadius} 0 A ${innerStrokeRadius} ${innerStrokeRadius}, 0, 0, 1, ${innerStrokeRadius} 0`}\n          strokeWidth=\"1.5\"\n          stroke=\"url(#innerStrokeGradient)\"\n          fill=\"transparent\"\n        />\n        {/* 值 */}\n        <path\n          transform={`translate(${transform.x}, ${transform.y})`}\n          d={`M-${radius} 0 A ${radius} ${radius}, 0, 0, 1, ${x} ${-y}`}\n          strokeWidth={strokeWidth}\n          stroke=\"url(#strokeGradient)\"\n          fill=\"transparent\"\n        />\n        {/* 进度的圈 两个圆点比例大小 3:1 */}\n        <circle\n          transform={`translate(${transform.x}, ${transform.y})`}\n          fill=\"#fff\"\n          cx={x}\n          cy={-y}\n          r={transform.circleR}\n        />\n        <circle\n          transform={`translate(${transform.x}, ${transform.y})`}\n          fill=\"#46E0DB\"\n          cx={x}\n          cy={-y}\n          r={transform.circleR / 3}\n        />\n        {/* 内部刻度的 */}\n        <path\n          transform={`translate(${transform.x}, ${transform.y})`}\n          d={path}\n          stroke=\"#74757A\"\n        />\n        {/* 值的文字展示 */}\n        <text\n          x=\"0\"\n          y=\"-30\"\n          transform={`translate(${transform.x}, ${transform.y})`}\n          fontSize={fontSize ?? \"var(--overview-data-font-size)\"}\n          textAnchor=\"middle\"\n          fontWeight=\"var(--font-weight-600)\"\n          fill=\"var(--color-normal-text)\"\n          filter=\"url(#shadow)\"\n        >\n          {`${value}%`}\n        </text>\n        {/* 描述展示 */}\n        <text\n          x=\"0\"\n          y=\"-1\"\n          transform={`translate(${transform.x}, ${transform.y})`}\n          fontSize=\"var(--normal-data-font-size)\"\n          textAnchor=\"middle\"\n          fill=\"var(--color-secondary-text)\"\n          opacity=\"0.55\"\n        >\n          {description}\n        </text>\n      </svg>\n      <slot />\n    </div>\n  );\n}\n\nexport { GaugeChart };\n","import React, { CSSProperties, useCallback } from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./modern-style-component-title.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\ninterface ModernStyleComponentTitleProps {\n  hideLeftComponent?: boolean;\n  hideRightComponent?: boolean;\n  componentTitle?: string;\n  titleTextStyle?: CSSProperties;\n  squareColor?: CSSProperties[\"color\"];\n}\n\n/**\n * 现代风组件标题\n * @author nlicroshan\n * @category big-screen-content\n */\n@defineElement(\"data-view.modern-style-component-title\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass ModernStyleComponentTitle\n  extends ReactNextElement\n  implements ModernStyleComponentTitleProps\n{\n  /**\n   * @kind boolean\n   * @required false\n   * @default false\n   * @description 是否隐藏左侧装饰\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor hideLeftComponent = false;\n\n  /**\n   * @kind boolean\n   * @required false\n   * @default true\n   * @description 是否隐藏右侧装饰\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor hideRightComponent = true;\n\n  /**\n   * @kind string\n   * @required false\n   * @default -\n   * @description 组件标题\n   */\n  @property()\n  accessor componentTitle: string;\n\n  /**\n   * @kind React.CSSProperties\n   * @required false\n   * @default -\n   * @description 标题文字样式\n   */\n  @property({\n    attribute: false,\n  })\n  accessor titleTextStyle: CSSProperties;\n\n  /**\n   * @kind React.CSSProperties[\"color\"]\n   * @required false\n   * @default -\n   * @description 装饰颜色\n   */\n  @property({\n    attribute: false,\n  })\n  accessor squareColor: CSSProperties[\"color\"];\n\n  render() {\n    return (\n      <ModernStyleComponentTitleElement\n        hideLeftComponent={this.hideLeftComponent}\n        hideRightComponent={this.hideRightComponent}\n        componentTitle={this.componentTitle}\n        titleTextStyle={this.titleTextStyle}\n        squareColor={this.squareColor}\n      />\n    );\n  }\n}\n\nfunction ModernStyleComponentTitleElement(\n  props: ModernStyleComponentTitleProps\n): React.ReactElement {\n  const {\n    hideLeftComponent,\n    hideRightComponent,\n    componentTitle,\n    titleTextStyle,\n    squareColor,\n  } = props;\n\n  const SlashComponent = useCallback(\n    ({\n      className,\n      squareColor,\n    }: {\n      className: string;\n      squareColor: CSSProperties[\"color\"];\n    }): React.ReactElement => (\n      <div className={className}>\n        <div className=\"slash-component-wrapper\">\n          <div className=\"circle\" />\n          <div className=\"gray-slash\" />\n          <div\n            className=\"blue-slash\"\n            style={{ backgroundColor: squareColor }}\n          />\n        </div>\n      </div>\n    ),\n    []\n  );\n\n  return (\n    <div className=\"wrapper\">\n      {!hideLeftComponent && (\n        <SlashComponent\n          className=\"left-slash-component\"\n          squareColor={squareColor}\n        />\n      )}\n      {!hideRightComponent && (\n        <SlashComponent\n          className=\"right-slash-component\"\n          squareColor={squareColor}\n        />\n      )}\n      <div\n        className=\"bottom-line\"\n        style={{\n          left: hideLeftComponent ? 0 : 28,\n          right: hideRightComponent ? 0 : 28,\n          backgroundImage: `linear-gradient(\n            90deg,\n            ${\n              hideLeftComponent\n                ? \"transparent\"\n                : \"var(--color-text-divider-line-1)\"\n            } 0,\n            var(--color-text-divider-line-1) 50%,\n            ${\n              hideRightComponent\n                ? \"transparent\"\n                : \"var(--color-text-divider-line-1)\"\n            } 100%\n            )`,\n        }}\n      />\n      <div\n        className=\"title-wrapper\"\n        style={{\n          justifyContent:\n            hideLeftComponent === hideRightComponent\n              ? \"space-around\"\n              : \"space-between\",\n        }}\n      >\n        {hideLeftComponent && (\n          <div>\n            <slot name=\"toolbar\" />\n          </div>\n        )}\n        <div\n          className=\"title-text-container\"\n          style={{\n            marginLeft: hideLeftComponent || !hideRightComponent ? 0 : 38,\n            marginRight: hideRightComponent || !hideLeftComponent ? 0 : 38,\n            flexDirection:\n              hideRightComponent || !hideLeftComponent ? \"row\" : \"row-reverse\",\n          }}\n        >\n          <div className=\"title-text\" style={titleTextStyle}>\n            {componentTitle}\n          </div>\n          <slot name=\"titleSuffix\" />\n        </div>\n        {hideRightComponent && (\n          <div>\n            <slot name=\"toolbar\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { ModernStyleComponentTitle };\n","import React, { CSSProperties } from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./modern-style-page-title.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\ninterface ModernStylePageTitleProps {\n  pageTitle: string;\n  description?: string;\n  backgroundStyle?: CSSProperties;\n  leftRoundStyle?: CSSProperties;\n  rightRoundStyle?: CSSProperties;\n}\n\n/**\n * 现代风页面标题\n * @author nlicroshan\n * @category big-screen-content\n */\n@defineElement(\"data-view.modern-style-page-title\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass ModernStylePageTitle\n  extends ReactNextElement\n  implements ModernStylePageTitleProps\n{\n  /**\n   * @kind string\n   * @required true\n   * @default -\n   * @description 页面标题\n   */\n  @property()\n  accessor pageTitle: string;\n\n  /**\n   * @kind string\n   * @required false\n   * @default -\n   * @description 辅助描述\n   */\n  @property()\n  accessor description: string;\n\n  /**\n   * @kind CSSProperties\n   * @required false\n   * @default -\n   * @description 背景样式\n   */\n  @property({\n    attribute: false,\n  })\n  accessor backgroundStyle: CSSProperties;\n\n  /**\n   * @kind CSSProperties\n   * @required false\n   * @default -\n   * @description 左边圆形装饰样式\n   */\n  @property({\n    attribute: false,\n  })\n  accessor leftRoundStyle: CSSProperties;\n\n  /**\n   * @kind CSSProperties\n   * @required false\n   * @default -\n   * @description 右边圆形装饰样式\n   */\n  @property({\n    attribute: false,\n  })\n  accessor rightRoundStyle: CSSProperties;\n\n  render() {\n    return (\n      <ModernStylePageTitleElement\n        pageTitle={this.pageTitle}\n        description={this.description}\n        backgroundStyle={this.backgroundStyle}\n        leftRoundStyle={this.leftRoundStyle}\n        rightRoundStyle={this.rightRoundStyle}\n      />\n    );\n  }\n}\n\nfunction ModernStylePageTitleElement(\n  props: ModernStylePageTitleProps\n): React.ReactElement {\n  const {\n    pageTitle,\n    description,\n    backgroundStyle,\n    leftRoundStyle,\n    rightRoundStyle,\n  } = props;\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"background-container\" style={backgroundStyle}>\n        <div className=\"left-round\" style={leftRoundStyle} />\n        <div className=\"right-round\" style={rightRoundStyle} />\n      </div>\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        viewBox=\"0,0,1920,82\"\n        className=\"svg\"\n        preserveAspectRatio=\"none\"\n      >\n        <defs>\n          <linearGradient id=\"path-grad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" stopColor=\"var(--color-brand)\" stopOpacity=\"0\" />\n            <stop offset=\"38%\" stopColor=\"var(--color-brand)\" stopOpacity=\"1\" />\n            <stop offset=\"62%\" stopColor=\"var(--color-brand)\" stopOpacity=\"1\" />\n            <stop\n              offset=\"100%\"\n              stopColor=\"var(--color-brand)\"\n              stopOpacity=\"0\"\n            />\n          </linearGradient>\n        </defs>\n        <path\n          d=\"M0 58 L672 58 C720 58 720 80 768 80 L1152 80 C1200 80 1200 58 1248 58 L1920 58\"\n          strokeWidth={1.5}\n          stroke=\"url(#path-grad)\"\n          fill=\"transparent\"\n        />\n      </svg>\n      <div className=\"text-container\">\n        <div className=\"title-text\">{pageTitle}</div>\n        <div className=\"description\">{description}</div>\n      </div>\n    </div>\n  );\n}\n\nexport { ModernStylePageTitle };\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { createDecorators, EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement, wrapBrick } from \"@next-core/react-element\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./tabs-drawer.shadow.css\";\nimport classNames from \"classnames\";\nconst { defineElement, property, event, method } = createDecorators();\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\nexport interface TabItem {\n  /** 菜单标题对应的图标。 */\n  icon: GeneralIconProps;\n  /** 唯一标识 */\n  key: string;\n  /** 菜单标题。 */\n  title?: string;\n  tooltip?: string;\n}\ninterface TabsDrawerProps {\n  tabList: TabItem[];\n  activeKey?: string;\n  width?: number | string;\n  drawerStyle?: React.CSSProperties;\n  bodyStyle?: React.CSSProperties;\n  zIndex?: number;\n  visible?: boolean;\n  onClose?: () => void;\n  onOpen?: () => void;\n  onTabChange?: (key: string) => void;\n}\n/**\n * 大屏仪标签页抽屉\n * @author astrid\n * @category big-screen-layout\n */\n\n@defineElement(\"data-view.tabs-drawer\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass TabsDrawer extends ReactNextElement implements TabsDrawerProps {\n  /**\n   * @default -\n   * @required false\n   * @description 抽屉左侧菜单列表\n   */\n  @property({ attribute: false })\n  accessor tabList: TabItem[];\n\n  /**\n   * @default -\n   * @required false\n   * @description 抽屉左侧菜单高亮显示\n   */\n  @property()\n  accessor activeKey: string;\n\n  /**\n   * @kind number|string\n   * @required false\n   * @default default\n   * @description 抽屉宽度内容区的宽度，优先级高于bodyStyle内的width\n   * @group basic\n   */\n  @property({\n    attribute: false,\n  })\n  accessor width: number | string;\n\n  /**\n   * @kind  React.CSSProperties\n   * @required false\n   * @default default\n   * @description 设计 Drawer 容器样式\n   * @group basic\n   */\n  @property({\n    attribute: false,\n  })\n  accessor drawerStyle: React.CSSProperties;\n  /**\n   * @kind  React.CSSProperties\n   * @required false\n   * @default default\n   * @description  可用于设置 Drawer 内容部分的样式\n   * @group basic\n   */\n  @property({\n    attribute: false,\n  })\n  accessor bodyStyle: React.CSSProperties;\n\n  /**\n   * @kind number\n   * @required false\n   * @default  1000\n   * @description 抽屉层级\n   * @group basic\n   */\n  @property({\n    type: Number,\n  })\n  accessor zIndex: number | undefined;\n\n  /**\n   * @kind boolean\n   * @required false\n   * @default default\n   * @description 遮罩层是否显示\n   * @group basic\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor visible: boolean | undefined;\n  /**\n   * @detail\n   * @description 抽屉打开事件\n   */\n  @event({ type: \"open\" })\n  accessor #drawerOpenEvent!: EventEmitter<void>;\n\n  /**\n   * @detail\n   * @description 抽屉关闭事件\n   */\n  @event({ type: \"close\" })\n  accessor #drawerCloseEvent!: EventEmitter<void>;\n\n  /**\n   * @detail `string`\n   * @description 切换 `tab` 栏会触发的事件，`detail` 为目标 `tab` 对应的 `key`\n   */\n  @event({ type: \"tab.change\" })\n  accessor #tabChangeEvent!: EventEmitter<string>;\n\n  #handleTabChange = (key: string) => {\n    this.activeKey = key;\n    this.#tabChangeEvent.emit(key);\n  };\n  #handleDrawerOpen = () => {\n    this.visible = true;\n    this.#drawerOpenEvent.emit();\n  };\n\n  #handleDrawerClose = () => {\n    this.visible = false;\n    this.#drawerCloseEvent.emit();\n  };\n\n  /**\n   * @description 打开抽屉\n   */\n  @method()\n  open() {\n    this.#handleDrawerOpen();\n  }\n  /**\n   * @description 关闭抽屉\n   */\n  @method()\n  close() {\n    this.#handleDrawerClose();\n  }\n  render(): React.ReactNode {\n    return (\n      <TabsDrawerComponent\n        tabList={this.tabList || []}\n        activeKey={this.activeKey}\n        width={this.width}\n        bodyStyle={this.bodyStyle}\n        drawerStyle={this.drawerStyle}\n        zIndex={this.zIndex}\n        visible={this.visible}\n        onClose={this.#handleDrawerClose}\n        onOpen={this.#handleDrawerOpen}\n        onTabChange={this.#handleTabChange}\n      />\n    );\n  }\n}\nexport function TabsDrawerComponent(\n  props: TabsDrawerProps\n): React.ReactElement {\n  const {\n    tabList,\n    width = 378,\n    drawerStyle,\n    bodyStyle,\n    zIndex,\n    onClose,\n    onOpen,\n    onTabChange,\n    visible,\n  } = props;\n  const contentRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [activeKey, setActiveKey] = useState(props.activeKey);\n  const setActiveItem = (key: string): void => {\n    const _contentSlot = contentRef.current;\n    if (_contentSlot) {\n      const _slotElement = _contentSlot.querySelectorAll(\"slot\");\n      _slotElement?.forEach((slot) => {\n        slot.hidden = slot.name !== key;\n      });\n      setActiveKey(key);\n    }\n  };\n  const handleClick = useCallback(\n    (event: MouseEvent) => {\n      const targetElement = event\n        .composedPath()\n        .some((ele) => ele === containerRef.current);\n      if (!targetElement) {\n        if (visible) {\n          onClose();\n        }\n      }\n    },\n    [visible, onClose]\n  );\n  useEffect(() => {\n    if (tabList.length) {\n      setActiveItem(props.activeKey ?? tabList[0].key);\n    }\n  }, [props.activeKey, tabList]);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n    return () => document.removeEventListener(\"click\", handleClick);\n  }, [handleClick]);\n\n  const menuElement = useMemo(\n    () => (\n      <div className=\"menuWrapper\">\n        <div className=\"menuMask\" />\n        {tabList.map((item, index) => (\n          <div\n            className={classNames(\"menuIconItem\", {\n              menuIconItemHover: !!item.tooltip,\n              active: item.key === activeKey,\n            })}\n            key={`menu-${index}`}\n            onClick={() => onTabChange?.(item.key)}\n          >\n            {item.icon && <WrappedIcon {...item.icon} />}\n            {item.tooltip && (\n              <div className=\"menuIconTooltip\">{item.tooltip}</div>\n            )}\n          </div>\n        ))}\n      </div>\n    ),\n    [activeKey, onTabChange, tabList]\n  );\n  return (\n    <div\n      className={classNames(\"drawerWrapper\", {\n        open: visible,\n        close: !visible,\n      })}\n      style={{\n        ...drawerStyle,\n        ...(zIndex ? { zIndex } : {}),\n      }}\n      ref={containerRef}\n    >\n      <span\n        className=\"closeIconBtn\"\n        onClick={() => (visible ? onClose?.() : onOpen?.())}\n      >\n        <span className=\"closeIcon\" />\n      </span>\n      <div\n        className={classNames(\"drawerBody\")}\n        style={{\n          ...bodyStyle,\n          width,\n        }}\n      >\n        {menuElement}\n        <div className=\"content\" ref={contentRef}>\n          {tabList.map((item, index) => (\n            <slot name={item.key} key={`slot-${index}`} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { TabsDrawer };\n","import React, { MouseEvent, CSSProperties, useMemo, useState } from \"react\";\nimport { createDecorators, EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport type { UseBrickConf } from \"@next-core/types\";\nimport { ReactUseMultipleBricks } from \"@next-core/react-runtime\";\nimport {\n  treemap,\n  hierarchy,\n  treemapBinary,\n  treemapDice,\n  treemapResquarify,\n  treemapSlice,\n  treemapSliceDice,\n  treemapSquarify,\n} from \"d3-hierarchy\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./modern-style-treemap.shadow.css\";\nimport { useResizeObserver } from \"../hooks/index.js\";\nimport { debounceByAnimationFrame } from \"@next-shared/general/debounceByAnimationFrame\";\nimport { keyBy } from \"lodash\";\nimport classNames from \"classnames\";\n\nconst { defineElement, property, event } = createDecorators();\n\nenum TailTypes {\n  treemapBinary = \"treemapBinary\",\n  treemapDice = \"treemapDice\",\n  treemapResquarify = \"treemapResquarify\",\n  treemapSlice = \"treemapSlice\",\n  treemapSliceDice = \"treemapSliceDice\",\n  treemapSquarify = \"treemapSquarify\",\n}\n\ntype TreemapData = {\n  name: string;\n  value?: number;\n  children?: TreemapData[];\n};\n\ninterface ModernStyleTreemapProps {\n  data: TreemapData;\n  tail?: TailTypes;\n  leafUseBrick?: { useBrick: UseBrickConf };\n  leafContainerStyle?: CSSProperties;\n  tooltipUseBrick?: { useBrick: UseBrickConf };\n  tooltipStyle?: CSSProperties;\n  handleClick?: (value: TreemapData) => void;\n}\n\n/**\n * 现代风树图\n * @author nlicroshan\n * @category big-screen-content\n */\n@defineElement(\"data-view.modern-style-treemap\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass ModernStyleTreemap\n  extends ReactNextElement\n  implements ModernStyleTreemapProps\n{\n  /**\n   * @kind TreemapData\n   * @required true\n   * @default -\n   * @description 数据\n   */\n  @property({\n    attribute: false,\n  })\n  accessor data: TreemapData;\n\n  /**\n   * @kind TailTypes\n   * @required false\n   * @default treemapSquarify\n   * @description 平铺方法\n   */\n  @property({\n    attribute: false,\n  })\n  accessor tail: TailTypes = TailTypes[\"treemapSquarify\"];\n\n  /**\n   * @kind { useBrick: UseBrickConf }\n   * @required false\n   * @default -\n   * @description 叶子节点useBrick\n   */\n  @property({\n    attribute: false,\n  })\n  accessor leafUseBrick: { useBrick: UseBrickConf };\n\n  /**\n   * @kind CSSProperties\n   * @required false\n   * @default -\n   * @description 叶子节点容器样式\n   */\n  @property({\n    attribute: false,\n  })\n  accessor leafContainerStyle: CSSProperties;\n\n  /**\n   * @kind { useBrick: UseBrickConf }\n   * @required false\n   * @default -\n   * @description tooltip useBrick\n   */\n  @property({\n    attribute: false,\n  })\n  accessor tooltipUseBrick: { useBrick: UseBrickConf };\n\n  /**\n   * @kind CSSProperties\n   * @required false\n   * @default -\n   * @description tooltip容器样式\n   */\n  @property({\n    attribute: false,\n  })\n  accessor tooltipStyle: CSSProperties;\n\n  /**\n   * @detail\n   * @description 点击事件\n   */\n  @event({ type: \"treemap.click\" })\n  accessor #onClickEvent!: EventEmitter<TreemapData>;\n\n  #handleClick = (value: TreemapData) => {\n    this.#onClickEvent.emit(value);\n  };\n\n  render() {\n    return (\n      <ModernStyleTreemapElement\n        data={this.data}\n        tail={this.tail}\n        leafUseBrick={this.leafUseBrick}\n        leafContainerStyle={this.leafContainerStyle}\n        tooltipUseBrick={this.tooltipUseBrick}\n        tooltipStyle={this.tooltipStyle}\n        handleClick={this.#handleClick}\n      />\n    );\n  }\n}\n\nconst tailMap = {\n  [TailTypes[\"treemapBinary\"]]: treemapBinary,\n  [TailTypes[\"treemapDice\"]]: treemapDice,\n  [TailTypes[\"treemapResquarify\"]]: treemapResquarify,\n  [TailTypes[\"treemapSlice\"]]: treemapSlice,\n  [TailTypes[\"treemapSliceDice\"]]: treemapSliceDice,\n  [TailTypes[\"treemapSquarify\"]]: treemapSquarify,\n};\n\nfunction ModernStyleTreemapElement(\n  props: ModernStyleTreemapProps\n): React.ReactElement {\n  const {\n    data,\n    tail,\n    leafUseBrick,\n    leafContainerStyle,\n    tooltipUseBrick,\n    tooltipStyle,\n    handleClick,\n  } = props;\n\n  const [\n    wrapperRef,\n    { clientWidth: wrapperWidth, clientHeight: wrapperHeight },\n  ] = useResizeObserver<HTMLDivElement>();\n  const [tooltipRef, { clientHeight: tooltipHeight }] =\n    useResizeObserver<HTMLDivElement>();\n  const [mouseData, setMouseData] = useState<{\n    clientX: number;\n    clientY: number;\n    name?: string;\n  }>({ clientX: 0, clientY: 0 });\n  const [tooltipPosition, setTooltipPosition] = useState<string>();\n\n  const tooltipTransform = useMemo(() => {\n    if (!wrapperRef.current) return undefined;\n    const wrapperClientRect = wrapperRef.current.getBoundingClientRect();\n    // 缩放比例\n    const widthScale = wrapperClientRect.width / wrapperRef.current.clientWidth;\n    const heightScale =\n      wrapperClientRect.height / wrapperRef.current.clientHeight;\n    // 缩放后的偏移\n    let scaledLeft, placement;\n    const left = mouseData.clientX - wrapperClientRect.left;\n    let scaledTop = mouseData.clientY - wrapperClientRect.top;\n    const right = wrapperClientRect.right - mouseData.clientX;\n    const bottom = wrapperClientRect.bottom - mouseData.clientY;\n    // 处理边界问题\n    const { width, height } = tooltipRef.current.getBoundingClientRect();\n    scaledLeft = left + 16;\n    if (right < width) {\n      scaledLeft = left - width - 16;\n      placement = \"right\";\n    }\n    if (left < width) {\n      placement = \"left\";\n    }\n    if (bottom < height / 2 || scaledTop < height / 2) {\n      const topOrBottom = bottom < height / 2 ? \"bottom\" : \"top\";\n      scaledTop =\n        bottom < height / 2\n          ? scaledTop - height / 2 - 16\n          : scaledTop + height / 2 + 16;\n      if (placement === \"left\" && left - width / 2 < 0) {\n        placement = `${topOrBottom}-left`;\n        scaledLeft = left;\n      } else if (placement === \"right\" && right - width / 2 < 0) {\n        placement = `${topOrBottom}-right`;\n        scaledLeft = left - width;\n      } else {\n        placement = topOrBottom;\n        scaledLeft = left - width / 2;\n      }\n    }\n    setTooltipPosition(placement);\n    // 实际偏移\n    return {\n      left: `${scaledLeft / widthScale}px`,\n      top: `${scaledTop / heightScale - tooltipHeight / 2}px`,\n    };\n  }, [\n    wrapperRef,\n    mouseData.clientX,\n    mouseData.clientY,\n    tooltipRef,\n    tooltipHeight,\n  ]);\n\n  const hierarchyNode = useMemo(() => {\n    return hierarchy(data)\n      .sum((d) => d.value)\n      .sort((a, b) => b.value - a.value);\n  }, [data]);\n\n  const tm = useMemo(() => {\n    return treemap<TreemapData>()\n      .tile(tailMap[tail])\n      .size([wrapperWidth, wrapperHeight])\n      .padding(1)\n      .round(true);\n  }, [tail, wrapperWidth, wrapperHeight]);\n\n  const [leaves, leavesMap] = useMemo(() => {\n    // 这里只要hierarchyNode不变化，即使tm更新了，root、leaves还是同一个对象\n    const root = tm(hierarchyNode);\n    // 这里使用解构让leaves里面每个node变成新对象\n    const _leaves = root.leaves().map((v: any) => ({ ...v }));\n    return [_leaves, keyBy(_leaves, \"data.name\")];\n  }, [tm, hierarchyNode]);\n\n  const leavesNode = useMemo(() => {\n    return leaves.map((d) => {\n      const top = d.y0,\n        left = d.x0,\n        width = d.x1 - d.x0,\n        height = d.y1 - d.y0;\n\n      return (\n        <div\n          key={d.data.name}\n          className=\"treemap-leaf\"\n          data-leaf-id={d.data.name}\n          style={{\n            ...leafContainerStyle,\n            top: 0,\n            left: 0,\n            transform: `translate(${left}px, ${top}px)`,\n            width,\n            height,\n          }}\n          onClick={() => handleClick?.(d.data)}\n        >\n          {leafUseBrick?.useBrick && (\n            <ReactUseMultipleBricks useBrick={leafUseBrick.useBrick} data={d} />\n          )}\n        </div>\n      );\n    });\n  }, [handleClick, leafContainerStyle, leafUseBrick.useBrick, leaves]);\n\n  const curTooltipData = useMemo(() => {\n    return { ...leavesMap[mouseData.name] };\n  }, [leavesMap, mouseData.name]);\n\n  const handleMouseMove = useMemo(() => {\n    return debounceByAnimationFrame((e: MouseEvent<HTMLDivElement>) => {\n      const curLeaf = (e.target as HTMLDivElement).closest(\".treemap-leaf\");\n      const curName = curLeaf?.getAttribute(\"data-leaf-id\");\n      setMouseData((pre) => {\n        return {\n          clientX: e.clientX,\n          clientY: e.clientY,\n          name: curLeaf ? curName : pre.name,\n        };\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"wrapper\">\n      <div\n        className=\"treemap\"\n        ref={wrapperRef}\n        onMouseMove={handleMouseMove}\n        onMouseEnter={() => {\n          tooltipRef.current.style.visibility = \"visible\";\n        }}\n        onMouseLeave={() => {\n          tooltipRef.current.style.visibility = \"hidden\";\n        }}\n      >\n        {leavesNode}\n      </div>\n      <div\n        className={classNames(\"tooltip\", {\n          bottom: tooltipPosition === \"bottom\",\n          bottomRight: tooltipPosition === \"bottom-right\",\n          bottomLeft: tooltipPosition === \"bottom-left\",\n          topLeft: tooltipPosition === \"top-left\",\n          topRight: tooltipPosition === \"top-right\",\n          top: tooltipPosition === \"top\",\n          right: tooltipPosition === \"right\",\n        })}\n        style={{\n          ...tooltipStyle,\n          ...tooltipTransform,\n        }}\n        ref={tooltipRef}\n      >\n        {tooltipUseBrick?.useBrick && (\n          <ReactUseMultipleBricks\n            useBrick={tooltipUseBrick.useBrick}\n            data={curTooltipData}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { ModernStyleTreemap };\n","import React, { useMemo } from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./battery-chart.shadow.css\";\nconst { defineElement, property } = createDecorators();\ninterface ThresholdColor {\n  color: React.CSSProperties[\"color\"];\n  startValue: number;\n  endValue: number;\n  /** 电池头的颜色，默认取 color，color为渐变色，需要单独配置头部颜色，请使用该属性 */\n  headerColor?: React.CSSProperties[\"color\"];\n}\ninterface BatteryChartChartProps {\n  value: number;\n  thresholdColors?: ThresholdColor[];\n  thresholdValue?: number;\n  batteryWidth?: number;\n  batteryHeight?: number;\n}\n/**\n * 大屏电池\n * @author astrid\n * @category big-screen-content\n */\n@defineElement(\"data-view.battery-chart\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass BatteryChart extends ReactNextElement implements BatteryChartChartProps {\n  /**\n   * @kind number\n   * @default -\n   * @required false\n   * @description 值, 默认范围在[0-100], 但是范围还可通过 thresholdColors 来改变，将取第一个和最后一个值作为范围\n   */\n  @property({ type: Number })\n  accessor value: number;\n\n  /**\n   * @kind  number\n   * @default  38\n   * @required false\n   * @description 电池的宽度\n   */\n  @property({ type: Number })\n  accessor batteryWidth: number;\n\n  /**\n   * @kind  number\n   * @default  58\n   * @required false\n   * @description 电池的高度\n   */\n  @property({ type: Number })\n  accessor batteryHeight: number;\n\n  /**\n   * @kind  ThresholdColor[]\n   * @default  -\n   * @required false\n   * @description 阈值范围以及颜色的配置；\n   */\n  @property({ attribute: false })\n  accessor thresholdColors: ThresholdColor[];\n\n  /**\n   * @kind  number\n   * @default  50\n   * @required false\n   * @description 阈值刻度线\n   */\n  @property({ type: Number })\n  accessor thresholdValue: number;\n\n  render(): React.ReactNode {\n    return (\n      <BatteryChartComponent\n        value={this.value}\n        thresholdValue={this.thresholdValue}\n        thresholdColors={this.thresholdColors}\n        batteryHeight={this.batteryHeight}\n        batteryWidth={this.batteryWidth}\n      />\n    );\n  }\n}\n\nexport function BatteryChartComponent(props: BatteryChartChartProps) {\n  const defaultThresholdColors = [\n    {\n      color: \"linear-gradient(180deg, #246EFF 0%, #26CE90 100%)\",\n      startValue: 0,\n      endValue: 50,\n      headerColor: \"#246EFF\",\n    },\n    {\n      color: \"linear-gradient(180deg, #FF772A 0%, #FFC22A 100%)\",\n      startValue: 50,\n      endValue: 100,\n      headerColor: \"#FF772A\",\n    },\n  ];\n  const {\n    value,\n    batteryHeight = 58,\n    batteryWidth = 38,\n    thresholdValue = 50,\n    thresholdColors = defaultThresholdColors,\n  } = props;\n  const calculationRatio = useMemo(() => {\n    const lastThreshold = thresholdColors[thresholdColors.length - 1];\n    const proportion =\n      batteryHeight / (lastThreshold.endValue - thresholdColors[0].startValue); // 比例, lastThreshold.endValue-thresholdColors[0].startValue 值的区间\n    const currentThreshold = thresholdColors.find(\n      (threshold) =>\n        threshold.startValue <= value && threshold.endValue >= value\n    );\n    return {\n      height: proportion * value, // 值的高度\n      color: currentThreshold?.color, // 值的颜色\n      headerColor: currentThreshold?.headerColor ?? currentThreshold?.color, //头部颜色\n      thresholdValueLineHeight: proportion * thresholdValue, // 阈值线的高度\n      isFullMarks:\n        value === lastThreshold.endValue - thresholdColors[0].startValue,\n    };\n  }, [value, batteryHeight, thresholdColors, thresholdValue]);\n  return (\n    <div className=\"container\">\n      <div\n        className=\"header\"\n        style={{\n          width: Math.round(batteryWidth / 3),\n          background: calculationRatio.headerColor,\n          boxShadow: `0 1px 2px 0 ${calculationRatio.headerColor}`,\n        }}\n      />\n      <div\n        className=\"content\"\n        style={{\n          width: batteryWidth,\n          height: batteryHeight,\n        }}\n      >\n        <div\n          className=\"threshold\"\n          style={{\n            bottom: calculationRatio.thresholdValueLineHeight - 1,\n          }}\n        />\n        <div\n          className=\"valueWrapper\"\n          style={{ height: calculationRatio.height }}\n        >\n          <div\n            className=\"value\"\n            style={{\n              background: calculationRatio.color,\n              boxShadow: `0 8px 10px 0 ${calculationRatio.color}`,\n              borderRadius: calculationRatio.isFullMarks\n                ? \"4px\"\n                : \"0 0 4px 4px\",\n            }}\n          />\n        </div>\n        <div\n          className=\"word\"\n          style={{\n            top: batteryHeight - calculationRatio.thresholdValueLineHeight - 12,\n          }}\n        >\n          <slot name=\"left\" />\n        </div>\n      </div>\n      <slot />\n    </div>\n  );\n}\n\nexport { BatteryChart };\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { EventEmitter, createDecorators } from \"@next-core/element\";\nimport { ReactNextElement, wrapBrick } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./dropdown-menu.shadow.css\";\nimport emptyUrl from \"../asset/images/empty.png\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport classNames from \"classnames\";\nimport { keyBy } from \"lodash\";\n\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\n\nconst { defineElement, property, event } = createDecorators();\n\ninterface DropdownMenuProps {\n  curElement?: HTMLElement;\n  options?: { label: string; value: string }[];\n  value?: string;\n  placeholder?: string;\n  onChange?: (value: string) => void;\n  allowClear?: boolean;\n}\n\n/**\n * 基础下拉菜单\n * @author nlicroshan\n * @category big-screen-content\n */\n@defineElement(\"data-view.dropdown-menu\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass DropdownMenu extends ReactNextElement implements DropdownMenuProps {\n  /**\n   * @kind { label: string, value: string }[]\n   * @required false\n   * @default\n   * @description 候选项\n   */\n  @property({\n    attribute: false,\n  })\n  accessor options: { label: string; value: string }[];\n\n  /**\n   * @kind string\n   * @required false\n   * @default\n   * @description 值\n   */\n  @property()\n  accessor value: string;\n\n  /**\n   * @kind string\n   * @required false\n   * @default\n   * @description 占位符\n   */\n  @property()\n  accessor placeholder: string;\n\n  /**\n   * @kind boolean\n   * @required false\n   * @default\n   * @description 是否允许清除\n   */\n  @property()\n  accessor allowClear: boolean;\n\n  /**\n   * @detail\n   * @description 值改变\n   */\n  @event({ type: \"value.change\" })\n  accessor #valueChange!: EventEmitter<string>;\n\n  #handleValueChange = (value: string) => {\n    this.#valueChange.emit(value);\n  };\n\n  render() {\n    return (\n      <DropdownMenuElement\n        curElement={this}\n        options={this.options}\n        value={this.value}\n        placeholder={this.placeholder}\n        onChange={this.#handleValueChange}\n        allowClear={this.allowClear}\n      />\n    );\n  }\n}\n\nfunction DropdownMenuElement(props: DropdownMenuProps): React.ReactElement {\n  const { curElement, options, placeholder, onChange, allowClear } = props;\n\n  const [isDropHidden, setIsDropHidden] = React.useState(true);\n\n  const inputRef = useRef<HTMLInputElement>();\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [isInputFocused, setIsInputFocused] = React.useState(false);\n\n  const [value, setValue] = useState(props.value);\n  const optionsMap = useMemo(() => {\n    return keyBy(options, \"value\");\n  }, [options]);\n\n  useEffect(() => {\n    setValue(props.value);\n  }, [props.value]);\n\n  useEffect(() => {\n    const handleDocumentClick = (e: MouseEvent) => {\n      if (!curElement.contains(e.target as HTMLElement)) {\n        setIsDropHidden(true);\n        setIsInputFocused(() => {\n          inputRef.current.blur();\n          setInputValue(\"\");\n          return false;\n        });\n      }\n    };\n    document.addEventListener(\"click\", handleDocumentClick);\n    return () => {\n      document.removeEventListener(\"click\", handleDocumentClick);\n    };\n  });\n\n  const filteredOptions = useMemo(() => {\n    return options.filter((v) => {\n      const search = inputValue?.trim().toLowerCase() || \"\";\n      return (\n        v.label.toLowerCase().includes(search) ||\n        v.value.toLowerCase().includes(search)\n      );\n    });\n  }, [inputValue, options]);\n\n  return (\n    <div className=\"container\">\n      <div\n        className={classNames(\"select\", {\n          \"select-focused\": isInputFocused,\n          \"select-allow-clear\": !!allowClear,\n        })}\n      >\n        <div\n          className=\"select-selector\"\n          onClick={() => {\n            setIsDropHidden(false);\n            setIsInputFocused((pre) => {\n              if (!pre) {\n                setInputValue(\"\");\n              }\n              inputRef.current.focus();\n              return true;\n            });\n          }}\n        >\n          <div className=\"select-selector-search\">\n            <input\n              className=\"select-selector-search-input\"\n              type=\"search\"\n              autoComplete=\"off\"\n              ref={inputRef}\n              value={inputValue}\n              onChange={(e) => {\n                setInputValue(e.target.value);\n              }}\n            />\n          </div>\n          {value ? (\n            <div\n              className=\"select-selector-item\"\n              style={{ visibility: inputValue ? \"hidden\" : \"visible\" }}\n            >\n              {optionsMap[value] ? optionsMap[value].label : value}\n            </div>\n          ) : (\n            <div\n              className=\"select-selection-placeholder\"\n              style={{ visibility: inputValue ? \"hidden\" : \"visible\" }}\n            >\n              {placeholder}\n            </div>\n          )}\n          <div className=\"select-arrow\">\n            {isInputFocused ? (\n              <WrappedIcon\n                className=\"ant-select-suffix search-icon\"\n                lib=\"antd\"\n                theme=\"outlined\"\n                icon=\"search\"\n              />\n            ) : (\n              <WrappedIcon\n                className=\"ant-select-suffix down-icon\"\n                lib=\"antd\"\n                theme=\"outlined\"\n                icon=\"down\"\n              />\n            )}\n          </div>\n          {allowClear && (\n            <div\n              className=\"select-clear\"\n              style={{ visibility: !value ? \"hidden\" : \"visible\" }}\n              onMouseDown={(e) => {\n                // 使用onMouseDown使输入框保持聚焦\n                e.preventDefault();\n                e.stopPropagation();\n                setInputValue(\"\");\n                setValue(null);\n                onChange?.(null);\n              }}\n            >\n              <WrappedIcon\n                className=\"ant-select-suffix clear-icon\"\n                lib=\"antd\"\n                theme=\"filled\"\n                icon=\"close-circle\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <div\n        className=\"select-dropdown\"\n        style={{ display: isDropHidden ? \"none\" : \"block\" }}\n      >\n        {filteredOptions.length ? (\n          <div className=\"dropdown-list\">\n            <div className=\"dropdown-list-inner\">\n              {filteredOptions.map((v) => {\n                return (\n                  <div\n                    className={classNames(\"select-item\", {\n                      selected: value === v.value,\n                    })}\n                    key={v.value}\n                    onClick={() => {\n                      setValue(v.value);\n                      setIsDropHidden(true);\n                      setIsInputFocused(() => {\n                        inputRef.current.blur();\n                        setInputValue(\"\");\n                        return false;\n                      });\n                      onChange?.(v.value);\n                    }}\n                  >\n                    <div className=\"select-item-option-content\">{v.label}</div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <div className=\"empty-state\">\n            <img src={emptyUrl} className=\"empty-image\" />\n            <div className=\"empty-description\">暂无数据</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { DropdownMenu };\n","export enum K {\n    EMPTY_DATA = \"EMPTY_DATA\",\n}\n\nconst en: Locale = {\n    EMPTY_DATA: \"Empty data\",\n};\n\nconst zh: Locale = {\n    EMPTY_DATA: \"空数据\",\n};\n\nexport const NS = \"bricks/data-view/complex-search\";\n\nexport const locales = { en, zh };\n\ntype Locale = { [key in K]: string };\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { createDecorators, EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement, wrapBrick } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./complex-search.shadow.css\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\nimport {\n  ReactUseMultipleBricks,\n  ReactUseMultipleBricksProps,\n} from \"@next-core/react-runtime\";\nimport { useTranslation, initializeReactI18n } from \"@next-core/i18n/react\";\nimport { K, NS, locales } from \"./i18n.js\";\nimport empty from \"../asset/images/empty.png\";\nconst { defineElement, property, event } = createDecorators();\ninitializeReactI18n(NS, locales);\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\n\nexport interface OptionItem {\n  icon: GeneralIconProps;\n  name: string;\n  [propName: string]: unknown;\n}\n\ninterface ComplexSearchProps {\n  options?: OptionItem[];\n  value?: string;\n  placeholder?: string;\n  onInputChange?: (value: string) => void;\n  onSearch?: (value: string) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  tooltipUseBrick?: ReactUseMultipleBricksProps;\n  onSelect?: (data: OptionItem) => void;\n}\n\n/**\n * 大屏搜索构件\n * @author astrid\n * @category big-screen-content\n */\n@defineElement(\"data-view.complex-search\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass ComplexSearch extends ReactNextElement implements ComplexSearchProps {\n  /**\n   * @kind string\n   * @required false\n   * @default default\n   * @description 初始值\n   * @enums\n   * @group basic\n   */\n  @property()\n  accessor value: string | undefined;\n  /**\n   * @kind string\n   * @required false\n   * @default default\n   * @description 占位符\n   * @enums\n   * @group basic\n   */\n  @property()\n  accessor placeholder: string | undefined;\n\n  /**\n   * @kind OptionItem[]\n   * @required false\n   * @default default\n   * @description 下拉选项\n   * @enums\n   * @group basic\n   */\n  @property({ attribute: false })\n  accessor options: OptionItem[];\n\n  /**\n   * @kind ReactUseMultipleBricksProps\n   * @required false\n   * @default -\n   * @description tooltip useBrick\n   */\n  @property({\n    attribute: false,\n  })\n  accessor tooltipUseBrick: ReactUseMultipleBricksProps;\n\n  /**\n   * @detail\n   * @description input值改变事件\n   */\n  @event({ type: \"change\" })\n  accessor #inputChangeEvent!: EventEmitter<string>;\n\n  /**\n   * @detail\n   * @description input值搜索事件\n   */\n  @event({ type: \"search\" })\n  accessor #onSearchEvent!: EventEmitter<string>;\n\n  /**\n   * @detail\n   * @description 下拉选择事件\n   */\n  @event({ type: \"select\" })\n  accessor #onSelectEvent!: EventEmitter<OptionItem>;\n\n  /**\n   * @detail\n   * @description 聚焦事件\n   */\n  @event({ type: \"focus\" })\n  accessor #onFocusEvent!: EventEmitter<void>;\n\n  /**\n   * @detail\n   * @description 失焦事件\n   */\n  @event({ type: \"blur\" })\n  accessor #onBlurEvent!: EventEmitter<void>;\n\n  handleInputChange = (value: string) => {\n    this.#inputChangeEvent.emit(value);\n  };\n  handleSearch = (value: string) => {\n    this.#onSearchEvent.emit(value);\n  };\n  handleFocus = () => {\n    this.#onFocusEvent.emit();\n  };\n  handleBlur = () => {\n    this.#onBlurEvent.emit();\n  };\n  handleSelect = (data: OptionItem) => {\n    this.#onSelectEvent.emit(data);\n  };\n\n  render(): React.ReactNode {\n    return (\n      <ComplexSearchComponent\n        value={this.value}\n        onInputChange={this.handleInputChange}\n        onSearch={this.handleSearch}\n        onBlur={this.handleBlur}\n        onFocus={this.handleFocus}\n        tooltipUseBrick={this.tooltipUseBrick}\n        placeholder={this.placeholder}\n        onSelect={this.handleSelect}\n        options={this.options}\n      />\n    );\n  }\n}\n\nexport function ComplexSearchComponent(\n  props: ComplexSearchProps\n): React.ReactElement {\n  const {\n    onInputChange,\n    onSearch,\n    onBlur,\n    onFocus,\n    tooltipUseBrick,\n    placeholder,\n    onSelect,\n    options = [],\n  } = props;\n  const { t } = useTranslation(NS);\n  const [allowClear, setAllowClear] = useState<boolean>(false);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const [visible, setVisible] = useState(false);\n  const [currentData, setCurrentData] = useState<OptionItem>();\n  const [positionTop, setPositionTop] = useState<number>(0);\n  const [tooltipVisible, setTooltipVisible] = useState<boolean>(false);\n  const [value, setValue] = useState(props.value);\n  const handleFocus = () => {\n    //聚焦， 下拉框出现\n    setVisible(true);\n    onFocus();\n  };\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      setVisible(false);\n      setValue((e.target as HTMLInputElement).value);\n      onSearch((e.target as HTMLInputElement).value);\n    }\n  };\n  const handleSelect = (data: OptionItem) => {\n    setValue(data.name);\n    onSelect(data);\n    setVisible(false);\n  };\n  useEffect(() => {\n    setValue(props.value);\n  }, [props.value]);\n  useEffect(() => {\n    setAllowClear(!!value);\n  }, [value]);\n\n  const handleClick = (event: MouseEvent) => {\n    const targetElement = event\n      .composedPath()\n      .some((ele) => ele === contentRef.current);\n    if (!targetElement) {\n      setVisible(false);\n    }\n  };\n  const handleMouseEnter = (\n    e: React.MouseEvent<HTMLDivElement>,\n    data: OptionItem\n  ) => {\n    setCurrentData(data);\n    setTooltipVisible(true);\n    const top =\n      (e.target as HTMLDivElement).getBoundingClientRect().top -\n      contentRef.current.getBoundingClientRect().top;\n    setPositionTop(top);\n  };\n  const handleValueChange = (val: string) => {\n    setValue(val);\n    onInputChange(val);\n    setVisible(true);\n  };\n  const onClearValue = () => {\n    setValue(null);\n    onInputChange(\"\");\n    setVisible(false);\n  };\n  const TooltipBrick = useMemo(() => {\n    if (!tooltipUseBrick?.useBrick) {\n      return;\n    } else {\n      return (\n        <div\n          className=\"dropdownMenuItemTooltip\"\n          style={{\n            top: positionTop,\n            visibility: tooltipVisible ? \"visible\" : \"hidden\",\n            opacity: tooltipVisible ? 1 : 0,\n          }}\n          onMouseEnter={() => setTooltipVisible(true)}\n          onMouseLeave={() => setTooltipVisible(false)}\n        >\n          <div className=\"useBrickWrapper\">\n            <ReactUseMultipleBricks\n              useBrick={tooltipUseBrick.useBrick}\n              data={currentData || {}}\n            />\n          </div>\n        </div>\n      );\n    }\n  }, [currentData, tooltipUseBrick, positionTop, tooltipVisible]);\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n    return () => document.removeEventListener(\"click\", handleClick);\n  }, []);\n\n  return (\n    <div className=\"wrapper\" ref={contentRef}>\n      <div className=\"inputWrapper\">\n        <input\n          placeholder={placeholder}\n          value={value ?? \"\"}\n          type=\"text\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            handleValueChange(e.target.value)\n          }\n          onFocus={handleFocus}\n          onBlur={onBlur}\n          onKeyDown={handleKeyDown}\n        />\n        <WrappedIcon\n          className=\"searchIcon icon\"\n          lib=\"antd\"\n          icon=\"search\"\n          theme=\"outlined\"\n        />\n        {allowClear && (\n          <WrappedIcon\n            className=\"clearIcon icon\"\n            onClick={onClearValue}\n            lib=\"antd\"\n            icon=\"close-circle\"\n            theme=\"filled\"\n          />\n        )}\n      </div>\n      <div\n        className=\"dropdownWrapper\"\n        style={{\n          visibility: visible ? \"visible\" : \"hidden\",\n        }}\n      >\n        {options.length ? (\n          <div className=\"dropdownMenu\">\n            {options.map((option, index) => (\n              <div\n                className=\"dropdownMenuItem\"\n                key={index}\n                onMouseEnter={(e) => handleMouseEnter(e, option)}\n                onMouseLeave={() => setTooltipVisible(false)}\n                onClick={() => handleSelect(option)}\n              >\n                <WrappedIcon {...option.icon} className=\"menuIcon\" />\n                <span className=\"menuTitle\">{option.name}</span>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"emptyData\">\n            <img src={empty} alt={t(K.EMPTY_DATA)} />\n            <span>{t(K.EMPTY_DATA)}</span>\n          </div>\n        )}\n      </div>\n      {TooltipBrick}\n    </div>\n  );\n}\n\nexport { ComplexSearch };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { createDecorators, EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./loading-panel.shadow.css\";\nconst { defineElement, property, event } = createDecorators();\nimport { usePrevious } from \"../hooks/index.js\";\ninterface LoadingPanelProps {\n  loading?: boolean;\n  customTitle?: string;\n  progress?: number;\n  useRealTimeProgress?: boolean;\n  intervalTime?: number;\n  onEnd?: () => void;\n}\n\n/**\n * 大屏加载模块展示\n * @author astrid\n * @category big-screen-content\n */\n@defineElement(\"data-view.loading-panel\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass LoadingPanel extends ReactNextElement implements LoadingPanelProps {\n  /**\n   * @kind string\n   * @default -\n   * @required false\n   * @description 标题\n   */\n  @property()\n  accessor customTitle: string;\n\n  /**\n   * @kind boolean\n   * @default true\n   * @required false\n   * @description 是否加载中， 虚拟数据模拟加载过程\n   */\n  @property({ type: Boolean })\n  accessor loading: boolean;\n\n  /**\n   * @kind boolean\n   * @default false\n   * @required false\n   * @description 加载过程是否使用真实数据\n   */\n  @property({ type: Boolean })\n  accessor useRealTimeProgress: boolean = false;\n  /**\n   * @kind number\n   * @default -\n   * @required false\n   * @description 加载进度，区间[0-100]; 真实数据\n   */\n  @property({ type: Number })\n  accessor progress: number;\n\n  /**\n   * @kind number\n   * @default -\n   * @required 100\n   * @description 每次加载变化的时间间隔，单位ms\n   */\n  @property({ type: Number })\n  accessor intervalTime: number;\n\n  /**\n   * @detail\n   * @description loading结束事件\n   */\n  @event({ type: \"end\" })\n  accessor #onEndEvent!: EventEmitter<void>;\n\n  onEnd = () => {\n    this.#onEndEvent.emit();\n  };\n\n  render(): React.ReactNode {\n    return (\n      <LoadingPanelComponent\n        loading={this.loading}\n        customTitle={this.customTitle}\n        progress={this.progress}\n        useRealTimeProgress={this.useRealTimeProgress}\n        intervalTime={this.intervalTime}\n        onEnd={this.onEnd}\n      />\n    );\n  }\n}\nexport function LoadingPanelComponent(\n  props: LoadingPanelProps\n): React.ReactElement {\n  const {\n    customTitle,\n    loading,\n    progress,\n    useRealTimeProgress,\n    intervalTime = 100,\n    onEnd,\n  } = props;\n  const [progressValue, setProgressValue] = useState<number>(0);\n  const timerRef = useRef<number>(null);\n  const intervalTimer = (params: {\n    curVal: number;\n    step: number;\n    time?: number;\n  }) => {\n    const { curVal, step, time } = params;\n    let init = curVal,\n      end: number;\n    if (useRealTimeProgress) {\n      end = progress;\n    } else {\n      end = loading ? 80 : 100;\n    }\n    timerRef.current = window.setInterval(() => {\n      if (init >= end) {\n        window.clearInterval(timerRef.current);\n        init = end;\n      }\n      setProgressValue(init);\n      // 由于step未知，所以会出现 init + step > end； 这时候，我们就要取 end\n      init = init + step;\n    }, time);\n  };\n  const prevProgress = usePrevious(progress);\n  const getStep = (curVal: number, start: number, end: number): number => {\n    return curVal >= start ? 1 : Math.ceil((end - curVal) / 10);\n  };\n  useEffect(() => {\n    let step = 1;\n    if (!useRealTimeProgress && !loading) {\n      // 假数据的时候，如果 loading结束，但是 progressValue 已经到了80，那么step为1，如果小于80，可以分段考虑,保证后面的记载次数为10次完成；\n      step = getStep(progressValue, 80, 100);\n    }\n    if (useRealTimeProgress) {\n      step = getStep(progressValue, prevProgress, progress);\n    }\n    intervalTimer({\n      step: step,\n      curVal: progressValue ?? 0,\n      time: intervalTime,\n    });\n    return () => {\n      window.clearInterval(timerRef.current);\n    };\n  }, [loading, progress, useRealTimeProgress, intervalTime]);\n  useEffect(() => {\n    if (progressValue === 100) {\n      onEnd?.();\n    }\n  }, [progressValue]);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"titleWrapper\">\n        <div className=\"title\">{customTitle ?? \"Tarsier\"}</div>\n        <div className=\"description\">Loading...</div>\n      </div>\n      <div className=\"progress\">{`${progressValue}%`}</div>\n    </div>\n  );\n}\n\nexport { LoadingPanel };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport styleText from \"./particle-animation.shadow.css\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\nexport interface ColorType {\n  startColor: React.CSSProperties[\"color\"];\n  middleColor: React.CSSProperties[\"color\"];\n  endColor: React.CSSProperties[\"color\"];\n}\n\ninterface ParticleAnimationProps {\n  colors: ColorType;\n  containerStyle?: React.CSSProperties;\n}\n\n/**\n * 大屏粒子加载动效\n * @author astrid\n * @category big-screen-content\n */\n@defineElement(\"data-view.particle-animation\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass ParticleAnimation\n  extends ReactNextElement\n  implements ParticleAnimationProps\n{\n  /**\n   * @kind ColorType\n   * @default -\n   * @required true\n   * @description 颜色配置，由于光标有三段颜色，中间色段为也为特效中光点的颜色\n   */\n  @property({ attribute: false })\n  accessor colors: ColorType;\n\n  /**\n   * @kind React.CSSProperties\n   * @default -\n   * @required false\n   * @description 容器样式\n   */\n  @property({ attribute: false })\n  accessor containerStyle: React.CSSProperties;\n\n  render(): React.ReactNode {\n    return (\n      <ParticleAnimationComponent\n        colors={this.colors}\n        containerStyle={this.containerStyle}\n      />\n    );\n  }\n}\n\nexport function ParticleAnimationComponent(\n  props: ParticleAnimationProps\n): React.ReactElement {\n  const { colors, containerStyle } = props;\n  // 竖线粒子\n  const particlePositionList = [\n    {\n      h: 29,\n      w: 1,\n      left: \"10%\",\n      bottom: \"5%\",\n    },\n    {\n      h: 23,\n      w: 2,\n      left: \"45%\",\n      bottom: \"0\",\n    },\n    {\n      h: 29,\n      w: 2,\n      left: \"90%\",\n      bottom: \"20%\",\n    },\n    {\n      h: 23,\n      w: 1,\n      left: \"40%\",\n      bottom: \"20%\",\n    },\n    {\n      h: 42,\n      w: 3,\n      left: \"50%\",\n      bottom: \"30%\",\n    },\n  ];\n  // 原点粒子个数\n  const randomParticleList = new Array(8).fill(2);\n  return (\n    <div className=\"animation-wrapper\" style={containerStyle}>\n      {particlePositionList.map((particle, index) => {\n        const particleStyle = {\n          width: `${particle.w}px`,\n          height: `${particle.h}px`,\n          background: `linear-gradient(0deg,  ${colors.startColor} 0%, ${colors.middleColor} 72%,  ${colors.endColor} 100%)`,\n        };\n        return (\n          <div\n            className=\"particle-wrapper\"\n            key={index}\n            style={{\n              width: `${particle.w}px`,\n              height: `${particle.h * 2}px`,\n              bottom: particle.bottom,\n              left: particle.left,\n            }}\n          >\n            <div className=\"particle\" style={particleStyle} />\n            <div className=\"delay\" style={particleStyle} />\n          </div>\n        );\n      })}\n      <div className=\"circle-container\" style={{ color: colors.middleColor }}>\n        {randomParticleList.map((circle, index) => (\n          <div className=\"circle\" key={index} />\n        ))}\n      </div>\n      <slot />\n    </div>\n  );\n}\n\nexport { ParticleAnimation };\n","import React from \"react\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport { createDecorators } from \"@next-core/element\";\nimport styleText from \"./cabinet-button.shadow.css\";\nimport variablesStyleText from \"../../data-view-variables.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\nexport interface CabinetButtonProps {\n  buttonStyle?: React.CSSProperties;\n}\n\n/**\n * 大屏按钮\n * @author astrid\n */\n@defineElement(\"data-view.cabinet-button\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass CabinetButton extends ReactNextElement implements CabinetButtonProps {\n  /**\n   * @kind React.CSSProperties\n   * @required false\n   * @default  -\n   * @description 按钮的样式\n   */\n  @property({ attribute: false })\n  accessor buttonStyle: React.CSSProperties;\n\n  render(): React.ReactNode {\n    return <span className=\"closeBtn\" style={this.buttonStyle} />;\n  }\n}\n\nexport { CabinetButton };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../../data-view-variables.shadow.css\";\nimport styleText from \"./cabinet-node.shadow.css\";\nimport classNames from \"classnames\";\nimport virtualMachineImg from \"../../asset/images/virtualMachine.png\";\nimport physicalMachineImg from \"../../asset/images/physicalMachine.png\";\nimport containerGroupImg from \"../../asset/images/containerGroup.png\";\nimport virtualMachineWarningImg from \"../../asset/images/virtualMachineWarning.png\";\nimport physicalMachineWarningImg from \"../../asset/images/physicalMachineWarning.png\";\nimport containerGroupWarningImg from \"../../asset/images/containerGroupWarning.png\";\nimport podImg from \"../../asset/images/pod.png\";\nimport podWarningImg from \"../../asset/images/podWarning.png\";\n\nconst imageMap = {\n  \"container-group\": containerGroupImg,\n  \"virtual-machine\": virtualMachineImg,\n  \"physical-machine\": physicalMachineImg,\n  \"container-group-warning\": containerGroupWarningImg,\n  \"virtual-machine-warning\": virtualMachineWarningImg,\n  \"physical-machine-warning\": physicalMachineWarningImg,\n  pod: podImg,\n  \"pod-warning\": podWarningImg,\n};\n\nconst { defineElement, property } = createDecorators();\n\nexport interface CabinetNodeProps {\n  type: \"container-group\" | \"physical-machine\" | \"virtual-machine\" | \"pod\";\n  nodeTitle: string;\n  status?: \"active\" | \"faded\";\n  isAlert?: boolean;\n}\n\n/**\n * cabinet子构件----节点\n * @author nlicroshan\n */\n@defineElement(\"data-view.cabinet-node\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass CabinetNode extends ReactNextElement implements CabinetNodeProps {\n  /**\n   * @kind \"container-group\" | \"physical-machine\" | \"virtual-machine\"\n   * @required true\n   * @default\n   * @description 类型\n   */\n  @property()\n  accessor type:\n    | \"container-group\"\n    | \"physical-machine\"\n    | \"virtual-machine\"\n    | \"pod\";\n\n  /**\n   * @kind string\n   * @required true\n   * @default\n   * @description 标题\n   */\n  @property()\n  accessor nodeTitle: string;\n\n  /**\n   * @kind \"active\" | \"faded\"\n   * @required false\n   * @default\n   * @description 当前状态\n   */\n  @property()\n  accessor status: \"active\" | \"faded\";\n\n  /**\n   * @kind boolean\n   * @required false\n   * @default\n   * @description 是否是告警态\n   */\n  @property({ type: Boolean })\n  accessor isAlert: boolean;\n\n  render() {\n    return (\n      <CabinetNodeElement\n        type={this.type}\n        nodeTitle={this.nodeTitle}\n        status={this.status}\n        isAlert={this.isAlert}\n      />\n    );\n  }\n}\n\nfunction CabinetNodeElement(props: CabinetNodeProps): React.ReactElement {\n  const { type, nodeTitle, status, isAlert } = props;\n\n  return (\n    <div\n      className={classNames(\n        \"container\",\n        type && `type-${type}`,\n        status && `status-${status}`\n      )}\n    >\n      <img\n        className=\"image\"\n        src={imageMap[`${type}${isAlert ? \"-warning\" : \"\"}`]}\n        alt={type}\n      />\n      <div className=\"node-title\" title={nodeTitle}>\n        {nodeTitle}\n      </div>\n    </div>\n  );\n}\n\nexport { CabinetNode };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../../data-view-variables.shadow.css\";\nimport styleText from \"./cabinet-app-layer.shadow.css\";\nimport classNames from \"classnames\";\n\nconst { defineElement, property } = createDecorators();\n\nexport interface CabinetAppLayerProps {\n  appTitle: string;\n  status?: \"active\" | \"faded\";\n}\n\n/**\n * cabinet子构件----应用层\n * @author nlicroshan\n */\n@defineElement(\"data-view.cabinet-app-layer\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass CabinetAppLayer extends ReactNextElement implements CabinetAppLayerProps {\n  /**\n   * @kind string\n   * @required true\n   * @default\n   * @description 标题\n   */\n  @property()\n  accessor appTitle: string;\n\n  /**\n   * @kind \"active\" | \"faded\"\n   * @required false\n   * @default\n   * @description 当前状态\n   */\n  @property()\n  accessor status: \"active\" | \"faded\";\n\n  render() {\n    return (\n      <CabinetAppLayerElement appTitle={this.appTitle} status={this.status} />\n    );\n  }\n}\n\nfunction CabinetAppLayerElement(\n  props: CabinetAppLayerProps\n): React.ReactElement {\n  const { appTitle, status } = props;\n\n  return (\n    <div className={classNames(\"container\", status && `status-${status}`)}>\n      <div className=\"app-title\" title={appTitle}>\n        {appTitle}\n      </div>\n      <div className=\"divider\" />\n    </div>\n  );\n}\n\nexport { CabinetAppLayer };\n","import React, { useCallback, useMemo, useRef } from \"react\";\nimport { ReactNextElement, wrapBrick } from \"@next-core/react-element\";\nimport { createDecorators, EventEmitter } from \"@next-core/element\";\nimport variablesText from \"../../data-view-variables.shadow.css\";\nimport styleText from \"./cabinet-container.shadow.css\";\nimport classNames from \"classnames\";\nimport { CabinetNodeProps, CabinetNode } from \"../cabinet-node/index.js\";\nimport { useResizeObserver } from \"../../hooks/index.js\";\n\nconst { defineElement, property, event } = createDecorators();\nexport type ContainerType = \"host\" | \"k8s\" | \"k8s-blue\";\nconst WrappedNode = wrapBrick<CabinetNode, CabinetNodeProps>(\n  \"data-view.cabinet-node\"\n);\nexport interface ClickEventDataType {\n  type: \"node\" | \"container\";\n  data: CabinetNodeProps | undefined;\n}\n\nexport interface CabinetContainerProps {\n  data: CabinetNodeProps[];\n  type?: ContainerType;\n  customTitle?: string | undefined;\n  status?: \"active\" | \"faded\";\n  handleClick?: (params: ClickEventDataType) => void;\n  handleDbClick?: (params: ClickEventDataType) => void;\n}\n\n/**\n * 大屏集群容器构件\n * @author astrid\n */\n@defineElement(\"data-view.cabinet-container\", {\n  styleTexts: [variablesText, styleText],\n})\nclass CabinetContainer\n  extends ReactNextElement\n  implements CabinetContainerProps\n{\n  /**\n   * @kind ContainerType\n   * @required true\n   * @default  host\n   * @description 容器类型，host、k8s（主题橙色）、k8s-blue（蓝色主题）\n   */\n  @property({ attribute: false })\n  accessor type: ContainerType = \"host\";\n\n  /**\n   * @kind CabinetNodeProps[]\n   * @required true\n   * @default  -\n   * @description 数据\n   */\n  @property({ attribute: false })\n  accessor data: CabinetNodeProps[] = [];\n\n  /**\n   * @kind \"active\" | \"faded\"\n   * @required false\n   * @default\n   * @description 当前状态,是否高亮或者淡化\n   */\n  @property()\n  accessor status: \"active\" | \"faded\";\n\n  /**\n   * @kind string|undefined\n   * @required false\n   * @default -\n   * @description 容器标题\n   */\n  @property()\n  accessor customTitle: string | undefined;\n\n  /**\n   * @detail\n   * @description 节点或者container 点击事件\n   */\n  @event({ type: \"container.click\" })\n  accessor #onHandleClick!: EventEmitter<ClickEventDataType>;\n\n  /**\n   * @detail\n   * @description 节点或者container 双击击事件\n   */\n  @event({ type: \"container.dbclick\" })\n  accessor #onHandleDbClick!: EventEmitter<ClickEventDataType>;\n\n  handleClick = (params: ClickEventDataType) => {\n    this.#onHandleClick.emit(params);\n  };\n  handleDbClick = (params: ClickEventDataType) => {\n    this.#onHandleDbClick.emit(params);\n  };\n\n  render(): React.ReactNode {\n    return (\n      <CabinetContainerComponent\n        type={this.type}\n        data={this.data}\n        status={this.status}\n        customTitle={this.customTitle}\n        handleClick={this.handleClick}\n        handleDbClick={this.handleDbClick}\n      />\n    );\n  }\n}\n\nexport function CabinetContainerComponent(\n  props: CabinetContainerProps\n): React.ReactElement {\n  const { type, data, status, customTitle, handleClick, handleDbClick } = props;\n  const isDbClick = useRef<boolean>(false);\n  const timerRef = useRef<number>();\n\n  const [containerRef, { clientWidth, clientHeight }] =\n    useResizeObserver<HTMLDivElement>();\n  const binarySearch = useCallback(\n    (\n      maxSizeCol: number,\n      minSizeCol: number,\n      maxSizeRow: number,\n      minSizeRow: number\n    ): { col: number; row: number } => {\n      // 利用二分法，去找到一个合适大小；\n      const maxRow = Math.max(minSizeRow, maxSizeRow), // 2\n        minRow = Math.min(minSizeRow, maxSizeRow), // 1\n        minCol = Math.min(minSizeCol, maxSizeCol),\n        maxCol = Math.max(minSizeCol, maxSizeCol);\n      const centerCol = Math.ceil((maxSizeCol + minSizeCol) / 2); // 希望col多一些\n      const centerRow = Math.ceil((maxSizeRow + minSizeRow) / 2);\n      const needRow = Math.ceil(data.length / centerCol);\n      if (centerCol <= 1) {\n        return {\n          col: 1,\n          row: data.length,\n        };\n      }\n      if (\n        needRow === centerRow ||\n        minCol === maxCol ||\n        minCol === centerCol ||\n        maxCol === centerCol\n      ) {\n        return {\n          col: centerCol,\n          row: needRow,\n        };\n      }\n      if (needRow > centerRow) {\n        // 那么col要放大，row减少\n        return binarySearch(centerCol, maxCol, needRow, minRow);\n      }\n      if (needRow < centerRow) {\n        // 那么col要缩小，row增加\n        return binarySearch(minCol, centerCol, maxRow, needRow);\n      }\n    },\n    [data.length]\n  );\n  const layoutWidth = useMemo(() => {\n    if (!data.length) {\n      return;\n    }\n\n    //数据总量： A， 整个屏幕最大尺寸可以放 B, 整个屏幕最小尺寸可以放C,\n    // B>=A,用 最大尺寸\n    // C>=A: 用最小尺寸\n    // B< A <C: 反推尺寸,\n    const maxWidth = 118,\n      minWidth = 56,\n      maxHeight = 105,\n      minHeight = 63;\n    const realWidth = clientWidth - 27;\n    const realHeight = clientHeight - 84;\n    if (realWidth <= 0 || realHeight <= 0) {\n      return;\n    }\n    const maxSizeCol = Math.floor(realWidth / maxWidth),\n      maxSizeRow = Math.floor(realHeight / maxHeight),\n      minSizeCol = Math.floor(realWidth / minWidth),\n      minSizeRow = Math.floor(realHeight / minHeight);\n    const maxSizeNum = maxSizeCol * maxSizeRow,\n      minSizeNum = minSizeCol * minSizeRow;\n    const allNum = data.length;\n    if (allNum <= maxSizeNum) {\n      return {\n        width: Math.floor(realWidth / maxSizeCol),\n        itemWidth: maxWidth,\n      };\n    } else if (allNum >= minSizeNum) {\n      return {\n        width: Math.floor(realWidth / minSizeCol),\n        itemWidth: minWidth,\n      };\n    } else {\n      // 在区间内， 希望撑满整个屏幕, 尺寸肯定在最大和最小之间\n      const { col } = binarySearch(\n        maxSizeCol,\n        minSizeCol,\n        maxSizeRow,\n        minSizeRow\n      );\n      return {\n        width: Math.floor(realWidth / col),\n        itemWidth: Math.max(realWidth / col - 10, minWidth),\n      };\n    }\n  }, [data.length, clientWidth, clientHeight, binarySearch]);\n\n  const handleOnClick = (\n    e: React.MouseEvent<HTMLDivElement>,\n    data: CabinetNodeProps | undefined,\n    type: \"node\" | \"container\"\n  ) => {\n    e.stopPropagation();\n    window.clearTimeout(timerRef.current);\n    isDbClick.current = false;\n    timerRef.current = window.setTimeout(function () {\n      if (!isDbClick.current) {\n        handleClick?.({\n          data,\n          type,\n        });\n      }\n    }, 200);\n  };\n  const handleOnDBClick = (\n    e: React.MouseEvent<HTMLDivElement>,\n    data: CabinetNodeProps | undefined,\n    type: \"node\" | \"container\"\n  ) => {\n    window.clearTimeout(timerRef.current);\n    isDbClick.current = true;\n    e.stopPropagation();\n    handleDbClick?.({\n      data,\n      type,\n    });\n  };\n\n  return (\n    <div\n      className={classNames(\n        \"wrapper\",\n        {\n          hostWrapper: type === \"host\" || type === \"k8s-blue\",\n          k8sWrapper: type === \"k8s\",\n        },\n        status && `wrapper-${status}`\n      )}\n      ref={containerRef}\n      onClick={(e) => handleOnClick(e, undefined, \"container\")}\n      onDoubleClick={(e) => handleOnDBClick(e, undefined, \"container\")}\n    >\n      <div\n        className={classNames(\n          \"container\",\n          {\n            hostContainer: type === \"host\" || type === \"k8s-blue\",\n            k8sContainer: type === \"k8s\",\n          },\n          status && `container-${status}`\n        )}\n      >\n        <div className=\"content\">\n          <div className=\"contentLayout\">\n            {data.map((item, index) => (\n              <div\n                key={index}\n                className=\"itemContent\"\n                style={{ width: layoutWidth?.width }}\n              >\n                <div\n                  className=\"item\"\n                  style={{ width: layoutWidth?.itemWidth }}\n                  onClick={(e) => handleOnClick(e, item, \"node\")}\n                  onDoubleClick={(e) => handleOnDBClick(e, item, \"node\")}\n                >\n                  <WrappedNode\n                    type={item.type}\n                    nodeTitle={item.nodeTitle}\n                    status={item.status}\n                    isAlert={item.isAlert}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        {customTitle && (\n          <div className=\"footer\">\n            <div className=\"footerTitle\">{customTitle}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { CabinetContainer };\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { ReactNextElement, wrapBrick } from \"@next-core/react-element\";\nimport { createDecorators } from \"@next-core/element\";\nimport classNames from \"classnames\";\nimport { CabinetNode, CabinetNodeProps } from \"../cabinet-node/index.js\";\nimport { ContainerType } from \"../cabinet-container/index.js\";\nimport variablesText from \"../../data-view-variables.shadow.css\";\nimport styleText from \"./cabinet-thumbnail.shadow.css\";\nimport { usePrevious } from \"../../hooks/index.js\";\nimport {\n  CabinetAppLayer,\n  CabinetAppLayerProps,\n} from \"../cabinet-app-layer/index.js\";\nconst WrappedCabinetAppLayer = wrapBrick<CabinetAppLayer, CabinetAppLayerProps>(\n  \"data-view.cabinet-app-layer\"\n);\nconst { defineElement, property } = createDecorators();\n\nconst WrappedNode = wrapBrick<CabinetNode, CabinetNodeProps>(\n  \"data-view.cabinet-node\"\n);\nexport interface Clusters {\n  data: CabinetNodeProps[];\n  type?: ContainerType;\n  title?: string | undefined;\n}\n\nexport interface CabinetThumbnailProps {\n  clusters: Clusters[];\n  appName: string;\n  columns?: number;\n}\n\n/**\n * 应用墙缩略图\n * @author astrid\n */\n@defineElement(\"data-view.cabinet-thumbnail\", {\n  styleTexts: [variablesText, styleText],\n})\nclass CabinetThumbnail\n  extends ReactNextElement\n  implements CabinetThumbnailProps\n{\n  /**\n   * @kind CabinetContainerProps[]\n   * @required true\n   * @default\n   * @description 集群数据\n   */\n  @property({ attribute: false })\n  accessor clusters: Clusters[] = [];\n\n  /**\n   * @kind number\n   * @required\n   * @default 4\n   * @description 单个容器列数\n   */\n  @property({ type: Number })\n  accessor columns: number = 4;\n\n  /**\n   * @kind string\n   * @required true\n   * @default\n   * @description 应用名称\n   */\n  @property()\n  accessor appName: string;\n\n  render(): React.ReactNode {\n    return (\n      <CabinetThumbnailComponent\n        clusters={this.clusters}\n        columns={this.columns}\n        appName={this.appName}\n      />\n    );\n  }\n}\n\nexport function CabinetThumbnailComponent(\n  props: CabinetThumbnailProps\n): React.ReactElement {\n  const { clusters, columns, appName } = props;\n  const containerRef = useRef<HTMLDivElement>();\n  const layoutRef = useRef<HTMLDivElement>();\n  const [scale, setScale] = useState<number>();\n  const preScale = usePrevious(scale);\n\n  useLayoutEffect(() => {\n    if (!!clusters.length && columns > 0) {\n      // 计算缩放比例\n      const wScale =\n        containerRef.current.clientWidth /\n        (layoutRef.current.clientWidth / (preScale ?? 1));\n      const hScale =\n        containerRef.current.clientHeight /\n        (layoutRef.current.clientHeight * (preScale ?? 1));\n      setScale(Math.min(Math.floor(Math.min(wScale, hScale) * 100) / 100, 1));\n    }\n  }, [clusters, preScale, columns]);\n\n  return (\n    <div ref={containerRef} className=\"wrapper\">\n      <div\n        className=\"thumbnailLayout\"\n        ref={layoutRef}\n        style={{\n          ...(scale ? { transform: `scale(${scale})` } : {}),\n        }}\n      >\n        <WrappedCabinetAppLayer className=\"appLayer\" appTitle={appName} />\n        <div className=\"layout\">\n          {clusters.map((item, index) => (\n            <div className=\"clusterWrapper\" key={index}>\n              <div\n                className={classNames(\"clusterContainer\", {\n                  clusterHostContainer:\n                    item.type === \"host\" || item.type === \"k8s-blue\",\n                  clusterK8sContainer: item.type === \"k8s\",\n                })}\n              >\n                <div className=\"clusterContent\">\n                  <div\n                    className=\"clusterContentLayout\"\n                    style={{ gridTemplateColumns: `repeat(${columns},1fr)` }}\n                  >\n                    {item.data.map((node, index) => (\n                      <div key={index} className=\"itemContent\">\n                        <WrappedNode\n                          type={node.type}\n                          nodeTitle={node.nodeTitle}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <div className=\"clusterTitle\">\n                  <div className=\"title\">{item.title}</div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport { CabinetThumbnail };\n","import React, { useMemo } from \"react\";\nimport { EventEmitter, createDecorators } from \"@next-core/element\";\nimport { ReactNextElement, wrapBrick } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./cabinet.shadow.css\";\nimport type {\n  CabinetAppLayer,\n  CabinetAppLayerProps,\n} from \"./cabinet-app-layer/index.jsx\";\nimport type {\n  CabinetButton,\n  CabinetButtonProps,\n} from \"./cabinet-button/index.jsx\";\nimport type {\n  CabinetContainer,\n  CabinetContainerProps,\n} from \"./cabinet-container/index.jsx\";\n\nconst WrappedCabinetAppLayer = wrapBrick<CabinetAppLayer, CabinetAppLayerProps>(\n  \"data-view.cabinet-app-layer\"\n);\nconst WrappedCabinetButton = wrapBrick<CabinetButton, CabinetButtonProps>(\n  \"data-view.cabinet-button\"\n);\nconst WrappedCabinetContainer = wrapBrick<\n  CabinetContainer,\n  CabinetContainerProps\n>(\"data-view.cabinet-container\");\n\nconst { defineElement, property, event } = createDecorators();\n\ninterface Node {\n  nodeTitle: string;\n  key: string;\n  type: \"container-group\" | \"physical-machine\" | \"virtual-machine\";\n  isAlert?: boolean;\n}\n\ninterface Clusters {\n  clusterName: string;\n  key: string;\n  type: \"host\" | \"k8s\" | \"k8s-blue\";\n  nodes: Node[];\n}\n\nexport interface AppData {\n  appName: string;\n  key: string;\n  clusters: Clusters[];\n}\ntype ChangeType = \"node\" | \"cluster\" | \"layer\";\n\nexport interface CabinetGraphProps {\n  dataSource: AppData;\n  activeKey?: string | string[];\n  hiddenCloseBtn?: boolean;\n  onCloseBtnClick?: () => void;\n  onActiveKeyChange?: (\n    key: string,\n    type?: ChangeType,\n    data?: Record<string, any>\n  ) => void;\n  handleDbClick?: (\n    key: string,\n    type?: ChangeType,\n    data?: Record<string, any>\n  ) => void;\n}\n\n/**\n * cabinet 部署架构拓扑\n * @author nlicroshan\n * @category big-screen-content\n */\n@defineElement(\"data-view.cabinet-graph\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass CabinetGraph extends ReactNextElement implements CabinetGraphProps {\n  /**\n   * @kind AppData\n   * @required true\n   * @default\n   * @description 数据源\n   */\n  @property({\n    attribute: false,\n  })\n  accessor dataSource: AppData;\n\n  /**\n   * @kind string |string[]\n   * @required false\n   * @default\n   * @description 选中项， 支持数组\n   */\n  @property({ attribute: false })\n  accessor activeKey: string | string[];\n\n  /**\n   * @kind boolean\n   * @required false\n   * @default true\n   * @description 取消按钮是否需要展示\n   */\n  @property({ type: Boolean })\n  accessor hiddenCloseBtn: boolean;\n\n  /**\n   * @detail\n   * @description 关闭按钮点击事件\n   */\n  @event({ type: \"close.button.click\" })\n  accessor #closeBtnClickEvent!: EventEmitter<void>;\n\n  /**\n   * @detail\n   * @description 节点或者外层的点击的事件\n   */\n  @event({ type: \"cabinet.click\" })\n  accessor #cabinetClickEvent!: EventEmitter<{\n    type: ChangeType;\n    data: Record<string, any>;\n  }>;\n\n  /**\n   * @detail\n   * @description 节点或者外层的双击的事件，目前不支持应用层\n   */\n  @event({ type: \"cabinet.dbclick\" })\n  accessor #cabinetDbClickEvent!: EventEmitter<{\n    type: ChangeType;\n    data: Record<string, any>;\n  }>;\n\n  #handleCloseBtnClick = (): void => {\n    this.#closeBtnClickEvent.emit();\n  };\n  #handleDbClick = (\n    newKey: string,\n    type: ChangeType,\n    data?: Record<string, any>\n  ): void => {\n    this.activeKey = newKey;\n    if (newKey) {\n      this.#cabinetDbClickEvent.emit({\n        type,\n        data,\n      });\n    }\n  };\n\n  #handleActiveKeyChange = (\n    newKey: string,\n    type: ChangeType,\n    data?: Record<string, any>\n  ) => {\n    this.activeKey = newKey;\n    if (newKey) {\n      this.#cabinetClickEvent.emit({\n        type,\n        data,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CabinetGraphElement\n        activeKey={this.activeKey}\n        dataSource={this.dataSource}\n        onCloseBtnClick={this.#handleCloseBtnClick}\n        onActiveKeyChange={this.#handleActiveKeyChange}\n        handleDbClick={this.#handleDbClick}\n        hiddenCloseBtn={this.hiddenCloseBtn}\n      />\n    );\n  }\n}\n\nfunction CabinetGraphElement(props: CabinetGraphProps): React.ReactElement {\n  const {\n    dataSource,\n    activeKey,\n    onCloseBtnClick,\n    onActiveKeyChange,\n    handleDbClick,\n    hiddenCloseBtn,\n  } = props;\n  const activeKeys = useMemo(() => {\n    return [].concat(activeKey);\n  }, [activeKey]);\n  //过滤 activeKey 有效数据 & 已经去除layer层的高亮数据，由于layer 高亮，所有都需要展示\n  const filterKeys = useMemo(() => {\n    const keys: string[] = [];\n    dataSource.clusters.map((clu) => {\n      if (activeKeys.includes(clu.key)) {\n        keys.push(clu.key);\n      }\n      clu.nodes.map((node) => {\n        if (activeKeys.includes(node.key)) {\n          keys.push(node.key);\n        }\n      });\n    });\n    return keys;\n  }, [dataSource, activeKeys]);\n\n  return (\n    <div\n      className=\"wrapper\"\n      onClick={() => {\n        onActiveKeyChange(null);\n      }}\n    >\n      <div className=\"container\">\n        <WrappedCabinetAppLayer\n          className=\"app-layer\"\n          appTitle={dataSource.appName}\n          onClick={(e) => {\n            e.stopPropagation();\n            onActiveKeyChange(dataSource.key, \"layer\");\n          }}\n          status={activeKeys.includes(dataSource.key) ? \"active\" : undefined}\n        />\n        <div\n          className=\"cluster-container\"\n          style={{\n            gridTemplateColumns: `repeat(${dataSource.clusters.length}, 1fr)`,\n          }}\n        >\n          {dataSource.clusters.map((clu) => {\n            const includeClu = filterKeys.includes(clu.key);\n            return (\n              <WrappedCabinetContainer\n                key={clu.key}\n                type={clu.type}\n                className=\"cluster-content\"\n                customTitle={clu.clusterName}\n                data={clu.nodes.map((node) => {\n                  const includeNode = filterKeys.includes(node.key);\n                  return {\n                    nodeTitle: node.nodeTitle,\n                    type: node.type,\n                    key: node.key,\n                    isAlert: node.isAlert,\n                    status:\n                      includeNode || includeClu\n                        ? includeClu\n                          ? undefined\n                          : \"active\"\n                        : filterKeys.length\n                        ? \"faded\"\n                        : undefined,\n                  };\n                })}\n                handleClick={({ type, data }) => {\n                  switch (type) {\n                    case \"container\": {\n                      onActiveKeyChange(clu.key, \"cluster\", clu);\n                      break;\n                    }\n                    case \"node\": {\n                      onActiveKeyChange((data as any).key, \"node\", data);\n                      break;\n                    }\n                  }\n                }}\n                status={(() => {\n                  const includeNode = clu.nodes.some((node) =>\n                    filterKeys.includes(node.key)\n                  );\n                  return includeNode || includeClu\n                    ? includeClu\n                      ? \"active\"\n                      : undefined\n                    : filterKeys.length\n                    ? \"faded\"\n                    : undefined;\n                })()}\n                handleDbClick={({ type, data }) => {\n                  switch (type) {\n                    case \"container\": {\n                      handleDbClick(clu.key, \"cluster\", clu);\n                      break;\n                    }\n                    case \"node\": {\n                      handleDbClick((data as any).key, \"node\", data);\n                      break;\n                    }\n                  }\n                }}\n              />\n            );\n          })}\n        </div>\n        {!hiddenCloseBtn && (\n          <WrappedCabinetButton\n            className=\"close-button\"\n            onClick={(e) => {\n              e.stopPropagation();\n              onCloseBtnClick?.();\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { CabinetGraph };\n","import React from \"react\";\nimport { createDecorators, type EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./app-wall.shadow.css\";\nimport { AppWallElement } from \"./app-wall.js\";\nimport type { AppData, Relation } from \"./utils.js\";\nimport { AppWallCardBrickNameType, CardSize } from \"./interface.js\";\n\nconst { defineElement, property, event } = createDecorators();\n\nexport interface AppWallProps {\n  cardSize: CardSize;\n  dataSource: AppData[];\n  relations: Relation[];\n  useDblclick?: boolean;\n  useDistanceConfig?: boolean;\n  onSystemCardButtonClick?: (data: AppData) => void;\n  leftBtnOnClick?: (data: AppData) => void;\n  rightBtnOnClick?: (data: AppData) => void;\n  handleCardDbClick?: (data: AppData) => void;\n  disabledDefaultClickEvent?: boolean;\n  handleCardClick?: (data: AppData) => void;\n  cardBrickName: AppWallCardBrickNameType; // 支持更多种类，需要在dependencies内增加引入增加的类型\n  containerId?: string;\n  noRotate?: boolean;\n  boundMargin?: number;\n  useSystemPopover?: boolean;\n}\n\n/**\n * 应用墙\n * @author nlicroshan\n * @category big-screen-layout\n */\n@defineElement(\"data-view.app-wall\", {\n  styleTexts: [variablesStyleText, styleText],\n  dependencies: [\n    \"data-view.app-wall-card-item\",\n    \"data-view.cabinet-thumbnail\",\n    \"data-view.simple-card-item\",\n    \"monitoring.sys-popover\",\n  ],\n})\nclass AppWall extends ReactNextElement implements AppWallProps {\n  /**\n   *  数据\n   */\n  @property({\n    attribute: false,\n  })\n  accessor dataSource: AppData[];\n\n  /**\n   *  关系\n   */\n  @property({\n    attribute: false,\n  })\n  accessor relations: Relation[];\n\n  /**\n   *  是否使用双击事件，开启之后卡片不会触发内部dblclick事件展示梯台\n   */\n  @property({\n    attribute: false,\n  })\n  accessor useDblclick: boolean;\n\n  /**\n   * 是否使用内置的distanceConfig配置\n   */\n  @property({\n    attribute: false,\n  })\n  accessor useDistanceConfig: boolean;\n\n  /**\n   *  是否禁用触发默认单击事件，开启之后卡片不会触发内部click事件展示卡片，直接跑出了点击事件\n   */\n  @property({\n    attribute: false,\n  })\n  accessor disabledDefaultClickEvent: boolean;\n\n  /**\n   *  卡的大小配置，注意这里卡片大小宽高将影响T台大小展示\n   */\n  @property({\n    attribute: false,\n  })\n  accessor cardSize: CardSize = {\n    width: 120,\n    height: 160,\n    outerWidth: 140,\n    outerHeight: 180,\n    lgWidth: 180,\n    lgHeight: 240,\n  };\n\n  /**\n   *  卡片支持的构件类型\n   */\n  @property({\n    attribute: false,\n  })\n  accessor cardBrickName: AppWallCardBrickNameType =\n    \"data-view.app-wall-card-item\";\n\n  /**\n   *  容器id，用于监听容器大小\n   */\n  @property()\n  accessor containerId: string;\n  /**\n   *  控制是否旋转\n   */\n  @property({ type: Boolean })\n  accessor noRotate: boolean;\n\n  /**\n   *  四周的边距\n   */\n  @property({ type: Number })\n  accessor boundMargin: number = 100;\n\n  /**\n   *  是否使用系统卡片popover\n   */\n  @property({ attribute: false })\n  accessor useSystemPopover: boolean;\n\n  /**\n   *  详情卡片点击事件\n   */\n  @event({ type: \"system.card.button.click\" })\n  accessor #systemCardButtonClickEvent!: EventEmitter<AppData>;\n\n  #handleSystemCardButtonClick = (data: AppData): void => {\n    this.#systemCardButtonClickEvent.emit(data);\n  };\n  /**\n   * @detail\n   * @description 展示台左边按钮点击\n   */\n  @event({ type: \"left.btn.click\" })\n  accessor #onLeftClickEvent!: EventEmitter<AppData>;\n\n  /**\n   * @detail\n   * @description 展示台左边按钮点击\n   */\n  @event({ type: \"right.btn.click\" })\n  accessor #onRightClickEvent!: EventEmitter<AppData>;\n\n  /**\n   * @detail\n   * @description 卡片双击事件,useDblclick:true 或者当前节点clusters属性无数据的时候也会触发\n   */\n  @event({ type: \"on.card.dbclick\" })\n  accessor #onDbClickEvent!: EventEmitter<AppData>;\n\n  /**\n   * @detail\n   * @description 卡片单击事件, disabledDefaultClickEvent:true 点击卡片触发\n   */\n  @event({ type: \"card.click\" })\n  accessor #onClickEvent!: EventEmitter<AppData>;\n\n  handleLeftClick = (data: AppData) => {\n    this.#onLeftClickEvent.emit(data);\n  };\n  handleRightClick = (data: AppData) => {\n    this.#onRightClickEvent.emit(data);\n  };\n  handleCardDbClick = (data: AppData) => {\n    this.#onDbClickEvent.emit(data);\n  };\n  handleCardClick = (data: AppData) => {\n    this.#onClickEvent.emit(data);\n  };\n\n  render() {\n    return (\n      <AppWallElement\n        dataSource={this.dataSource}\n        relations={this.relations}\n        onSystemCardButtonClick={this.#handleSystemCardButtonClick}\n        useDblclick={this.useDblclick}\n        useDistanceConfig={this.useDistanceConfig}\n        leftBtnOnClick={this.handleLeftClick}\n        rightBtnOnClick={this.handleRightClick}\n        handleCardDbClick={this.handleCardDbClick}\n        disabledDefaultClickEvent={this.disabledDefaultClickEvent}\n        handleCardClick={this.handleCardClick}\n        cardSize={this.cardSize}\n        cardBrickName={this.cardBrickName}\n        containerId={this.containerId}\n        noRotate={this.noRotate}\n        boundMargin={this.boundMargin}\n        useSystemPopover={this.useSystemPopover}\n      />\n    );\n  }\n}\n\nexport { AppWall };\n","export enum K {\n  SYMBOL = \"SYMBOL\",\n}\n\nconst en: Locale = {\n  SYMBOL: \":\",\n};\n\nconst zh: Locale = {\n  SYMBOL: \"：\",\n};\n\nexport const NS = \"bricks/data-view/graph/text\";\n\nexport const locales = { en, zh };\n\ntype Locale = { [key in K]: string };\n","import React from \"react\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport { createDecorators } from \"@next-core/element\";\nimport variablesStyleText from \"../../data-view-variables.shadow.css\";\nimport styleText from \"./graph-text.shadow.css\";\nimport { K, NS, locales } from \"./i18n.js\";\nimport { useTranslation, initializeReactI18n } from \"@next-core/i18n/react\";\ninitializeReactI18n(NS, locales);\nconst { defineElement, property } = createDecorators();\nexport interface GraphTextProps {\n  text: string;\n  value: string | number;\n}\n\n/**\n * Graph text\n * @author astrid\n * @category big-screen-content\n */\n@defineElement(\"data-view.graph-text\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass GraphText extends ReactNextElement implements GraphTextProps {\n  /**\n   * @kind string\n   * @default -\n   * @required true\n   * @description 文本标题\n   */\n  @property()\n  accessor text: string;\n\n  /**\n   * @kind string|number\n   * @default -\n   * @required  true\n   * @description 文本值\n   */\n  @property()\n  accessor value: string | number;\n\n  render(): React.ReactNode {\n    return <GraphTextComponent text={this.text} value={this.value} />;\n  }\n}\n\nexport function GraphTextComponent(props: GraphTextProps): React.ReactElement {\n  const { t } = useTranslation(NS);\n  return (\n    <div className=\"content\">\n      <span className=\"text\">{props.text}</span>\n      <span className=\"symbol\">{t(K.SYMBOL)}</span>\n      <span className=\"value\">{props.value}</span>\n    </div>\n  );\n}\n\nexport { GraphText };\n","import React from \"react\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport { createDecorators } from \"@next-core/element\";\nimport baseImg from \"../../asset/images/base.png\";\nimport variablesStyleText from \"../../data-view-variables.shadow.css\";\nimport styleText from \"./graph-node.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\nexport interface GraphNodeProps {\n  url: string;\n}\n\n/**\n * Graph Node\n * @author astrid\n * @category big-screen-content\n */\n@defineElement(\"data-view.graph-node\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass GraphNode extends ReactNextElement implements GraphNodeProps {\n  //\n  /**\n   * @kind string\n   * @default -\n   * @required true\n   * @description 图片路径\n   */\n  @property()\n  accessor url: string;\n\n  render(): React.ReactNode {\n    return <GraphNodeComponent url={this.url} />;\n  }\n}\n\nexport function GraphNodeComponent(props: GraphNodeProps): React.ReactElement {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"node\">\n        <img src={props.url} alt=\"node-image\" />\n      </div>\n      <img src={baseImg} alt=\"base-image\" />\n    </div>\n  );\n}\n\nexport { GraphNode };\n","import React, { useMemo } from \"react\";\nimport { ReactNextElement, wrapBrick } from \"@next-core/react-element\";\nimport { createDecorators } from \"@next-core/element\";\nimport variablesStyleText from \"../../data-view-variables.shadow.css\";\nimport styleText from \"./graph-layout-grid.shadow.css\";\nimport { GraphNode, GraphNodeProps } from \"../node/index.js\";\nimport { GraphText, GraphTextProps } from \"../text/index.js\";\n\nconst { defineElement, property } = createDecorators();\n\nconst WrappedGraphNode = wrapBrick<GraphNode, GraphNodeProps>(\n  \"data-view.graph-node\"\n);\nconst WrappedGraphText = wrapBrick<GraphText, GraphTextProps>(\n  \"data-view.graph-text\"\n);\n\nexport type DataSourceType = GraphTextProps & GraphNodeProps;\nexport interface GraphLayoutGridProps {\n  columns: number;\n  rows: number;\n\n  dataSource?: DataSourceType[];\n  isReverse?: boolean;\n}\n\n/**\n * Graph grid 布局\n * @author astrid\n * @category big-screen-content\n */\n@defineElement(\"data-view.graph-layout-grid\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass GraphLayoutGrid extends ReactNextElement implements GraphLayoutGridProps {\n  /**\n   * @kind number\n   * @default -\n   * @required true\n   * @description 布局的列数\n   */\n  @property({ type: Number })\n  accessor columns: number;\n\n  /**\n   * @kind number\n   * @default -\n   * @required true\n   * @description 布局的行数\n   */\n  @property({ type: Number })\n  accessor rows: number;\n\n  /**\n   * @kind boolean\n   * @default -\n   * @required false\n   * @description 布局是否反转， 默认排布方式是: 奇数行位置13579...，偶数行是02468...,isReverse为true后，偶数行位置13579...，奇数行是02468...\n   */\n  @property({ type: Boolean })\n  accessor isReverse: boolean;\n\n  /**\n   * @kind DataSourceType[]\n   * @default -\n   * @required  false\n   * @description 数据源\n   */\n  @property({ attribute: false })\n  accessor dataSource: DataSourceType[];\n\n  render(): React.ReactNode {\n    return (\n      <GraphLayoutGridComponent\n        rows={this.rows}\n        columns={this.columns}\n        isReverse={this.isReverse}\n        dataSource={this.dataSource}\n      />\n    );\n  }\n}\n\nexport function GraphLayoutGridComponent(\n  props: GraphLayoutGridProps\n): React.ReactElement {\n  const { rows, columns, isReverse, dataSource } = props;\n  const layoutItems = useMemo(() => {\n    const items = [];\n    for (let i = 1; i <= rows; i++) {\n      for (let j = 1; j <= columns; j++) {\n        if (\n          (isReverse &&\n            ((i % 2 === 1 && j % 2 === 1) || (i % 2 === 0 && j % 2 === 0))) ||\n          (!isReverse &&\n            ((i % 2 === 1 && j % 2 === 0) || (i % 2 === 0 && j % 2 === 1)))\n        ) {\n          // isReverse : true 偶数行位置13579...，奇数行是02468..\n          // isReverse : false 奇数行位置13579...，偶数行是02468...\n          const curData: DataSourceType = dataSource?.[items.length];\n          items.push(\n            <div\n              key={`${i}-${j}`}\n              className=\"item\"\n              style={{\n                gridArea: `${i} / ${j % columns || columns} /${i} / ${\n                  j % columns || columns\n                }`,\n              }}\n            >\n              {curData && (\n                <React.Fragment>\n                  <WrappedGraphText\n                    text={curData.text}\n                    value={curData.value}\n                    className=\"text\"\n                  />\n                  <WrappedGraphNode url={curData.url} className=\"node\" />\n                </React.Fragment>\n              )}\n            </div>\n          );\n        }\n      }\n    }\n    return items;\n  }, [rows, columns, isReverse, dataSource]);\n\n  return (\n    <div\n      className=\"container\"\n      style={{\n        gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      }}\n    >\n      {layoutItems}\n    </div>\n  );\n}\n\nexport { GraphLayoutGrid };\n","import React from \"react\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport { createDecorators } from \"@next-core/element\";\nimport styleText from \"./grid-background.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\ninterface ParticleColor {\n  startColor: React.CSSProperties[\"color\"];\n  endColor: React.CSSProperties[\"color\"];\n}\ninterface GridBackgroundProps {\n  color?: React.CSSProperties[\"color\"];\n  particleColor?: ParticleColor;\n  maskStyle?: React.CSSProperties;\n}\n\n/**\n * 大屏网格背景\n * @author astrid\n * @category big-screen-layout\n */\n@defineElement(\"data-view.grid-background\", {\n  styleTexts: [styleText],\n})\nclass GridBackground extends ReactNextElement implements GridBackgroundProps {\n  /**\n   * @kind React.CSSProperties[\"color\"]\n   * @default \"#235F90\"\n   * @required false\n   * @description 背景条纹颜色\n   */\n  @property({ attribute: false })\n  accessor color: React.CSSProperties[\"color\"] = \"#235F90\";\n\n  /**\n   * @kind React.CSSProperties\n   * @default -\n   * @required false\n   * @description 背景蓝色遮罩区域样式\n   */\n  @property({ attribute: false })\n  accessor maskStyle: React.CSSProperties;\n\n  /**\n   * @kind  ParticleColor\n   * @default {startColor: \"#477AFFFF\", endColor: \"#5F83FF00\"}\n   * @required\n   * @description 运动粒子的颜色\n   */\n  @property({ attribute: false })\n  accessor particleColor: ParticleColor = {\n    startColor: \"#477AFFFF\",\n    endColor: \"#5F83FF00\",\n  };\n  render(): React.ReactNode {\n    return (\n      <GridBackgroundComponent\n        color={this.color}\n        particleColor={this.particleColor}\n        maskStyle={this.maskStyle}\n      />\n    );\n  }\n}\n\nexport function GridBackgroundComponent(\n  props: GridBackgroundProps\n): React.ReactElement {\n  const { color, particleColor, maskStyle } = props;\n\n  return (\n    <div className=\"wrapper\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 1920 1080\"\n        version=\"1.1\"\n      >\n        <defs>\n          <radialGradient\n            cx=\"45.1284727%\"\n            cy=\"37.4435052%\"\n            fx=\"45.1284727%\"\n            fy=\"37.4435052%\"\n            r=\"35.3824158%\"\n            gradientTransform=\"translate(0.451285,0.374435),scale(0.570664,1.000000),rotate(82.494597),scale(1.000000,2.364307),translate(-0.451285,-0.374435)\"\n            id=\"radialGradient-1\"\n          >\n            <stop stopColor={color} stopOpacity=\"0.8\" offset=\"0%\" />\n            <stop stopColor={color} stopOpacity=\"0.2\" offset=\"100%\" />\n          </radialGradient>\n          <radialGradient\n            cx=\"55.6977989%\"\n            cy=\"49.2866915%\"\n            fx=\"55.6977989%\"\n            fy=\"49.2866915%\"\n            r=\"33.2747958%\"\n            gradientTransform=\"translate(0.556978,0.492867),scale(0.493993,1.000000),rotate(79.335608),scale(1.000000,2.364307),translate(-0.556978,-0.492867)\"\n            id=\"radialGradient-2\"\n          >\n            <stop stopColor={color} offset=\"0%\" />\n            <stop stopColor={color} stopOpacity=\"0.2\" offset=\"100%\" />\n          </radialGradient>\n          <radialGradient\n            cx=\"54.0072428%\"\n            cy=\"79.8559542%\"\n            fx=\"54.0072428%\"\n            fy=\"79.8559542%\"\n            r=\"34.7247464%\"\n            gradientTransform=\"translate(0.540072,0.798560),scale(0.493975,1.000000),rotate(-109.507982),scale(1.000000,2.364307),translate(-0.540072,-0.798560)\"\n            id=\"radialGradient-3\"\n          >\n            <stop stopColor={color} offset=\"0%\" />\n            <stop stopColor={color} stopOpacity=\"0.2\" offset=\"100%\" />\n          </radialGradient>\n          <linearGradient id=\"strokeGradient\">\n            <stop offset=\"0%\" stopColor={`${particleColor.endColor}`} />\n            <stop offset=\"50%\" stopColor={`${particleColor.startColor}`} />\n            <stop offset=\"100%\" stopColor={`${particleColor.endColor}`} />\n          </linearGradient>\n        </defs>\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(0.000000, -55.240061)\">\n            <path\n              d=\"M1932.22961,620.204785 L1064.03203,1115.73336 L1932.22961,620.204785 Z M1947.94912,629.842813 L1079.75153,1125.37139 L1947.94912,629.842813 Z M1863.58779,578.118729 L995.390201,1073.64731 L1863.58779,578.118729 Z M1879.30729,587.756757 L1011.1097,1083.28533 L1879.30729,587.756757 Z M1794.94596,536.032673 L926.748373,1031.56125 L1794.94596,536.032673 Z M1810.66546,545.670701 L942.467876,1041.19928 L1810.66546,545.670701 Z M1726.30413,493.946617 L858.106546,989.475193 L1726.30413,493.946617 Z M1742.02363,503.584645 L873.826048,999.113222 L1742.02363,503.584645 Z M1657.6623,451.860561 L789.464718,947.389137 L1657.6623,451.860561 Z M1673.38181,461.498589 L805.184221,957.027165 L1673.38181,461.498589 Z M1589.02048,409.774505 L720.822891,905.303081 L1589.02048,409.774505 Z M1604.73998,419.412533 L736.542393,914.941109 L1604.73998,419.412533 Z M935.731598,129.57739 L1941.77976,746.411189 L935.731598,129.57739 Z M910.059443,142.064295 L1916.1076,758.898094 L910.059443,142.064295 Z M914.772261,116.726686 L1920.82042,733.560485 L914.772261,116.726686 Z M889.100106,129.213591 L1895.14826,746.04739 L889.100106,129.213591 Z M1026.87401,62.2005344 L2032.92216,679.034334 L1026.87401,62.2005344 Z M1001.20185,74.6874393 L2007.25001,691.521238 L1001.20185,74.6874393 Z M802.670517,171.252837 L1808.71867,788.086636 L802.670517,171.252837 Z M776.998362,183.739742 L1783.04652,800.573541 L776.998362,183.739742 Z M690.568773,225.778989 L1696.61693,842.612788 L690.568773,225.778989 Z M664.896618,238.265894 L1670.94478,855.099693 L664.896618,238.265894 Z M578.467029,280.30514 L1584.51519,897.138939 L578.467029,280.30514 Z M552.794874,292.792045 L1558.84303,909.625844 L552.794874,292.792045 Z M466.365285,334.831291 L1472.41344,951.665091 L466.365285,334.831291 Z M440.693129,347.318196 L1446.74129,964.151995 L440.693129,347.318196 Z M354.26354,389.357443 L1360.3117,1006.19124 L354.26354,389.357443 Z M328.591385,401.844348 L1334.63954,1018.67815 L328.591385,401.844348 Z M242.161796,443.883594 L1248.20995,1060.71739 L242.161796,443.883594 Z M137.892613,502.990271 L1143.94077,1119.82407 L137.892613,502.990271 Z M216.489641,456.370499 L1222.5378,1073.2043 L216.489641,456.370499 Z M112.220458,515.477176 L1118.26862,1132.31097 L112.220458,515.477176 Z M1520.37865,367.688449 L652.181064,863.217025 L1520.37865,367.688449 Z M1536.09815,377.326477 L667.900566,872.855053 L1536.09815,377.326477 Z M1451.73682,325.602393 L583.539236,821.130969 L1451.73682,325.602393 Z M1467.45632,335.240421 L599.258739,830.768997 L1467.45632,335.240421 Z M1383.09499,283.516337 L514.897409,779.044913 L1383.09499,283.516337 Z M1398.8145,293.154365 L530.616911,788.682941 L1398.8145,293.154365 Z M1314.45317,241.43028 L446.255581,736.958857 L1314.45317,241.43028 Z M1330.17267,251.068309 L461.975084,746.596885 L1330.17267,251.068309 Z M1245.81134,199.344224 L377.613754,694.872801 L1245.81134,199.344224 Z M1261.53084,208.982252 L393.333256,704.510829 L1261.53084,208.982252 Z M1177.16951,157.258168 L308.971926,652.786745 L1177.16951,157.258168 Z M1192.88901,166.896196 L324.691429,662.424773 L1192.88901,166.896196 Z M1108.52768,115.172112 L240.330099,610.700689 L1108.52768,115.172112 Z M1124.24719,124.81014 L256.049601,620.338717 L1124.24719,124.81014 Z M1039.88586,73.0860561 L171.688272,568.614633 L1039.88586,73.0860561 Z M1055.60536,82.7240842 L187.407774,578.252661 L1055.60536,82.7240842 Z M971.24403,31 L103.046444,526.528577 L971.24403,31 Z M986.963532,40.6380281 L118.765947,536.166605 L986.963532,40.6380281 Z\"\n              id=\"形状结合\"\n              stroke=\"url(#radialGradient-1)\"\n              opacity=\"0.199999988\"\n            />\n            <path\n              d=\"M1986.22961,589.204785 L1118.03203,1084.73336 L1986.22961,589.204785 Z M2001.94912,598.842813 L1133.75153,1094.37139 L2001.94912,598.842813 Z M1917.58779,547.118729 L1049.3902,1042.64731 L1917.58779,547.118729 Z M1933.30729,556.756757 L1065.1097,1052.28533 L1933.30729,556.756757 Z M1848.94596,505.032673 L980.748373,1000.56125 L1848.94596,505.032673 Z M1864.66546,514.670701 L996.467876,1010.19928 L1864.66546,514.670701 Z M1780.30413,462.946617 L912.106546,958.475193 L1780.30413,462.946617 Z M1796.02363,472.584645 L927.826048,968.113222 L1796.02363,472.584645 Z M1711.6623,420.860561 L843.464718,916.389137 L1711.6623,420.860561 Z M1727.38181,430.498589 L859.184221,926.027165 L1727.38181,430.498589 Z M1643.02048,378.774505 L774.822891,874.303081 L1643.02048,378.774505 Z M1658.73998,388.412533 L790.542393,883.941109 L1658.73998,388.412533 Z M989.731598,98.57739 L1995.77976,715.411189 L989.731598,98.57739 Z M964.059443,111.064295 L1970.1076,727.898094 L964.059443,111.064295 Z M968.772261,85.7266858 L1974.82042,702.560485 L968.772261,85.7266858 Z M943.100106,98.2135908 L1949.14826,715.04739 L943.100106,98.2135908 Z M1080.87401,31.2005344 L2086.92216,648.034334 L1080.87401,31.2005344 Z M1055.20185,43.6874393 L2061.25001,660.521238 L1055.20185,43.6874393 Z M856.670517,140.252837 L1862.71867,757.086636 L856.670517,140.252837 Z M830.998362,152.739742 L1837.04652,769.573541 L830.998362,152.739742 Z M744.568773,194.778989 L1750.61693,811.612788 L744.568773,194.778989 Z M718.896618,207.265894 L1724.94478,824.099693 L718.896618,207.265894 Z M632.467029,249.30514 L1638.51519,866.138939 L632.467029,249.30514 Z M606.794874,261.792045 L1612.84303,878.625844 L606.794874,261.792045 Z M520.365285,303.831291 L1526.41344,920.665091 L520.365285,303.831291 Z M494.693129,316.318196 L1500.74129,933.151995 L494.693129,316.318196 Z M408.26354,358.357443 L1414.3117,975.191242 L408.26354,358.357443 Z M382.591385,370.844348 L1388.63954,987.678147 L382.591385,370.844348 Z M296.161796,412.883594 L1302.20995,1029.71739 L296.161796,412.883594 Z M191.892613,471.990271 L1197.94077,1088.82407 L191.892613,471.990271 Z M270.489641,425.370499 L1276.5378,1042.2043 L270.489641,425.370499 Z M166.220458,484.477176 L1172.26862,1101.31097 L166.220458,484.477176 Z M1574.37865,336.688449 L706.181064,832.217025 L1574.37865,336.688449 Z M1590.09815,346.326477 L721.900566,841.855053 L1590.09815,346.326477 Z M1505.73682,294.602393 L637.539236,790.130969 L1505.73682,294.602393 Z M1521.45632,304.240421 L653.258739,799.768997 L1521.45632,304.240421 Z M1437.09499,252.516337 L568.897409,748.044913 L1437.09499,252.516337 Z M1452.8145,262.154365 L584.616911,757.682941 L1452.8145,262.154365 Z M1368.45317,210.43028 L500.255581,705.958857 L1368.45317,210.43028 Z M1384.17267,220.068309 L515.975084,715.596885 L1384.17267,220.068309 Z M1299.81134,168.344224 L431.613754,663.872801 L1299.81134,168.344224 Z M1315.53084,177.982252 L447.333256,673.510829 L1315.53084,177.982252 Z M1231.16951,126.258168 L362.971926,621.786745 L1231.16951,126.258168 Z M1246.88901,135.896196 L378.691429,631.424773 L1246.88901,135.896196 Z M1162.52768,84.1721122 L294.330099,579.700689 L1162.52768,84.1721122 Z M1178.24719,93.8101403 L310.049601,589.338717 L1178.24719,93.8101403 Z M1093.88586,42.0860561 L225.688272,537.614633 L1093.88586,42.0860561 Z M1109.60536,51.7240842 L241.407774,547.252661 L1109.60536,51.7240842 Z M1025.24403,2.84217094e-14 L157.046444,495.528577 L1025.24403,2.84217094e-14 Z M1040.96353,9.63802811 L172.765947,505.166605 L1040.96353,9.63802811 Z\"\n              id=\"形状结合备份-29\"\n              stroke=\"url(#radialGradient-1)\"\n              opacity=\"0.199999988\"\n            />\n            <path\n              d=\"M544.579301,779.282955 L546.148439,780.102499 L543.481153,781.296467 L541.912022,780.476923 L544.579301,779.282955 Z M528.892117,771.087483 L530.460493,771.907033 L527.79328,773.101 L526.224912,772.28145 L528.892117,771.087483 Z M623.273107,736.086901 L624.842493,736.906442 L622.181241,738.100361 L620.611862,737.280819 L623.273107,736.086901 Z M649.8757,719.147798 L651.44516,719.967339 L648.7857,721.161243 L647.216247,720.341702 L649.8757,719.147798 Z M608.583436,725.891448 L610.15206,726.710996 L607.490882,727.904914 L605.922265,727.085366 L608.583436,725.891448 Z M633.185291,710.952352 L634.753989,711.771899 L632.094602,712.965802 L630.525912,712.146255 L633.185291,710.952352 Z M477.45701,737.435316 L479.022745,738.254887 L476.353989,739.448867 L474.788261,738.629295 L477.45701,737.435316 Z M500.134641,723.4956 L501.70045,724.315171 L499.033486,725.509136 L497.467685,724.689565 L500.134641,723.4956 Z M459.803858,727.239565 L461.36883,728.059143 L458.700147,729.253122 L457.135183,728.433544 L459.803858,727.239565 Z M777.30602,645.953896 L778.875729,646.773436 L776.222303,647.96729 L774.652601,647.147751 L777.30602,645.953896 Z M483.48075,714.299855 L485.045796,715.119432 L482.378906,716.313397 L480.813867,715.493819 L483.48075,714.299855 Z M806.83035,631.015434 L808.400133,631.834972 L805.748499,633.028812 L804.178723,632.209273 L806.83035,631.015434 Z M762.613125,636.75847 L764.182071,637.578016 L761.528719,638.77187 L759.95978,637.952324 L762.613125,636.75847 Z M791.136716,620.820014 L792.705737,621.639558 L790.054177,622.833397 L788.485164,622.013853 L791.136716,620.820014 Z M580.817589,678.299634 L582.383646,679.119203 L579.722716,680.313118 L578.156667,679.493549 L580.817589,678.299634 Z M604.416957,664.360558 L605.983088,665.180126 L603.323951,666.374027 L601.757827,665.554459 L604.416957,664.360558 Z M564.161212,669.103909 L565.726506,669.923484 L563.06565,671.1174 L561.500363,670.297824 L564.161212,669.103909 Z M881.997185,587.823685 L883.567217,588.643222 L880.921617,589.837012 L879.351593,589.017476 L881.997185,587.823685 Z M588.759841,656.164839 L590.32521,656.984414 L587.666146,658.178314 L586.100785,657.35874 L588.759841,656.164839 Z M381.160953,707.646746 L382.723358,708.466344 L380.054924,709.660321 L378.492526,708.840723 L381.160953,707.646746 Z M911.443252,570.885862 L913.013358,571.705398 L910.36955,572.899174 L908.799452,572.079638 L911.443252,570.885862 Z M866.301065,578.628285 L867.870334,579.447828 L865.224808,580.641618 L863.655547,579.822075 L866.301065,578.628285 Z M407.835359,695.707056 L409.397838,696.526655 L406.731197,697.720617 L405.168725,696.901019 L407.835359,695.707056 Z M365.541093,699.450723 L367.102736,700.270328 L364.434376,701.464304 L362.87274,700.644699 L365.541093,699.450723 Z M895.746394,560.690468 L897.315737,561.51001 L894.672003,562.703786 L893.102667,561.884243 L895.746394,560.690468 Z M392.21476,687.511039 L393.776477,688.330644 L391.109909,689.524606 L389.5482,688.705001 L392.21476,687.511039 Z M985.346602,526.696267 L986.916956,527.515801 L984.279183,528.709527 L982.708836,527.889993 L985.346602,526.696267 Z M510.50745,636.511179 L512.070178,637.330775 L509.40957,638.524688 L507.84685,637.705092 L510.50745,636.511179 Z M1014.71441,510.759083 L1016.28483,511.578616 L1013.64885,512.772328 L1012.07843,511.952795 L1014.71441,510.759083 Z M969.647258,518.500893 L971.216849,519.320433 L968.579149,520.514159 L967.009565,519.694619 L969.647258,518.500893 Z M535.103593,622.572129 L536.666395,623.391725 L534.007579,624.585623 L532.444785,623.766027 L535.103593,622.572129 Z M495.884365,626.315182 L497.44633,627.134785 L494.785797,628.328697 L493.223839,627.509095 L495.884365,626.315182 Z M999.014323,502.563716 L1000.58399,503.383255 L997.948081,504.576966 L996.378423,503.757427 L999.014323,502.563716 Z M520.479769,612.376139 L522.041809,613.19574 L519.383067,614.389638 L517.821035,613.570036 L520.479769,612.376139 Z M339.010273,651.856988 L340.569349,652.676614 L337.901238,653.870588 L336.342169,653.050962 L339.010273,651.856988 Z M361.681454,638.917325 L363.240604,639.73695 L360.574285,640.93091 L359.015143,640.111284 L361.681454,638.917325 Z M323.423706,643.660693 L324.98202,644.480325 L322.313982,645.674299 L320.755676,644.854666 L323.423706,643.660693 Z M346.094148,630.721036 L347.652536,631.540667 L344.986291,632.734626 L343.427911,631.914995 L346.094148,630.721036 Z M416.342688,608.721536 L417.902087,609.541159 L415.241802,610.73507 L413.682411,609.915446 L416.342688,608.721536 Z M441.935606,593.782512 L443.495079,594.602135 L440.836586,595.796031 L439.277121,594.976408 L441.935606,593.782512 Z M401.752896,598.525267 L403.311532,599.344897 L400.651321,600.538807 L399.092692,599.719177 L401.752896,598.525267 Z M763.1752,574.248424 L764.738573,575.068015 L762.093618,576.2618 L760.530252,575.442209 L763.1752,574.248424 Z M426.345075,584.58625 L427.903785,585.405879 L425.245367,586.599774 L423.686664,585.780145 L426.345075,584.58625 Z M268.004972,611.066041 L269.560718,611.885695 L266.89293,613.079666 L265.33719,612.260013 L268.004972,611.066041 Z M788.614817,559.310653 L790.178264,560.130243 L787.535101,561.324014 L785.971662,560.504424 L788.614817,559.310653 Z M747.545665,564.05248 L749.108275,564.872077 L746.463394,566.065862 L744.900791,565.246264 L747.545665,564.05248 Z M291.672928,598.126405 L293.228748,598.946057 L290.562752,600.140015 L289.006939,599.320362 L291.672928,598.126405 Z M252.451697,602.869474 L254.006681,603.689134 L251.338966,604.883105 L249.783989,604.063445 L252.451697,602.869474 Z M772.984544,549.114715 L774.547228,549.934312 L771.904139,551.128082 L770.341462,550.308485 L772.984544,549.114715 Z M616.333355,576.588877 L617.893076,577.408498 L615.240617,578.602344 L613.680904,577.782723 L616.333355,576.588877 Z M276.118914,589.929844 L277.673973,590.749503 L275.00805,591.943459 L273.452999,591.1238 L276.118914,589.929844 Z M639.84801,562.650493 L641.407805,563.470113 L638.757139,564.663945 L637.197351,563.844325 L639.84801,562.650493 Z M599.740338,567.392635 L601.299296,568.212262 L598.646912,569.406108 L597.08796,568.586481 L599.740338,567.392635 Z M877.496453,427.121235 L879.060148,427.940824 L876.42302,429.134545 L874.859332,428.314957 L877.496453,427.121235 Z M624.254254,553.454257 L625.813287,554.273883 L623.162694,555.467715 L621.603669,554.648088 L624.254254,553.454257 Z M375.323304,550.930705 L376.879374,551.750355 L374.219411,552.944263 L372.663349,552.124613 L375.323304,550.930705 Z M902.857807,413.184104 L904.421576,414.003692 L901.78624,415.197399 L900.222478,414.377811 L902.857807,413.184104 Z M860.863693,416.925318 L862.426626,417.744912 L859.789571,418.938633 L858.226646,418.119038 L860.863693,416.925318 Z M1169.49427,421.663117 L1171.06193,422.482673 L1168.44014,423.676269 L1166.87247,422.856713 L1169.49427,421.663117 Z M397.912997,537.991708 L399.469141,538.811358 L396.81097,540.005251 L395.254835,539.185601 L397.912997,537.991708 Z M360.766805,542.734164 L362.322111,543.553821 L359.662223,544.747728 L358.106923,543.928071 L360.766805,542.734164 Z M886.224309,403.988193 L887.787316,404.807787 L885.152053,406.001493 L883.589054,405.181899 L886.224309,403.988193 Z M743.982274,502.459011 L745.542317,503.278629 L742.897685,504.472412 L741.337649,503.652793 L743.982274,502.459011 Z M1195.70232,409.727239 L1197.27006,410.546794 L1194.65006,411.740375 L1193.08232,410.92082 L1195.70232,409.727239 Z M1153.82176,413.467524 L1155.38867,414.287086 L1152.76695,415.480682 L1151.20005,414.661119 L1153.82176,413.467524 Z M383.355759,529.795173 L384.91114,530.614829 L382.253044,531.808722 L380.69767,530.989066 L383.355759,529.795173 Z M774.418666,484.521267 L775.978784,485.340884 L773.335944,486.534652 L771.775833,485.715035 L774.418666,484.521267 Z M728.386032,494.262795 L729.945313,495.082419 L727.300754,496.276201 L725.741481,495.456577 L728.386032,494.262795 Z M1180.02908,401.531652 L1181.59606,402.351213 L1178.97613,403.544794 L1177.40915,402.725233 L1180.02908,401.531652 Z M971.475958,454.99684 L973.039976,455.816426 L970.410673,457.010083 L968.846663,456.190497 L971.475958,454.99684 Z M163.809779,591.334297 L165.36227,592.153977 L162.696596,593.347931 L161.144112,592.528251 L163.809779,591.334297 Z M758.821686,476.325057 L760.38104,477.144681 L757.738274,478.338448 L756.178927,477.518824 L758.821686,476.325057 Z M521.299889,548.798161 L522.856281,549.617809 L520.204145,550.811653 L518.64776,549.992005 L521.299889,548.798161 Z M996.759049,440.060349 L998.323141,440.879934 L995.695631,442.073576 L994.131547,441.253991 L996.759049,440.060349 Z M954.839973,445.800949 L956.403229,446.620541 L953.774,447.814197 L952.210752,446.994605 L954.839973,445.800949 Z M148.289058,583.137464 L149.840787,583.95715 L147.175187,585.151104 L145.623465,584.331418 L148.289058,583.137464 Z M547.811319,532.859804 L549.367785,533.679451 L546.717441,534.87328 L545.160983,534.053633 L547.811319,532.859804 Z M505.740164,540.601647 L507.295794,541.421301 L504.643731,542.615144 L503.088109,541.79549 L505.740164,540.601647 Z M981.122326,430.864463 L982.685655,431.684055 L980.058219,432.877697 L978.494897,432.058105 L981.122326,430.864463 Z M532.250856,524.663295 L533.806559,525.482949 L531.156289,526.676777 L529.600593,525.857124 L532.250856,524.663295 Z M1103.11372,379.875237 L1104.67806,380.69482 L1102.05658,381.888414 L1100.49225,381.068831 L1103.11372,379.875237 Z M651.934726,474.66841 L653.49144,475.488055 L650.84713,476.681835 L649.290423,475.86219 L651.934726,474.66841 Z M1125.31854,366.939386 L1126.88296,367.758968 L1124.26327,368.952547 L1122.69887,368.132964 L1125.31854,366.939386 Z M1087.47451,371.679373 L1089.03808,372.498962 L1086.41668,373.692555 L1084.85311,372.872965 L1087.47451,371.679373 Z M1352.7727,317.42806 L1354.34101,318.247611 L1351.73487,319.441079 L1350.16656,318.621528 L1352.7727,317.42806 Z M675.367893,461.730692 L676.924681,462.550337 L674.282164,463.744102 L672.725383,462.924457 L675.367893,461.730692 Z M636.371776,464.471922 L637.927728,465.291574 L635.283492,466.485353 L633.727548,465.665701 L636.371776,464.471922 Z M1109.6786,358.743527 L1111.24225,359.563115 L1108.62264,360.756694 L1107.05899,359.937105 L1109.6786,358.743527 Z M1378.82423,305.493461 L1380.39262,306.313011 L1377.78826,307.506464 L1376.21988,306.686914 L1378.82423,305.493461 Z M1337.09375,309.23252 L1338.6613,310.052077 L1336.05523,311.245544 L1334.48768,310.425987 L1337.09375,309.23252 Z M661.804205,450.53421 L663.360231,451.353861 L660.717787,452.547626 L659.161769,451.727975 L661.804205,450.53421 Z M1363.14454,297.297927 L1364.71216,298.117483 L1362.10788,299.310936 L1360.54026,298.49138 L1363.14454,297.297927 Z M757.227814,414.541452 L758.784851,415.361095 L756.148368,416.554811 L754.591338,415.735168 L757.227814,414.541452 Z M256.72067,537.345479 L258.270081,538.165184 L255.610763,539.359086 L254.06136,538.539381 L256.72067,537.345479 Z M779.582719,402.604374 L781.13983,403.424016 L778.505138,404.617717 L776.948035,403.798075 L779.582719,402.604374 Z M742.66164,405.34499 L744.217914,406.164639 L741.581505,407.358355 L740.025238,406.538706 L742.66164,405.34499 Z M1085.87854,308.08617 L1087.43955,308.90578 L1084.8184,310.099371 L1083.2574,309.27976 L1085.87854,308.08617 Z M281.303913,523.406534 L282.853398,524.226239 L280.195873,525.420127 L278.646396,524.600422 L281.303913,523.406534 Z M241.230756,529.148394 L242.779404,529.968105 L240.12016,531.162007 L238.571519,530.342296 L241.230756,529.148394 Z M764.015806,392.407918 L765.572154,393.227566 L762.937537,394.421267 L761.381196,393.601619 L764.015806,392.407918 Z M1111.08015,294.150344 L1112.64123,294.969954 L1110.02187,296.16353 L1108.46079,295.34392 L1111.08015,294.150344 Z M1070.27263,297.890033 L1071.83287,298.709649 L1069.21179,299.90324 L1067.65155,299.083623 L1070.27263,297.890033 Z M265.81326,515.209455 L267.361983,516.029166 L264.704531,517.223053 L263.155816,516.403343 L265.81326,515.209455 Z M1310.36399,262.640411 L1311.92897,263.459989 L1309.32315,264.653454 L1307.75817,263.833876 L1310.36399,262.640411 Z M132.861333,526.686075 L134.407092,527.50581 L131.740271,528.699774 L130.194519,527.880039 L132.861333,526.686075 Z M1095.47349,283.954214 L1097.03381,284.773829 L1094.41453,285.967405 L1092.85421,285.147789 L1095.47349,283.954214 Z M859.179155,356.417287 L860.736515,357.236927 L858.107857,358.430579 L856.550505,357.610939 L859.179155,356.417287 Z M1333.41229,248.705838 L1334.97735,249.525415 L1332.37332,250.718866 L1330.80826,249.899289 L1333.41229,248.705838 Z M157.519615,513.746517 L159.065448,514.566251 L156.400419,515.760201 L154.854593,514.940466 L157.519615,513.746517 Z M1294.71833,252.444599 L1296.28255,253.264183 L1293.6768,254.457647 L1292.11258,253.638063 L1294.71833,252.444599 Z M117.407936,518.488691 L118.952933,519.308433 L116.286186,520.502396 L114.741196,519.682655 L117.407936,518.488691 Z M358.66909,479.213165 L360.218824,480.032867 L357.567332,481.226706 L356.017607,480.407003 L358.66909,479.213165 Z M883.455797,342.480848 L885.01323,343.300487 L882.386365,344.494125 L880.828939,343.674485 L883.455797,342.480848 Z M843.609756,346.220851 L845.166353,347.040498 L842.537769,348.234149 L840.98118,347.414503 L843.609756,346.220851 Z M1317.76589,239.510032 L1319.33019,240.329615 L1316.72623,241.523066 L1315.16194,240.703482 L1317.76589,239.510032 Z M142.065479,505.54914 L143.61055,506.36888 L140.945595,507.562829 L139.400532,506.743088 L142.065479,505.54914 Z M384.174071,465.27486 L385.723878,466.094562 L383.074179,467.288386 L381.524379,466.468684 L384.174071,465.27486 Z M344.175951,469.016106 L345.724922,469.835815 L343.073505,471.029653 L341.524541,470.209944 L344.175951,469.016106 Z M867.885659,332.284419 L869.44233,333.104064 L866.815539,334.297701 L865.258875,333.478055 L867.885659,332.284419 Z M637.311562,401.749778 L638.86527,402.569448 L636.229108,403.763161 L634.675408,402.943491 L637.311562,401.749778 Z M368.680193,456.077808 L370.229238,456.897516 L367.579613,458.091339 L366.423075,457.084573 L368.680193,456.077808 Z M212.13742,482.551083 L213.683501,483.370816 L211.024506,484.564716 L209.478432,483.744983 L212.13742,482.551083 Z M661.663242,388.812726 L663.217023,389.632396 L660.582654,390.826094 L659.02888,390.006425 L661.663242,388.812726 Z M621.77868,393.553044 L623.331625,394.372721 L620.695538,395.566433 L619.1426,394.746757 L621.77868,393.553044 Z M236.717438,467.612165 L238.263593,468.431897 L235.606391,469.625782 L234.060243,468.806051 L236.717438,467.612165 Z M195.680798,472.353726 L197.226117,473.173465 L194.567196,474.367364 L193.021884,473.547626 L195.680798,472.353726 Z M645.129621,378.615998 L646.68264,379.435674 L644.048345,380.629372 L642.495334,379.809696 L645.129621,378.615998 Z M464.275763,420.083644 L465.825819,420.903344 L463.182154,422.097119 L461.632105,421.277419 L464.275763,420.083644 Z M221.260078,458.414814 L222.805471,459.234552 L220.148342,460.428437 L218.602956,459.608699 L221.260078,458.414814 Z M1214.10065,234.851573 L1215.6623,235.671178 L1213.0568,236.864641 L1211.49516,236.045036 L1214.10065,234.851573 Z M487.702481,406.145979 L489.25261,406.965678 L486.610738,408.159438 L485.060615,407.339739 L487.702481,406.145979 Z M447.779399,409.886612 L449.328692,410.706318 L446.685101,411.900092 L445.135815,411.080386 L447.779399,409.886612 Z M1239.14573,220.917027 L1240.70746,221.736631 L1238.10375,222.93008 L1236.54203,222.110475 L1239.14573,220.917027 Z M1198.48828,225.655489 L1200.04918,226.4751 L1197.44375,227.668563 L1195.88286,226.848951 L1198.48828,225.655489 Z M472.205378,396.948953 L473.754745,397.768658 L471.112946,398.962418 L469.563586,398.142712 L472.205378,396.948953 Z M316.071758,422.418885 L317.618162,423.238614 L314.966993,424.43245 L313.420597,423.612721 L316.071758,422.418885 Z M1224.53262,210.720949 L1226.09359,211.54056 L1223.48995,212.734007 L1221.92899,211.914396 L1224.53262,210.720949 Z M340.573514,408.480606 L342.119991,409.300335 L339.470615,410.494157 L337.924144,409.674428 L340.573514,408.480606 Z M300.611911,414.221554 L302.157553,415.04129 L299.506458,416.235125 L297.960824,415.41539 L300.611911,414.221554 Z M567.540687,359.956916 L569.091066,360.776613 L566.455227,361.970324 L564.904856,361.150627 L567.540687,359.956916 Z M325.112928,400.283282 L326.658644,401.103017 L324.009341,402.296838 L322.463633,401.477103 L325.112928,400.283282 Z M591.889142,347.019891 L593.439594,347.839587 L590.805548,349.033283 L589.255103,348.213587 L591.889142,347.019891 Z M553.041098,350.75991 L554.590714,351.579614 L551.954949,352.773324 L550.405341,351.95362 L553.041098,350.75991 Z M843.844331,282.504471 L845.398684,283.324135 L842.778175,284.517721 L841.22383,283.698056 L843.844331,282.504471 Z M576.388814,336.822891 L577.938504,337.642594 L575.304532,338.836289 L573.754849,338.016586 L576.388814,336.822891 Z M429.664348,368.289479 L431.211075,369.109206 L428.567732,370.302978 L427.021013,369.483251 L429.664348,368.289479 Z M870.039485,270.568698 L871.593912,271.388362 L868.975195,272.581933 L867.420776,271.762268 L870.039485,270.568698 Z M828.305,274.30779 L829.85859,275.12746 L827.238155,276.321045 L825.684573,275.501374 L828.305,274.30779 Z M456.087841,356.35184 L457.634641,357.171567 L454.993091,358.365324 L453.446298,357.545598 L456.087841,356.35184 Z M414.201277,360.092175 L415.747241,360.911908 L413.103972,362.10568 L411.558015,361.285946 L414.201277,360.092175 Z M854.499415,262.372023 L856.053079,263.191693 L853.434437,264.385263 L851.88078,263.565593 L854.499415,262.372023 Z M672.463864,298.832981 L674.014565,299.652676 L671.386552,300.846322 L669.835859,300.026628 L672.463864,298.832981 Z M440.624031,348.154542 L442.170069,348.974275 L439.528592,350.168031 L437.982562,349.348299 L440.624031,348.154542 Z M695.734056,286.896595 L697.28483,287.716289 L694.65861,288.909921 L693.107843,288.090227 L695.734056,286.896595 Z M656.96105,290.636002 L658.510988,291.455702 L655.88305,292.649349 L654.333119,291.829648 L656.96105,290.636002 Z M1069.09809,237.386006 L1070.65277,238.205668 L1068.04009,239.39919 L1066.48542,238.579527 L1069.09809,237.386006 Z M680.230503,278.699622 L681.780515,279.519322 L679.154369,280.712953 L677.604364,279.893253 L680.230503,278.699622 Z M544.915191,316.162866 L546.46224,316.982591 L543.826724,318.176299 L542.279682,317.356574 L544.915191,316.162866 Z M1091.21499,224.450873 L1092.76973,225.270534 L1090.15884,226.464041 L1088.6041,225.64438 L1091.21499,224.450873 Z M1051.55554,227.189351 L1053.10945,228.00902 L1050.49684,229.202541 L1048.94294,228.382872 L1051.55554,227.189351 Z M571.260421,304.225867 L572.807543,305.045591 L570.17382,306.239284 L568.626704,305.41956 L571.260421,304.225867 Z M529.448894,307.965588 L530.995181,308.785319 L528.359738,309.979026 L526.813459,309.159296 L529.448894,307.965588 Z M1075.67169,214.254224 L1077.22568,215.073892 L1074.61486,216.267398 L1073.06088,215.44773 L1075.67169,214.254224 Z M776.045293,241.711839 L777.596316,242.531531 L774.97613,243.725113 L773.425114,242.905422 L776.045293,241.711839 Z M555.793385,296.028595 L557.339746,296.848325 L554.706096,298.042018 L553.159743,297.222288 L555.793385,296.028595 Z M800.237222,227.776092 L801.788319,228.595784 L799.169925,229.789352 L797.618835,228.96966 L800.237222,227.776092 Z M760.539254,231.514886 L762.089514,232.334584 L759.469402,233.528166 L757.919149,232.708468 L760.539254,231.514886 Z M1196.01011,164.270334 L1197.56511,165.089994 L1194.96025,166.283451 L1193.40526,165.463792 L1196.01011,164.270334 Z M783.730444,218.579145 L785.280779,219.398843 L782.662459,220.59241 L781.112132,219.772713 L783.730444,218.579145 Z M629.824285,244.039046 L631.371657,244.858768 L628.743967,246.052412 L627.196603,245.23269 L629.824285,244.039046 Z M1180.46433,156.073706 L1182.01856,156.893372 L1179.41378,158.086829 L1177.85955,157.267163 L1180.46433,156.073706 Z M655.091252,229.102687 L656.638697,229.922408 L654.0128,231.116037 L652.465362,230.296316 L655.091252,229.102687 Z M614.354764,233.841795 L615.901373,234.661523 L613.273757,235.855166 L611.727155,235.035438 L614.354764,233.841795 Z M950.284973,223.593489 L951.836319,224.413179 L949.223959,225.606697 L947.672621,224.787008 L950.284973,223.593489 Z M639.620992,220.905441 L641.167675,221.725168 L638.541851,222.918797 L636.995176,222.09907 L639.620992,220.905441 Z M973.398639,210.658383 L974.950059,211.478071 L972.339491,212.671575 L970.788079,211.851887 L973.398639,210.658383 Z M933.775709,214.396563 L935.326293,215.216258 L932.714007,216.409776 L931.163431,215.590081 L933.775709,214.396563 Z M957.888637,200.461462 L959.439294,201.281157 L956.8288,202.47466 L955.278151,201.654965 L957.888637,200.461462 Z M734.391632,183.918019 L735.939326,184.737738 L733.319462,185.931318 L731.771775,185.111599 L734.391632,183.918019 Z M757.580336,170.982299 L759.128103,171.802017 L756.510032,172.995583 L754.962272,172.175864 L757.580336,170.982299 Z M718.918885,175.720794 L720.465817,176.540519 L717.846027,177.734099 L716.299103,176.914373 L718.918885,175.720794 Z M740.106851,162.78508 L741.653856,163.604805 L739.035859,164.798369 L737.488861,163.978645 L740.106851,162.78508 Z\"\n              id=\"形状结合\"\n              stroke=\"url(#radialGradient-2)\"\n              strokeWidth=\"2\"\n            />\n            <path\n              d=\"M894.618045,1033.17585 L895.047424,1033.40011 L896.616561,1034.21965 L898.446366,1035.17534 L896.56218,1036.01876 L893.894894,1037.21273 L893.452753,1037.41065 L893.023375,1037.18639 L891.454244,1036.36684 L889.624449,1035.41116 L891.508627,1034.56773 L894.175906,1033.37376 L894.618045,1033.17585 Z M878.93097,1024.98032 L879.360419,1025.20473 L880.928795,1026.02428 L882.75791,1026.98008 L880.874243,1027.82329 L878.20703,1029.01726 L877.764772,1029.21524 L877.335323,1028.99083 L875.766955,1028.17128 L873.937849,1027.21548 L875.821507,1026.37226 L878.488712,1025.1783 L878.93097,1024.98032 Z M827.496375,991.328037 L827.925935,991.552887 L829.49167,992.372459 L831.318969,993.328944 L829.436302,994.171234 L826.767546,995.365214 L826.324969,995.563219 L825.895408,995.338368 L824.329681,994.518796 L822.502391,993.562311 L824.38505,992.720022 L827.053799,991.526042 L827.496375,991.328037 Z M973.311359,989.979572 L973.741171,990.204022 L975.310557,991.023564 L977.138645,991.978201 L975.256991,992.822368 L972.595739,994.016286 L972.153333,994.214763 L971.723521,993.990312 L970.154142,993.17077 L968.326063,992.216133 L970.207709,991.371967 L972.868954,990.178049 L973.311359,989.979572 Z M809.843331,981.132232 L810.272962,981.357231 L811.837935,982.176808 L813.664543,983.133405 L811.782396,983.975486 L809.113714,985.169465 L808.671018,985.367528 L808.241387,985.142528 L806.676422,984.322951 L804.849823,983.366353 L806.731962,982.524275 L809.400637,981.330296 L809.843331,981.132232 Z M958.621797,979.784066 L959.05168,980.008663 L960.620304,980.828211 L962.447703,981.78296 L960.566568,982.626917 L957.905389,983.820835 L957.462865,984.01937 L957.032983,983.794771 L955.464366,982.975223 L953.636976,982.020475 L955.518103,981.176519 L958.179274,979.982601 L958.621797,979.784066 Z M850.17386,977.388256 L850.603548,977.613162 L852.169357,978.432733 L853.996149,979.388908 L852.114231,980.231418 L849.447267,981.425383 L849.004611,981.623554 L848.574923,981.398646 L847.009122,980.579075 L845.182339,979.622901 L847.064248,978.780392 L849.731205,977.586427 L850.17386,977.388256 Z M999.913806,973.040404 L1000.34375,973.26491 L1001.91321,974.084452 L1003.74078,975.038776 L1001.85988,975.883163 L999.200423,977.077067 L998.757938,977.275711 L998.327998,977.051203 L996.758545,976.231662 L994.930976,975.277337 L996.811868,974.432951 L999.471321,973.239048 L999.913806,973.040404 Z M833.520078,968.192457 L833.949837,968.417512 L835.514883,969.237089 L837.340984,970.193375 L835.459587,971.035675 L832.792697,972.229639 L832.349923,972.427869 L831.920163,972.202813 L830.355124,971.383235 L828.529032,970.42695 L830.410422,969.584651 L833.077305,968.390687 L833.520078,968.192457 Z M983.223505,964.844903 L983.653517,965.069558 L985.222215,965.889105 L987.049104,966.843542 L985.168722,967.687719 L982.509335,968.881622 L982.066732,969.080324 L981.636721,968.855669 L980.06803,968.036121 L978.24115,967.081685 L980.121524,966.237509 L982.780903,965.043606 L983.223505,964.844903 Z M731.200794,961.53923 L731.630665,961.76473 L733.19307,962.584328 L735.01735,963.5413 L733.136955,964.382673 L730.468522,965.57665 L730.025428,965.774911 L729.595557,965.54941 L728.033159,964.729811 L726.208888,963.772839 L728.089274,962.931468 L730.757701,961.737491 L731.200794,961.53923 Z M715.581044,953.343153 L716.010985,953.568801 L717.572628,954.388407 L719.396216,955.34549 L717.516342,956.186653 L714.847982,957.380629 L714.40477,957.578948 L713.974828,957.353298 L712.413192,956.533693 L710.589613,955.57661 L712.469479,954.735448 L715.137831,953.541472 L715.581044,953.343153 Z M757.875054,949.599475 L758.305053,949.825031 L759.867532,950.644629 L761.691306,951.60129 L759.81166,952.442883 L757.145018,953.636845 L756.701846,953.835272 L756.271847,953.609715 L754.709375,952.790116 L752.88561,951.833456 L754.765248,950.991864 L757.431882,949.797902 L757.875054,949.599475 Z M742.254565,941.403404 L742.684635,941.629109 L744.246352,942.448713 L746.069434,943.405485 L744.190308,944.246868 L741.52374,945.44083 L741.080449,945.639315 L740.650379,945.413609 L739.088669,944.594004 L737.265596,943.637232 L739.144714,942.795851 L741.811274,941.601889 L742.254565,941.403404 Z M930.856316,932.192069 L931.286438,932.417165 L932.852495,933.236734 L934.677575,934.191858 L932.798185,935.03511 L930.137255,936.229026 L929.694334,936.427757 L929.264212,936.202659 L927.698163,935.38309 L925.873092,934.427966 L927.752473,933.584716 L930.413396,932.3908 L930.856316,932.192069 Z M914.200048,922.99629 L914.63024,923.221535 L916.195535,924.04111 L918.019925,924.996346 L916.141054,925.839387 L913.480198,927.033303 L913.037159,927.232093 L912.606966,927.006846 L911.041679,926.187271 L909.217297,925.232035 L911.09616,924.388995 L913.757009,923.19508 L914.200048,922.99629 Z M954.455538,918.252927 L954.885788,918.47808 L956.451919,919.297649 L958.27649,920.25246 L956.397852,921.095932 L953.738715,922.289833 L953.295714,922.488732 L952.865464,922.263577 L951.29934,921.444009 L949.474779,920.489197 L951.353408,919.645727 L954.012538,918.451826 L954.455538,918.252927 Z M938.798531,910.057154 L939.228852,910.282456 L940.794221,911.102031 L942.618102,912.056954 L940.739983,912.900216 L938.080919,914.094116 L937.637801,914.293073 L937.207479,914.06777 L935.642118,913.248195 L933.818246,912.293272 L935.696357,911.450012 L938.355413,910.256111 L938.798531,910.057154 Z M689.050593,905.749234 L689.480775,905.975386 L691.039851,906.795012 L692.861107,907.75247 L690.982987,908.592925 L688.314876,909.786899 L687.871263,909.985415 L687.441081,909.759262 L685.882012,908.939636 L684.060765,907.982178 L685.938877,907.141725 L688.606981,905.947751 L689.050593,905.749234 Z M1127.34363,899.846281 L1127.77401,900.070978 L1129.34372,900.890517 L1131.16957,901.843789 L1129.29121,902.688918 L1126.63779,903.882772 L1126.19503,904.081979 L1125.76466,903.857281 L1124.19496,903.037742 L1122.36911,902.08447 L1124.24746,901.239342 L1126.90088,900.045488 L1127.34363,899.846281 Z M673.464136,897.552885 L673.894388,897.779186 L675.452702,898.598819 L677.273265,899.556387 L675.395666,900.396632 L672.727629,901.590605 L672.283897,901.78918 L671.853644,901.562877 L670.295338,900.743245 L668.474784,899.785677 L670.352374,898.945433 L673.020404,897.75146 L673.464136,897.552885 Z M711.721629,892.809506 L712.151938,893.035714 L713.711088,893.855339 L715.531839,894.812485 L713.654466,895.65316 L710.988148,896.84712 L710.544456,897.045802 L710.114146,896.819593 L708.555003,895.999967 L706.734261,895.042822 L708.611626,894.202148 L711.277937,893.008188 L711.721629,892.809506 Z M1112.65085,890.6508 L1113.08129,890.875646 L1114.65024,891.695191 L1116.47541,892.648575 L1114.59756,893.493494 L1111.94421,894.687348 L1111.50134,894.886613 L1111.0709,894.661767 L1109.50196,893.842221 L1107.6768,892.888838 L1109.55463,892.04392 L1112.20798,890.850066 L1112.65085,890.6508 Z M860.546653,890.403376 L860.977085,890.629123 L862.539813,891.448719 L864.36188,892.404329 L862.484757,893.246664 L859.824149,894.440577 L859.380711,894.639564 L858.950279,894.413817 L857.387559,893.59422 L855.565501,892.63861 L857.442616,891.796277 L860.103216,890.602364 L860.546653,890.403376 Z M1156.86782,884.907752 L1157.29832,885.132506 L1158.8681,885.952045 L1160.69345,886.905004 L1158.81584,887.750353 L1156.16421,888.944192 L1155.72138,889.143567 L1155.29087,888.918812 L1153.7211,888.099273 L1151.89576,887.146314 L1153.77336,886.300967 L1156.42498,885.107127 L1156.86782,884.907752 Z M696.134433,884.613162 L696.564813,884.83952 L698.123201,885.659152 L699.943259,886.616409 L698.066407,887.456874 L695.400162,888.650833 L694.956351,888.849574 L694.52597,888.623214 L692.96759,887.803583 L691.147541,886.846326 L693.024384,886.005862 L695.690622,884.811903 L696.134433,884.613162 Z M845.923678,880.207325 L846.354181,880.433221 L847.916146,881.252823 L849.737522,882.208545 L847.860919,883.050669 L845.200385,884.244582 L844.756828,884.443628 L844.326325,884.217731 L842.764367,883.398129 L840.943,882.442407 L842.819595,881.600284 L845.480121,880.406371 L845.923678,880.207325 Z M885.14265,876.464261 L885.573211,876.690064 L887.136013,877.509659 L888.957571,878.464958 L887.081199,879.307512 L884.422384,880.501411 L883.978867,880.700565 L883.548306,880.474761 L881.985511,879.655165 L880.163962,878.699867 L882.040326,877.857314 L884.699133,876.663415 L885.14265,876.464261 Z M1141.17429,874.712277 L1141.60487,874.93718 L1143.17389,875.756725 L1144.99854,876.709795 L1143.12146,877.554935 L1140.4699,878.748774 L1140.02695,878.948207 L1139.59637,878.723304 L1138.02736,877.903759 L1136.20271,876.950688 L1138.07979,876.10555 L1140.73134,874.911711 L1141.17429,874.712277 Z M870.518936,866.268215 L870.949568,866.494168 L872.511607,867.31377 L874.332476,868.269179 L872.456623,869.111524 L869.797881,870.305422 L869.354245,870.504635 L868.923613,870.278681 L867.361581,869.459079 L865.540722,868.50367 L867.416567,867.661327 L870.075301,866.467429 L870.518936,866.268215 Z M618.045772,864.95805 L618.476265,865.184857 L620.032011,866.00451 L621.850239,866.962452 L619.974396,867.801988 L617.306608,868.995959 L616.862473,869.194732 L616.431981,868.967924 L614.876241,868.14827 L613.058023,867.190328 L614.933857,866.350794 L617.601639,865.156823 L618.045772,864.95805 Z M766.38237,862.613495 L766.813113,862.839894 L768.372511,863.659518 L770.19156,864.615614 L768.316706,865.45703 L765.656422,866.65094 L765.212464,866.850184 L764.781721,866.623784 L763.22233,865.80416 L761.40329,864.848064 L763.278136,864.006649 L765.938413,862.812739 L766.38237,862.613495 Z M602.492608,856.761428 L602.923172,856.988385 L604.478156,857.808045 L606.295689,858.766098 L604.420368,859.605423 L601.752654,860.799394 L601.3084,860.998225 L600.877836,860.771267 L599.322859,859.951607 L597.505335,858.993554 L599.380647,858.154231 L602.048355,856.96026 L602.492608,856.761428 Z M751.792688,852.417172 L752.223502,852.643721 L753.782138,853.46335 L755.600494,854.419558 L753.726161,855.260763 L751.06595,856.454673 L750.621873,856.653976 L750.191059,856.427426 L748.632431,855.607796 L746.814083,854.651589 L748.688408,853.810384 L751.348612,852.616475 L751.792688,852.417172 Z M641.713583,852.018347 L642.144203,852.245211 L643.700024,853.064864 L645.517747,854.022494 L643.642651,854.86225 L640.976655,856.056207 L640.532441,856.255146 L640.101821,856.028281 L638.546007,855.208628 L636.728293,854.250998 L638.603381,853.411244 L641.26937,852.217286 L641.713583,852.018347 Z M791.975142,847.674405 L792.406014,847.900862 L793.965486,848.720484 L795.784028,849.676268 L793.909924,850.517905 L791.251431,851.711801 L790.807395,851.911212 L790.376523,851.684755 L788.817058,850.865132 L786.998525,849.909348 L788.872621,849.067713 L791.531106,847.873817 L791.975142,847.674405 Z M513.850916,845.225999 L514.281848,845.453522 L515.83434,846.273202 L517.649031,847.231317 L515.776213,848.070151 L513.110539,849.264106 L512.665803,849.463303 L512.234871,849.235779 L510.682387,848.416099 L508.867705,847.457984 L510.740514,846.619151 L513.406181,845.425197 L513.850916,845.225999 Z M626.15968,843.821731 L626.590372,844.048746 L628.14543,844.868404 L629.962459,845.826146 L628.087885,846.665691 L625.421962,847.859647 L624.977629,848.058646 L624.546937,847.83163 L622.991886,847.011971 L621.174866,846.054229 L623.049432,845.214686 L625.715348,844.02073 L626.15968,843.821731 Z M1232.03415,841.71578 L1232.4651,841.940727 L1234.03513,842.760264 L1235.85874,843.712167 L1233.98369,844.558258 L1231.33809,845.752048 L1230.89499,845.951991 L1230.46405,845.727043 L1228.89403,844.907506 L1227.07042,843.955603 L1228.94546,843.109513 L1231.59106,841.915723 L1232.03415,841.71578 Z M776.384721,838.478088 L776.815664,838.704694 L778.374374,839.524323 L780.192224,840.480218 L778.31864,841.321644 L775.660221,842.515539 L775.216066,842.71501 L774.785123,842.488402 L773.22642,841.668773 L771.408578,840.712878 L773.282154,839.871454 L775.940566,838.677558 L776.384721,838.478088 Z M498.330306,837.029111 L498.76131,837.256785 L500.313039,838.076471 L502.127034,839.034697 L500.254739,839.87332 L497.589139,841.067274 L497.144283,841.26653 L496.71328,841.038856 L495.161558,840.219169 L493.347571,839.260943 L495.219858,838.422322 L497.885451,837.228368 L498.330306,837.029111 Z M1216.33814,832.520326 L1216.76916,832.745421 L1218.33843,833.564964 L1220.16135,834.516979 L1218.28682,835.36286 L1215.64129,836.55665 L1215.19808,836.756651 L1214.76706,836.531555 L1213.1978,835.712012 L1211.37488,834.759997 L1213.24941,833.914117 L1215.89493,832.720327 L1216.33814,832.520326 Z M966.372396,830.480547 L966.803703,830.707195 L968.363424,831.526816 L970.180257,832.481547 L968.308682,833.323925 L965.656224,834.517772 L965.211921,834.717748 L964.780613,834.491099 L963.2209,833.671478 L961.404075,832.716747 L963.275642,831.87437 L965.928094,830.680524 L966.372396,830.480547 Z M1113.21312,828.140042 L1113.64468,828.366288 L1115.20806,829.185879 L1117.02567,830.138755 L1115.15513,830.983014 L1112.51017,832.176799 L1112.06604,832.377255 L1111.63448,832.151009 L1110.07111,831.331417 L1108.25351,830.378541 L1110.12404,829.534284 L1112.76899,828.340498 L1113.21312,828.140042 Z M1261.48007,824.777891 L1261.91115,825.002895 L1263.48125,825.822431 L1265.30435,826.77402 L1263.43006,827.620331 L1260.78625,828.814107 L1260.34307,829.014218 L1259.912,828.789213 L1258.3419,827.969677 L1256.51881,827.018088 L1258.3931,826.171778 L1261.0369,824.978002 L1261.48007,824.777891 Z M949.779489,821.28425 L950.210867,821.511048 L951.769826,822.330675 L953.585968,823.285517 L951.714912,824.127685 L949.062527,825.321531 L948.618105,825.521566 L948.186727,825.294767 L946.627775,824.47514 L944.811642,823.520298 L946.68269,822.678131 L949.335067,821.484285 L949.779489,821.28425 Z M1097.58369,817.944044 L1098.01533,818.170438 L1099.57794,818.990036 L1101.39487,819.943024 L1099.52484,820.787072 L1096.87996,821.980857 L1096.43571,822.181372 L1096.00408,821.954976 L1094.44147,821.135378 L1092.62455,820.18239 L1094.49457,819.338343 L1097.13944,818.144559 L1097.58369,817.944044 Z M989.886904,816.542096 L990.318341,816.768802 L991.878136,817.588422 L993.69446,818.54284 L991.823638,819.385439 L989.172972,820.579271 L988.728589,820.779416 L988.297152,820.552709 L986.737365,819.733089 L984.921049,818.778671 L986.791863,817.936073 L989.442522,816.742242 L989.886904,816.542096 Z M1245.78332,814.582443 L1246.21447,814.807595 L1247.78381,815.627137 L1249.60622,816.578838 L1247.73245,817.42494 L1245.08871,818.618715 L1244.64542,818.818885 L1244.21427,818.593731 L1242.64494,817.774189 L1240.82253,816.822488 L1242.6963,815.976388 L1245.34003,814.782613 L1245.78332,814.582443 Z M1138.65259,813.202205 L1139.08428,813.428508 L1140.64773,814.248098 L1142.46483,815.200661 L1140.59505,816.04514 L1137.95189,817.23891 L1137.50767,817.439536 L1137.07598,817.213232 L1135.51254,816.393641 L1133.69545,815.441079 L1135.56522,814.596601 L1138.20838,813.402831 L1138.65259,813.202205 Z M974.293258,807.345805 L974.724766,807.572661 L976.283799,808.392287 L978.099433,809.346817 L976.229129,810.189204 L973.578537,811.383036 L973.134035,811.58324 L972.702527,811.356383 L971.143502,810.536757 L969.327876,809.582228 L971.198172,808.739841 L973.848757,807.54601 L974.293258,807.345805 Z M725.363467,804.822425 L725.794521,805.04948 L727.35059,805.86913 L729.166615,806.825711 L727.294034,807.666208 L724.634071,808.860116 L724.189593,809.059617 L723.758539,808.832561 L722.202477,808.01291 L720.386461,807.056329 L722.259034,806.215834 L724.918989,805.021926 L725.363467,804.822425 Z M1123.02242,803.006212 L1123.45419,803.232665 L1125.01687,804.052261 L1126.83329,805.004935 L1124.96402,805.849204 L1122.32093,807.042974 L1121.8766,807.243659 L1121.44484,807.017205 L1119.88216,806.197608 L1118.06575,805.244934 L1119.93501,804.400667 L1122.5781,803.206897 L1123.02242,803.006212 Z M871.33941,802.689591 L871.771029,802.916895 L873.32742,803.736543 L875.141236,804.69176 L873.271928,805.533218 L870.619792,806.727062 L870.174968,806.927297 L869.743349,806.699991 L868.186965,805.880343 L866.373158,804.925127 L868.242458,804.08367 L870.894587,802.889826 L871.33941,802.689591 Z M710.807077,796.625829 L711.238202,796.853035 L712.793509,797.672691 L714.608842,798.629384 L712.736781,799.469669 L710.076892,800.663577 L709.632294,800.863137 L709.201169,800.63593 L707.64587,799.816273 L705.830546,798.859581 L707.702599,798.019297 L710.36248,796.82539 L710.807077,796.625829 Z M855.779796,794.493021 L856.211485,794.720477 L857.767115,795.540131 L859.580239,796.495458 L857.71145,797.336706 L855.059388,798.530549 L854.614444,798.730843 L854.182755,798.503387 L852.627133,797.683732 L850.814017,796.728405 L852.682798,795.887159 L855.334853,794.693316 L855.779796,794.493021 Z M747.953013,791.883361 L748.384196,792.110473 L749.940339,792.930123 L751.75586,793.886392 L749.884027,794.727109 L747.225856,795.921002 L746.781299,796.120671 L746.350116,795.893558 L744.79398,795.073908 L742.978469,794.117639 L744.850294,793.276924 L747.508457,792.08303 L747.953013,791.883361 Z M606.761799,791.236717 L607.193476,791.465093 L608.742887,792.284798 L610.552851,793.242347 L608.684822,794.081 L606.025505,795.274902 L605.579979,795.474922 L605.148301,795.246545 L603.598898,794.42684 L601.788943,793.469291 L603.656963,792.630639 L606.316274,791.436736 L606.761799,791.236717 Z M897.850693,786.751167 L898.282441,786.978529 L899.838907,787.798176 L901.652216,788.753079 L899.783659,789.594758 L897.133315,790.788587 L896.688412,790.988991 L896.256663,790.761628 L894.700205,789.94198 L892.886905,788.987077 L894.755454,788.1454 L897.405791,786.95157 L897.850693,786.751167 Z M733.395885,783.686772 L733.82714,783.914034 L735.38252,784.733691 L737.197348,785.69007 L735.326035,786.530576 L732.667939,787.724469 L732.223262,787.924197 L731.792008,787.696933 L730.236634,786.877277 L728.421816,785.920897 L730.29312,785.080392 L732.951209,783.8865 L733.395885,783.686772 Z M591.271996,783.039577 L591.703744,783.268104 L593.252393,784.087816 L595.061662,785.045475 L593.194155,785.883917 L590.534911,787.077819 L590.089264,787.277898 L589.657516,787.049369 L588.108875,786.229657 L586.299615,785.271998 L588.167114,784.433558 L590.82635,783.239656 L591.271996,783.039577 Z M1335.38292,780.588071 L1335.81444,780.813269 L1337.38479,781.632803 L1339.20616,782.583334 L1337.33443,783.430387 L1334.69665,784.624114 L1334.2532,784.824796 L1333.82169,784.599597 L1332.25134,783.780063 L1330.42999,782.829532 L1332.30171,781.98248 L1334.93948,780.788754 L1335.38292,780.588071 Z M482.903587,780.577361 L483.335015,780.806153 L484.880774,781.625888 L486.689884,782.585281 L484.820892,783.422048 L482.15407,784.616012 L481.708361,784.815561 L481.276933,784.586768 L479.731182,783.767033 L477.922081,782.80764 L479.791065,781.970874 L482.457879,780.77691 L482.903587,780.577361 Z M882.29034,778.554603 L882.72216,778.782116 L884.277863,779.60177 L886.09048,780.556784 L884.222442,781.398252 L881.572172,782.59208 L881.12715,782.792543 L880.69533,782.565029 L879.139634,781.745376 L877.327026,780.790362 L879.195056,779.948895 L881.845318,778.755066 L882.29034,778.554603 Z M631.344896,777.297706 L631.776702,777.526139 L633.326187,778.345843 L635.135648,779.30308 L633.268365,780.141953 L630.61084,781.335841 L630.165235,781.536029 L629.733429,781.307594 L628.183951,780.48789 L626.374499,779.530653 L628.241774,778.691781 L630.899291,777.497893 L631.344896,777.297706 Z M1319.68369,772.392644 L1320.11527,772.61799 L1321.68486,773.43753 L1323.50554,774.388172 L1321.63433,775.235016 L1318.99663,776.428742 L1318.55306,776.629483 L1318.12148,776.404136 L1316.55189,775.584596 L1314.73122,774.633953 L1316.60243,773.787111 L1319.24012,772.593385 L1319.68369,772.392644 Z M467.450302,772.379923 L467.881802,772.608867 L469.426798,773.428608 L471.23521,774.388111 L469.366741,775.224667 L466.699994,776.41863 L466.254164,776.618238 L465.822665,776.389293 L464.277675,775.569552 L462.469272,774.610049 L464.337733,773.773494 L467.004473,772.579531 L467.450302,772.379923 Z M615.854354,769.100572 L616.286232,769.329157 L617.834954,770.148867 L619.64372,771.106215 L617.776959,771.944877 L615.119508,773.138764 L614.673782,773.339011 L614.241904,773.110425 L612.69319,772.290714 L610.884432,771.333366 L612.751185,770.494706 L615.408629,769.300819 L615.854354,769.100572 Z M507.561723,767.637737 L507.993279,767.866586 L509.539112,768.68632 L511.347722,769.645402 L509.479472,770.482389 L506.814443,771.676339 L506.368655,771.876054 L505.937099,771.647205 L504.391273,770.82747 L502.582672,769.868389 L504.450914,769.031402 L507.115936,767.837453 L507.561723,767.637737 Z M1364.75058,764.650821 L1365.18223,764.876076 L1366.75265,765.69561 L1368.5735,766.645826 L1366.70253,767.493099 L1364.06655,768.686811 L1363.62302,768.887664 L1363.19138,768.662407 L1361.62096,767.842874 L1359.80012,766.892658 L1361.67108,766.045386 L1364.30705,764.851674 L1364.75058,764.650821 Z M492.107699,759.440305 L492.539327,759.669306 L494.084397,760.489046 L495.89231,761.448238 L494.024583,762.285014 L491.359628,763.478963 L490.913719,763.678738 L490.482091,763.449736 L488.937028,762.629995 L487.129124,761.670803 L488.996843,760.834029 L491.661791,759.64008 L492.107699,759.440305 Z M1349.05061,756.455399 L1349.48232,756.680803 L1351.05199,757.500342 L1352.87215,758.45067 L1351.0017,759.297734 L1348.36579,760.491445 L1347.92214,760.692357 L1347.49043,760.466952 L1345.92077,759.647412 L1344.10061,758.697085 L1345.97106,757.850022 L1348.60696,756.656311 L1349.05061,756.455399 Z M1094.02067,756.35039 L1094.45255,756.577289 L1096.01259,757.396907 L1097.8272,758.35027 L1095.95891,759.19361 L1093.31428,760.387392 L1092.86963,760.588106 L1092.43776,760.361206 L1090.87772,759.541588 L1089.06312,758.588226 L1090.9314,757.744887 L1093.57602,756.551104 L1094.02067,756.35039 Z M1078.42454,748.154119 L1078.85648,748.381168 L1080.41577,749.200792 L1082.22969,750.154266 L1080.36192,750.997396 L1077.71736,752.191178 L1077.27259,752.391951 L1076.84065,752.164901 L1075.28137,751.345276 L1073.46746,750.391803 L1075.33522,749.548674 L1077.97977,748.354892 L1078.42454,748.154119 Z M1124.45692,738.412579 L1124.88892,738.639535 L1126.44904,739.459153 L1128.26314,740.412202 L1126.39561,741.255762 L1123.75277,742.44953 L1123.30804,742.650414 L1122.87603,742.423456 L1121.31592,741.603838 L1119.50183,740.65079 L1121.36935,739.80723 L1124.01219,738.613463 L1124.45692,738.412579 Z M562.179035,736.44208 L562.611024,736.67112 L564.157106,737.490853 L565.964032,738.448885 L564.098283,739.286614 L561.439288,740.480513 L560.993235,740.680793 L560.561246,740.451751 L559.015172,739.632019 L557.208254,738.673987 L559.073995,737.836259 L561.732983,736.642359 L562.179035,736.44208 Z M708.709578,733.104112 L709.141819,733.332738 L710.691553,734.152441 L712.499319,735.108625 L710.634552,735.94824 L707.983061,737.142078 L707.53719,737.342833 L707.104948,737.114205 L705.555222,736.294503 L703.747464,735.338318 L705.612223,734.498705 L708.263707,733.304867 L708.709578,733.104112 Z M1108.86004,730.216314 L1109.29212,730.443421 L1110.85148,731.263044 L1112.66489,732.216204 L1110.79787,733.059554 L1108.15511,734.253322 L1107.71026,734.454265 L1107.27818,734.227157 L1105.71884,733.407533 L1103.90543,732.454373 L1105.77244,731.611024 L1108.4152,730.417257 L1108.86004,730.216314 Z M1001.9736,728.559548 L1002.40579,728.787104 L1003.9625,729.606749 L1005.7741,730.560597 L1003.90808,731.403018 L1001.26377,732.596798 L1000.8186,732.797771 L1000.38641,732.570214 L998.829705,731.750568 L997.018115,730.796721 L998.88413,729.954302 L1001.52843,728.760522 L1001.9736,728.559548 Z M545.722525,726.244667 L546.154586,726.473861 L547.699905,727.293599 L549.506134,728.251742 L547.640908,729.089259 L544.981987,730.283158 L544.535813,730.483497 L544.103752,730.254303 L542.558441,729.434564 L540.75222,728.476422 L542.617438,727.638906 L545.276352,726.445007 L545.722525,726.244667 Z M694.216549,722.906998 L694.648863,723.135776 L696.197834,723.955485 L698.004906,724.91178 L696.14066,725.751183 L693.489243,726.945021 L693.043251,727.145835 L692.610937,726.917056 L691.061974,726.097347 L689.25491,725.141052 L691.119148,724.30165 L693.770558,723.107812 L694.216549,722.906998 Z M586.758906,721.503095 L587.191025,721.732193 L588.73718,722.551925 L590.543605,723.509644 L588.678601,724.347594 L586.021399,725.541479 L585.575267,725.741927 L585.143148,725.512827 L583.597,724.693096 L581.790584,723.735376 L583.65558,722.897428 L586.312775,721.703543 L586.758906,721.503095 Z M734.214411,719.16574 L734.646782,719.394424 L736.196589,720.214126 L738.003852,721.169997 L736.139833,722.009832 L733.490134,723.203656 L733.044184,723.40458 L732.611812,723.175895 L731.062012,722.356193 L729.254759,721.400321 L731.118769,720.560488 L733.768461,719.366664 L734.214411,719.16574 Z M986.410763,718.363005 L986.84302,718.590712 L988.398972,719.410363 L990.209881,720.364322 L988.344376,721.206532 L985.70014,722.400311 L985.25485,722.601344 L984.822592,722.373636 L983.266648,721.553984 L981.455748,720.600026 L983.321245,719.757817 L985.965474,718.564038 L986.410763,718.363005 Z M1025.40662,715.621763 L1025.83894,715.849377 L1027.39573,716.669022 L1029.20682,717.622556 L1027.34155,718.465196 L1024.69903,719.658962 L1024.25378,719.860105 L1023.82146,719.63249 L1022.26468,718.812845 L1020.4536,717.859311 L1022.31886,717.016672 L1024.96137,715.822907 L1025.40662,715.621763 Z M571.301658,712.305688 L571.733848,712.534939 L573.279241,713.354677 L575.084969,714.312507 L573.220488,715.150245 L570.563359,716.344129 L570.117106,716.544637 L569.684916,716.315385 L568.139531,715.495647 L566.333811,714.537817 L568.198284,713.700081 L570.855406,712.506196 L571.301658,712.305688 Z M718.722705,709.969723 L719.153087,710.197468 L720.702132,711.017176 L722.5087,711.973158 L720.645202,712.812782 L717.995577,714.006605 L717.411446,714.269793 L716.928206,713.849132 L715.771668,712.842367 L714.589507,711.813296 L716.020893,711.17484 L718.278011,710.168075 L718.722705,709.969723 Z M1321.51258,708.887873 L1321.94529,709.114624 L1323.50931,709.93421 L1325.32244,710.884338 L1323.45853,711.730522 L1320.82922,712.924179 L1320.3844,713.126123 L1319.95169,712.899372 L1318.38768,712.079786 L1316.57455,711.129657 L1318.43846,710.283475 L1321.06775,709.089818 L1321.51258,708.887873 Z M1011.84304,704.425226 L1012.27543,704.652991 L1013.83146,705.472642 L1015.64186,706.426286 L1013.77711,707.268716 L1011.13466,708.462481 L1010.68929,708.663684 L1010.2569,708.435918 L1008.70089,707.616267 L1006.8905,706.662622 L1008.75524,705.820194 L1011.39768,704.626429 L1011.84304,704.425226 Z M1304.8767,699.691927 L1305.30948,699.918827 L1306.87274,700.738419 L1308.68519,701.688659 L1306.82179,702.534633 L1304.19256,703.728289 L1303.74761,703.930293 L1303.31483,703.703392 L1301.75159,702.8838 L1299.93915,701.93356 L1301.80254,701.087587 L1304.43176,699.893931 L1304.8767,699.691927 Z M1346.79552,693.951314 L1347.22836,694.178123 L1348.79245,694.997708 L1350.60507,695.947521 L1348.74192,696.793926 L1346.11441,697.987568 L1345.6695,698.189684 L1345.23666,697.962874 L1343.67258,697.143289 L1341.85997,696.193476 L1343.72311,695.347073 L1346.35061,694.153431 L1346.79552,693.951314 Z M1331.15891,684.755374 L1331.59182,684.982333 L1333.15515,685.801924 L1334.96708,686.751848 L1333.10445,687.598042 L1330.47701,688.791684 L1330.03198,688.99386 L1329.59907,688.7669 L1328.03575,687.947309 L1326.22382,686.997384 L1328.08645,686.151192 L1330.71388,684.95755 L1331.15891,684.755374 Z M1227.53372,681.012562 L1227.96586,681.239059 L1229.52955,682.058648 L1231.34493,683.010152 L1229.4777,683.855373 L1226.84057,685.049094 L1226.39609,685.250292 L1225.96396,685.023794 L1224.40027,684.204205 L1222.5849,683.252701 L1224.45213,682.407481 L1227.08925,681.21376 L1227.53372,681.012562 Z M666.112731,676.309589 L666.545285,676.538881 L668.091689,677.35861 L669.896424,678.315278 L668.033931,679.153968 L665.382763,680.347804 L664.936365,680.54882 L664.50381,680.319527 L662.957414,679.499797 L661.152688,678.54313 L663.015172,677.704441 L665.666334,676.510605 L666.112731,676.309589 Z M1519.52976,675.554096 L1519.96273,675.78045 L1521.5304,676.600005 L1523.34427,677.548268 L1521.48145,678.396331 L1518.85965,679.589927 L1518.41499,679.792363 L1517.98201,679.566009 L1516.41435,678.746453 L1514.6005,677.79819 L1516.46331,676.950128 L1519.0851,675.756532 L1519.52976,675.554096 Z M814.315605,673.974298 L814.748415,674.203177 L816.29847,675.022876 L818.104032,675.977693 L816.242539,676.818269 L813.598874,678.012044 L813.152656,678.213538 L812.719846,677.984659 L811.169798,677.164959 L809.364245,676.210143 L811.22573,675.369567 L813.869388,674.175793 L814.315605,673.974298 Z M1210.90107,670.81659 L1211.33328,671.043236 L1212.89621,671.862831 L1214.7109,672.814447 L1212.84419,673.659458 L1210.20713,674.853178 L1209.76253,675.054435 L1209.33033,674.827787 L1207.7674,674.008193 L1205.95272,673.056577 L1207.81943,672.211567 L1210.45648,671.017847 L1210.90107,670.81659 Z M1107.26604,668.432297 L1107.6988,668.660106 L1109.25584,669.479748 L1111.06521,670.432224 L1109.20249,671.275607 L1106.566,672.469323 L1106.12048,672.671039 L1105.68773,672.44323 L1104.1307,671.623587 L1102.32133,670.671111 L1104.18405,669.82773 L1106.82053,668.634014 L1107.26604,668.432297 Z M650.652996,668.112203 L651.085621,668.341647 L652.631263,669.161383 L654.435303,670.118161 L652.573332,670.95664 L649.922237,672.150475 L649.475718,672.351551 L649.043092,672.122105 L647.497458,671.302369 L645.693427,670.345591 L647.55539,669.507114 L650.206478,668.313278 L650.652996,668.112203 Z M1503.85736,667.358448 L1504.29041,667.584951 L1505.85732,668.404513 L1507.6705,669.352887 L1505.80819,670.200741 L1503.18647,671.394336 L1502.74169,671.596831 L1502.30864,671.370327 L1500.74174,670.550765 L1498.92857,669.602391 L1500.79087,668.754539 L1503.41258,667.560944 L1503.85736,667.358448 Z M1252.89493,667.075364 L1253.3272,667.301919 L1254.89097,668.121507 L1256.70583,669.072697 L1254.83936,669.918138 L1252.20402,671.111845 L1251.75946,671.313213 L1251.3272,671.086657 L1249.76343,670.267069 L1247.94858,669.315879 L1249.81504,668.470439 L1252.45037,667.276732 L1252.89493,667.075364 Z M797.819352,663.777211 L798.252233,664.006241 L799.801526,664.825947 L801.606395,665.780874 L799.745421,666.621239 L797.10183,667.815013 L796.655492,668.016567 L796.222611,667.787536 L794.673325,666.96783 L792.868465,666.012903 L794.729431,665.172539 L797.373014,663.978765 L797.819352,663.777211 Z M1545.73766,663.61815 L1546.17077,663.844562 L1547.73851,664.664118 L1549.55186,665.612064 L1547.68981,666.460348 L1545.0698,667.653929 L1544.62506,667.856538 L1544.19195,667.630124 L1542.62421,666.810569 L1540.81088,665.862623 L1542.67292,665.01434 L1545.29292,663.820759 L1545.73766,663.61815 Z M690.614339,662.371244 L691.047023,662.600593 L692.593501,663.420322 L694.397732,664.376676 L692.535988,665.215587 L689.886611,666.409409 L689.440134,666.610593 L689.00745,666.381243 L687.460979,665.561514 L685.656757,664.605159 L687.518494,663.76625 L690.167863,662.572429 L690.614339,662.371244 Z M837.742174,660.036566 L838.175115,660.265502 L839.725244,661.085201 L841.530299,662.039704 L839.669558,662.880501 L837.027685,664.074261 L836.581388,664.275925 L836.148448,664.046988 L834.598326,663.227288 L832.793279,662.272786 L834.654013,661.43199 L837.295878,660.23823 L837.742174,660.036566 Z M1092.69998,659.23578 L1093.13281,659.463739 L1094.68908,660.283388 L1096.49777,661.235975 L1094.63556,662.079147 L1091.99915,663.272862 L1091.55351,663.474639 L1091.12068,663.246678 L1089.56441,662.427029 L1087.75574,661.474442 L1089.61794,660.631272 L1092.25434,659.437556 L1092.69998,659.23578 Z M1236.26154,657.879398 L1236.69388,658.106102 L1238.25689,658.925696 L1240.07106,659.876997 L1238.20511,660.722229 L1235.56984,661.915935 L1235.12517,662.117362 L1234.69283,661.890656 L1233.12983,661.071062 L1231.31566,660.119761 L1233.18161,659.274531 L1235.81686,658.080825 L1236.26154,657.879398 Z M1129.6208,656.495151 L1130.05369,656.723018 L1131.6108,657.54266 L1133.41966,658.494821 L1131.55769,659.338424 L1128.923,660.532126 L1128.4774,660.734013 L1128.04451,660.506145 L1126.48741,659.686503 L1124.67856,658.734342 L1126.54052,657.89074 L1129.1752,656.697039 L1129.6208,656.495151 Z M987.350272,655.640381 L987.783341,655.86885 L989.337049,656.68852 L991.143412,657.64148 L989.282944,658.483942 L986.646783,659.677655 L986.200743,659.879632 L985.767674,659.651162 L984.213973,658.831492 L982.407619,657.878532 L984.268079,657.036072 L986.904232,655.842359 L987.350272,655.640381 Z M1530.06453,655.422508 L1530.49771,655.64907 L1532.06469,656.468631 L1533.87735,657.416689 L1532.01581,658.264763 L1529.39588,659.458343 L1528.95102,659.661012 L1528.51784,659.434449 L1526.95087,658.614888 L1525.13821,657.66683 L1526.99974,656.818757 L1529.61967,655.625177 L1530.06453,655.422508 Z M675.153865,654.173863 L675.586621,654.403365 L677.132336,655.223101 L678.935873,656.179566 L677.074649,657.018265 L674.425347,658.212085 L673.978749,658.41333 L673.545993,658.183827 L672.000285,657.364092 L670.196757,656.407627 L672.057973,655.568929 L674.707268,654.375108 L675.153865,654.173863 Z M822.245183,650.839484 L822.678194,651.068573 L824.227562,651.888278 L826.031925,652.842891 L824.171702,653.683476 L821.529903,654.877236 L821.083486,655.07896 L820.650474,654.849871 L819.101114,654.030165 L817.29676,653.075552 L819.156974,652.234968 L821.798766,651.041209 L822.245183,650.839484 Z M971.817501,647.443592 L972.250641,647.672212 L973.803587,648.491888 L975.60926,649.444959 L973.74931,650.28721 L971.113222,651.480923 L970.667062,651.68296 L970.233921,651.454338 L968.680984,650.634662 L966.875319,649.681591 L968.735261,648.839342 L971.371341,647.645629 L971.817501,647.443592 Z M1114.054,646.29864 L1114.48696,646.526658 L1116.0433,647.346306 L1117.85148,648.298578 L1115.99003,649.141971 L1113.35541,650.335671 L1112.90969,650.537619 L1112.47673,650.3096 L1110.92039,649.489951 L1109.11223,648.537679 L1110.97367,647.694288 L1113.60828,646.500588 L1114.054,646.29864 Z M1011.7018,642.703261 L1012.135,642.931788 L1013.68878,643.751458 L1015.49464,644.704103 L1013.63493,645.546785 L1011.00056,646.740484 L1010.55444,646.942633 L1010.12124,646.714104 L1008.56746,645.894435 L1006.76162,644.94179 L1008.62132,644.099109 L1011.25568,642.90541 L1011.7018,642.703261 Z M1453.14968,633.765976 L1453.58297,633.992981 L1455.14731,634.812564 L1456.95819,635.761314 L1455.09761,636.60846 L1452.47613,637.802053 L1452.03096,638.004749 L1451.59767,637.777742 L1450.03334,636.958159 L1448.22247,636.00941 L1450.08304,635.162265 L1452.7045,633.968672 L1453.14968,633.765976 Z M995.168293,632.506478 L995.601565,632.735157 L997.154584,633.554832 L998.959748,634.507589 L997.100553,635.35006 L994.466258,636.543758 L994.020018,636.745966 L993.586746,636.517286 L992.033735,635.697611 L990.228579,634.744854 L992.087766,633.902385 L994.722054,632.708687 L995.168293,632.506478 Z M1437.51058,625.570056 L1437.94394,625.797211 L1439.50752,626.6168 L1441.31771,627.565661 L1439.45765,628.412597 L1436.83625,629.60619 L1436.39095,629.808945 L1435.95759,629.581789 L1434.39402,628.762199 L1432.58383,627.813339 L1434.44389,626.966404 L1437.06529,625.772811 L1437.51058,625.570056 Z M779.704676,622.17989 L780.137798,622.409434 L781.684525,623.229161 L783.48706,624.18446 L781.627836,625.024113 L778.984493,626.217885 L778.537749,626.419641 L778.104627,626.190096 L776.557908,625.370369 L774.755382,624.41507 L776.614597,623.575418 L779.257932,622.381646 L779.704676,622.17989 Z M1475.35436,620.830056 L1475.78778,621.05712 L1477.35219,621.876703 L1479.16256,622.825136 L1477.30274,623.672503 L1474.68306,624.866081 L1474.2378,625.06895 L1473.80438,624.841884 L1472.23998,624.022302 L1470.42962,623.073869 L1472.28943,622.226503 L1474.9091,621.032925 L1475.35436,620.830056 Z M764.241716,613.98253 L764.674909,614.212227 L766.220874,615.03196 L768.022715,615.98737 L766.164011,616.826811 L763.520743,618.020582 L763.073878,618.222398 L762.640684,617.9927 L761.094727,617.172967 L759.292894,616.217557 L761.15159,615.378118 L763.794851,614.184346 L764.241716,613.98253 Z M917.579881,613.847276 L918.013262,614.076408 L919.56364,614.896105 L921.366988,615.849549 L919.508782,616.691088 L916.872943,617.884799 L916.426378,618.087038 L915.992997,617.857905 L914.442626,617.038208 L912.639287,616.084764 L914.497485,615.243226 L917.133317,614.049515 L917.579881,613.847276 Z M1459.71452,612.634142 L1460.14801,612.861356 L1461.71166,613.680945 L1463.52134,614.629489 L1461.66204,615.476646 L1459.04243,616.670224 L1458.59706,616.873152 L1458.16356,616.645937 L1456.59992,615.826348 L1454.79025,614.877804 L1456.64954,614.030648 L1459.26915,612.83707 L1459.71452,612.634142 Z M1209.21673,610.307837 L1209.65006,610.5359 L1211.20742,611.35554 L1213.01456,612.30664 L1211.15515,613.150986 L1208.52649,614.344637 L1208.08062,614.547102 L1207.64729,614.319038 L1206.08994,613.499398 L1204.28281,612.548298 L1206.14222,611.703954 L1208.77087,610.510302 L1209.21673,610.307837 Z M806.12802,610.242184 L806.561273,610.471786 L808.108073,611.291512 L809.910104,612.246498 L808.05163,613.086371 L805.41008,614.280128 L804.963256,614.482054 L804.530004,614.252451 L802.983211,613.432725 L801.181189,612.477739 L803.039655,611.637868 L805.681189,610.44411 L806.12802,610.242184 Z M903.080403,604.650214 L903.513855,604.879499 L905.063471,605.699202 L906.866128,606.652757 L905.00844,607.494084 L902.372675,608.687795 L901.925989,608.890094 L901.492537,608.660808 L899.942928,607.841105 L898.14028,606.88755 L899.997961,606.046224 L902.633718,604.852514 L903.080403,604.650214 Z M790.664322,602.04483 L791.097646,602.274585 L792.643684,603.094317 L794.445021,604.049413 L792.587067,604.889074 L789.945591,606.082831 L789.498646,606.284818 L789.065322,606.055062 L787.519291,605.235329 L785.717963,604.280233 L787.575909,603.440573 L790.217378,602.246816 L790.664322,602.04483 Z M941.928187,600.910183 L942.361699,601.139373 L943.912151,601.959069 L945.714991,602.912199 L943.857539,603.753958 L941.223493,604.947655 L940.776848,605.150065 L940.343335,604.920873 L938.792891,604.101177 L936.990059,603.148047 L938.847504,602.306289 L941.481543,601.112593 L941.928187,600.910183 Z M1193.64744,600.111346 L1194.08085,600.33956 L1195.63744,601.159206 L1197.4439,602.110417 L1195.585,602.954552 L1192.95641,604.148204 L1192.51043,604.350728 L1192.07702,604.122513 L1190.52043,603.302867 L1188.71399,602.351656 L1190.57288,601.507522 L1193.20146,600.313871 L1193.64744,600.111346 Z M1233.49323,596.371331 L1233.92669,596.599452 L1235.48412,597.419091 L1237.29075,598.369876 L1235.43209,599.214442 L1232.80523,600.408079 L1232.35928,600.610716 L1231.92582,600.382593 L1230.36839,599.562954 L1228.56177,598.612169 L1230.42042,597.767605 L1233.04728,596.573967 L1233.49323,596.371331 Z M926.42797,590.713127 L926.861554,590.94247 L928.411244,591.762172 L930.213393,592.715413 L928.356458,593.556961 L925.722486,594.750656 L925.27572,594.953127 L924.842137,594.723783 L923.292454,593.90408 L921.490314,592.95084 L923.34724,592.109293 L925.981206,590.915598 L926.42797,590.713127 Z M1217.9232,586.174846 L1218.35673,586.403118 L1219.9134,587.222764 L1221.71934,588.173659 L1219.8612,589.018015 L1217.23441,590.211651 L1216.78834,590.414348 L1216.35481,590.186074 L1214.79815,589.366429 L1212.99222,588.415533 L1214.85035,587.571179 L1217.47713,586.377543 L1217.9232,586.174846 Z M1702.80688,571.318445 L1703.24102,571.545313 L1704.80933,572.364864 L1706.61865,573.310356 L1704.76255,574.160346 L1702.1564,575.353814 L1701.71104,575.557767 L1701.2769,575.330898 L1699.70859,574.511347 L1697.89928,573.565855 L1699.75537,572.715866 L1702.36151,571.522398 L1702.80688,571.318445 Z M894.95487,570.052982 L895.388563,570.28278 L896.935612,571.102504 L898.73594,572.056432 L896.879997,572.897047 L894.244481,574.090755 L893.797389,574.293257 L893.363696,574.063457 L891.816654,573.243733 L890.016335,572.289805 L891.87227,571.449192 L894.507779,570.255484 L894.95487,570.052982 Z M1687.12803,563.12285 L1687.56224,563.349867 L1689.1298,564.169424 L1690.93844,565.115028 L1689.08284,565.964808 L1686.47677,567.158276 L1686.03129,567.362288 L1685.59708,567.13527 L1684.02953,566.315713 L1682.2209,565.370109 L1684.07648,564.52033 L1686.68255,563.326863 L1687.12803,563.12285 Z M1435.91499,561.976666 L1436.34858,562.204327 L1437.9096,563.023938 L1439.71749,563.973173 L1437.85915,564.819401 L1435.238,566.012992 L1434.7923,566.215948 L1434.3587,565.988286 L1432.7977,565.168676 L1430.98982,564.21944 L1432.84815,563.373214 L1435.46929,562.179623 L1435.91499,561.976666 Z M879.488684,561.855648 L879.922449,562.085599 L881.468736,562.90533 L883.268372,563.859368 L881.412947,564.699771 L878.777505,565.893478 L878.330293,566.096041 L877.896527,565.866088 L876.350248,565.046357 L874.550622,564.092319 L876.406038,563.251918 L879.041473,562.05821 L879.488684,561.855648 Z M1728.85825,559.383778 L1729.29253,559.610705 L1730.86091,560.430255 L1732.66971,561.37543 L1730.81438,562.22564 L1728.21003,563.419094 L1727.76458,563.623221 L1727.33031,563.396293 L1725.76193,562.576743 L1723.95314,561.631568 L1725.80846,560.781359 L1728.41281,559.587906 L1728.85825,559.383778 Z M921.29995,558.115915 L921.733775,558.345771 L923.280898,559.165495 L925.080719,560.119108 L923.225529,560.959943 L920.591805,562.153637 L920.144634,562.35631 L919.710809,562.126452 L918.163694,561.306728 L916.363881,560.353116 L918.219063,559.512282 L920.85278,558.318588 L921.29995,558.115915 Z M1022.50241,552.723045 L1022.93636,552.952432 L1024.48706,553.772126 L1026.28819,554.724195 L1024.43328,555.566697 L1021.80527,556.760344 L1021.35835,556.963332 L1020.9244,556.733944 L1019.37371,555.914249 L1017.57259,554.962181 L1019.42749,554.11968 L1022.05549,552.926034 L1022.50241,552.723045 Z M1420.30918,551.780474 L1420.74285,552.008285 L1422.3031,552.827902 L1424.1103,553.777248 L1422.25248,554.623266 L1419.6314,555.816856 L1419.18559,556.019872 L1418.75192,555.79206 L1417.19167,554.972443 L1415.38448,554.023097 L1417.24229,553.17708 L1419.86336,551.98349 L1420.30918,551.780474 Z M1713.17867,551.188189 L1713.61302,551.415265 L1715.18064,552.234821 L1716.98876,553.180107 L1715.13394,554.030108 L1712.52966,555.223561 L1712.0841,555.427748 L1711.64975,555.200671 L1710.08213,554.381114 L1708.27402,553.435828 L1710.12883,552.585829 L1712.73311,551.392376 L1713.17867,551.188189 Z M905.833027,549.918587 L906.266923,550.148597 L907.813283,550.968327 L909.612413,551.92205 L907.757741,552.762674 L905.124091,553.956366 L904.676799,554.1591 L904.242903,553.929089 L902.69655,553.109359 L900.897429,552.155636 L902.752093,551.315013 L905.385735,550.121321 L905.833027,549.918587 Z M1461.11644,548.040773 L1461.55017,548.268493 L1463.11126,549.088102 L1464.91863,550.037021 L1463.06106,550.88347 L1460.4417,552.077046 L1459.99592,552.280175 L1459.56219,552.052454 L1458.00111,551.232845 L1456.19374,550.283926 L1458.05131,549.437478 L1460.67066,548.243902 L1461.11644,548.040773 Z M1006.9997,544.526009 L1007.43373,544.755549 L1008.98367,545.57525 L1010.78411,546.527429 L1008.92971,547.369719 L1006.30178,548.563365 L1005.85474,548.766415 L1005.42071,548.536874 L1003.87078,547.717173 L1002.07036,546.764994 L1003.92474,545.922705 L1006.55267,544.729059 L1006.9997,544.526009 Z M1045.77245,540.786591 L1046.20654,541.016037 L1047.75731,541.835731 L1049.55793,542.787484 L1047.70378,543.630206 L1045.07756,544.823838 L1044.63056,545.026999 L1044.19647,544.797552 L1042.64571,543.977858 L1040.8451,543.026105 L1042.69924,542.183384 L1045.32546,540.989752 L1045.77245,540.786591 Z M1445.50989,537.844587 L1445.9437,538.072457 L1447.50402,538.892073 L1449.31071,539.841103 L1447.45365,540.687341 L1444.83436,541.880916 L1444.38847,542.084105 L1443.95466,541.856234 L1442.39435,541.036618 L1440.58767,540.087588 L1442.44472,539.241351 L1445.064,538.047776 L1445.50989,537.844587 Z M1193.88174,536.394481 L1194.31596,536.623461 L1195.87031,537.443126 L1197.67221,538.393331 L1195.81836,539.237718 L1193.19786,540.431304 L1192.75112,540.634784 L1192.31689,540.405803 L1190.76255,539.586138 L1188.96066,538.635933 L1190.8145,537.791547 L1193.435,536.597961 L1193.88174,536.394481 Z M1030.26901,532.589561 L1030.70317,532.81916 L1032.25318,533.63886 L1034.05311,534.590724 L1032.19947,535.433234 L1029.57332,536.626866 L1029.12621,536.830087 L1028.69205,536.600488 L1027.14205,535.780788 L1025.34213,534.828924 L1027.19575,533.986414 L1029.82189,532.792783 L1030.26901,532.589561 Z M1178.34251,528.197744 L1178.77681,528.426876 L1180.3304,529.246547 L1182.13161,530.196863 L1180.27828,531.041039 L1177.65784,532.234624 L1177.21098,532.438164 L1176.77669,532.209031 L1175.22311,531.389361 L1173.42191,530.439044 L1175.27523,529.594869 L1177.89566,528.401285 L1178.34251,528.197744 Z M1220.07674,524.45864 L1220.51109,524.687679 L1222.06552,525.507343 L1223.86691,526.457232 L1222.01382,527.30184 L1219.39511,528.495411 L1218.94829,528.699064 L1218.51393,528.470024 L1216.95951,527.65036 L1215.15813,526.700471 L1217.01121,525.855864 L1219.62992,524.662294 L1220.07674,524.45864 Z M1660.39864,516.530554 L1660.83309,516.758075 L1662.39807,517.577653 L1664.20442,518.523632 L1662.35055,519.372705 L1659.74472,520.56617 L1659.29884,520.770384 L1658.86439,520.542862 L1657.29941,519.723284 L1655.49307,518.777305 L1657.34694,517.928233 L1659.95275,516.734768 L1660.39864,516.530554 Z M1204.53678,516.261909 L1204.9712,516.4911 L1206.52487,517.31077 L1208.32557,518.26077 L1206.473,519.105167 L1203.85436,520.298737 L1203.40742,520.502451 L1202.97299,520.273259 L1201.41933,519.453588 L1199.61864,518.503588 L1201.47121,517.659193 L1204.08984,516.465623 L1204.53678,516.261909 Z M1644.75309,506.334686 L1645.18761,506.562357 L1646.75183,507.381941 L1648.5575,508.328032 L1646.70414,509.176895 L1644.09839,510.37036 L1643.65238,510.574633 L1643.21786,510.346961 L1641.65365,509.527377 L1639.84799,508.581287 L1641.70134,507.732425 L1644.30708,506.53896 L1644.75309,506.334686 Z M1683.44679,502.595913 L1683.88137,502.823493 L1685.44643,503.64307 L1687.25226,504.588731 L1685.39916,505.438025 L1682.79513,506.631476 L1682.34916,506.835865 L1681.91458,506.608284 L1680.34952,505.788706 L1678.5437,504.843045 L1680.3968,503.993753 L1683.00082,502.800302 L1683.44679,502.595913 Z M979.863312,497.928865 L980.29758,498.158919 L981.844952,498.978641 L983.643064,499.931193 L981.790414,500.77277 L979.162724,501.966414 L978.715284,502.169667 L978.281016,501.939612 L976.733652,501.11989 L974.935548,500.167338 L976.78819,499.325762 L979.415873,498.132118 L979.863312,497.928865 Z M1126.08318,495.601605 L1126.51771,495.831249 L1128.06874,496.650941 L1129.86763,497.60163 L1128.01604,498.445095 L1125.39585,499.638678 L1124.94859,499.842421 L1124.51405,499.612776 L1122.96304,498.793084 L1121.16415,497.842394 L1123.01574,496.998931 L1125.63592,495.805349 L1126.08318,495.601605 Z M1667.8005,493.400051 L1668.23515,493.627781 L1669.79945,494.447365 L1671.6046,495.393137 L1669.75201,496.242221 L1667.14805,497.435671 L1666.70197,497.64012 L1666.26731,497.412389 L1664.70302,496.592805 L1662.89788,495.647033 L1664.75047,494.79795 L1667.35442,493.6045 L1667.8005,493.400051 Z M1419.13484,491.275718 L1419.56964,491.504956 L1421.12432,492.324618 L1422.92397,493.273441 L1421.07346,494.118791 L1418.46078,495.312312 L1418.01369,495.516552 L1417.57888,495.287312 L1416.02422,494.46765 L1414.22457,493.518828 L1416.07508,492.673479 L1418.68775,491.479957 L1419.13484,491.275718 Z M1564.13578,488.741474 L1564.57054,488.96965 L1566.13219,489.789255 L1567.93557,490.735721 L1566.08392,491.583876 L1563.47842,492.777338 L1563.03202,492.981815 L1562.59726,492.753637 L1561.03561,491.934031 L1559.23225,490.987566 L1561.08388,490.139413 L1563.68938,488.94595 L1564.13578,488.741474 Z M964.393902,487.731557 L964.828242,487.961765 L966.374851,488.781492 L968.172272,489.734155 L966.32014,490.575521 L963.692524,491.769164 L963.244963,491.972477 L962.810623,491.742269 L961.264022,490.922541 L959.466609,489.969878 L961.318733,489.128514 L963.946342,487.93487 L964.393902,487.731557 Z M1110.57725,485.404596 L1111.01186,485.634392 L1112.56212,486.45409 L1114.36033,487.404891 L1112.50925,488.248144 L1109.88913,489.441726 L1109.44175,489.64553 L1109.00714,489.415732 L1107.45689,488.596034 L1105.65869,487.645234 L1107.50976,486.801982 L1110.12987,485.6084 L1110.57725,485.404596 Z M1005.13013,482.992437 L1005.56453,483.22255 L1007.11197,484.042271 L1008.90958,484.994508 L1007.05768,485.836306 L1004.43179,487.029935 L1003.98427,487.23336 L1003.54987,487.003246 L1002.00243,486.183525 L1000.20483,485.231288 L1002.05672,484.389492 L1004.68261,483.195862 L1005.13013,482.992437 Z M1150.27496,481.66579 L1150.70962,481.895493 L1152.26072,482.715184 L1154.05911,483.665558 L1152.20827,484.509243 L1149.58988,485.702811 L1149.14253,485.906728 L1148.70787,485.677024 L1147.15678,484.857332 L1145.3584,483.906959 L1147.20923,483.063275 L1149.82761,481.869707 L1150.27496,481.66579 Z M1401.59239,481.079007 L1402.02727,481.308397 L1403.58118,482.128065 L1405.38015,483.076999 L1403.53015,483.922138 L1400.91754,485.115659 L1400.47033,485.319959 L1400.03546,485.090567 L1398.48155,484.270899 L1396.68259,483.321966 L1398.53258,482.476828 L1401.14518,481.283307 L1401.59239,481.079007 Z M1548.52352,479.545334 L1548.95835,479.773661 L1550.51925,480.593272 L1552.32194,481.539849 L1550.4708,482.387793 L1547.86538,483.581256 L1547.41886,483.785792 L1546.98402,483.557463 L1545.42314,482.737852 L1543.62045,481.791275 L1545.47158,480.943332 L1548.077,479.74987 L1548.52352,479.545334 Z M1441.25158,478.340516 L1441.68652,478.569813 L1443.24126,479.389475 L1445.04041,480.33798 L1443.19065,481.183551 L1440.57976,482.377058 L1440.13259,482.581472 L1439.69766,482.352173 L1438.14292,481.532512 L1436.34378,480.584006 L1438.19353,479.738437 L1440.80441,478.54493 L1441.25158,478.340516 Z M1300.3222,477.482956 L1300.75732,477.712859 L1302.30866,478.532548 L1304.10532,479.481855 L1302.25705,480.326282 L1299.64469,481.519801 L1299.19707,481.724305 L1298.76196,481.494401 L1297.21062,480.674711 L1295.41397,479.725405 L1297.26224,478.880978 L1299.87459,477.68746 L1300.3222,477.482956 Z M1589.1807,474.806859 L1589.6156,475.035095 L1591.17733,475.854699 L1592.98018,476.800847 L1591.12931,477.649222 L1588.5256,478.84267 L1588.07912,479.047322 L1587.64422,478.819084 L1586.0825,477.99948 L1584.27965,477.053332 L1586.13052,476.204958 L1588.73422,475.01151 L1589.1807,474.806859 Z M989.659981,474.795136 L990.094452,475.025402 L991.641135,475.845129 L993.438049,476.797476 L991.586672,477.639062 L988.960848,478.832691 L988.513207,479.036177 L988.078735,478.805909 L986.53206,477.986182 L984.735155,477.033835 L986.586524,476.19225 L989.21234,474.998621 L989.659981,474.795136 Z M1133.76829,472.468787 L1134.20303,472.698643 L1135.75336,473.51834 L1137.55106,474.468824 L1135.70074,475.312298 L1133.08242,476.505865 L1132.63496,476.709843 L1132.20022,476.479986 L1130.64989,475.660288 L1128.8522,474.709804 L1130.70252,473.866332 L1133.32083,472.672765 L1133.76829,472.468787 Z M1283.81305,468.285973 L1284.24823,468.516028 L1285.79882,469.335724 L1287.59479,470.285141 L1285.74703,471.129358 L1283.13475,472.322876 L1282.68701,472.52744 L1282.25183,472.297383 L1280.70125,471.477688 L1278.90529,470.52827 L1280.75304,469.684055 L1283.36531,468.490537 L1283.81305,468.285973 Z M1425.7084,468.143811 L1426.1434,468.373261 L1427.69739,469.192928 L1429.49585,470.141545 L1427.64661,470.986904 L1425.03579,472.180411 L1424.5885,472.384885 L1424.15349,472.155434 L1422.59951,471.335766 L1420.80107,470.38715 L1422.6503,469.541792 L1425.26111,468.348286 L1425.7084,468.143811 Z M1574.56771,464.610725 L1575.00267,464.839112 L1576.56364,465.658722 L1578.36581,466.604981 L1576.51545,467.453146 L1573.91181,468.646593 L1573.46521,468.851305 L1573.03025,468.622917 L1571.46929,467.803306 L1569.66712,466.857047 L1571.51748,466.008884 L1574.12111,464.815436 L1574.56771,464.610725 Z M1323.43572,464.54778 L1323.87096,464.777743 L1325.42238,465.597431 L1327.21853,466.546421 L1325.37102,467.391069 L1322.76045,468.584573 L1322.31276,468.789251 L1321.87751,468.559288 L1320.3261,467.739599 L1318.52996,466.79061 L1320.37746,465.945963 L1322.98802,464.752459 L1323.43572,464.54778 Z M1307.92583,454.350803 L1308.36114,454.580918 L1309.9118,455.400613 L1311.70726,456.349714 L1309.86027,457.19415 L1307.24977,458.387654 L1306.80196,458.592393 L1306.36664,458.362276 L1304.81599,457.542582 L1303.02054,456.593481 L1304.86752,455.749046 L1307.47801,454.555542 L1307.92583,454.350803 Z M1084.43,437.80754 L1084.86485,438.037851 L1086.41254,438.85757 L1088.20843,439.808743 L1086.35909,440.651283 L1083.73922,441.844864 L1083.29143,442.048871 L1082.85659,441.818559 L1081.3089,440.99884 L1079.51302,440.047667 L1081.36236,439.205128 L1083.98221,438.011548 L1084.43,437.80754 Z M1068.95737,429.610258 L1069.39229,429.840723 L1070.93922,430.660448 L1072.73442,431.611732 L1070.88559,432.45406 L1068.2658,433.64764 L1067.81789,433.851708 L1067.38297,433.621243 L1065.83605,432.801517 L1064.04086,431.850234 L1065.88968,431.007906 L1068.50946,429.814327 L1068.95737,429.610258 Z M1107.61856,424.871751 L1108.05354,425.102121 L1109.6013,425.92184 L1111.39668,426.872697 L1109.5481,427.715458 L1106.93003,428.909023 L1106.48216,429.113205 L1106.04718,428.882833 L1104.49942,428.063114 L1102.70405,427.112258 L1104.55262,426.269498 L1107.17069,425.075933 L1107.61856,424.871751 Z M1546.04619,418.159746 L1546.48158,418.389244 L1548.03658,419.208903 L1549.83398,420.156339 L1547.98681,421.002653 L1545.38195,422.19611 L1544.93451,422.401114 L1544.49912,422.171614 L1542.94413,421.351955 L1541.14674,420.404519 L1542.9939,419.558207 L1545.59875,418.364749 L1546.04619,418.159746 Z M1090.14518,416.674475 L1090.58023,416.904999 L1092.12724,417.724724 L1093.92193,418.675691 L1092.07386,419.51824 L1089.45586,420.711805 L1089.00787,420.916048 L1088.57282,420.685523 L1087.02582,419.865798 L1085.23114,418.914831 L1087.0792,418.072283 L1089.69719,416.878718 L1090.14518,416.674475 Z M1530.50052,409.963061 L1530.93598,410.192711 L1532.49022,411.012377 L1534.28694,411.959924 L1532.44027,412.806026 L1529.83549,413.999483 L1529.38793,414.204547 L1528.95247,413.974896 L1527.39824,413.15523 L1525.60153,412.207683 L1527.44819,411.361582 L1530.05296,410.168125 L1530.50052,409.963061 Z\"\n              id=\"形状结合备份-30\"\n              fill=\"url(#radialGradient-3)\"\n              fillRule=\"nonzero\"\n              transform=\"translate(1097.569493, 723.686855) scale(-1, -1) translate(-1097.569493, -723.686855) \"\n            />\n\n            <line\n              x1=\"805.184221\"\n              y1=\"957.027165\"\n              className=\"delay\"\n              x2=\"1673.38181\"\n              y2=\"461.498589\"\n              stroke=\"url(#strokeGradient)\"\n              strokeWidth=\"1\"\n            />\n            <line\n              x1=\"530.616911\"\n              y1=\"788.682941\"\n              className=\"animateLine\"\n              x2=\"1398.8145\"\n              y2=\"293.154365\"\n              stroke=\"url(#strokeGradient)\"\n              strokeWidth=\"1\"\n            />\n            <line\n              x1=\"308.971926\"\n              y1=\"652.786745 \"\n              className=\"delay\"\n              x2=\"1177.16951\"\n              y2=\"157.258168\"\n              stroke=\"url(#strokeGradient)\"\n              strokeWidth=\"1\"\n            />\n          </g>\n        </g>\n      </svg>\n      <div className=\"mask\" style={maskStyle} />\n    </div>\n  );\n}\n\nexport { GridBackground };\n","import React from \"react\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport { createDecorators } from \"@next-core/element\";\n\nconst { defineElement, property } = createDecorators();\n\ninterface GearBackgroundProps {\n  color?: React.CSSProperties[\"color\"];\n}\n\n/**\n * 齿轮背景\n * @author astrid\n * @category big-screen-layout\n */\n@defineElement(\"data-view.gear-background\")\nclass GearBackground extends ReactNextElement implements GearBackgroundProps {\n  /**\n   * @kind React.CSSProperties[\"color\"]\n   * @default \"#235F90\"\n   * @required false\n   * @description 背景条纹颜色\n   */\n  @property({ attribute: false })\n  accessor color: React.CSSProperties[\"color\"] = \"#3366FF\";\n\n  render(): React.ReactNode {\n    return <GearBackgroundComponent color={this.color} />;\n  }\n}\n\nexport function GearBackgroundComponent(props: GearBackgroundProps) {\n  const { color } = props;\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 700 700\" version=\"1.1\">\n      <defs>\n        <linearGradient\n          x1=\"15.7885754%\"\n          y1=\"62.1706048%\"\n          x2=\"2.42636724%\"\n          y2=\"67.4431602%\"\n          id=\"linearGradient-1\"\n        >\n          <stop stopColor={color} stopOpacity=\"0\" offset=\"0%\" />\n          <stop stopColor={color} offset=\"100%\" />\n        </linearGradient>\n        <linearGradient\n          x1=\"16.9161534%\"\n          y1=\"62.3182854%\"\n          x2=\"4.07098064%\"\n          y2=\"67.2589943%\"\n          id=\"linearGradient-2\"\n        >\n          <stop stopColor={color} stopOpacity=\"0\" offset=\"0%\" />\n          <stop stopColor={color} offset=\"100%\" />\n        </linearGradient>\n        <radialGradient\n          cx=\"2.5267924%\"\n          cy=\"64.6392083%\"\n          fx=\"2.5267924%\"\n          fy=\"64.6392083%\"\n          r=\"100%\"\n          id=\"radialGradient-3\"\n        >\n          <stop stopColor={color} offset=\"0%\" />\n          <stop stopColor={color} stopOpacity=\"0\" offset=\"100%\" />\n        </radialGradient>\n        <radialGradient\n          cx=\"101.11091%\"\n          cy=\"45.7375653%\"\n          fx=\"101.11091%\"\n          fy=\"45.7375653%\"\n          r=\"100%\"\n          id=\"radialGradient-4\"\n        >\n          <stop stopColor={color} offset=\"0%\" />\n          <stop stopColor={color} stopOpacity=\"0\" offset=\"100%\" />\n        </radialGradient>\n        <radialGradient\n          cx=\"84.252937%\"\n          cy=\"89.3580682%\"\n          fx=\"84.252937%\"\n          fy=\"89.3580682%\"\n          r=\"43.0554013%\"\n          gradientTransform=\"translate(0.842529,0.893581),scale(1.000000,0.999877),rotate(-131.371143),translate(-0.842529,-0.893581)\"\n          id=\"radialGradient-5\"\n        >\n          <stop stopColor={color} offset=\"0%\" />\n          <stop stopColor={color} stopOpacity=\"0\" offset=\"100%\" />\n        </radialGradient>\n        <radialGradient\n          cx=\"50.9018381%\"\n          cy=\"50%\"\n          fx=\"50.9018381%\"\n          fy=\"50%\"\n          r=\"51.5955977%\"\n          id=\"radialGradient-6\"\n        >\n          <stop stopColor=\"#1C3D93\" offset=\"0%\" />\n          <stop stopColor=\"#000000\" stopOpacity=\"0.5\" offset=\"100%\" />\n        </radialGradient>\n        <radialGradient\n          cx=\"10.808164%\"\n          cy=\"24.5548269%\"\n          fx=\"10.808164%\"\n          fy=\"24.5548269%\"\n          r=\"55.4365551%\"\n          id=\"radialGradient-7\"\n        >\n          <stop stopColor={color} offset=\"0%\" />\n          <stop stopColor={color} stopOpacity=\"0\" offset=\"100%\" />\n        </radialGradient>\n        <radialGradient\n          cx=\"83.4518688%\"\n          cy=\"85.0310854%\"\n          fx=\"83.4518688%\"\n          fy=\"85.0310854%\"\n          r=\"36.6230822%\"\n          gradientTransform=\"translate(0.834519,0.850311),scale(1.000000,0.999937),rotate(90.000000),translate(-0.834519,-0.850311)\"\n          id=\"radialGradient-8\"\n        >\n          <stop stopColor={color} offset=\"0%\" />\n          <stop stopColor={color} stopOpacity=\"0\" offset=\"100%\" />\n        </radialGradient>\n        <path\n          d=\"M471.142144,725.196375 C611.422471,725.196375 725.142144,611.476702 725.142144,471.196375 C725.142144,330.916049 611.422471,217.196375 471.142144,217.196375 C330.861818,217.196375 217.142144,330.916049 217.142144,471.196375 C217.142144,611.476702 330.861818,725.196375 471.142144,725.196375 Z\"\n          id=\"path-9\"\n        />\n        <mask\n          id=\"mask-10\"\n          maskContentUnits=\"userSpaceOnUse\"\n          maskUnits=\"objectBoundingBox\"\n          x=\"0\"\n          y=\"0\"\n          width=\"508\"\n          height=\"508\"\n          fill=\"white\"\n        >\n          <use xlinkHref=\"#path-9\" />\n        </mask>\n      </defs>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(-610.000000, -76.000000)\">\n          <g transform=\"translate(488.857856, -45.196375)\">\n            <path\n              d=\"M473.94817,781.183867 L474.124637,801.17129 L471.141637,801.19629 L471.141637,781.19629 C472.077664,781.19629 473.01318,781.192147 473.94817,781.183867 Z M462.740901,781.084808 C463.680543,781.109777 464.620764,781.130556 465.561547,781.147141 L465.208554,801.144026 C464.207102,801.12637 463.206739,801.104253 462.207483,801.077693 L462.740901,781.084808 Z M485.249209,780.881371 L486.145391,800.861282 C485.150178,800.905815 484.153819,800.94594 483.156331,800.981638 L482.438739,780.994515 C483.376174,780.960974 484.313003,780.923257 485.249209,780.881371 Z M451.476035,780.58329 C452.413881,780.641942 453.352402,780.696398 454.291579,780.746652 L453.220605,800.717957 C452.221417,800.664485 451.223409,800.606567 450.226601,800.544224 L451.476035,780.58329 Z M496.513959,780.173969 L498.12695,800.108819 C497.133183,800.189248 496.138173,800.265274 495.141938,800.336877 L493.706318,780.388469 C494.642909,780.321158 495.578796,780.249656 496.513959,780.173969 Z M440.231353,779.67603 C441.166218,779.768503 442.101857,779.856779 443.038252,779.940854 L441.247228,799.860498 C440.2509,799.771035 439.255847,799.677144 438.26209,799.578844 L440.231353,779.67603 Z M507.718973,779.062992 L510.053138,798.926317 C509.062026,799.042738 508.069571,799.154767 507.075792,799.262385 L504.920791,779.378824 C505.854331,779.277736 506.787065,779.172456 507.718973,779.062992 Z M429.015936,778.360532 C429.946131,778.486833 430.877204,778.608949 431.809136,778.726873 L429.297021,798.568477 C428.304374,798.442867 427.313102,798.312846 426.323225,798.178436 L429.015936,778.360532 Z M518.885973,777.545128 L521.941616,797.310326 C520.955562,797.462679 519.968067,797.610667 518.97915,797.754269 L516.104126,777.961992 C517.032324,777.82721 517.959613,777.688252 518.885973,777.545128 Z M417.869139,776.639663 C418.79384,776.799741 419.719525,776.955648 420.646175,777.107377 L417.414424,796.844544 C416.426718,796.682818 415.440488,796.516706 414.455753,796.346231 L417.869139,776.639663 Z M530.005423,775.618639 L533.780425,795.259142 C532.802861,795.446978 531.823763,795.6305 530.843151,795.809689 L527.24677,776.135694 C528.167341,775.967482 529.086898,775.795127 530.005423,775.618639 Z M406.770262,774.508267 C407.688347,774.702084 408.607527,774.891752 409.527781,775.077262 L405.574243,794.682606 C404.594097,794.485019 403.615524,794.283089 402.638545,794.076836 L406.770262,774.508267 Z M541.034525,773.28957 L545.525017,792.778939 C544.549037,793.003774 543.571403,793.224282 542.592135,793.440439 L538.279963,773.910841 C539.199295,773.707918 540.117489,773.500825 541.034525,773.28957 Z M395.787783,771.978963 C396.698218,772.20627 397.609862,772.429453 398.522692,772.648504 L393.854137,792.095987 C392.881589,791.862601 391.910716,791.624908 390.94154,791.382929 L395.787783,771.978963 Z M551.94235,770.565998 L557.142828,789.878041 C556.179762,790.137301 555.214955,790.392312 554.248426,790.643052 L549.224679,771.284282 C550.131817,771.048954 551.037714,770.809523 551.94235,770.565998 Z M384.901281,769.047948 C385.802589,769.308424 386.705221,769.564812 387.609155,769.817102 L382.232822,789.080929 C381.269135,788.811963 380.307227,788.538732 379.347119,788.261258 L384.901281,769.047948 Z M562.797412,767.428811 L568.703244,786.536954 C567.747383,786.832347 566.789667,787.123513 565.830117,787.410431 L560.099976,768.248868 C561.000494,767.979604 561.899647,767.706248 562.797412,767.428811 Z M374.120541,765.716762 C375.011753,766.010166 375.904408,766.299522 376.798484,766.58482 L370.717015,785.637792 C369.764534,785.333852 368.813932,785.025704 367.865231,784.71337 L374.120541,765.716762 Z M573.507694,763.902545 L580.110323,782.781244 C579.164618,783.111956 578.216948,783.438483 577.267336,783.760805 L570.838456,764.822233 C571.729699,764.519726 572.619452,764.213159 573.507694,763.902545 Z M363.483453,761.997414 C364.364499,762.323717 365.247112,762.646009 366.131269,762.964278 L359.35565,781.781584 C358.413972,781.442603 357.474281,781.09946 356.536597,780.752179 L363.483453,761.997414 Z M584.09183,759.981892 L591.382496,778.605699 C590.449918,778.970747 589.515273,779.331673 588.578584,779.688456 L581.458915,760.998611 C582.33817,760.663707 583.215816,760.324796 584.09183,759.981892 Z M352.999044,757.894755 C353.866828,758.252766 354.736297,758.606828 355.607429,758.956929 L348.148914,777.514153 C347.220643,777.141087 346.29446,776.763924 345.370386,776.382686 L352.999044,757.894755 Z M594.512641,755.681108 L602.48088,774.02524 C601.563752,774.423553 600.644461,774.817822 599.72303,775.208024 L591.923664,756.791458 C592.788389,756.425271 593.651389,756.05515 594.512641,755.681108 Z M342.649794,753.401543 C343.504001,753.791142 344.360017,754.176853 345.217819,754.558661 L337.083995,772.829975 C336.170586,772.423412 335.259364,772.012821 334.350353,771.598226 L342.649794,753.401543 Z M604.734711,751.018401 L613.365019,769.060513 C612.466877,769.490128 611.56649,769.9158 610.663879,770.337507 L602.196722,752.218256 C603.044561,751.822144 603.890565,751.422188 604.734711,751.018401 Z M332.472986,748.533204 C333.312212,748.953688 334.15337,749.370353 334.996436,749.783184 L326.200079,767.744924 C325.302316,767.305307 324.406844,766.861732 323.513684,766.414224 L332.472986,748.533204 Z M614.79436,745.979201 L624.076569,763.694748 C623.192364,764.158012 622.305798,764.617383 621.416896,765.07284 L612.296231,747.273585 C613.130914,746.845911 613.963632,746.414445 614.79436,745.979201 Z M322.478357,743.295019 C323.301489,743.745761 324.126676,744.192758 324.953893,744.635996 L315.508256,762.264948 C314.626828,761.792664 313.747794,761.316493 312.871177,760.836459 L322.478357,743.295019 Z M624.687113,740.563899 L634.608906,757.929325 C633.742046,758.424591 632.872723,758.916038 632.000961,759.403645 L622.238032,741.94841 C623.056489,741.490617 623.872857,741.029109 624.687113,740.563899 Z M312.700949,737.707378 C313.509105,738.18893 314.319451,738.666798 315.131961,739.140966 L305.051411,756.414718 C304.18627,755.909836 303.323634,755.401129 302.463525,754.888623 L312.700949,737.707378 Z M634.393328,734.781129 L644.941705,751.773237 C644.090014,752.301928 643.235738,752.826848 642.3789,753.347976 L631.98552,736.260622 C632.790363,735.77112 633.592974,735.27795 634.393328,734.781129 Z M303.124589,731.762658 C303.912266,732.271678 304.70224,732.777123 305.494488,733.278974 L294.791597,750.174185 C293.948128,749.639886 293.107248,749.101866 292.268981,748.560151 L303.124589,731.762658 Z M643.84573,728.673317 L655.003317,745.271758 C654.175326,745.828308 653.344674,746.381205 652.511386,746.930427 L641.50418,730.231881 C642.287038,729.715902 643.067563,729.196374 643.84573,728.673317 Z M293.759525,725.466537 C294.52822,726.003853 295.299336,726.537682 296.072848,727.068006 L284.763327,743.563301 C283.939776,742.998668 283.118915,742.430398 282.300767,741.858512 L293.759525,725.466537 Z M653.09125,722.212157 L664.844047,738.39461 C664.036861,738.980783 663.226917,739.563388 662.414236,740.142402 L650.809279,723.853603 C651.572396,723.309901 652.333061,722.762746 653.09125,722.212157 Z M284.639417,718.842389 C285.388847,719.407733 286.140822,719.969678 286.895319,720.528205 L274.994854,736.602375 C274.192049,736.008083 273.392034,735.410236 272.594835,734.808855 L284.639417,718.842389 Z M662.117075,715.403912 L674.449271,731.14929 C673.662184,731.765733 672.872227,732.378679 672.079423,732.988105 L659.890373,717.131654 C660.635201,716.559108 661.377443,715.983188 662.117075,715.403912 Z M275.772849,711.898669 C276.500492,712.490039 277.230793,713.078117 277.96373,713.662882 L265.490304,729.296616 C264.710295,728.674294 263.933169,728.048509 263.15895,727.419286 L275.772849,711.898669 Z M670.875894,708.284367 L683.770669,723.572427 C683.006626,724.2168 682.239617,724.857767 681.469664,725.495305 L668.71445,710.090613 C669.437641,709.491795 670.15813,708.889706 670.875894,708.284367 Z M267.168418,704.643866 C267.875753,705.262435 268.585875,705.877801 269.298761,706.489941 L256.26944,721.663497 C255.510608,721.011903 254.75477,720.35692 254.001951,719.698571 L267.168418,704.643866 Z M679.371288,700.852393 L692.81046,715.664167 C692.069021,716.336866 691.324508,717.006238 690.576946,717.672259 L677.272843,702.739047 C677.975161,702.113333 678.67465,701.484442 679.371288,700.852393 Z M258.83473,697.086504 C259.520636,697.731429 260.209456,698.373244 260.901166,699.011929 L247.333516,713.706107 C246.597428,713.026447 245.864442,712.343478 245.134581,711.657224 L258.83473,697.086504 Z M687.581964,693.128002 L701.547515,707.444545 C700.832127,708.14235 700.113582,708.836933 699.391903,709.528271 L685.556879,695.085552 C686.234847,694.436087 686.909883,693.783563 687.581964,693.128002 Z M250.739504,689.193811 C251.399973,689.861516 252.063453,690.526238 252.729924,691.187954 L238.638356,705.380477 C237.929333,704.676512 237.22349,703.969348 236.520849,703.259011 L250.739504,689.193811 Z M695.529747,685.089585 L710.003969,698.891645 C709.31495,699.614241 708.622685,700.333715 707.927199,701.050043 L693.578141,687.117902 C694.231723,686.444733 694.882266,685.768619 695.529747,685.089585 Z M242.954923,681.03417 C243.589681,681.724052 244.227548,682.411074 244.868504,683.095213 L230.273073,696.769034 C229.591228,696.04125 228.912644,695.310375 228.237343,694.576431 L242.954923,681.03417 Z M703.163964,676.787957 L718.127645,690.057782 C717.465122,690.80489 716.79926,691.54897 716.130084,692.29 L701.286715,678.885731 C701.91562,678.189296 702.541377,677.49003 703.163964,676.787957 Z M235.468449,672.596329 C236.077662,673.308496 236.690088,674.017919 237.305706,674.724575 L222.22593,687.862321 C221.570695,687.110191 220.918812,686.355063 220.270306,685.596961 L235.468449,672.596329 Z M710.476898,668.235378 L725.909035,680.957373 C725.273805,681.72801 724.635147,682.495716 723.993084,683.260466 L708.67626,670.39987 C709.279733,669.681081 709.879953,668.959576 710.476898,668.235378 Z M228.288694,663.888959 C228.872862,664.624146 229.460359,665.356696 230.051163,666.086586 L214.5058,678.669977 C213.877137,677.893315 213.251928,677.113743 212.630196,676.331284 L228.288694,663.888959 Z M717.461208,659.444158 L733.341955,671.601537 C732.735106,672.394309 732.124742,673.184248 731.510887,673.971331 L715.740588,661.671019 C716.317485,660.931319 716.891032,660.189024 717.461208,659.444158 Z M221.424237,654.920732 C221.980669,655.675686 222.540519,656.42813 223.103767,657.17804 L207.112202,669.189278 C206.512957,668.391442 205.917244,667.590801 205.325086,666.787379 L221.424237,654.920732 Z M724.149851,650.370407 L740.461345,661.943442 C739.882288,662.759543 739.299614,663.572898 738.713348,664.383484 L722.507813,652.662535 C723.058625,651.900969 723.605978,651.136918 724.149851,650.370407 Z M214.900057,645.724388 C215.429767,646.500508 215.963001,647.274228 216.49974,648.045527 L200.08382,659.469956 C199.512548,658.649036 198.94491,657.825399 198.380928,656.999066 L214.900057,645.724388 Z M730.507314,641.05696 L747.227594,652.031122 C746.678989,652.866997 746.126689,653.70023 745.570719,654.530799 L728.950765,643.405282 C729.473167,642.624859 729.992023,641.842077 730.507314,641.05696 Z M208.706496,636.285722 C209.207266,637.079995 209.711643,637.871995 210.21961,638.661699 L193.398988,649.481435 C192.858428,648.64106 192.321577,647.798073 191.78846,646.952496 L208.706496,636.285722 Z M736.530133,631.505969 L753.638561,641.864622 C753.121135,642.719251 752.59994,643.571343 752.075,644.420875 L735.06101,633.907829 C735.554352,633.109434 736.044065,632.308806 736.530133,631.505969 Z M202.86664,626.638565 C203.33981,627.453328 203.816697,628.265927 204.297283,629.076338 L187.095236,639.278769 C186.583497,638.415832 186.075579,637.550362 185.571504,636.682384 L202.86664,626.638565 Z M742.198595,621.74639 L759.673385,631.474272 C759.186465,632.348952 758.695682,633.221187 758.201061,634.090954 L740.815695,624.204142 C741.280389,623.386999 741.741361,622.567741 742.198595,621.74639 Z M197.386137,616.793128 C197.826689,617.619631 198.27099,618.444119 198.719025,619.266568 L181.156468,628.835089 C180.679381,627.959317 180.206146,627.081144 179.736786,626.200593 L197.386137,616.793128 Z M747.4998,611.801369 L765.316851,620.887219 C764.862789,621.777772 764.404803,622.66599 763.942914,623.551849 L746.209196,614.304404 C746.64319,613.472038 747.073396,612.637685 747.4998,611.801369 Z M192.257623,606.733036 C192.670269,607.580425 193.086783,608.425898 193.507153,609.269432 L175.607045,618.190537 C175.159524,617.292525 174.715975,616.392186 174.276422,615.489543 L192.257623,606.733036 Z M752.434393,601.670201 L770.571735,610.098534 C770.150447,611.005169 769.725162,611.90957 769.295903,612.811715 L751.236043,604.218609 C751.639355,603.370995 752.03881,602.521518 752.434393,601.670201 Z M187.525014,596.547318 C187.905294,597.406386 188.289485,598.263673 188.677573,599.119155 L170.464049,607.381573 C170.051082,606.471248 169.642129,605.558716 169.23721,604.643999 L187.525014,596.547318 Z M756.996561,591.363065 L775.430204,599.121982 C775.041664,600.045063 774.649046,600.966007 774.252372,601.88479 L755.890916,593.956553 C756.2634,593.093793 756.631952,592.229289 756.996561,591.363065 Z M183.154938,586.166398 C183.504479,587.041126 183.858011,587.914187 184.215522,588.785557 L165.71265,596.377903 C165.332001,595.450145 164.955457,594.520269 164.583039,593.588297 L183.154938,586.166398 Z M761.17732,580.898928 L779.882241,587.978894 C779.528407,588.913841 779.170448,589.846761 778.808386,590.777632 L760.168635,583.527824 C760.508846,582.653135 760.845078,581.776829 761.17732,580.898928 Z M179.165319,575.626091 C179.480306,576.506665 179.799279,577.385716 180.122226,578.263222 L161.353017,585.170955 C161.009298,584.237012 160.669682,583.301084 160.33419,582.363195 L179.165319,575.626091 Z M764.975105,570.27958 L783.927015,576.669035 C783.60786,577.615861 783.284526,578.560766 782.957036,579.503726 L764.06415,572.9418 C764.371829,572.055881 764.675484,571.168466 764.975105,570.27958 Z M175.561105,564.935596 C175.845761,565.834048 176.134511,566.731075 176.427346,567.626654 L157.418189,573.84372 C157.106399,572.890186 156.798835,571.934739 156.495519,570.977402 L175.561105,564.935596 Z M768.386592,559.508671 L787.560593,565.19705 C787.275771,566.157255 786.986698,567.115631 786.693394,568.072158 L767.57253,562.207642 C767.84797,561.309358 768.119327,560.409693 768.386592,559.508671 Z M172.355103,554.132686 C172.606085,555.038974 172.861184,555.943961 173.12039,556.847625 L153.896033,562.36343 C153.62004,561.401258 153.348307,560.437287 153.080854,559.471536 L172.355103,554.132686 Z M771.388244,548.665302 L790.757408,553.648821 C790.507993,554.618468 790.254282,555.58639 789.996296,556.552567 L770.673524,551.392092 C770.915886,550.484417 771.154129,549.57548 771.388244,548.665302 Z M169.542015,543.198154 C169.758747,544.109598 169.979596,545.019866 170.204555,545.928936 L150.7903,550.7338 C150.550937,549.766525 150.31584,548.797567 150.08503,547.826949 L169.542015,543.198154 Z M773.995785,537.69899 L793.534348,541.970352 C793.320854,542.947356 793.103031,543.922741 792.880901,544.896486 L773.38197,540.4477 C773.590719,539.532603 773.795327,538.616359 773.995785,537.69899 Z M167.138246,532.199679 C167.322239,533.122024 167.510407,534.043296 167.702742,534.963474 L148.126248,539.057481 C147.921402,538.077475 147.720903,537.095872 147.524773,536.112693 L167.138246,532.199679 Z M776.206404,526.610918 L795.888749,530.16131 C795.710948,531.147022 795.528769,532.131212 795.342233,533.11386 L775.693327,529.382841 C775.868526,528.459896 776.039555,527.535914 776.206404,526.610918 Z M165.137123,521.117783 C165.28778,522.048864 165.442653,522.978977 165.601734,523.908102 L145.888942,527.285354 C145.719552,526.296057 145.554565,525.305256 145.394004,524.312973 L165.137123,521.117783 Z M778.00558,515.476898 L797.804179,518.30806 C797.66247,519.299434 797.516355,520.289388 797.365855,521.2779 L777.593973,518.265807 C777.735364,517.337091 777.872569,516.407447 778.00558,515.476898 Z M163.536017,509.931122 C163.651662,510.859519 163.771467,511.787069 163.895422,512.713755 L144.072193,515.366976 C143.940285,514.380874 143.812731,513.393394 143.689553,512.404556 L163.536017,509.931122 Z M779.396008,504.305246 L799.284229,506.416809 C799.17867,507.411726 799.068691,508.405323 798.954311,509.39758 L779.085954,507.106635 C779.1935,506.173653 779.296854,505.23985 779.396008,504.305246 Z M162.347274,498.739347 C162.429287,499.671672 162.515465,500.603253 162.605801,501.534071 L142.699344,503.466159 C142.603336,502.476903 142.511696,501.486368 142.424443,500.494573 L162.347274,498.739347 Z M780.38472,493.041046 L800.33642,494.43017 C800.266969,495.428699 800.193076,496.426005 800.114761,497.422068 L780.17637,495.853442 C780.25002,494.916689 780.319471,493.979218 780.38472,493.041046 Z M161.562042,487.490808 C161.610878,488.434842 161.663957,489.378217 161.721275,490.320916 L141.758285,491.537072 C141.697318,490.534476 141.640828,489.530672 141.588834,488.525678 L161.562042,487.490808 Z M780.965342,481.757156 L800.954161,482.425844 C800.920686,483.426927 800.882753,484.42688 800.840379,485.425685 L780.858451,484.575659 C780.898275,483.636773 780.933907,482.697266 780.965342,481.757156 Z M161.181048,476.193521 C161.195946,477.137394 161.215065,478.080707 161.2384,479.023443 L141.244579,479.520557 C141.176085,476.754116 141.141637,473.979226 141.141637,471.19629 L141.184637,476.50829 L161.181048,476.193521 Z M801.135637,470.41229 L801.141637,471.19629 C801.141637,471.936728 801.139198,472.676597 801.134329,473.415888 L781.134775,473.282186 C781.139349,472.587173 781.141637,471.891872 781.141637,471.19629 C781.141637,470.950418 781.141351,470.70458 781.140779,470.458778 L801.135637,470.41229 Z M161.203872,464.917732 C161.185225,465.857496 161.170765,466.797821 161.160496,467.73869 L141.161708,467.518542 C141.172637,466.517646 141.188023,465.51782 141.207845,464.519081 L161.203872,464.917732 Z M800.899086,458.425938 C800.937192,459.427399 800.970836,460.430003 800.999997,461.433731 L781.008483,462.016274 C780.981089,461.073197 780.949473,460.130716 780.913642,459.188847 L800.899086,458.425938 Z M141.661479,452.515837 L161.630277,453.632577 C161.577934,454.570717 161.529784,455.509514 161.485833,456.44895 L141.507723,455.51348 C141.554527,454.513094 141.605786,453.513874 141.661479,452.515837 Z M800.225542,446.420054 C800.299886,447.421649 800.36976,448.424489 800.435143,449.428553 L780.477405,450.72806 C780.416035,449.785629 780.350427,448.843892 780.280586,447.902867 L800.225542,446.420054 Z M162.463169,442.366297 C162.376973,443.301737 162.294973,444.237932 162.217175,445.174864 L142.28585,443.518876 C142.368708,442.521041 142.456006,441.524467 142.547724,440.529173 L162.463169,442.366297 Z M799.121435,434.474066 C799.23187,435.471535 799.33786,436.470344 799.439383,437.470474 L779.541779,439.491694 C779.446406,438.552119 779.346794,437.613341 779.242949,436.675379 L799.121435,434.474066 Z M163.705062,431.127933 C163.584941,432.059338 163.469009,432.991603 163.357275,433.924707 L143.499353,431.545014 C143.618309,430.551643 143.741679,429.559629 143.869442,428.568991 L163.705062,431.127933 Z M797.582915,422.561962 C797.729405,423.553722 797.871484,424.546918 798.00913,425.54153 L778.198204,428.285108 C778.068894,427.350687 777.935359,426.417166 777.797607,425.484565 L797.582915,422.561962 Z M145.618994,416.70754 L165.348325,419.986793 C165.194374,420.913395 165.044605,421.840964 164.899024,422.769479 L145.140738,419.669456 C145.295773,418.680688 145.455198,417.693375 145.618994,416.70754 Z M795.613763,410.726823 C795.796041,411.71111 795.97395,412.696929 796.147471,413.684261 L776.44963,417.147652 C776.286705,416.220581 776.119587,415.294515 775.948283,414.369473 L795.613763,410.726823 Z M167.400793,408.891388 C167.213284,409.810699 167.029928,410.731084 166.850734,411.652523 L147.218481,407.834843 C147.409466,406.852777 147.604805,405.872266 147.804478,404.893332 L167.400793,408.891388 Z M793.215772,398.979926 C793.433302,399.954331 793.646522,400.930361 793.855413,401.907996 L774.297127,406.088123 C774.10108,405.170582 773.900887,404.254149 773.696556,403.338847 L793.215772,398.979926 Z M169.857363,397.881075 C169.636038,398.794012 169.418851,399.708139 169.205811,400.623435 L149.726803,396.088211 C149.953793,395.113 150.185107,394.13945 150.420723,393.167581 L169.857363,397.881075 Z M790.384128,387.306082 C790.638391,388.276321 790.888349,389.248303 791.13398,390.222007 L771.741911,395.115644 C771.511335,394.201594 771.2766,393.288778 771.037717,392.377218 L790.384128,387.306082 Z M172.716681,386.965256 C172.462364,387.868221 172.21214,388.772489 171.96602,389.678036 L152.666658,384.430689 C152.928837,383.466081 153.19528,382.503229 153.465968,381.542155 L172.716681,386.965256 Z M787.133901,375.768952 C787.42187,376.723818 787.705631,377.680509 787.985159,378.639004 L768.785354,384.239673 C768.522918,383.339771 768.256404,382.441206 767.985824,381.543999 L787.133901,375.768952 Z M175.968119,376.181984 C175.680454,377.076391 175.396855,377.972223 175.117334,378.869457 L156.022843,372.919633 C156.320737,371.963435 156.622864,371.009103 156.9292,370.056659 L175.968119,376.181984 Z M783.452506,364.326248 C783.776115,365.272181 784.095547,366.220051 784.41078,367.169837 L765.429003,373.470007 C765.133221,372.578826 764.83339,371.689104 764.529522,370.800865 L783.452506,364.326248 Z M179.617083,365.512122 C179.29704,366.394749 178.98101,367.278918 178.669006,368.164606 L159.805425,361.518909 C160.137961,360.57494 160.474669,359.632938 160.815526,358.692925 L179.617083,365.512122 Z M779.361452,353.046816 C779.719404,353.980034 780.073239,354.915292 780.422935,355.852567 L761.684938,362.844523 C761.35667,361.964675 761.024401,361.086408 760.688144,360.209744 L779.361452,353.046816 Z M165.11081,347.491768 L183.65064,354.993415 C183.298381,355.864017 182.950085,356.736285 182.605766,357.610194 L163.998431,350.277589 C164.365124,349.346906 164.735924,348.418292 165.11081,347.491768 Z M774.854189,341.910691 C775.245322,342.828354 775.632418,343.748151 776.015454,344.670059 L757.546695,352.345015 C757.186955,351.479164 756.823281,350.61501 756.455688,349.752576 L774.854189,341.910691 Z M188.075867,344.608215 C187.691744,345.465763 187.311528,346.325101 186.935232,347.186204 L168.608909,339.177091 C169.00984,338.259618 169.414822,337.34432 169.823833,336.43122 L188.075867,344.608215 Z M769.949969,330.963765 C770.376448,331.870933 770.798918,332.78036 771.217355,333.692021 L753.040927,342.035729 C752.648045,341.179739 752.251258,340.325585 751.850578,339.473291 L769.949969,330.963765 Z M192.877537,334.393869 C192.462514,335.236345 192.051328,336.080732 191.643993,336.927005 L173.62275,328.253207 C174.056707,327.351621 174.494642,326.45231 174.936532,325.555297 L192.877537,334.393869 Z M764.663954,320.231688 C765.12087,321.118284 765.573887,322.007217 766.022982,322.898464 L748.162382,331.898406 C747.740678,331.061518 747.315176,330.22657 746.885889,329.393586 L764.663954,320.231688 Z M180.429342,314.899649 L198.036487,324.385872 C197.591666,325.211506 197.150598,326.03917 196.713298,326.868837 L179.020894,317.542593 C179.486495,316.659236 179.955985,315.778247 180.429342,314.899649 Z M758.96621,309.654519 C759.455399,310.524255 759.94076,311.396432 760.42227,312.271028 L742.902173,321.917075 C742.45006,321.095873 741.994219,320.276735 741.534667,319.459685 L758.96621,309.654519 Z M203.574194,314.541994 C203.099076,315.351639 202.627641,316.163441 202.159905,316.977375 L184.81915,307.012526 C185.317256,306.145742 185.819185,305.281435 186.324914,304.419626 L203.574194,314.541994 Z M752.892601,299.301887 C753.415752,300.157551 753.935115,301.015782 754.450666,301.876559 L737.29302,312.153483 C736.808907,311.345193 736.321108,310.539113 735.829641,309.735267 L752.892601,299.301887 Z M209.456443,304.923297 C208.951122,305.716823 208.449414,306.512638 207.951338,307.310719 L190.984579,296.721618 C191.514838,295.871969 192.048856,295.024908 192.586607,294.180456 L209.456443,304.923297 Z M746.440515,289.167874 C746.991757,289.999895 747.539327,290.834561 748.083204,291.671847 L731.311353,302.567031 C730.800356,301.780357 730.28579,300.995998 729.767675,300.213976 L746.440515,289.167874 Z M215.67493,295.538225 C215.142466,296.311039 214.61351,297.086253 214.088081,297.863844 L197.516667,286.666156 C198.075933,285.83849 198.638855,285.013498 199.20541,284.191202 L215.67493,295.538225 Z M739.644738,279.303412 C740.225745,280.114928 740.803164,280.929188 741.376972,281.746169 L725.010537,293.241377 C724.471424,292.473795 723.928834,291.708647 723.382785,290.945958 L739.644738,279.303412 Z M222.256068,286.348532 C221.694522,287.103302 221.136407,287.860606 220.581743,288.620421 L204.428137,276.828007 C205.018643,276.019095 205.61274,275.212972 206.210404,274.40966 L222.256068,286.348532 Z M732.460668,269.644943 C733.072962,270.437637 733.681729,271.233194 734.286946,272.03159 L718.34874,284.113542 C717.780328,283.363699 717.208512,282.616427 716.633312,281.87175 L732.460668,269.644943 Z M229.141793,277.434805 C228.553266,278.168839 227.968072,278.905527 227.386232,279.644847 L211.670387,267.275036 C212.289452,266.488423 212.912017,265.704694 213.538058,264.923872 L229.141793,277.434805 Z M724.945004,260.271094 C725.58544,261.040874 726.222441,261.813614 726.855982,262.589291 L711.366266,275.241117 C710.771079,274.512397 710.172588,273.786369 709.570814,273.063056 L724.945004,260.271094 Z M236.321166,268.803654 C235.707497,269.514965 235.09705,270.22904 234.489846,270.945856 L219.22936,258.018461 C219.875531,257.255645 220.525104,256.495803 221.178057,255.738959 L236.321166,268.803654 Z M717.10715,251.189361 C717.772741,251.932975 718.435009,252.679627 719.093932,253.42929 L704.071674,266.632766 C703.452511,265.928338 702.830169,265.226701 702.204668,264.527877 L717.10715,251.189361 Z M243.822885,260.418944 C243.185278,261.106247 242.550774,261.796417 241.919395,262.489433 L227.13499,249.020158 C227.806868,248.28269 228.482043,247.548279 229.160493,246.816949 L243.822885,260.418944 Z M708.933357,242.383377 C709.628047,243.105155 710.319482,243.830087 711.007639,244.558152 L696.473556,258.297163 C695.826575,257.612658 695.176496,256.931082 694.523341,256.252459 L708.933357,242.383377 Z M251.661253,252.270819 C250.996946,252.936798 250.335653,253.605778 249.677397,254.277737 L235.390718,240.281637 C236.090891,239.566891 236.794289,238.855316 237.500888,238.146936 L251.661253,252.270819 Z M700.435378,233.868286 C701.156091,234.56475 701.873641,235.264468 702.588004,235.967415 L688.559817,250.222589 C687.888481,249.561983 687.214157,248.90442 686.536869,248.249922 L700.435378,233.868286 Z M259.768316,244.431868 C259.081037,245.072797 258.396653,245.716831 257.715188,246.363948 L243.943244,231.861067 C244.668219,231.172633 245.39632,230.487458 246.127522,229.805566 L259.768316,244.431868 Z M691.665004,225.694 C692.407734,226.361599 693.147417,227.032521 693.884031,227.70674 L680.37981,242.459232 C679.687867,241.825904 678.993075,241.195702 678.295456,240.568649 L691.665004,225.694 Z M268.155187,236.889424 C267.444826,237.505399 266.737249,238.124589 266.032478,238.746973 L252.793458,223.75603 C253.543365,223.093785 254.296305,222.434897 255.052256,221.779388 L268.155187,236.889424 Z M682.615773,217.850628 C683.382512,218.491335 684.146299,219.135457 684.90711,219.782972 L671.944375,235.013452 C671.229245,234.404816 670.511375,233.799419 669.790787,233.19728 L682.615773,217.850628 Z M276.813197,229.652103 C276.08333,230.240093 275.356111,230.83138 274.631565,231.425944 L261.943562,215.965848 C262.71488,215.332899 263.489119,214.703378 264.266254,214.077308 L276.813197,229.652103 Z M673.309388,210.354542 C674.099238,210.96761 674.886228,211.584187 675.670336,212.204249 L663.264226,227.891455 C662.527273,227.308685 661.787695,226.729258 661.045515,226.153194 L673.309388,210.354542 Z M285.733672,222.72849 C284.978895,223.292679 284.226674,223.8603 283.477034,224.431333 L271.357092,208.521996 C272.154979,207.914208 272.955718,207.309972 273.759285,206.709312 L285.733672,222.72849 Z M663.708784,203.177212 C664.519925,203.761032 665.328309,204.348443 666.133912,204.939423 L654.302971,221.064833 C653.546269,220.509731 652.787067,219.958062 652.02539,219.409843 L663.708784,203.177212 Z M283.498213,199.700977 L294.883987,216.143731 C294.112156,216.678191 293.342742,217.216151 292.575768,217.757593 L281.041429,201.418712 C281.857634,200.842516 282.676569,200.269929 283.498213,199.700977 Z M653.840784,196.342969 C654.672885,196.897185 655.502326,197.455078 656.329083,198.016626 L645.091351,214.560911 C644.314579,214.033316 643.535426,213.509249 642.753915,212.98873 L653.840784,196.342969 Z M304.278217,209.888021 C303.487697,210.393941 302.69947,210.903449 301.91356,211.416527 L290.979467,194.670017 C291.816001,194.123885 292.655166,193.581447 293.496937,193.042725 L304.278217,209.888021 Z M643.717118,189.86287 C644.56968,190.386964 645.419677,190.914826 646.267088,191.44643 L635.637939,208.38813 C634.841853,207.888726 634.043504,207.392944 633.242918,206.900802 L643.717118,189.86287 Z M313.882635,203.984623 C313.07112,204.463313 312.261793,204.945702 311.454676,205.431775 L301.136333,188.299006 C301.99521,187.781759 302.856635,187.268314 303.720584,186.758692 L313.882635,203.984623 Z M633.376872,183.762864 C634.247393,184.255267 635.115454,184.75151 635.981033,185.251571 L625.976601,202.569519 C625.163047,202.099513 624.347357,201.633212 623.529553,201.17063 L633.376872,183.762864 Z M323.712758,198.425253 C322.888793,198.871595 322.066868,199.321677 321.247008,199.775482 L311.561477,182.277182 C312.434069,181.794189 313.309081,181.315035 314.18649,180.839741 L323.712758,198.425253 Z M622.825766,178.04591 C623.714576,178.50674 624.601024,178.971494 625.485086,179.440148 L616.11754,197.110719 C615.286978,196.670427 614.454401,196.23392 613.619832,195.801213 L622.825766,178.04591 Z M333.707586,193.244241 C332.8686,193.659926 332.031529,194.079417 331.196396,194.502699 L322.153791,176.66366 C323.042908,176.213014 323.934341,175.766276 324.828067,175.323467 L333.707586,193.244241 Z M612.05357,172.708311 C612.957887,173.135977 613.859948,173.567632 614.759731,174.003253 L606.04434,192.004418 C605.199158,191.595233 604.352088,191.189896 603.503155,190.788422 L612.05357,172.708311 Z M343.855618,188.444193 C342.998148,188.83084 342.142486,189.221394 341.288656,189.615843 L332.900221,171.460013 C333.808926,171.040211 334.719863,170.624419 335.633011,170.212661 L343.855618,188.444193 Z M601.117588,167.77892 C602.037853,168.173654 602.955961,168.572452 603.87189,168.975292 L595.819168,187.282495 C594.958768,186.90408 594.096599,186.529586 593.232687,186.159027 L601.117588,167.77892 Z M346.679573,165.473076 L354.227685,183.994038 C353.360822,184.347301 352.495628,184.704495 351.632126,185.065608 L343.915268,166.614317 C344.8346,166.229855 345.756043,165.849434 346.679573,165.473076 Z M590.007829,163.252347 C590.941753,163.613083 591.873625,163.977944 592.803422,164.346909 L585.42575,182.936421 C584.552722,182.589986 583.678051,182.247525 582.801761,181.909051 L590.007829,163.252347 Z M364.761679,179.924981 C363.881356,180.246589 363.002585,180.572193 362.125388,180.901779 L355.090083,162.180014 C356.02429,161.829004 356.96051,161.48211 357.898723,161.139353 L364.761679,179.924981 Z M578.701283,159.122196 C579.648026,159.448438 580.592819,159.778868 581.535641,160.113462 L574.845556,178.961347 C573.960046,178.647095 573.073013,178.336874 572.184481,178.030694 L578.701283,159.122196 Z M375.420031,176.251202 C374.528924,176.540185 373.639247,176.833206 372.751023,177.130255 L366.406704,158.163188 C367.352471,157.846892 368.300147,157.534762 369.24971,157.226819 L375.420031,176.251202 Z M567.303101,155.426364 C568.259433,155.717222 569.213924,156.012305 570.166553,156.311592 L564.171577,175.391956 C563.276438,175.110732 562.379899,174.833571 561.481984,174.560485 L567.303101,155.426364 Z M386.192349,172.974571 C385.285266,173.232427 384.379513,173.494417 383.475113,173.760529 L377.828331,154.574235 C378.79127,154.290894 379.756038,154.011827 380.722615,153.737055 L386.192349,172.974571 Z M555.753214,152.143722 C556.720535,152.399577 557.686115,152.659714 558.649932,152.924112 L553.357804,172.211242 C552.452677,171.962948 551.546268,171.718758 550.638599,171.478683 L555.753214,152.143722 Z M397.097726,170.089616 C396.184917,170.313267 395.273314,170.541057 394.362937,170.772975 L389.423897,151.392421 C390.393375,151.145441 391.364568,150.902753 392.337454,150.66438 L397.097726,170.089616 Z M544.070276,149.281998 C545.046439,149.502203 546.020963,149.726734 546.993826,149.95557 L542.412919,169.423885 C541.499,169.208919 540.583912,168.998091 539.667679,168.79141 L544.070276,149.281998 Z M404.019748,148.027256 L408.068596,167.613139 C407.152967,167.802325 406.23842,167.995632 405.324973,168.193053 L401.098627,148.644703 C402.070746,148.434597 403.04446,148.228775 404.019748,148.027256 Z M532.324432,146.857078 C533.307572,147.04139 534.289176,147.230062 535.269222,147.423072 L531.404645,167.046147 C530.483346,166.864706 529.560991,166.687429 528.637601,166.514323 L532.324432,146.857078 Z M419.154226,165.533245 C418.229584,165.689296 417.305919,165.849511 416.383251,166.013883 L412.875005,146.323982 C413.856469,146.149134 414.839434,145.978624 415.823881,145.812474 L419.154226,165.533245 Z M520.464305,144.857428 C521.4539,145.005736 522.442058,145.158437 523.428757,145.315512 L520.28346,165.066641 C519.356057,164.919009 518.427707,164.775558 517.498432,164.636296 L520.464305,144.857428 Z M430.316399,163.858275 C429.384928,163.980736 428.454329,164.107389 427.524623,164.238227 L424.735133,144.433714 C425.724773,144.294434 426.715821,144.159544 427.708259,144.029064 L430.316399,163.858275 Z M508.56157,143.294488 C509.55679,143.406813 510.550669,143.523564 511.543187,143.644722 L509.117983,163.497137 C508.185586,163.383324 507.25235,163.273704 506.318293,163.168283 L508.56157,143.294488 Z M441.515753,162.59219 C440.579741,162.680861 439.644499,162.773735 438.710047,162.870805 L436.64221,142.977991 C437.636312,142.87472 438.631725,142.775863 439.628429,142.681439 L441.515753,162.59219 Z M496.600404,142.163753 C497.598256,142.239886 498.594868,142.320456 499.590218,142.405445 L497.887239,162.332809 C496.951275,162.252896 496.014573,162.177178 495.077153,162.105662 L496.600404,142.163753 Z M451.606255,141.764942 L452.773799,161.730834 C451.835454,161.785608 450.897779,161.84458 449.96079,161.907743 L448.614572,141.953102 C449.610595,141.885956 450.607829,141.823229 451.606255,141.764942 Z M484.618213,141.46646 C485.617493,141.506598 486.615629,141.551179 487.612603,141.600184 L486.630571,161.57606 C485.691896,161.529921 484.752582,161.487975 483.812647,161.45023 L484.618213,141.46646 Z M463.600625,141.280755 L464.051222,161.275678 C463.11284,161.296712 462.175029,161.321922 461.237807,161.351302 L460.610087,141.361155 C461.605827,141.329937 462.60268,141.303131 463.600625,141.280755 Z M472.591724,141.199409 C473.592325,141.203714 474.591874,141.212472 475.590354,141.225664 L475.325629,161.223912 C474.385591,161.211493 473.445009,161.20326 472.5039,161.199216 L472.591724,141.199409 Z\"\n              fill=\"url(#linearGradient-1)\"\n              fillRule=\"nonzero\"\n              opacity=\"0.5\"\n              transform=\"translate(471.141637, 471.197850) rotate(19.000000) translate(-471.141637, -471.197850) \"\n            />\n            <path\n              d=\"M476.672501,782.151156 L477.35116,820.145096 C475.236628,820.182866 473.119838,820.201771 471.000955,820.201771 L471.000955,782.201771 C472.8936,782.201771 474.784161,782.184886 476.672501,782.151156 Z M470.135231,782.200593 C470.420842,782.20137 470.706501,782.201763 470.992208,782.201771 L470.991163,820.201771 C470.671335,820.201771 470.351554,820.201322 470.031821,820.200452 L470.135231,782.200593 Z M417.557882,777.630488 C419.413632,777.951742 421.273322,778.256252 423.136789,778.543957 L417.338569,816.098992 C415.246839,815.776044 413.159254,815.434219 411.076005,815.073582 L417.557882,777.630488 Z M529.131499,776.78185 L536.188573,814.120807 C534.113537,814.512989 532.033954,814.88644 529.950019,815.24109 L523.574738,777.7797 C525.430997,777.463796 527.283306,777.131159 529.131499,776.78185 Z M366.542349,764.229651 C368.317305,764.862442 370.098372,765.47908 371.885363,766.079475 L359.782905,802.100726 C357.77575,801.42636 355.77526,800.733753 353.781648,800.02301 L366.542349,764.229651 Z M579.909026,762.604766 L593.217733,798.198 C591.233686,798.939857 589.242516,799.663646 587.244436,800.36926 L574.590758,764.537927 C576.369713,763.909697 578.142531,763.265278 579.909026,762.604766 Z M318.571607,742.352389 C320.212269,743.276804 321.86133,744.186286 323.518597,745.08071 L305.470757,778.521336 C303.610526,777.517372 301.759549,776.496531 299.918045,775.458954 L318.571607,742.352389 Z M627.494253,740.022042 L646.645018,772.843501 C644.818213,773.909411 642.981692,774.958711 641.135674,775.991256 L622.585513,742.826643 C624.230247,741.906684 625.866559,740.971774 627.494253,740.022042 Z M275.001472,712.68018 C276.463211,713.868165 277.935634,715.042896 279.41855,716.204213 L255.98915,746.12182 C254.325919,744.819292 252.674481,743.501739 251.035046,742.169338 L275.001472,712.68018 Z M670.643424,709.673478 L695.052564,738.797246 C693.43156,740.155838 691.798305,741.499736 690.153009,742.828759 L666.274789,713.268133 C667.741781,712.083139 669.198056,710.884866 670.643424,709.673478 Z M237.031192,676.096646 C238.275306,677.516085 239.53226,678.924262 240.801886,680.320992 L212.682865,705.881131 C211.259079,704.314806 209.849492,702.735634 208.454293,701.143819 L237.031192,676.096646 Z M708.093331,672.478605 L737.04952,697.08631 C735.680746,698.696964 734.297428,700.29523 732.899752,701.880903 L704.393013,676.753908 C705.639322,675.339963 706.872817,673.9148 708.093331,672.478605 Z M205.723893,633.615622 C206.709885,635.22244 207.710477,636.82028 208.725529,638.408945 L176.703732,658.868771 C175.564748,657.08614 174.441965,655.293173 173.335538,653.49009 L205.723893,633.615622 Z M738.699997,629.60107 L771.384354,648.9849 C770.305179,650.804567 769.209492,652.614346 768.097443,654.414018 L735.771024,634.438968 C736.761996,632.835239 737.738365,631.222541 738.699997,629.60107 Z M182.085651,586.542949 C182.78538,588.294023 183.501046,590.038424 184.232546,591.775964 L149.209712,606.520492 C148.388225,604.569204 147.584506,602.610177 146.798672,600.643627 L182.085651,586.542949 Z M761.639819,582.131845 L797.138963,595.689527 C796.383619,597.667304 795.610295,599.637798 794.819103,601.600793 L759.574218,587.395229 C760.278704,585.647356 760.96727,583.892831 761.639819,582.131845 Z M166.779406,536.105025 C167.171452,537.952252 167.58024,539.795009 168.005701,541.633124 L130.984494,550.202268 C130.506691,548.138021 130.047622,546.068605 129.607366,543.994222 L166.779406,536.105025 Z M776.172492,531.453319 L813.461278,538.770866 C813.053534,540.84865 812.626988,542.921703 812.181716,544.989829 L775.032978,536.991623 C775.429505,535.149903 775.809365,533.303745 776.172492,531.453319 Z M160.249241,483.750998 C160.324107,485.639521 160.415873,487.525545 160.524494,489.408925 L122.587535,491.596879 C122.465796,489.486051 122.362957,487.372449 122.279065,485.256247 L160.249241,483.750998 Z M781.906014,478.967231 L819.894634,479.897143 C819.842869,482.011848 819.772221,484.124154 819.682733,486.233895 L781.716871,484.623518 C781.796742,482.740515 781.859803,480.855039 781.906014,478.967231 Z M124.884726,426.144991 L162.572594,431.005505 C162.331612,432.874056 162.10744,434.74604 161.900131,436.621301 L124.130225,432.445874 C124.362809,430.341973 124.614329,428.241618 124.884726,426.144991 Z M816.3964,420.873235 C816.699059,422.967703 816.98282,425.066121 817.247622,427.168302 L779.54556,431.917462 C779.309582,430.044105 779.056723,428.174208 778.787038,426.307927 L816.3964,420.873235 Z M137.431464,368.276168 L173.745681,379.46892 C173.191057,381.268362 172.652776,383.073337 172.130918,384.883664 L135.617731,374.358117 C136.20389,372.324728 136.808499,370.297343 137.431464,368.276168 Z M802.964148,363.203384 C803.619618,365.219459 804.256729,367.242007 804.875382,369.270817 L768.527712,380.35445 C767.976929,378.548212 767.409714,376.74755 766.826151,374.952647 L802.964148,363.203384 Z M159.64416,313.381164 L193.525591,330.587228 C192.672484,332.26713 191.834679,333.954852 191.012294,335.6502 L156.822507,319.065315 C157.745811,317.161921 158.686406,315.267131 159.64416,313.381164 Z M779.944431,308.716507 C780.929981,310.58674 781.898528,312.466019 782.849933,314.354123 L748.914732,331.453892 C748.067254,329.772036 747.204488,328.098004 746.326554,326.431989 L779.944431,308.716507 Z M190.825444,263.074418 L221.31308,285.7571 C220.187399,287.270121 219.075469,288.793282 217.977445,290.32639 L187.08369,268.200027 C188.315423,266.480229 189.562732,264.771621 190.825444,263.074418 Z M747.999312,258.870431 C749.288387,260.549718 750.562214,262.240651 751.820619,263.943015 L721.263085,286.531445 C720.141218,285.013788 719.005582,283.506295 717.856332,282.00916 L747.999312,258.870431 Z M229.937691,218.833232 L256.188929,246.308175 C254.826502,247.609922 253.475843,248.923954 252.137133,250.250098 L225.394084,223.253629 C226.895285,221.76652 228.409887,220.292989 229.937691,218.833232 Z M708.134348,215.135749 C709.685628,216.572979 711.2239,218.02421 712.748962,219.489248 L686.423603,246.89318 C685.063626,245.586729 683.691873,244.292595 682.308527,243.010952 L708.134348,215.135749 Z M276.035292,181.69738 L297.288736,213.198033 C295.72464,214.253326 294.170125,215.322825 292.625386,216.406383 L270.803543,185.296784 C272.53653,184.081179 274.280519,182.881323 276.035292,181.69738 Z M661.579525,178.785255 C663.351454,179.942316 665.112832,181.115448 666.863441,182.304488 L645.512536,213.739164 C643.952196,212.679357 642.382291,211.633752 640.803016,210.602493 L661.579525,178.785255 Z M327.683635,152.896932 L343.303878,187.538064 C341.587172,188.312154 339.877705,189.101851 338.175668,189.907042 L321.925479,155.556913 C323.836554,154.652831 325.756012,153.766129 327.683635,152.896932 Z M609.448728,150.745947 C611.39197,151.58657 613.327261,152.444864 615.254383,153.320706 L599.531701,187.915464 C597.815489,187.135477 596.092036,186.371132 594.361535,185.622538 L609.448728,150.745947 Z M383.582108,133.245048 L393.073987,170.040486 C391.24767,170.511609 389.426356,170.999301 387.610222,171.503484 L377.445341,134.888252 C379.485198,134.32196 381.530855,133.774196 383.582108,133.245048 Z M553.276531,131.96014 C555.333823,132.457418 557.385756,132.97334 559.432126,133.50782 L549.829244,170.274445 C548.007243,169.798566 546.180266,169.339205 544.348487,168.896437 L553.276531,131.96014 Z M441.904459,123.398462 L445.032497,161.269499 C443.148557,161.425107 441.267589,161.597648 439.389748,161.787072 L435.575906,123.978943 C437.682126,123.766481 439.791704,123.57297 441.904459,123.398462 Z M494.738962,122.997098 C496.85044,123.139037 498.958957,123.299911 501.064338,123.47967 L497.831629,161.341915 C495.954066,161.181607 494.073561,161.03813 492.190262,160.91153 L494.738962,122.997098 Z\"\n              fill=\"url(#linearGradient-2)\"\n              fillRule=\"nonzero\"\n              transform=\"translate(471.086850, 471.599434) rotate(20.000000) translate(-471.086850, -471.599434) \"\n            >\n              <animate\n                attributeName=\"opacity\"\n                from=\"0\"\n                to=\"1\"\n                begin=\"0s\"\n                dur=\"1s\"\n                repeatCount=\"1\"\n                fill=\"freeze\"\n              />\n            </path>\n            <path\n              d=\"M471.142144,169.196375 C637.932139,169.196375 773.142144,304.406381 773.142144,471.196375 C773.142144,637.98637 637.932139,773.196375 471.142144,773.196375 C304.35215,773.196375 169.142144,637.98637 169.142144,471.196375 C169.142144,304.406381 304.35215,169.196375 471.142144,169.196375 Z M471.142144,171.196375 C305.45672,171.196375 171.142144,305.51095 171.142144,471.196375 C171.142144,636.8818 305.45672,771.196375 471.142144,771.196375 C636.827569,771.196375 771.142144,636.8818 771.142144,471.196375 C771.142144,305.51095 636.827569,171.196375 471.142144,171.196375 Z\"\n              fill=\"url(#radialGradient-3)\"\n              fillRule=\"nonzero\"\n              opacity=\"0.824588412\"\n            />\n            <path\n              d=\"M471.142144,168.696375 C638.208281,168.696375 773.642144,304.130238 773.642144,471.196375 C773.642144,638.262512 638.208281,773.696375 471.142144,773.696375 C304.076008,773.696375 168.642144,638.262512 168.642144,471.196375 C168.642144,304.130238 304.076008,168.696375 471.142144,168.696375 Z M471.142144,169.696375 C304.628292,169.696375 169.642144,304.682523 169.642144,471.196375 C169.642144,637.710227 304.628292,772.696375 471.142144,772.696375 C637.655997,772.696375 772.642144,637.710227 772.642144,471.196375 C772.642144,304.682523 637.655997,169.696375 471.142144,169.696375 Z\"\n              fill=\"url(#radialGradient-4)\"\n              fillRule=\"nonzero\"\n              opacity=\"0.799999952\"\n            />\n            <path\n              d=\"M483.122026,772.931314 L484.368462,804.907029 C479.965448,805.078961 475.551441,805.165123 471.128138,805.165123 L471.128138,773.165123 C475.144899,773.165123 479.143344,773.086704 483.122026,772.931314 Z M458.085442,772.88855 L456.729536,804.859811 C452.305858,804.671877 447.894066,804.39735 443.495936,804.0367 L446.110904,772.143724 C450.081161,772.469291 454.07317,772.718063 458.085442,772.88855 Z M509.025824,770.81018 L512.999589,802.562491 C508.621384,803.110614 504.226809,803.572738 499.817705,803.948314 L497.102918,772.063679 C501.099934,771.723189 505.074743,771.304849 509.025824,770.81018 Z M432.142073,770.67191 L428.051143,802.409338 C423.657008,801.842984 419.28022,801.190021 414.922694,800.451086 L420.271355,768.901255 C424.202925,769.567977 428.160352,770.158717 432.142073,770.67191 Z M534.660316,766.470839 L541.35956,797.761735 C537.038581,798.686883 532.695481,799.526605 528.332234,800.280175 L522.887888,768.746715 C526.838848,768.064327 530.763522,767.305171 534.660316,766.470839 Z M406.519916,766.238386 L399.707136,797.504758 C395.377253,796.561101 391.070486,795.531717 386.788866,794.417429 L394.847511,763.448763 C398.708796,764.453672 402.60014,765.384088 406.519916,766.238386 Z M559.813462,759.933828 L569.197118,790.527079 C564.970702,791.823504 560.716211,793.036072 556.435718,794.163867 L548.282689,763.219916 C552.157291,762.199064 556.001432,761.103151 559.813462,759.933828 Z M371.883463,790.164054 C367.652246,788.848959 363.450113,787.449905 359.279184,785.967908 L369.992139,755.814424 C373.754554,757.151283 377.55131,758.415662 381.380728,759.605881 L371.883463,790.164054 Z M584.353431,751.222854 L596.357676,780.885931 C592.252189,782.547365 588.112425,784.127063 583.940536,785.623907 L573.134908,755.503509 C576.909781,754.149093 580.649857,752.72164 584.353431,751.222854 Z M356.875862,750.805038 L344.761841,780.423453 C340.664643,778.747721 336.602562,776.990708 332.577769,775.15363 L345.864656,746.042487 C349.497034,747.700459 353.168009,749.288549 356.875862,750.805038 Z M608.028077,740.425855 L622.553551,768.939196 C618.609071,770.948675 614.624223,772.87964 610.601193,774.730776 L597.224971,745.660573 C600.865618,743.985385 604.467233,742.2399 608.028077,740.425855 Z M318.636479,768.393588 C314.698739,766.369671 310.80223,764.26767 306.949143,762.089002 L322.699272,734.23342 C326.178706,736.200817 329.701053,738.101179 333.264562,739.932753 L318.636479,768.393588 Z M630.606723,727.671115 L647.528281,754.831028 C643.774399,757.169885 639.974187,759.434139 636.129826,761.622283 L620.301548,733.811033 C623.78037,731.830929 627.216016,729.783702 630.606723,727.671115 Z M293.651871,754.157707 C289.906287,751.80422 286.207885,749.376644 282.558834,746.87658 L300.644895,720.477822 C303.94201,722.736771 307.286205,724.932017 310.675706,727.061784 L293.651871,754.157707 Z M671.272842,738.578792 C667.733288,741.231805 664.141475,743.814544 660.499549,746.325319 L642.336976,719.979144 C645.632726,717.707016 648.881107,715.371098 652.080335,712.973175 L671.272842,738.578792 Z M289.348879,712.351058 L270.068862,737.890849 C266.538693,735.225997 263.061547,732.491475 259.639534,729.689057 L279.91395,704.931269 C283.008294,707.465356 286.153867,709.939216 289.348879,712.351058 Z M672.209569,696.491718 L693.524377,720.359666 C690.227942,723.303461 686.873657,726.18193 683.463587,728.993229 L663.108286,704.3019 C666.194016,701.757984 669.228374,699.153993 672.209569,696.491718 Z M269.27969,695.804413 L247.883915,719.599808 C244.594889,716.642522 241.364531,713.620463 238.194857,710.535554 L260.513413,687.603436 C263.380843,690.394188 266.303535,693.128447 269.27969,695.804413 Z M690.853834,678.348878 L714.132488,700.30575 C711.099222,703.521477 708.002691,706.677082 704.844853,709.770582 L682.451849,686.911155 C685.308453,684.112744 688.109712,681.258053 690.853834,678.348878 Z M250.679589,677.579875 L227.325639,699.456644 C224.302897,696.229716 221.344121,692.943356 218.451202,689.599604 L242.650847,668.662145 C245.268598,671.687856 247.945444,674.661031 250.679589,677.579875 Z M707.895382,658.655223 L732.969248,678.537406 C730.220779,682.003566 727.403937,685.415096 724.520541,688.769907 L700.252472,667.911794 C702.859925,664.87804 705.408159,661.791918 707.895382,658.655223 Z M233.728461,657.854887 L208.587725,677.652446 C205.851665,674.177999 203.184548,670.64971 200.58811,667.069706 L226.492322,648.282162 C228.842172,651.522171 231.254814,654.713674 233.728461,657.854887 Z M723.101369,637.698816 L749.781185,655.367643 C747.339107,659.055197 744.824142,662.693932 742.237939,666.281692 L716.279066,647.569746 C718.616511,644.327085 720.891205,641.036182 723.101369,637.698816 Z M218.527595,636.747683 L191.780758,654.314889 C189.350542,650.615017 186.993897,646.867069 184.712386,643.073225 L212.135944,626.582366 C214.200742,630.015825 216.331884,633.404855 218.527595,636.747683 Z M736.509831,615.426073 L764.611074,630.733592 C762.493763,634.620369 760.299432,638.464251 758.029548,642.263051 L730.559495,625.849758 C732.609661,622.418688 734.593693,618.94354 736.509831,615.426073 Z M205.216815,614.449546 L177.059395,629.653483 C174.957301,625.760548 172.932642,621.825604 170.986784,617.850839 L199.727622,603.780863 C201.488533,607.377835 203.318846,610.934645 205.216815,614.449546 Z M777.27732,604.880125 C775.502836,608.937739 773.647824,612.958509 771.713556,616.940253 L742.929788,602.958311 C744.675719,599.364284 746.352465,595.730429 747.958293,592.058476 L777.27732,604.880125 Z M193.861171,591.054661 L164.495166,603.768345 C162.737807,599.709606 161.061158,595.614986 159.466387,591.486643 L189.316632,579.95569 C190.759891,583.691813 192.275307,587.39204 193.861171,591.054661 Z M757.334671,567.805707 L787.654212,578.039253 C786.237774,582.235654 784.738074,586.401307 783.156182,590.534077 L753.270509,579.095259 C754.697565,575.367022 756.052849,571.603275 757.334671,567.805707 Z M184.573785,566.769004 L154.21713,576.891925 C152.816988,572.693298 151.500297,568.464841 150.268031,564.208657 L181.00602,555.310564 C182.121205,559.162298 183.311016,562.982334 184.573785,566.769004 Z M764.577514,542.815536 L795.670392,550.380783 C794.62298,554.685515 793.490291,558.965502 792.2732,563.218685 L761.507735,554.416063 C762.605505,550.579908 763.629312,546.712518 764.577514,542.815536 Z M177.429659,541.783811 L146.31006,549.238376 C145.279082,544.934908 144.333396,540.607612 143.473784,536.258501 L174.866567,530.054216 C175.644914,533.992137 176.499817,537.90254 177.429659,541.783811 Z M769.625004,517.309726 L801.255717,522.157202 C800.584329,526.536325 799.826512,530.896531 798.982954,535.23587 L767.570968,529.129547 C768.331741,525.216074 769.016946,521.275607 769.625004,517.309726 Z M172.470342,516.247468 L140.822649,520.982821 C140.168631,516.613143 139.600696,512.225489 139.119444,507.821747 L170.930201,504.346728 C171.366343,508.337528 171.880239,512.304957 172.470342,516.247468 Z M772.458353,491.439557 L804.388316,493.555564 C804.095388,497.974772 803.715763,502.380612 803.249955,506.771267 L771.42831,503.39741 C771.848836,499.433845 772.192688,495.44739 772.458353,491.439557 Z M137.79276,492.390452 C137.516326,487.988883 137.325892,483.574854 137.221893,479.150106 L169.213099,478.399952 C169.307494,482.415124 169.480255,486.410905 169.729909,490.385827 L137.79276,492.390452 Z M805.069038,464.824175 C805.108437,466.936267 805.128138,469.049981 805.128138,471.170407 C805.128138,473.475057 805.104677,475.777218 805.057914,478.076654 L773.064504,477.427267 C773.106859,475.344992 773.128138,473.257542 773.128138,471.165123 C773.128138,469.246065 773.110239,467.331189 773.074597,465.420651 L805.069038,464.824175 Z M137.762512,450.427067 L169.702566,452.384851 C169.458607,456.361092 169.291587,460.358136 169.202977,464.374513 L137.210722,463.670525 C137.308338,459.244825 137.492412,454.829759 137.762512,450.427067 Z M803.312368,436.152316 C803.770146,440.541778 804.141814,444.946298 804.426864,449.364064 L772.493255,451.424309 C772.234732,447.417704 771.898078,443.432378 771.484801,439.469838 L803.312368,436.152316 Z M140.752968,421.815251 L172.407211,426.506616 C171.822787,430.449449 171.314569,434.417127 170.884102,438.408104 L139.06839,434.978747 C139.543425,430.574289 140.10515,426.185829 140.752968,421.815251 Z M799.101023,407.70478 C799.935818,412.042313 800.684982,416.400557 801.347832,420.777568 L769.708433,425.568017 C769.108023,421.603412 768.430534,417.664101 767.677541,413.75166 L799.101023,407.70478 Z M146.202807,393.540938 L177.33296,400.95131 C176.408939,404.832042 175.559816,408.741813 174.787202,412.679011 L143.386236,406.516272 C144.239372,402.168796 145.178487,397.843016 146.202807,393.540938 Z M792.443986,379.710504 C793.654028,383.969278 794.779497,388.254768 795.819519,392.564911 L764.71203,400.069852 C763.77063,396.168494 762.753487,392.296674 761.662243,388.456036 L792.443986,379.710504 Z M154.078557,365.854781 L184.448748,375.937016 C183.190931,379.725515 182.006113,383.547318 180.895961,387.400756 L150.14612,378.543707 C151.372795,374.285727 152.68393,370.055384 154.078557,365.854781 Z M783.387325,352.401812 C784.962033,356.54001 786.454397,360.710991 787.863348,364.912616 L757.523835,375.086797 C756.248697,371.284204 754.899948,367.515378 753.479281,363.782011 L783.387325,352.401812 Z M164.318911,338.969721 L193.701675,351.644624 C192.120363,355.310186 190.609573,359.013305 189.171014,362.752271 L159.304923,351.262423 C160.894663,347.130484 162.566382,343.032197 164.318911,338.969721 Z M771.990259,325.960978 C773.917727,329.948052 775.765799,333.974049 777.533208,338.036784 L748.189527,350.801908 C746.590251,347.125665 744.91995,343.487449 743.180358,339.888993 L771.990259,325.960978 Z M176.850894,313.063502 L205.028429,328.230126 C203.134858,331.747963 201.309007,335.307653 199.552622,338.907452 L170.793107,324.875691 C172.73395,320.897827 174.753667,316.959701 176.850894,313.063502 Z M758.388136,300.668746 C760.648193,304.469182 762.832725,308.314481 764.940273,312.202459 L736.807158,327.451322 C734.900005,323.933061 732.925005,320.456941 730.883914,317.024717 L758.388136,300.668746 Z M191.570054,288.336544 L218.33694,305.873186 C216.14628,309.216693 214.020163,312.606295 211.960361,316.040222 L184.518396,299.580011 C186.794365,295.785697 189.145436,292.03715 191.570054,288.336544 Z M742.628347,276.591296 C745.207878,280.1849 747.71604,283.829363 750.151186,287.522526 L723.435844,305.137591 C721.232132,301.795425 718.963797,298.499636 716.632616,295.252002 L742.628347,276.591296 Z M208.293039,265.05256 L233.46172,284.814582 C230.993317,287.958325 228.585941,291.152261 226.241377,294.394604 L200.310739,275.643551 C202.90137,272.060922 205.562714,268.529884 208.293039,265.05256 Z M724.869397,253.966886 C727.748241,257.327235 730.560401,260.744229 733.30406,264.215776 L708.198077,284.057389 C705.71512,280.915714 703.171045,277.824568 700.567646,274.785745 L724.869397,253.966886 Z M226.986625,243.236053 L250.373211,265.077929 C247.643136,268.001064 244.970438,270.978471 242.356909,274.008355 L218.125903,253.107199 C221.01415,249.758829 223.968353,246.467766 226.986625,243.236053 Z M705.252813,232.959993 C708.404192,236.057691 711.494203,239.217342 714.520896,242.436963 L691.205412,264.354724 C688.467026,261.441795 685.67146,258.583241 682.820507,255.780854 L705.252813,232.959993 Z M247.509947,223.067193 L268.940993,246.830827 C265.969127,249.511011 263.050784,252.249411 260.187762,255.044228 L237.834379,232.146056 C240.99946,229.056367 244.225321,226.029438 247.509947,223.067193 Z M683.898354,213.696057 C687.307299,216.516064 690.660231,219.403287 693.955078,222.355872 L672.59938,246.187241 C669.619332,243.516753 666.585918,240.904608 663.500934,238.352603 L683.898354,213.696057 Z M269.656291,204.751338 L288.976115,230.26103 C285.787096,232.676074 282.647518,235.152982 279.55917,237.689969 L259.247495,212.962741 C262.662645,210.157308 266.132946,207.419584 269.656291,204.751338 Z M661.014306,196.360515 C664.65195,198.878382 668.239342,201.468132 671.774336,204.128072 L652.533997,229.697768 C649.338856,227.293557 646.094462,224.951289 642.802596,222.672748 L661.014306,196.360515 Z M293.324804,188.378311 L310.380333,215.454295 C306.995438,217.586624 303.655847,219.784304 300.363333,222.045564 L282.247653,195.667123 C285.891396,193.164653 289.584501,190.734516 293.324804,188.378311 Z M636.742316,181.057439 C640.584077,183.254868 644.381494,185.528391 648.132382,187.876497 L631.153627,215.000691 C627.765294,212.879532 624.331863,210.823733 620.855098,208.835062 L636.742316,181.057439 Z M318.280823,174.119727 L332.943461,202.562776 C329.383497,204.39793 325.864721,206.30178 322.388886,208.272571 L306.605705,180.435703 C310.45467,178.253352 314.347106,176.147554 318.280823,174.119727 Z M611.167578,167.860727 C615.185305,169.718564 619.164754,171.656088 623.103739,173.671981 L608.525623,202.158444 C604.969796,200.338634 601.373143,198.587254 597.737403,196.906044 L611.167578,167.860727 Z M344.384513,162.061388 L356.534286,191.665155 C352.825822,193.187222 349.154346,194.780949 345.521582,196.444613 L332.198852,167.349856 C336.224039,165.506498 340.286651,163.743269 344.384513,162.061388 Z M584.561007,156.929655 C588.726382,158.433515 592.859547,160.020031 596.958354,161.688084 L584.896241,191.327676 C581.198714,189.822928 577.464651,188.389335 573.695752,187.028596 L584.561007,156.929655 Z M371.466093,152.296215 L381.002458,182.842209 C377.177287,184.036657 373.384798,185.305129 369.626666,186.645948 L358.874885,156.506286 C363.041403,155.019783 367.239178,153.616086 371.466093,152.296215 Z M557.072833,148.334918 C561.355257,149.472325 565.61149,150.69463 569.839452,152.00091 L560.39417,182.575191 C556.580842,181.397004 552.735243,180.292319 548.859027,179.262792 L557.072833,148.334918 Z M399.256151,144.924104 L406.112513,176.180948 C402.19577,177.040287 398.307501,177.975646 394.449329,178.985402 L386.347163,148.028094 C390.625613,146.908343 394.929287,145.873405 399.256151,144.924104 Z M528.954597,142.158166 C533.318995,142.920465 537.663095,143.768998 541.984918,144.703034 L535.225567,175.981 C531.327987,175.138646 527.402401,174.371526 523.450404,173.681235 L528.954597,142.158166 Z M427.601247,139.979205 L431.734876,171.711099 C427.750412,172.230152 423.79035,172.826869 419.856257,173.499682 L414.463868,141.957296 C418.824246,141.211606 423.204014,140.552028 427.601247,139.979205 Z M500.417523,138.433567 C504.830573,138.817451 509.22895,139.288062 513.610803,139.844847 L509.578152,171.589732 C505.624259,171.087313 501.646505,170.661345 497.646418,170.313357 L500.417523,138.433567 Z M456.251527,137.491081 L457.653788,169.460342 C453.641397,169.636513 449.649338,169.890975 445.679102,170.22224 L443.01951,138.332954 C447.417024,137.966054 451.828289,137.685272 456.251527,137.491081 Z M471.722498,137.165641 C476.148231,137.173365 480.564555,137.267361 484.969767,137.447232 L483.666042,169.420664 C479.685765,169.258119 475.685625,169.172612 471.667073,169.165593 L471.722498,137.165641 Z\"\n              fill=\"url(#radialGradient-5)\"\n              fillRule=\"nonzero\"\n              transform=\"translate(471.169430, 471.165382) rotate(-49.000000) translate(-471.169430, -471.165382) \"\n            >\n              <animate\n                attributeName=\"opacity\"\n                from=\"0\"\n                to=\"1\"\n                begin=\"0s\"\n                dur=\"1s\"\n                repeatCount=\"1\"\n                fill=\"freeze\"\n              />\n            </path>\n            <path\n              d=\"M471.142144,773.196375 C637.932139,773.196375 773.142144,637.98637 773.142144,471.196375 C773.142144,304.406381 637.932139,169.196375 471.142144,169.196375 C304.35215,169.196375 169.142144,304.406381 169.142144,471.196375 C169.142144,637.98637 304.35215,773.196375 471.142144,773.196375 Z\"\n              fill=\"url(#radialGradient-6)\"\n              opacity=\"0.819984073\"\n              transform=\"translate(471.142144, 471.196375) rotate(-49.000000) translate(-471.142144, -471.196375) \"\n            />\n            <path\n              d=\"M471.142144,759.196375 C630.200152,759.196375 759.142144,630.254383 759.142144,471.196375 C759.142144,312.138367 630.200152,183.196375 471.142144,183.196375 C312.084137,183.196375 183.142144,312.138367 183.142144,471.196375 C183.142144,630.254383 312.084137,759.196375 471.142144,759.196375 Z\"\n              stroke=\"url(#radialGradient-7)\"\n              strokeWidth=\"10\"\n              opacity=\"0.75\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeDasharray=\"0,30\"\n              transform=\"translate(471.142144, 471.196375) rotate(5.000000) translate(-471.142144, -471.196375)\"\n            >\n              <animateTransform\n                attributeType=\"XML\"\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 471.142144 471.196375\"\n                to=\"360 471.142144 471.196375\"\n                dur=\"20s\"\n                repeatCount=\"indefinite\"\n              />\n            </path>\n            <path\n              d=\"M475.607368,753.664244 C478.64457,753.617207 481.14484,756.041214 481.191878,759.078416 C481.238915,762.115618 478.814908,764.615888 475.777706,764.662926 L474.777826,764.678411 C471.740624,764.725448 469.240354,762.301441 469.193316,759.264239 C469.146279,756.227037 471.570286,753.726767 474.607488,753.67973 L475.607368,753.664244 Z M475.622854,754.664125 L474.622974,754.67961 C472.13799,754.718095 470.154711,756.76377 470.193197,759.248754 C470.231682,761.733737 472.277357,763.717016 474.76234,763.678531 L475.762221,763.663045 C478.247204,763.62456 480.230483,761.578885 480.191998,759.093902 C480.153512,756.608918 478.107837,754.625639 475.622854,754.664125 Z M439.242917,757.52556 C439.507599,754.499547 442.175235,752.261047 445.201247,752.52573 L446.197444,752.612867 C449.223456,752.87755 451.461956,755.545185 451.197273,758.571197 C450.93259,761.59721 448.264955,763.83571 445.238942,763.571027 L444.242746,763.48389 C441.216734,763.219208 438.978234,760.551572 439.242917,757.52556 Z M504.987333,751.692883 C508.003487,751.332855 510.740424,753.486071 511.100452,756.502225 C511.46048,759.51838 509.307264,762.255316 506.29111,762.615344 L505.298159,762.73387 C502.282004,763.093898 499.545068,760.940682 499.18504,757.924527 C498.825012,754.908373 500.978227,752.171436 503.994382,751.811408 L504.987333,751.692883 Z M445.114111,753.521927 C442.638283,753.305368 440.455672,755.136868 440.239113,757.612696 C440.022554,760.088524 441.854054,762.271135 444.329882,762.487694 L445.326079,762.57483 C447.801907,762.791389 449.984518,760.959889 450.201077,758.484061 C450.417635,756.008233 448.586136,753.825622 446.110307,753.609063 L445.114111,753.521927 Z M510.107501,756.62075 C509.812933,754.152988 507.573621,752.391266 505.105858,752.685834 L504.112907,752.804359 C501.645144,753.098928 499.883422,755.33824 500.177991,757.806002 C500.472559,760.273765 502.711871,762.035487 505.179634,761.740919 L506.172585,761.622393 C508.640347,761.327825 510.40207,759.088513 510.107501,756.62075 Z M409.6223,752.68877 C410.200485,749.706739 413.08661,747.758037 416.068641,748.336222 L417.050359,748.526567 C420.03239,749.104752 421.981092,751.990877 421.402907,754.972908 C420.824722,757.95494 417.938596,759.903642 414.956565,759.325457 L413.974848,759.135112 C410.992817,758.556927 409.044114,755.670801 409.6223,752.68877 Z M415.878296,749.317939 C413.438453,748.844879 411.077077,750.439271 410.604017,752.879115 C410.130956,755.318959 411.725349,757.680334 414.165193,758.153395 L415.14691,758.34374 C417.586754,758.8168 419.948129,757.222407 420.42119,754.782564 C420.89425,752.34272 419.299857,749.981344 416.860014,749.508284 L415.878296,749.317939 Z M533.998724,746.682067 C536.960806,746.009105 539.907591,747.864804 540.580553,750.826886 C541.253515,753.788968 539.397816,756.735753 536.435734,757.408715 L535.460584,757.630261 C532.498502,758.303223 529.551717,756.447525 528.878755,753.485442 C528.205793,750.52336 530.061492,747.576575 533.023574,746.903613 L533.998724,746.682067 Z M539.605403,751.048432 C539.054798,748.624911 536.643792,747.106612 534.22027,747.657217 L533.24512,747.878763 C530.821598,748.429368 529.3033,750.840374 529.853905,753.263896 C530.40451,755.687418 532.815516,757.205717 535.239038,756.655112 L536.214187,756.433565 C538.637709,755.88296 540.156008,753.471954 539.605403,751.048432 Z M380.69892,744.788694 C381.586026,741.883552 384.660251,740.247611 387.565393,741.134718 L388.521798,741.426763 C391.42694,742.31387 393.06288,745.388095 392.175774,748.293237 C391.288667,751.198379 388.214442,752.834319 385.3093,751.947213 L384.352895,751.655167 C381.447753,750.768061 379.811813,747.693836 380.69892,744.788694 Z M387.273348,742.091122 C384.896414,741.365308 382.381139,742.703805 381.655324,745.080739 C380.929509,747.457673 382.268006,749.972948 384.644941,750.698763 L385.601345,750.990808 C387.978279,751.716623 390.493554,750.378126 391.219369,748.001192 C391.945184,745.624257 390.606687,743.108982 388.229753,742.383168 L387.273348,742.091122 Z M562.326391,738.661123 C565.201554,737.681203 568.326717,739.2176 569.306638,742.092763 C570.286559,744.967926 568.750161,748.093089 565.874998,749.07301 L564.928463,749.395611 C562.0533,750.375532 558.928137,748.839134 557.948216,745.963971 C556.968295,743.088808 558.504693,739.963645 561.379856,738.983724 L562.326391,738.661123 Z M568.360103,742.415364 C567.558349,740.062958 565.001398,738.805905 562.648992,739.607659 L561.702456,739.930259 C559.35005,740.732013 558.092998,743.288964 558.894751,745.641371 C559.696505,747.993777 562.253456,749.250829 564.605862,748.449076 L565.552398,748.126475 C567.904804,747.324722 569.161856,744.76777 568.360103,742.415364 Z M352.716473,733.882192 C353.903378,731.086111 357.132225,729.781616 359.928305,730.968521 L360.848806,731.359263 C363.644886,732.546167 364.949381,735.775014 363.762477,738.571095 C362.575572,741.367175 359.346725,742.67167 356.550645,741.484766 L355.630144,741.094024 C352.834064,739.907119 351.529569,736.678272 352.716473,733.882192 Z M359.537564,731.889021 C357.249861,730.917917 354.608077,731.985231 353.636974,734.272933 C352.66587,736.560636 353.733184,739.20242 356.020886,740.173523 L356.941387,740.564265 C359.229089,741.535369 361.870873,740.468055 362.841976,738.180353 C363.81308,735.89265 362.745766,733.250866 360.458064,732.279763 L359.537564,731.889021 Z M589.630637,727.725768 C592.387425,726.450258 595.656249,727.651072 596.931759,730.40786 C598.207269,733.164649 597.006455,736.433472 594.249667,737.708982 L593.342102,738.128894 C590.585314,739.404404 587.31649,738.203591 586.04098,735.446802 C584.76547,732.690014 585.966283,729.42119 588.723072,728.14568 L589.630637,727.725768 Z M596.024194,730.827772 C594.980595,728.572218 592.306103,727.589734 590.050549,728.633333 L589.142984,729.053245 C586.88743,730.096844 585.904946,732.771336 586.948545,735.02689 C587.992144,737.282445 590.666636,738.264928 592.92219,737.221329 L593.829755,736.801417 C596.085309,735.757818 597.067793,733.083326 596.024194,730.827772 Z M326.092289,720.143875 C327.564318,717.48682 330.911601,716.526167 333.568656,717.998197 L334.443387,718.482805 C337.100442,719.954834 338.061094,723.302117 336.589065,725.959172 C335.117036,728.616226 331.769753,729.576879 329.112698,728.10485 L328.237967,727.620242 C325.580912,726.148213 324.620259,722.800929 326.092289,720.143875 Z M333.084048,718.872928 C330.910094,717.66854 328.171407,718.454529 326.96702,720.628483 C325.762633,722.802436 326.548621,725.541123 328.722575,726.74551 L329.597306,727.230119 C331.77126,728.434506 334.509946,727.648517 335.714334,725.474564 C336.918721,723.30061 336.132733,720.561923 333.958779,719.357536 L333.084048,718.872928 Z M615.674965,713.978081 C618.283525,712.421733 621.659851,713.27472 623.216199,715.88328 C624.772547,718.491841 623.91956,721.868166 621.311,723.424514 L620.452233,723.936881 C617.843673,725.493229 614.467347,724.640243 612.910999,722.031682 C611.354651,719.423121 612.207637,716.046796 614.816198,714.490448 L615.674965,713.978081 Z M622.357432,716.395647 C621.084057,714.26137 618.321608,713.563472 616.187332,714.836848 L615.328565,715.349214 C613.194288,716.62259 612.49639,719.385038 613.769765,721.519315 C615.043141,723.653592 617.805589,724.35149 619.939866,723.078115 L620.798633,722.565748 C622.93291,721.292372 623.630808,718.529924 622.357432,716.395647 Z M300.987445,703.673501 C302.727932,701.184021 306.156999,700.576842 308.646479,702.317329 L309.466043,702.890317 C311.955524,704.630804 312.562703,708.05987 310.822215,710.54935 C309.081728,713.038831 305.652662,713.64601 303.163182,711.905523 L302.343618,711.332535 C299.854137,709.592048 299.246958,706.162982 300.987445,703.673501 Z M308.073492,703.136893 C306.036644,701.712858 303.231044,702.209641 301.807009,704.246489 C300.382975,706.283336 300.879757,709.088936 302.916605,710.512971 L303.736169,711.085958 C305.773017,712.509993 308.578616,712.01321 310.002651,709.976363 C311.426686,707.939515 310.929903,705.133916 308.893056,703.709881 L308.073492,703.136893 Z M640.068323,697.650341 C642.501644,695.832167 645.948161,696.330842 647.766335,698.764163 C649.58451,701.197484 649.085834,704.644002 646.652513,706.462176 L645.851438,707.060739 C643.418117,708.878913 639.971599,708.380238 638.153425,705.946917 C636.335251,703.513596 636.833926,700.067078 639.267247,698.248904 L640.068323,697.650341 Z M646.96526,699.362726 C645.477663,697.371827 642.657784,696.96382 640.666885,698.451417 L639.86581,699.04998 C637.874911,700.537577 637.466904,703.357455 638.954501,705.348354 C640.442098,707.339253 643.261976,707.74726 645.252875,706.259663 L646.053951,705.6611 C648.04485,704.173503 648.452857,701.353625 646.96526,699.362726 Z M277.725268,684.686206 C279.714413,682.390534 283.187944,682.142046 285.483615,684.131192 L286.239375,684.786041 C288.535047,686.775187 288.783535,690.248717 286.794389,692.544389 C284.805243,694.84006 281.331712,695.088548 279.036041,693.099402 L278.280281,692.444553 C275.98461,690.455408 275.736122,686.981877 277.725268,684.686206 Z M284.828767,684.886952 C282.95049,683.259469 280.108511,683.462778 278.481028,685.341054 C276.853545,687.219331 277.056853,690.06131 278.93513,691.688793 L279.69089,692.343642 C281.569166,693.971125 284.411146,693.767817 286.038629,691.88954 C287.666112,690.011263 287.462803,687.169284 285.584527,685.541801 L284.828767,684.886952 Z M662.680111,678.853721 C664.912375,676.793671 668.391983,676.933278 670.452033,679.165542 C672.512082,681.397806 672.372475,684.877414 670.140211,686.937464 L669.405325,687.615655 C667.173061,689.675705 663.693453,689.536097 661.633404,687.303833 C659.573354,685.071569 659.712961,681.591962 661.945225,679.531912 L662.680111,678.853721 Z M669.717147,679.843733 C668.031651,678.017335 665.1847,677.903111 663.358302,679.588607 L662.623416,680.266797 C660.797018,681.952293 660.682794,684.799245 662.368289,686.625643 C664.053785,688.45204 666.900737,688.566264 668.727134,686.880769 L669.46202,686.202578 C671.288418,684.517083 671.402642,681.670131 669.717147,679.843733 Z M256.562997,663.404432 C258.778878,661.32677 262.259482,661.438819 264.337144,663.6547 L265.021133,664.384192 C267.098796,666.600073 266.986747,670.080677 264.770866,672.158339 C262.554985,674.236001 259.074381,674.123953 256.996719,671.908072 L256.31273,671.17858 C254.235068,668.962699 254.347116,665.482095 256.562997,663.404432 Z M263.607652,664.338689 C261.907747,662.525695 259.05998,662.434019 257.246986,664.133925 C255.433993,665.83383 255.342317,668.681597 257.042222,670.494591 L257.726211,671.224083 C259.426117,673.037076 262.273884,673.128752 264.086877,671.428847 C265.899871,669.728942 265.991547,666.881174 264.291641,665.068181 L263.607652,664.338689 Z M683.266406,657.778313 C685.273469,655.49829 688.748839,655.277012 691.028862,657.284075 C693.308886,659.291137 693.530164,662.766508 691.523101,665.046531 L690.862354,665.79714 C688.855291,668.077163 685.379921,668.298441 683.099898,666.291378 C680.819874,664.284316 680.598596,660.808946 682.605659,658.528922 L683.266406,657.778313 Z M690.368115,658.034683 C688.502642,656.392541 685.659157,656.573587 684.017015,658.43906 L683.356268,659.189669 C681.714125,661.055143 681.895171,663.898627 683.760645,665.54077 C685.626119,667.182912 688.469603,667.001866 690.111746,665.136393 L690.772493,664.385784 C692.414635,662.52031 692.233589,659.676826 690.368115,658.034683 Z M237.720745,640.054314 C240.139706,638.217079 243.590036,638.688661 245.427271,641.107622 L246.032109,641.903971 C247.869344,644.322932 247.397762,647.773261 244.978801,649.610497 C242.55984,651.447732 239.10951,650.97615 237.272275,648.557189 L236.667437,647.76084 C234.830202,645.341879 235.301784,641.89155 237.720745,640.054314 Z M244.630922,641.71246 C243.12773,639.73331 240.304733,639.34747 238.325583,640.850663 C236.346433,642.353855 235.960593,645.176852 237.463786,647.156002 L238.068624,647.952351 C239.571816,649.931501 242.394813,650.317341 244.373963,648.814148 C246.353113,647.310956 246.738953,644.487959 245.23576,642.508809 L244.630922,641.71246 Z M701.549298,634.698487 C703.30933,632.222786 706.74307,631.642621 709.218771,633.402653 C711.694472,635.162685 712.274636,638.596425 710.514604,641.072126 L709.935182,641.887154 C708.17515,644.362855 704.74141,644.94302 702.265709,643.182988 C699.790008,641.422956 699.209844,637.989216 700.969876,635.513515 L701.549298,634.698487 Z M708.639349,634.217681 C706.613775,632.777655 703.804352,633.252335 702.364326,635.277909 L701.784904,636.092936 C700.344878,638.11851 700.819557,640.927934 702.845131,642.36796 C704.870704,643.807986 707.680128,643.333306 709.120154,641.307733 L709.699576,640.492705 C711.139602,638.467131 710.664922,635.657707 708.639349,634.217681 Z M221.428435,614.923527 C224.024736,613.346813 227.407634,614.173352 228.984347,616.769654 L229.503419,617.624385 C231.080132,620.220686 230.253593,623.603584 227.657291,625.180297 C225.06099,626.757011 221.678092,625.930472 220.101379,623.33417 L219.582307,622.479439 C218.005594,619.883137 218.832133,616.50024 221.428435,614.923527 Z M228.129616,617.288725 C226.839578,615.164479 224.071753,614.488219 221.947506,615.778257 C219.823259,617.068296 219.147,619.836121 220.437038,621.960368 L220.95611,622.815099 C222.246148,624.939345 225.013973,625.615605 227.13822,624.325566 C229.262467,623.035528 229.938726,620.267703 228.648688,618.143456 L228.129616,617.288725 Z M717.33341,609.853741 C718.826501,607.208465 722.181311,606.274435 724.826587,607.767526 C727.471863,609.260618 728.405893,612.615427 726.912802,615.260704 L726.42126,616.131557 C724.928168,618.776834 721.573359,619.710864 718.928083,618.217772 C716.282806,616.724681 715.348776,613.369871 716.841867,610.724595 L717.33341,609.853741 Z M724.335045,608.63838 C722.170728,607.41676 719.425884,608.180966 718.204263,610.345283 L717.712721,611.216137 C716.491101,613.380454 717.255308,616.125298 719.419625,617.346919 C721.583941,618.568539 724.328786,617.804332 725.550406,615.640015 L726.041948,614.769161 C727.263568,612.604845 726.499362,609.86 724.335045,608.63838 Z M207.819726,588.197805 C210.566213,586.900262 213.844547,588.074864 215.14209,590.821351 L215.569255,591.725524 C216.866798,594.472011 215.692196,597.750345 212.945709,599.047888 C210.199222,600.345431 206.920888,599.170829 205.623346,596.424342 L205.19618,595.520168 C203.898638,592.773681 205.073239,589.495348 207.819726,588.197805 Z M214.237916,591.248516 C213.17629,589.00139 210.494017,588.040353 208.246891,589.101979 C205.999766,590.163604 205.038728,592.845877 206.100354,595.093003 L206.527519,595.997177 C207.589145,598.244303 210.271418,599.20534 212.518544,598.143714 C214.76567,597.082089 215.726707,594.399815 214.665081,592.15269 L214.237916,591.248516 Z M730.424035,583.541744 C731.633105,580.755177 734.872209,579.476363 737.658776,580.685433 C740.445344,581.894503 741.724158,585.133607 740.515088,587.920175 L740.117048,588.837543 C738.907978,591.62411 735.668874,592.902924 732.882307,591.693854 C730.095739,590.484784 728.816925,587.24568 730.025996,584.459112 L730.424035,583.541744 Z M737.260737,581.602801 C734.980819,580.613562 732.330643,581.659864 731.341403,583.939783 L730.943364,584.857151 C729.954125,587.13707 731.000427,589.787246 733.280346,590.776486 C735.560264,591.765725 738.210441,590.719422 739.19968,588.439504 L739.597719,587.522135 C740.586958,585.242217 739.540656,582.592041 737.260737,581.602801 Z M197.067035,560.158306 C199.934354,559.155666 203.071576,560.667287 204.074217,563.534606 L204.404297,564.478559 C205.406937,567.345879 203.895316,570.483101 201.027997,571.485741 C198.160677,572.488381 195.023455,570.97676 194.020815,568.109441 L193.690735,567.165488 C192.688094,564.298169 194.199715,561.160947 197.067035,560.158306 Z M203.130264,563.864687 C202.309922,561.518698 199.743103,560.281917 197.397115,561.102259 C195.051126,561.922601 193.814345,564.489419 194.634688,566.835408 L194.964768,567.779361 C195.78511,570.125349 198.351928,571.36213 200.697916,570.541788 C203.043905,569.721446 204.280686,567.154628 203.460344,564.808639 L203.130264,563.864687 Z M740.704355,555.971626 C741.614787,553.073709 744.702064,551.462534 747.599981,552.372966 C750.497898,553.283398 752.109072,556.370675 751.19864,559.268592 L750.898916,560.222618 C749.988484,563.120535 746.901207,564.731709 744.003291,563.821277 C741.105374,562.910845 739.494199,559.823569 740.404631,556.925652 L740.704355,555.971626 Z M747.300257,553.326992 C744.929234,552.582093 742.40328,553.900327 741.658381,556.27135 L741.358657,557.225376 C740.613758,559.596399 741.931992,562.122352 744.303015,562.867251 C746.674038,563.61215 749.199991,562.293916 749.94489,559.922894 L750.244614,558.968868 C750.989513,556.597845 749.671279,554.071891 747.300257,553.326992 Z M189.316093,531.150297 C192.272761,530.453934 195.234128,532.286274 195.93049,535.242942 L196.159741,536.21631 C196.856103,539.172978 195.023764,542.134345 192.067095,542.830707 C189.110427,543.52707 186.149061,541.69473 185.452698,538.738062 L185.223448,537.764695 C184.527085,534.808026 186.359425,531.84666 189.316093,531.150297 Z M194.957123,535.472192 C194.387372,533.0531 191.964435,531.553913 189.545343,532.123664 C187.126251,532.693416 185.627064,535.116352 186.196815,537.535444 L186.426065,538.508812 C186.995817,540.927904 189.418753,542.427091 191.837845,541.85734 C194.256937,541.287588 195.756124,538.864652 195.186373,536.44556 L194.957123,535.472192 Z M748.037693,527.478019 C748.639512,524.500667 751.541004,522.574918 754.518355,523.176738 C757.495706,523.778557 759.421456,526.680048 758.819636,529.6574 L758.621511,530.637576 C758.019691,533.614928 755.1182,535.540677 752.140849,534.938857 C749.163497,534.337038 747.237748,531.435547 747.839567,528.458195 L748.037693,527.478019 Z M754.320229,524.156914 C751.884215,523.664517 749.510267,525.24013 749.01787,527.676144 L748.819744,528.656321 C748.327346,531.092336 749.902959,533.466283 752.338974,533.958681 C754.774989,534.451078 757.148936,532.875466 757.641334,530.439451 L757.839459,529.459274 C758.331857,527.023259 756.756244,524.649312 754.320229,524.156914 Z M184.644483,501.501916 C187.657706,501.118133 190.411525,503.249716 190.795308,506.26294 L190.921653,507.254926 C191.305437,510.26815 189.173854,513.021969 186.16063,513.405752 C183.147406,513.789535 180.393587,511.657952 180.009804,508.644728 L179.883459,507.652742 C179.499676,504.639518 181.631259,501.8857 184.644483,501.501916 Z M189.803322,506.389286 C189.489317,503.923921 187.236193,502.179898 184.770828,502.493903 C182.305463,502.807907 180.561441,505.061031 180.875445,507.526396 L181.001791,508.518382 C181.315795,510.983748 183.568919,512.72777 186.034284,512.413766 C188.499649,512.099761 190.243672,509.846637 189.929667,507.381272 L189.803322,506.389286 Z M752.352822,498.376689 C752.641386,495.352861 755.32661,493.135491 758.350439,493.424055 C761.374267,493.712618 763.591638,496.397843 763.303074,499.421671 L763.208075,500.417149 C762.919512,503.440977 760.234287,505.658347 757.210459,505.369784 C754.18663,505.08122 751.96926,502.395995 752.257824,499.372167 L752.352822,498.376689 Z M758.255441,494.419532 C755.781399,494.183434 753.584397,495.997646 753.3483,498.471688 L753.253301,499.467165 C753.017204,501.941207 754.831416,504.138209 757.305457,504.374306 C759.779499,504.610404 761.9765,502.796192 762.212598,500.32215 L762.307596,499.326673 C762.543694,496.852631 760.729482,494.65563 758.255441,494.419532 Z M183.071048,471.511415 C186.107796,471.440941 188.626698,473.845581 188.697172,476.88233 L188.720372,477.882061 C188.790846,480.918809 186.386205,483.437711 183.349457,483.508184 C180.312708,483.578658 177.793807,481.174017 177.723333,478.137269 L177.700132,477.137538 C177.629659,474.10079 180.034299,471.581888 183.071048,471.511415 Z M183.306141,472.511127 L183.094249,472.511145 C180.609636,472.568806 178.642203,474.629725 178.699863,477.114337 L178.723064,478.114068 C178.780724,480.598681 180.841644,482.566114 183.326256,482.508454 C185.810869,482.450793 187.778302,480.389874 187.720641,477.905261 L187.697441,476.905531 C187.63978,474.420918 185.578861,472.453485 183.094249,472.511145 L183.306141,472.511127 Z M759.091307,463.414779 C762.128781,463.391184 764.610269,465.834416 764.633864,468.87189 L764.641632,469.87186 C764.665228,472.909334 762.221996,475.390822 759.184521,475.414417 C756.147047,475.438013 753.665559,472.994781 753.641964,469.957306 L753.634196,468.957337 C753.610601,465.919862 756.053832,463.438375 759.091307,463.414779 Z M759.099075,464.414749 C756.613868,464.434054 754.614861,466.464362 754.634166,468.949569 L754.641934,469.949539 C754.661239,472.434745 756.691547,474.433753 759.176754,474.414447 C761.66196,474.395142 763.660968,472.364834 763.641662,469.879628 L763.633894,468.879658 C763.614589,466.394452 761.584281,464.395444 759.099075,464.414749 Z M178.658309,446.592947 C178.899383,443.564962 181.54948,441.305725 184.577464,441.5468 C187.605449,441.787875 189.864686,444.437971 189.623611,447.465956 L189.544247,448.462801 C189.303172,451.490786 186.653076,453.750023 183.625091,453.508948 C180.597106,453.267873 178.337869,450.617777 178.578944,447.589792 L178.658309,446.592947 Z M184.4981,442.543646 C182.020658,442.346403 179.852397,444.194869 179.655154,446.672311 L179.57579,447.669157 C179.378547,450.146599 181.227013,452.314859 183.704455,452.512102 C186.181897,452.709345 188.350158,450.860879 188.547401,448.383437 L188.626765,447.386591 C188.824008,444.909149 186.975542,442.740889 184.4981,442.543646 Z M756.750149,433.496329 C759.769048,433.16009 762.488924,435.334816 762.825163,438.353715 L762.935856,439.34757 C763.272095,442.366469 761.097369,445.086345 758.078469,445.422584 C755.05957,445.758822 752.339694,443.584096 752.003455,440.565197 L751.892762,439.571343 C751.556524,436.552444 753.73125,433.832567 756.750149,433.496329 Z M761.831308,438.464409 C761.556204,435.9944 759.33085,434.215079 756.860842,434.490183 C754.390834,434.765288 752.611512,436.990641 752.886617,439.460649 L752.99731,440.454504 C753.272414,442.924512 755.497768,444.703834 757.967776,444.428729 C760.437784,444.153625 762.217106,441.928272 761.942002,439.458263 L761.831308,438.464409 Z M182.76638,416.307766 C183.320878,413.321239 186.191444,411.34969 189.177971,411.904187 C192.164498,412.458684 194.136047,415.329251 193.58155,418.315778 L193.399003,419.298975 C192.844506,422.285502 189.973939,424.257051 186.987412,423.702554 C184.000886,423.148056 182.029336,420.277489 182.583834,417.290963 L182.76638,416.307766 Z M188.995424,412.887384 C186.551903,412.433705 184.203257,414.04679 183.749577,416.490312 L183.567031,417.473509 C183.113351,419.917031 184.726437,422.265677 187.169959,422.719356 C189.61348,423.173036 191.962126,421.55995 192.415806,419.116428 L192.598352,418.133231 C193.052032,415.68971 191.438946,413.341064 188.995424,412.887384 Z M751.306488,403.962152 C754.273803,403.312651 757.205811,405.191611 757.855311,408.158926 L758.069134,409.135799 C758.718634,412.103114 756.839674,415.035121 753.872359,415.684622 C750.905044,416.334122 747.973036,414.455162 747.323536,411.487847 L747.109713,410.510975 C746.460213,407.54366 748.339173,404.611652 751.306488,403.962152 Z M756.878439,408.372749 C756.347029,405.944946 753.948114,404.407615 751.520311,404.939024 C749.092507,405.470433 747.555177,407.869349 748.086586,410.297152 L748.300409,411.274025 C748.831818,413.701828 751.230733,415.239159 753.658536,414.707749 C756.08634,414.17634 757.62367,411.777424 757.092261,409.349621 L756.878439,408.372749 Z M190.011647,386.623202 C190.875632,383.7111 193.936756,382.050774 196.848857,382.914759 C199.760959,383.778744 201.421286,386.839868 200.5573,389.75197 L200.272867,390.710666 C199.408881,393.622767 196.347758,395.283094 193.435656,394.419108 C190.523554,393.555123 188.863228,390.493999 189.727213,387.581898 L190.011647,386.623202 Z M196.564424,383.873455 C194.181795,383.166558 191.67724,384.525006 190.970342,386.907635 L190.685909,387.866331 C189.979012,390.24896 191.337461,392.753515 193.720089,393.460413 C196.102718,394.16731 198.607274,392.808861 199.314171,390.426232 L199.598605,389.467536 C200.305502,387.084908 198.947053,384.580352 196.564424,383.873455 Z M742.808947,375.192178 C745.691874,374.235338 748.80462,375.796739 749.76146,378.679665 L750.076462,379.628756 C751.033303,382.511682 749.471902,385.624428 746.588975,386.581269 C743.706049,387.538109 740.593303,385.976708 739.636463,383.093782 L739.32146,382.144691 C738.36462,379.261765 739.926021,376.149019 742.808947,375.192178 Z M748.812369,378.994667 C748.0295,376.635909 745.482708,375.358399 743.12395,376.141269 C740.765192,376.924138 739.487682,379.470931 740.270551,381.829689 L740.585554,382.778779 C741.368423,385.137537 743.915215,386.415047 746.273973,385.632178 C748.632731,384.849308 749.910241,382.302516 749.127372,379.943758 L748.812369,378.994667 Z M200.342897,357.820715 C201.507541,355.015289 204.725917,353.685172 207.531343,354.849815 C210.336769,356.014458 211.666886,359.232835 210.502243,362.038261 L210.11883,362.961838 C208.954187,365.767264 205.73581,367.097381 202.930384,365.932738 C200.124958,364.768095 198.794841,361.549718 199.959484,358.744292 L200.342897,357.820715 Z M207.14793,355.773392 C204.852582,354.820502 202.219364,355.90878 201.266474,358.204128 L200.883061,359.127705 C199.930171,361.423054 201.018449,364.056271 203.313798,365.009161 C205.609146,365.962051 208.242363,364.873773 209.195253,362.578424 L209.578666,361.654847 C210.531556,359.359499 209.443278,356.726282 207.14793,355.773392 Z M731.336157,347.454758 C734.102959,346.201119 737.362171,347.42778 738.615811,350.194582 L739.028522,351.105444 C740.282162,353.872247 739.055501,357.131459 736.288698,358.385098 C733.521896,359.638737 730.262683,358.412076 729.009044,355.645274 L728.596332,354.734412 C727.342693,351.967609 728.569354,348.708397 731.336157,347.454758 Z M737.704949,350.607294 C736.679244,348.343547 734.012616,347.339915 731.748868,348.36562 C729.485121,349.391325 728.481489,352.057953 729.507194,354.3217 L729.919906,355.232562 C730.945611,357.496309 733.612239,358.499941 735.875986,357.474236 C738.139734,356.448531 739.143366,353.781903 738.117661,351.518156 L737.704949,350.607294 Z M213.607325,330.30733 C215.058434,327.638793 218.398067,326.651873 221.066604,328.102982 C223.735141,329.554091 224.722061,332.893724 223.270952,335.562261 L222.793231,336.440773 C221.342122,339.10931 218.002488,340.09623 215.333951,338.645121 C212.665414,337.194011 211.678494,333.854378 213.129604,331.185841 L213.607325,330.30733 Z M220.588883,328.981494 C218.405535,327.794222 215.673108,328.601702 214.485836,330.785051 L214.008115,331.663562 C212.820844,333.846911 213.628324,336.579338 215.811673,337.766609 C217.995021,338.95388 220.727448,338.1464 221.914719,335.963052 L222.39244,335.08454 C223.579712,332.901192 222.772232,330.168765 220.588883,328.981494 Z M717.025943,321.066933 C719.646757,319.531308 723.016216,320.411027 724.551841,323.031841 L725.057385,323.894642 C726.59301,326.515455 725.713291,329.884914 723.092477,331.420539 C720.471663,332.956164 717.102204,332.076445 715.566579,329.455631 L715.061035,328.59283 C713.52541,325.972017 714.405129,322.602558 717.025943,321.066933 Z M723.68904,323.537386 C722.43262,321.393083 719.67579,320.673313 717.531488,321.929733 C715.387185,323.186154 714.667415,325.942984 715.923835,328.087286 L716.42938,328.950086 C717.6858,331.094389 720.44263,331.814159 722.586932,330.557739 C724.731234,329.301318 725.451005,326.544488 724.194585,324.400186 L723.68904,323.537386 Z M229.682253,304.299611 C231.403077,301.796498 234.827254,301.162327 237.330367,302.88315 C239.83348,304.603973 240.467651,308.02815 238.746828,310.531263 L238.180314,311.355315 C236.459491,313.858429 233.035314,314.4926 230.532201,312.771777 C228.029088,311.050954 227.394916,307.626777 229.11574,305.123663 L229.682253,304.299611 Z M236.763853,303.707202 C234.715851,302.299256 231.914252,302.818123 230.506306,304.866125 L229.939792,305.690177 C228.531846,307.738179 229.050713,310.539778 231.098715,311.947724 C233.146716,313.355671 235.948316,312.836803 237.356262,310.788802 L237.922776,309.964749 C239.330722,307.916748 238.811855,305.115148 236.763853,303.707202 Z M700.095752,296.374962 C702.543289,294.57597 705.985781,295.101721 707.784772,297.549258 L708.37702,298.355014 C710.176011,300.802551 709.650261,304.245043 707.202724,306.044034 C704.755187,307.843025 701.312695,307.317275 699.513704,304.869738 L698.921456,304.063982 C697.122465,301.616445 697.648215,298.173953 700.095752,296.374962 Z M706.979016,298.141506 C705.507114,296.138975 702.69053,295.708816 700.688,297.180718 C698.68547,298.65262 698.25531,301.469204 699.727212,303.471734 L700.31946,304.27749 C701.791362,306.280021 704.607946,306.71018 706.610476,305.238278 C708.613007,303.766376 709.043166,300.949792 707.571264,298.947262 L706.979016,298.141506 Z M248.384312,280.08399 C250.355414,277.772808 253.826892,277.497119 256.138074,279.468221 C258.449256,281.439324 258.724946,284.910801 256.753843,287.221984 L256.104935,287.98285 C254.133832,290.294032 250.662355,290.569721 248.351172,288.598619 C246.03999,286.627517 245.764301,283.156039 247.735404,280.844857 L248.384312,280.08399 Z M255.489166,280.229088 C253.598199,278.616368 250.757899,278.841932 249.145179,280.732899 L248.49627,281.493765 C246.88355,283.384732 247.109114,286.225032 249.000081,287.837752 C250.891048,289.450473 253.731348,289.224909 255.344068,287.333942 L255.992977,286.573075 C257.605697,284.682108 257.380133,281.841808 255.489166,280.229088 Z M680.672808,273.533107 C682.921127,271.490592 686.399536,271.657429 688.442051,273.905748 L689.11447,274.645919 C691.156985,276.894238 690.990148,280.372647 688.741829,282.415162 C686.49351,284.457678 683.015101,284.290841 680.972586,282.042522 L680.300167,281.30235 C678.257652,279.054031 678.424489,275.575622 680.672808,273.533107 Z M687.70188,274.578166 C686.030731,272.738632 683.18476,272.602129 681.345226,274.273278 C679.505693,275.944427 679.36919,278.790398 681.040339,280.629932 L681.712757,281.370103 C683.383906,283.209637 686.229877,283.34614 688.06941,281.674991 C689.908944,280.003842 690.045447,277.157871 688.374298,275.318337 L687.70188,274.578166 Z M269.478434,257.949884 C271.67799,255.854946 275.159364,255.939756 277.254302,258.139312 C279.349239,260.338868 279.264429,263.820243 277.064873,265.91518 L276.340755,266.604856 C274.141199,268.699793 270.659825,268.614983 268.564888,266.415428 C266.46995,264.215872 266.55476,260.734497 268.754316,258.63956 L269.478434,257.949884 Z M276.530184,258.828989 C274.816144,257.029352 271.967747,256.959962 270.16811,258.674002 L269.443992,259.363678 C267.644356,261.077717 267.574966,263.926115 269.289005,265.725751 C271.003045,267.525388 273.851442,267.594778 275.651079,265.880738 L276.375197,265.191062 C278.174833,263.477022 278.244223,260.628625 276.530184,258.828989 Z M658.953305,252.785885 C660.978158,250.521645 664.455154,250.327585 666.719393,252.352437 L667.464805,253.019041 C669.729045,255.043894 669.923106,258.52089 667.898253,260.785129 C665.8734,263.049368 662.396404,263.243429 660.132165,261.218576 L659.386752,260.551973 C657.122513,258.52712 656.928452,255.050124 658.953305,252.785885 Z M666.052789,253.09785 C664.20023,251.441152 661.355415,251.599929 659.698717,253.452488 C658.04202,255.305048 658.200797,258.149863 660.053356,259.80656 L660.798768,260.473164 C662.651328,262.129862 665.496143,261.971085 667.15284,260.118525 C668.809538,258.265966 668.650761,255.421151 666.798202,253.764453 L666.052789,253.09785 Z M292.738674,238.124041 C295.143133,236.267866 298.597059,236.712338 300.453234,239.116797 C302.309409,241.521256 301.864937,244.975182 299.460478,246.831357 L298.668904,247.44243 C296.264445,249.298605 292.810519,248.854133 290.954344,246.449674 C289.098169,244.045215 289.542641,240.591289 291.9471,238.735114 L292.738674,238.124041 Z M299.66166,239.72787 C298.142972,237.760585 295.317032,237.396926 293.349747,238.915615 L292.558173,239.526688 C290.590889,241.045377 290.22723,243.871316 291.745918,245.838601 C293.264607,247.805885 296.090546,248.169544 298.057831,246.650856 L298.849405,246.039783 C300.81669,244.521094 301.180349,241.695155 299.66166,239.72787 Z M635.219363,234.412073 C636.998821,231.950298 640.437019,231.397169 642.898795,233.176626 L643.709239,233.762443 C646.171014,235.5419 646.724143,238.980099 644.944686,241.441875 C643.165228,243.903651 639.72703,244.456779 637.265254,242.677322 L636.45481,242.091505 C633.993035,240.312048 633.439906,236.873849 635.219363,234.412073 Z M642.312978,233.98707 C640.298798,232.53115 637.485726,232.98371 636.029807,234.99789 C634.573887,237.01207 635.026447,239.825142 637.040627,241.281062 L637.851071,241.866878 C639.865251,243.322798 642.678322,242.870238 644.134242,240.856058 C645.590162,238.841878 645.137602,236.028806 643.123422,234.572887 L642.312978,233.98707 Z M317.87739,220.845089 C320.461133,219.247878 323.850465,220.047619 325.447676,222.631361 C327.044888,225.215103 326.245146,228.604436 323.661404,230.201647 L322.810808,230.727467 C320.227066,232.324678 316.837733,231.524937 315.240522,228.941194 C313.643311,226.357452 314.443052,222.96812 317.026794,221.370908 L317.87739,220.845089 Z M324.59708,223.157181 C323.290271,221.04321 320.517181,220.388876 318.40321,221.695685 L317.552614,222.221504 C315.438643,223.528314 314.784309,226.301404 316.091118,228.415375 C317.397927,230.529346 320.171018,231.18368 322.284989,229.87687 L323.135585,229.351051 C325.249556,228.044242 325.90389,225.271151 324.59708,223.157181 Z M609.717033,218.6073 C611.231076,215.973959 614.593194,215.066589 617.226535,216.580632 L618.093459,217.079071 C620.7268,218.593114 621.63417,221.955233 620.120127,224.588573 C618.606084,227.221914 615.243966,228.129284 612.610625,226.615241 L611.7437,226.116802 C609.11036,224.602759 608.20299,221.24064 609.717033,218.6073 Z M616.728095,217.447557 C614.573544,216.208794 611.82272,216.951188 610.583957,219.105739 C609.345195,221.260291 610.087589,224.011115 612.24214,225.249877 L613.109064,225.748317 C615.263616,226.987079 618.01444,226.244685 619.253202,224.090134 C620.491965,221.935583 619.749571,219.184758 617.59502,217.945996 L616.728095,217.447557 Z M344.73364,206.239823 C347.469785,204.920611 350.757301,206.069262 352.076513,208.805406 C353.395725,211.541551 352.247074,214.829067 349.510929,216.148279 L348.61016,216.582578 C345.874015,217.90179 342.586499,216.753139 341.267287,214.016994 C339.948076,211.280849 341.096727,207.993333 343.832871,206.674122 L344.73364,206.239823 Z M351.175744,209.239705 C350.096389,207.001042 347.406603,206.061236 345.167939,207.140591 L344.26717,207.57489 C342.028506,208.654245 341.088701,211.344031 342.168056,213.582695 C343.247411,215.821359 345.937197,216.761165 348.175861,215.681809 L349.07663,215.24751 C351.315294,214.168155 352.255099,211.478369 351.175744,209.239705 Z M582.727527,205.555476 C583.958666,202.778589 587.207814,201.525512 589.984701,202.756652 L590.898883,203.161956 C593.67577,204.393096 594.928847,207.642244 593.697707,210.419131 C592.466568,213.196018 589.21742,214.449095 586.440532,213.217955 L585.526351,212.812651 C582.749463,211.581511 581.496387,208.332363 582.727527,205.555476 Z M589.579397,203.670834 C587.307398,202.663538 584.649004,203.688782 583.641708,205.960781 C582.634412,208.232779 583.659657,210.891173 585.931655,211.898469 L586.845837,212.303773 C589.117836,213.311069 591.776229,212.285825 592.783525,210.013826 C593.790821,207.741828 592.765577,205.083434 590.493578,204.076138 L589.579397,203.670834 Z M372.976349,194.517274 C375.835554,193.491722 378.984771,194.978192 380.010323,197.837396 C381.035874,200.696601 379.549405,203.845818 376.6902,204.87137 L375.748919,205.208993 C372.889714,206.234544 369.740497,204.748075 368.714945,201.88887 C367.689393,199.029665 369.175863,195.880448 372.035068,194.854896 L372.976349,194.517274 Z M379.069041,198.175019 C378.229954,195.83567 375.653321,194.619467 373.313972,195.458555 L372.37269,195.796178 C370.033341,196.635266 368.817139,199.211898 369.656226,201.551247 C370.495314,203.890597 373.071946,205.106799 375.411296,204.267711 L376.352577,203.930088 C378.691927,203.091001 379.908129,200.514368 379.069041,198.175019 Z M554.490468,195.388206 C555.423865,192.497605 558.523829,190.910977 561.41443,191.844375 L562.366048,192.15166 C565.256649,193.085057 566.843277,196.185021 565.909879,199.075622 C564.976482,201.966224 561.876518,203.552851 558.985917,202.619454 L558.034299,202.312169 C555.143698,201.378772 553.55707,198.278808 554.490468,195.388206 Z M561.107146,192.795993 C558.742108,192.032304 556.205774,193.330453 555.442085,195.695491 C554.678396,198.060529 555.976546,200.596863 558.341584,201.360551 L559.293201,201.667836 C561.658239,202.431525 564.194573,201.133375 564.958262,198.768338 C565.721951,196.4033 564.423801,193.866966 562.058763,193.103277 L561.107146,192.795993 Z M402.307696,185.815176 C405.2587,185.095187 408.234627,186.903782 408.954616,189.854786 C409.674605,192.80579 407.866011,195.781717 404.915007,196.501706 L403.943504,196.738735 C400.9925,197.458724 398.016572,195.650129 397.296583,192.699125 C396.576594,189.748121 398.385189,186.772193 401.336193,186.052204 L402.307696,185.815176 Z M407.983114,190.091814 C407.394032,187.677356 404.959182,186.197597 402.544724,186.786679 L401.573221,187.023707 C399.158764,187.612789 397.679004,190.047639 398.268086,192.462097 C398.857168,194.876554 401.292018,196.356314 403.706476,195.767232 L404.677978,195.530204 C407.092436,194.941122 408.572196,192.506272 407.983114,190.091814 Z M525.352922,188.239217 C525.97832,185.266729 528.894983,183.364037 531.867471,183.989435 L532.846047,184.195323 C535.818535,184.820722 537.721227,187.737385 537.095829,190.709873 C536.47043,193.682361 533.553767,195.585053 530.581279,194.959655 L529.602704,194.753767 C526.630216,194.128368 524.727524,191.211705 525.352922,188.239217 Z M531.661583,184.968011 C529.229548,184.456321 526.843187,186.013069 526.331498,188.445105 C525.819808,190.877141 527.376556,193.263501 529.808592,193.775191 L530.787167,193.981079 C533.219203,194.492769 535.605564,192.93602 536.117253,190.503985 C536.628943,188.071949 535.072195,185.685588 532.640159,185.173899 L531.661583,184.968011 Z M432.395682,180.232675 C435.40579,179.825173 438.17631,181.935003 438.583811,184.945111 C438.991313,187.955219 436.881483,190.725739 433.871375,191.13324 L432.880415,191.267394 C429.870307,191.674896 427.099787,189.565066 426.692285,186.554958 C426.284784,183.54485 428.394613,180.77433 431.404721,180.366829 L432.395682,180.232675 Z M495.642997,184.173785 C495.955413,181.152327 498.658052,178.956216 501.679509,179.268632 L502.674206,179.371483 C505.695663,179.683899 507.891774,182.386538 507.579358,185.407995 C507.266942,188.429452 504.564303,190.625564 501.542846,190.313148 L500.548149,190.210297 C497.526692,189.89788 495.33058,187.195242 495.642997,184.173785 Z M437.592851,185.079265 C437.25944,182.616449 434.992651,180.890225 432.529836,181.223635 L431.538875,181.357789 C429.076059,181.691199 427.349835,183.957989 427.683246,186.420804 C428.016656,188.88362 430.283445,190.609844 432.746261,190.276434 L433.737221,190.14228 C436.200037,189.808869 437.926261,187.54208 437.592851,185.079265 Z M501.576658,180.263329 C499.104557,180.007716 496.893307,181.804534 496.637693,184.276636 C496.38208,186.748737 498.178899,188.959987 500.651,189.2156 L501.645697,189.318451 C504.117798,189.574064 506.329048,187.777246 506.584661,185.305144 C506.840275,182.833043 505.043456,180.621793 502.571355,180.36618 L501.576658,180.263329 Z M472.142899,177.698793 C475.180466,177.698793 477.642899,180.161227 477.642899,183.198793 C477.642899,186.236359 475.180466,188.698793 472.142899,188.698793 L471.142899,188.698793 C469.587073,188.698793 468.182129,188.052789 467.181666,187.014379 L467.144625,186.973793 L467.123353,186.999619 C466.20166,188.017654 464.902229,188.691316 463.437228,188.794846 L463.216263,188.806071 L462.216744,188.837084 C459.180639,188.931287 456.643023,186.546404 456.54882,183.510299 C456.454617,180.474194 458.8395,177.936578 461.875605,177.842375 L462.875124,177.811362 C464.504253,177.760814 465.989856,178.424054 467.031449,179.518685 L467.042625,179.530793 L467.181666,179.383207 C468.134488,178.394246 469.454186,177.761207 470.921692,177.70316 L471.142899,177.698793 L472.142899,177.698793 Z M462.906136,178.810881 L461.906617,178.841894 C459.422531,178.918969 457.471264,180.9952 457.548339,183.479286 C457.625414,185.963372 459.701645,187.91464 462.185731,187.837565 L463.18525,187.806552 C464.46278,187.766913 465.599385,187.198518 466.391639,186.317821 L466.515625,186.172793 L466.429098,186.034129 C465.965661,185.26531 465.684997,184.373879 465.647267,183.42 L465.642899,183.198793 C465.642899,182.161575 465.930012,181.191417 466.429098,180.363457 L466.436625,180.350793 L466.3365,180.23933 C465.527875,179.373066 464.382898,178.828549 463.118022,178.809207 L462.906136,178.810881 Z M472.142899,178.698793 L471.142899,178.698793 C469.793747,178.698793 468.583266,179.292518 467.758486,180.23294 L467.672625,180.333793 L467.77849,180.504824 C468.202339,181.218786 468.469704,182.038182 468.531822,182.917182 L468.543048,183.138147 C468.575215,184.174866 468.318327,185.153462 467.845159,185.996501 L467.750625,186.155793 L467.758486,186.164646 C468.539856,187.055572 469.667396,187.635335 470.931064,187.693895 L471.142899,187.698793 L472.142899,187.698793 C474.628181,187.698793 476.642899,185.684075 476.642899,183.198793 C476.642899,180.713512 474.628181,178.698793 472.142899,178.698793 Z M467.066625,181.289793 L467.016299,181.401176 C466.776118,181.951763 466.642899,182.559721 466.642899,183.198793 C466.642899,183.908874 466.807366,184.580541 467.100285,185.177779 L467.120625,185.216793 L467.147737,185.161379 C467.394567,184.615947 467.535532,184.013483 467.545203,183.381045 L467.543529,183.16916 C467.523709,182.530395 467.371701,181.926861 467.11456,181.383987 L467.066625,181.289793 Z\"\n              fill=\"url(#radialGradient-8)\"\n              fillRule=\"nonzero\"\n              transform=\"translate(471.170212, 471.188938) rotate(5.000000) translate(-471.170212, -471.188938)\"\n            >\n              <animateTransform\n                attributeType=\"XML\"\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 471.170212 471.188938\"\n                to=\"360 471.170212 471.188938\"\n                dur=\"20s\"\n                repeatCount=\"indefinite\"\n              />\n            </path>\n            <use\n              stroke={color}\n              mask=\"url(#mask-10)\"\n              strokeWidth=\"4\"\n              opacity=\"0.2\"\n              strokeDasharray=\"60\"\n              xlinkHref=\"#path-9\"\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport { GearBackground };\n","import { cloneDeep, merge } from \"lodash\";\nimport {\n  Axis,\n  BaseConfig,\n  CircleOptions,\n  Data,\n  DataCircle,\n  DataCircleOptions,\n  DataFill,\n  DataFillProps,\n  DataLine,\n  DataLineOptions,\n  DataPolyProps,\n  DrawPolygonOptions,\n  DrawRadarBgOption,\n  GradientPolygon,\n  UserConfig,\n} from \"./interface.js\";\n\nexport const colorMap = [\n  \"#5B8FF9\",\n  \"#5AD8A6\",\n  \"#5D7092\",\n  \"#F6BD16\",\n  \"#E86452\",\n  \"#6DC8EC\",\n  \"#945FB9\",\n  \"#FF9845\",\n  \"#1E9493\",\n  \"#FF99C3\",\n]; //chart-v2 的主题色\n\nexport const baseUserConfig: UserConfig = {\n  dataFill: {\n    fillStyle: \"rgba(76,132,250,0.67)\",\n  },\n  dataCircle: {\n    r: 2,\n    strokeStyle: \"#ccc\",\n    fillStyle: \"#fff\",\n    lineWidth: 0.5,\n  },\n  dataLine: {\n    strokeStyle: \"#0B2EE7\",\n    lineWidth: 5,\n  },\n};\nexport const baseRadarConfig: BaseConfig = {\n  n: 0,\n  dataRadiusOfPercent: [],\n  dataRadius: [],\n  angleArr: [],\n  tooltipsContentArr: [],\n  originDataSource: [],\n  radius: 1,\n};\n/**\n *  // 初始化参数配置\n * @param dataSource\n * @param radius\n * @returns BaseConfig\n */\nexport const constructBaseConfig = function (\n  dataSource: Data[],\n  radius: number\n) {\n  const baseConfig: BaseConfig = cloneDeep(baseRadarConfig);\n  baseConfig.radius = radius;\n  if (dataSource?.length < 1) return baseConfig;\n  baseConfig.originDataSource = dataSource;\n  baseConfig.n = dataSource.length;\n  const disAngle = (Math.PI * 2) / baseConfig.n;\n  dataSource.forEach((data, i) => {\n    baseConfig.dataRadiusOfPercent[i] = data.value / data.maxValue;\n    baseConfig.dataRadius[i] = baseConfig.dataRadiusOfPercent[i] * radius;\n    baseConfig.angleArr[i] = i * disAngle;\n  });\n  return baseConfig;\n};\n\nexport const constructUserConfig = function (\n  dataFill: DataFill,\n  dataCircle: DataCircle,\n  dataLine: DataLine\n) {\n  const userConfig: UserConfig = cloneDeep(baseUserConfig);\n  merge(userConfig.dataFill, dataFill);\n  merge(userConfig.dataCircle, dataCircle);\n  merge(userConfig.dataLine, dataLine);\n  return userConfig;\n};\n\n/**\n * 获取数据点相对于原点的坐标\n * n：多边形边数\n * dataRadiusArr: 数据点的坐标数组\n * angleArr: 多边形的角度数组\n */\nexport const getDataPointsPos = function (\n  n: number,\n  dataRadiusArr: number[],\n  angleArr: number[]\n) {\n  const dataPointsPosArray = [];\n  for (let i = 0; i < n; i++) {\n    const curPoinrPos: Axis = {\n      x: 0,\n      y: 0,\n    };\n    curPoinrPos.x = dataRadiusArr[i] * Math.sin(angleArr[i]);\n    curPoinrPos.y = -dataRadiusArr[i] * Math.cos(angleArr[i]);\n    dataPointsPosArray.push(curPoinrPos);\n  }\n  return dataPointsPosArray;\n};\n\n/**\n * 获取正多边形每个点的坐标位置数组（相对于原点）\n * n: 多边形的边数\n * r: 半径\n * origin: 原点位置\n */\nexport const getPolygonPos = function (n: number, r: number, origin: number[]) {\n  const dotsArray = []; // 多边形每一个点的坐标数组，格式如[{x: 1, y: 2}]\n  const angle = (Math.PI * 2) / n;\n  for (let i = 0; i < n; i++) {\n    const curPos: Axis = {\n      x: 0,\n      y: 0,\n    };\n    curPos.x = r * Math.sin(i * angle) + origin[0];\n    curPos.y = -r * Math.cos(i * angle) + origin[1];\n    dotsArray.push(curPos);\n  }\n  return dotsArray;\n};\n\n/**\n * 绘制闭合正多边形\n * n: 边数\n * r：半径\n * origin：正多边形的中心位置。数组形式[x, y]\n * fillStyle：填充样式\n * strokeStyle：线条样式\n * lineWidth: 线条宽度\n */\nexport const drawPolygon = function (\n  context: CanvasRenderingContext2D,\n  options: DrawPolygonOptions\n) {\n  // 对传入参数进行默认值设置\n  const n = options.n,\n    r = options.r,\n    origin = options.origin,\n    strokeStyle = options.strokeStyle,\n    lineWidth = options.lineWidth * options.ratio,\n    lineCap = \"butt\";\n\n  context.save();\n  context.beginPath();\n  const angle = (Math.PI * 2) / n;\n  context.translate(origin[0], origin[1]);\n  context.moveTo(0, -r);\n  for (let i = 0; i < n; i++) {\n    context.rotate(angle);\n    context.lineTo(0, -r);\n  }\n  context.closePath();\n  context.stroke();\n\n  if (options.strokeStyle) {\n    context.strokeStyle = strokeStyle;\n    context.lineWidth = lineWidth;\n    context.lineCap = lineCap;\n  }\n  if (options.fillStyle) {\n    if (typeof options.fillStyle === \"string\") {\n      context.fillStyle = options.fillStyle;\n    } else if (options.fillStyle instanceof Array) {\n      // 创建线性渐变对象\n      const gradient = context.createLinearGradient(-r, -r, r, r);\n      options.fillStyle.forEach((colors) => {\n        gradient.addColorStop(0, colors[0]);\n        gradient.addColorStop(1, colors[1]);\n      });\n      context.fillStyle = gradient;\n    }\n\n    context.fill();\n  }\n  context.restore();\n};\n\n/**\n * 绘制线性渐变的多边形,\n * n: 边数\n * r：半径\n * origin：正多边形的中心位置。数组形式[x, y]\n * strokeStyle：线条样式\n * lineWidth: 线条宽度\n */\nexport const drawGradientPolygon = function (\n  context: CanvasRenderingContext2D,\n  options: GradientPolygon\n) {\n  // 对传入参数进行默认值设置\n  const { n, r, origin, strokeStyle } = options;\n  const lineWidth = options.lineWidth * options.ratio,\n    lineCap = \"butt\";\n  context.save();\n  const angle = (Math.PI * 2) / n;\n  context.translate(origin[0], origin[1]);\n\n  // 设置线条样式\n  context.lineWidth = lineWidth;\n  context.lineCap = lineCap;\n  // 添加偏移量，使第一条边与正上方对齐\n  context.rotate(-Math.PI / 2);\n\n  for (let i = 0; i < n; i++) {\n    // 计算当前边的起点和终点坐标\n    const startX = r * Math.cos(angle * i),\n      startY = r * Math.sin(angle * i),\n      endX = r * Math.cos(angle * (i + 1)),\n      endY = r * Math.sin(angle * (i + 1));\n    // 开始一个新的路径\n    context.beginPath();\n    // 绘制多边形的一条边\n    context.moveTo(startX, startY);\n    context.lineTo(endX, endY);\n    // 创建线性渐变对象\n    const gradient = context.createLinearGradient(startX, startY, endX, endY);\n    gradient.addColorStop(0, strokeStyle);\n    gradient.addColorStop(0.5, \"#1D2B57\");\n    gradient.addColorStop(0.6, \"#1D2B57\");\n    gradient.addColorStop(1, strokeStyle);\n    // 设置当前路径的描边样式为线性渐变\n    context.strokeStyle = gradient;\n    context.stroke();\n  }\n  context.restore();\n};\n\n/**\n * 绘制数据点连接线条(一次性画完)\n * dataPoints: 数据的位置数组\n * strokeStyle: 线条样式\n * lineWidth: 线条宽度\n */\nexport const drawDataLine = function (\n  context: CanvasRenderingContext2D,\n  origin: number[],\n  options: DataLineOptions\n) {\n  const { strokeStyle, lineWidth, dataPoints } = options;\n  const dataPointsLen = dataPoints.length;\n  context.save();\n  context.beginPath();\n  context.translate(origin[0], origin[1]);\n  context.moveTo(dataPoints[0].x, dataPoints[0].y);\n  for (let i = 1; i < dataPointsLen; i++) {\n    context.lineTo(dataPoints[i].x, dataPoints[i].y);\n  }\n  context.closePath();\n  context.strokeStyle = strokeStyle;\n  context.lineWidth = lineWidth;\n  context.lineJoin = \"round\";\n  context.stroke();\n  context.restore();\n};\n/**\n * 绘制放射性中心点到多边形顶点连线\n * @param context\n * @param origin\n * @param dataPoints 多边形顶点坐标\n */\nexport const drawVertexLine = function (\n  context: CanvasRenderingContext2D,\n  origin: number[],\n  dataPoints: Axis[]\n) {\n  context.save();\n  context.beginPath();\n  dataPoints.map((point) => {\n    context.moveTo(origin[0], origin[1]);\n    context.lineTo(point.x, point.y);\n  });\n  context.strokeStyle = \"#1D2B57\";\n  context.lineWidth = 2;\n  context.stroke();\n  context.restore();\n};\nexport const drawLeadLineAndText = function (\n  context: CanvasRenderingContext2D,\n  origin: number[],\n  r: number,\n  dataPoints: Axis[],\n  dataSource: Data[]\n) {\n  context.save();\n  const offsetX = r / 2,\n    offsetY = r / 4,\n    offsetEndX = r / 12 > 10 ? r / 12 : 10,\n    rectSize = 12;\n  dataPoints.map((point, i) => {\n    let curPosX = point.x,\n      curPosMiddleX = point.x,\n      curPosEndX = point.x,\n      curPosY = point.y,\n      rectX = point.x;\n    const color = dataSource[i]?.color || colorMap[i] || \"#ccc\";\n    context.beginPath();\n    context.moveTo(point.x, point.y);\n\n    if (point.x - origin[0] >= 0) {\n      //引线方向往右\n      curPosX += offsetX;\n      curPosMiddleX = curPosX + offsetX;\n      curPosEndX = curPosMiddleX + offsetEndX;\n      rectX = curPosX + rectSize;\n    } else if (point.x - origin[0] < 0) {\n      //引线方向往左\n      curPosX -= offsetX;\n      curPosMiddleX = curPosX - offsetX;\n      curPosEndX = curPosMiddleX - offsetEndX;\n      rectX = curPosMiddleX + rectSize;\n    }\n\n    if (point.y - origin[1] < 0) {\n      curPosY -= offsetY;\n    } else if (point.y - origin[1] > 0) {\n      curPosY += offsetY;\n    }\n    context.lineTo(curPosX, curPosY);\n    context.lineTo(curPosEndX, curPosY);\n    context.strokeStyle = \"rgba(255, 255, 255, .1)\";\n    context.stroke();\n    context.beginPath();\n    context.moveTo(curPosMiddleX, curPosY);\n    context.lineTo(curPosEndX, curPosY);\n    context.strokeStyle = color;\n    context.lineWidth = 2;\n    context.stroke();\n\n    //文本\n    const rectY = dataSource[i]?.percentValue\n      ? curPosY - r / 3.5\n      : curPosY - r / 5.5;\n    const legendSize = r / 12;\n\n    if (dataSource[i]?.name) {\n      context.fillStyle = color;\n      context.fillRect(rectX, rectY, rectSize, rectSize);\n\n      context.textAlign = \"left\";\n      context.font = `400 ${legendSize}px HarmonyOS_Sans_SC_Black`;\n      context.fillStyle = \"rgba(255, 255, 255, .4)\";\n      context.fillText(\n        `${dataSource[i].name}`,\n        rectX + rectSize * 1.5,\n        rectY + rectSize / 2\n      );\n      context.stroke();\n    }\n    if (dataSource[i]?.percentValue) {\n      const percentSize = r / 10;\n      context.textAlign = \"left\";\n      context.font = `500 ${percentSize}px HarmonyOS_Sans_SC_Black`;\n      context.fillStyle = \"#fff\";\n      context.fillText(\n        `${dataSource[i]?.percentValue}`,\n        rectX + rectSize * 1.5,\n        rectY + rectSize / 2 + legendSize * 1.5\n      );\n      context.stroke();\n    }\n  });\n  context.restore();\n};\n\n/**\n * 绘制数据点圆圈\n * dataPoints: 数据的位置数组\n * r: 圆圈半径\n * strokeStyle: 圆的描边样式\n * fillStyle: 圆的描边宽度\n * lineWidth: 圆的填充样式\n */\nexport const drawDataCircle = function (\n  context: CanvasRenderingContext2D,\n  origin: number[],\n  ratio: number,\n  options: DataCircleOptions\n) {\n  const { strokeStyle, fillStyle, dataPoints } = options;\n  const r = options.r * ratio,\n    lineWidth = options.lineWidth * ratio;\n\n  const dataPointsPosArrayLen = dataPoints.length;\n  for (let i = 0; i < dataPointsPosArrayLen; i++) {\n    drawCircle(context, {\n      x: dataPoints[i].x,\n      y: dataPoints[i].y,\n      r: r,\n      originX: origin[0],\n      originY: origin[1],\n      strokeStyle: strokeStyle,\n      lineWidth: lineWidth,\n      fillStyle: fillStyle,\n    });\n  }\n};\n\n/**\n * 绘制圆圈\n * x: 圆心位置x\n * y: 圆心位置y\n * r: 半径\n * originX: 原点位置x\n * originY: 原点位置y\n * strokeStyle: 描边样式\n * lineWidth: 线条宽度\n * fillStyle: 填充样式\n */\nexport function drawCircle(\n  context: CanvasRenderingContext2D,\n  options: CircleOptions\n) {\n  const { x, y, r, originX, originY, strokeStyle, lineWidth, fillStyle } =\n    options;\n  context.save();\n  context.beginPath();\n  context.translate(originX, originY);\n  context.arc(x, y, r, 0, Math.PI * 2);\n  context.closePath();\n  context.strokeStyle = strokeStyle;\n  context.lineWidth = lineWidth;\n  context.lineJoin = \"round\";\n  context.fillStyle = fillStyle;\n  context.stroke();\n  context.fill();\n  context.restore();\n}\n\n/**\n * 绘制数据多边形填充\n * dataPoints: 数据的位置数组\n * fillStyle: 填充样式\n */\nexport const drawDataFill = function (\n  context: CanvasRenderingContext2D,\n  origin: number[],\n  options: DataFillProps\n) {\n  const { fillStyle, dataPoints } = options;\n  const dataPointsPosArrayLen = dataPoints.length;\n  context.save();\n  context.beginPath();\n  context.translate(origin[0], origin[1]);\n  context.moveTo(dataPoints[0].x, dataPoints[0].y);\n  for (let i = 1; i < dataPointsPosArrayLen; i++) {\n    context.lineTo(dataPoints[i].x, dataPoints[i].y);\n  }\n  context.closePath();\n  context.fillStyle = fillStyle;\n  context.fill();\n  context.restore();\n};\n\n/**\n * 绘制数据点组成的图案\n * dataLineOptions\n * dataFillOptions\n * dataCircleOptions\n */\nexport const drawDataPoly = function (\n  context: CanvasRenderingContext2D,\n  origin: number[],\n  ratio: number,\n  options: DataPolyProps\n) {\n  const { dataLineOptions, dataFillOptions, dataCircleOptions } = options;\n  const dataPointsPosArrayLen = dataLineOptions.dataPoints.length;\n  if (dataPointsPosArrayLen === 0) return;\n  // 绘制数据点连接线条\n  drawDataLine(context, origin, dataLineOptions);\n  // 绘制数据多边形填充\n  drawDataFill(context, origin, dataFillOptions);\n  // 绘制数据点圆圈\n  drawDataCircle(context, origin, ratio, dataCircleOptions);\n};\n\n/**\n * 绘制雷达的背景图\n * 参数options对象的属性如下：\n * layer: 多边形层数\n * n: 边数\n * r：半径\n * origin：正多边形的中心位置。数组形式[x, y]\n * oddStrokeStyle: index为奇数的多边形的描边颜色\n * oddFillStyle: index为奇数的多边形的填充颜色\n * evenStrokeStyle: index为偶数的多边形的描边颜色\n * evenFillStyle: index为偶数的多边形的填充颜色\n */\nexport const drawRadarBackground = function (\n  context: CanvasRenderingContext2D,\n  options: DrawRadarBgOption\n) {\n  const { layer, n, r, ratio, origin, lineWidth } = options;\n  const evenStrokeStyle = \"transparent\",\n    oddStrokeStyle = \"transparent\",\n    evenFillStyle = [[\"#3366FF\", \"#83F5E1\"]],\n    oddFillStyle = \"#29292d\";\n  // 由外向内绘画多边形\n  for (let i = layer; i > 0; i--) {\n    if (i === layer) {\n      drawGradientPolygon(context, {\n        n,\n        r,\n        origin,\n        ratio,\n        lineWidth,\n        strokeStyle: \"rgba(51, 102, 255)\",\n      });\n      drawGradientPolygon(context, {\n        n,\n        r: r * 0.95,\n        origin,\n        ratio,\n        strokeStyle: \"rgba(76,132,250,0.1)\",\n        lineWidth,\n      });\n    } else {\n      const layerDis = (r * 0.95) / layer;\n      const fillStyle = i % 2 != 0 ? oddFillStyle : evenFillStyle,\n        strokeStyle = i % 2 != 0 ? oddStrokeStyle : evenStrokeStyle,\n        layerRadiu = layerDis * i;\n      drawPolygon(context, {\n        n,\n        r: layerRadiu,\n        origin,\n        fillStyle,\n        strokeStyle,\n        lineWidth,\n        ratio,\n      });\n    }\n  }\n};\n","import React, { ReactElement, useEffect, useRef, useState } from \"react\";\nimport {\n  baseRadarConfig,\n  baseUserConfig,\n  constructBaseConfig,\n  constructUserConfig,\n  drawDataPoly,\n  drawLeadLineAndText,\n  drawRadarBackground,\n  drawVertexLine,\n  getDataPointsPos,\n  getPolygonPos,\n} from \"./utils.js\";\nimport { BaseConfig, RadarProps, UserConfig } from \"./interface.js\";\n\nexport function Radar({\n  dataSource,\n  radius,\n  value,\n  dataFill,\n  dataCircle,\n  dataLine,\n  scale,\n  ...props\n}: RadarProps): ReactElement {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const contextRef = useRef<CanvasRenderingContext2D>(null);\n  const [baseConfig, setBaseConfig] = useState<BaseConfig>(baseRadarConfig);\n  const [userConfig, setUserConfig] = useState<UserConfig>(baseUserConfig);\n\n  const ratio = window.devicePixelRatio;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const canvasWidth = canvas.clientWidth;\n    const canvasHeight = canvas.clientHeight;\n    // 根据设备像素比调整画布的实际像素大小\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    const defaultRadius = Math.min(canvas.width, canvas.height) * scale; // 正多边形的默认半径\n\n    contextRef.current = context;\n    setBaseConfig(constructBaseConfig(dataSource, radius ?? defaultRadius));\n  }, [dataSource, radius, scale]);\n  useEffect(() => {\n    setUserConfig(constructUserConfig(dataFill, dataCircle, dataLine));\n  }, [dataFill, dataCircle, dataLine]);\n\n  useEffect(() => {\n    let radiusPrecent = 0,\n      timer = null;\n    const canvas = canvasRef.current;\n    const context = contextRef.current;\n    const origin = [canvas.width / 2, canvas.height / 2];\n\n    if (context) {\n      // 起requestAnimationFrame为了数值绘制区域有过渡效果\n      const drawFrame = () => {\n        timer = window.requestAnimationFrame(drawFrame);\n        // 数据点坐标元素\n        radiusPrecent += 0.05;\n        if (radiusPrecent >= 1) {\n          window.cancelAnimationFrame(timer);\n        }\n        // 清空画布\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        // 绘制背景图\n        drawRadarBackground(context, {\n          layer: 5,\n          n: baseConfig.n,\n          r: baseConfig.radius,\n          ratio,\n          origin,\n          lineWidth: 2,\n        });\n\n        const dataRadius = baseConfig.dataRadius.map((value) => {\n          return value * radiusPrecent;\n        });\n        const dataPointsPosArray = getDataPointsPos(\n          baseConfig.n,\n          dataRadius,\n          baseConfig.angleArr\n        );\n        const dataLineOptions = {\n          dataPoints: dataPointsPosArray,\n          strokeStyle: userConfig.dataLine.strokeStyle,\n          lineWidth: userConfig.dataLine.lineWidth,\n        };\n        const dataCircleOptions = {\n          dataPoints: dataPointsPosArray,\n          r: userConfig.dataCircle.r,\n          strokeStyle: userConfig.dataCircle.strokeStyle,\n          fillStyle: userConfig.dataCircle.fillStyle,\n          lineWidth: userConfig.dataCircle.lineWidth,\n        };\n        const dataFillOptions = {\n          dataPoints: dataPointsPosArray,\n          fillStyle: userConfig.dataFill.fillStyle,\n        };\n        drawDataPoly(context, origin, ratio, {\n          dataLineOptions: dataLineOptions,\n          dataFillOptions: dataFillOptions,\n          dataCircleOptions: dataCircleOptions,\n        });\n\n        //绘制放射性中心点到多边形顶点连线\n        const polygonOuterPointsPosArr = getPolygonPos(\n          baseConfig.n,\n          baseConfig.radius,\n          origin\n        );\n        drawVertexLine(context, origin, polygonOuterPointsPosArr);\n        drawLeadLineAndText(\n          context,\n          origin,\n          baseConfig.radius,\n          polygonOuterPointsPosArr,\n          baseConfig.originDataSource\n        );\n        if (value) {\n          const fontSize = baseConfig.radius / 5;\n          context.font = `bold ${fontSize}px HarmonyOS_Sans_SC_Black`;\n          context.fillStyle = \"#fff\";\n          context.textAlign = \"center\";\n          context.textBaseline = \"middle\";\n          context.fillText(`${value}`, origin[0], origin[1]);\n        }\n      };\n      drawFrame();\n    }\n  }, [baseConfig, userConfig, value]);\n\n  return (\n    <div\n      className=\"radarWrap\"\n      style={{ width: `${props.width}px`, height: `${props.height}px` }}\n    >\n      <canvas className=\"canvasWrap\" ref={canvasRef} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\n\nimport styleText from \"./styles.shadow.css\";\nimport {\n  Data,\n  DataCircle,\n  DataFill,\n  DataLine,\n  RadarProps,\n} from \"./interface.js\";\nimport { Radar } from \"./radar.js\";\n\nconst { defineElement, property } = createDecorators();\n\n/**\n * 雷达图\n * @author zekunpan\n * @category big-screen-content\n */\n@defineElement(\"data-view.radar-chart\", {\n  styleTexts: [styleText],\n})\nclass RadarChart extends ReactNextElement implements RadarProps {\n  /**\n   * @default\n   * @required\n   * @description 数据\n   */\n  @property({\n    attribute: false,\n  })\n  accessor dataSource: Data[];\n\n  /**\n   * @default\n   * @required\n   * @description 容器宽度\n   */\n  @property({\n    attribute: false,\n  })\n  accessor width: number;\n\n  /**\n   * @default\n   * @required\n   * @description 多边形半径\n   */\n  @property({\n    attribute: false,\n  })\n  accessor radius: number;\n\n  /**\n   * @default 0.25\n   * @required\n   * @description 取值[0-1]，默认半径的缩放比例,radius不传时生效\n   */\n  @property({\n    attribute: false,\n  })\n  accessor scale: number = 0.25;\n\n  /**\n   * @default\n   * @required\n   * @description 容器高度\n   */\n  @property({\n    attribute: false,\n  })\n  accessor height: number;\n\n  /**\n   * @default\n   * @required\n   * @description 中心评分\n   */\n  @property({\n    attribute: false,\n  })\n  accessor value: number | string;\n\n  /**\n   * @default\n   * @required\n   * @description 数据多边形填充样式\n   */\n  @property({\n    attribute: false,\n  })\n  accessor dataFill: DataFill;\n\n  /**\n   * @default\n   * @required\n   * @description 数据点圆圈的样式配置\n   */\n  @property({\n    attribute: false,\n  })\n  accessor dataCircle: DataCircle;\n\n  /**\n   * @default\n   * @required\n   * @description 数据线条的样式配置\n   */\n  @property({\n    attribute: false,\n  })\n  accessor dataLine: DataLine;\n\n  render() {\n    return (\n      <Radar\n        dataSource={this.dataSource}\n        width={this.width}\n        height={this.height}\n        radius={this.radius}\n        scale={this.scale}\n        value={this.value}\n        dataFill={this.dataFill}\n        dataCircle={this.dataCircle}\n        dataLine={this.dataLine}\n      />\n    );\n  }\n}\nexport { RadarChart };\n","import React, { CSSProperties } from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport styleText from \"./styles.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\ntype TitleType = \"normal\" | \"stroke\" | \"gradient\";\nexport interface TitleTextProps {\n  text: string;\n  type?: TitleType;\n  fontSize?: CSSProperties[\"fontSize\"];\n  fontWeight?: CSSProperties[\"fontWeight\"];\n  letterSpacing?: CSSProperties[\"letterSpacing\"];\n}\n\n/**\n * 大屏标题文本构件\n * @author astrid\n * @category big-screen-content\n */\n@defineElement(\"data-view.title-text\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass TitleText extends ReactNextElement implements TitleTextProps {\n  /**\n   * 文本样式，`normal` 纯白， `stroke` 渐变加描边， `gradient` 渐变\n   * @default \"normal\"\n   */\n  @property({ attribute: false })\n  accessor type: TitleType = \"normal\";\n\n  /**\n   * 标题文本\n   * @default -\n   */\n  @property()\n  accessor text: string;\n\n  /**\n   * 字体大小\n   * @default  42px\n   */\n  @property()\n  accessor fontSize: CSSProperties[\"fontSize\"];\n\n  /**\n   * 字体粗细\n   * @default   500\n   */\n  @property()\n  accessor fontWeight: CSSProperties[\"fontWeight\"];\n\n  /**\n   * 字体间距\n   * @default  17px\n   */\n  @property()\n  accessor letterSpacing: CSSProperties[\"letterSpacing\"];\n\n  render() {\n    return (\n      <TitleTextComponent\n        type={this.type}\n        text={this.text}\n        fontSize={this.fontSize}\n        fontWeight={this.fontWeight}\n        letterSpacing={this.letterSpacing}\n      />\n    );\n  }\n}\n\nexport function TitleTextComponent(props: TitleTextProps) {\n  const { type, text, letterSpacing, fontSize, fontWeight } = props;\n  return (\n    <div className=\"content\">\n      {type === \"stroke\" && (\n        <React.Fragment>\n          <div\n            className={`title ${type}-filter`}\n            style={{\n              fontSize,\n              letterSpacing,\n              fontWeight,\n              lineHeight: fontSize,\n            }}\n          >\n            {text}\n          </div>\n          <div\n            className={`title ${type}-shadow`}\n            style={{\n              fontSize,\n              letterSpacing,\n              fontWeight,\n              lineHeight: fontSize,\n            }}\n          >\n            {text}\n          </div>\n        </React.Fragment>\n      )}\n      <div\n        className={`title ${type}-text`}\n        style={{ fontSize, letterSpacing, fontWeight, lineHeight: fontSize }}\n      >\n        {text}\n      </div>\n    </div>\n  );\n}\n\nexport { TitleText };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement, wrapBrick } from \"@next-core/react-element\";\nimport styleText from \"./styles.shadow.css\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\n\nconst { defineElement, property } = createDecorators();\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\n\n/**\n * 大屏提示构件\n * @author astrid\n * @category big-screen-content\n */\ninterface BrickNotificationProps {\n  message: string;\n  icon?: GeneralIconProps | undefined;\n}\n@defineElement(\"data-view.brick-notification\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass BrickNotification\n  extends ReactNextElement\n  implements BrickNotificationProps\n{\n  /**\n   * 提示内容\n   * @default -\n   */\n  @property()\n  accessor message: string;\n  /**\n   * 图标\n   * @default -\n   */\n  @property({ attribute: false })\n  accessor icon: GeneralIconProps | undefined;\n\n  render() {\n    return (\n      <BrickNotificationComponent message={this.message} icon={this.icon} />\n    );\n  }\n}\nexport function BrickNotificationComponent(props: BrickNotificationProps) {\n  return (\n    <div className=\"container\">\n      <WrappedIcon\n        className=\"icon\"\n        {...(!props.icon ? { lib: \"fa\", icon: \"volume-down\" } : props.icon)}\n      />\n      <span className=\"message\">{props.message}</span>\n    </div>\n  );\n}\n\nexport { BrickNotification };\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { createDecorators, EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport styleText from \"./styles.shadow.css\";\nimport classNames from \"classnames\";\nconst { defineElement, property, event } = createDecorators();\n\ninterface TabsItem {\n  /** 唯一标识，对应 slot 名称 */\n  key: string;\n  /**  标签名称 */\n  text: string;\n}\ninterface TabsPageTitleProps {\n  tabList?: TabsItem[];\n  activeKey?: string;\n  onTabChange?: (key: string) => void;\n}\n\n/**\n * 带有tabs的标题构件\n * @author astrid\n * @slot - 标题\n * @slot start - 顶部左边插槽\n * @slot end - 顶部右边插槽\n * @slot [key] - 标签对应的key的插槽\n * @category big-screen-content\n */\nexport\n@defineElement(\"data-view.tabs-page-title\", {\n  styleTexts: [styleText],\n})\nclass TabsPageTitle extends ReactNextElement implements TabsPageTitleProps {\n  /**\n   * 标签，如果没有就不展示标签\n   * @default -\n   */\n  @property({ attribute: false })\n  accessor tabList: TabsItem[];\n\n  /**\n   * 标签高亮显示，默认第一个\n   * @default -\n   */\n  @property()\n  accessor activeKey: string;\n\n  /**\n   * 切换 `tab` 栏会触发的事件，`detail` 为目标 `tab` 对应的 `key`\n   * @detail `string`\n   */\n  @event({ type: \"tab.change\" })\n  accessor #tabChangeEvent!: EventEmitter<string>;\n\n  #handleTabChange = (key: string) => {\n    this.activeKey = key;\n    this.#tabChangeEvent.emit(key);\n  };\n  render() {\n    return (\n      <TabsPageTitleComponent\n        tabList={this.tabList}\n        activeKey={this.activeKey}\n        onTabChange={this.#handleTabChange}\n      />\n    );\n  }\n}\n\nexport function TabsPageTitleComponent(props: TabsPageTitleProps) {\n  const { tabList, activeKey, onTabChange } = props;\n\n  const contentRef = useRef<HTMLDivElement>(null);\n  const [curKey, setCurKey] = useState<string>();\n\n  const setActiveItem = (key: string): void => {\n    const _contentSlot = contentRef.current;\n    if (_contentSlot) {\n      const _slotElement: NodeListOf<HTMLSlotElement> =\n        _contentSlot.querySelectorAll(\"slot.tabSlot\");\n      _slotElement?.forEach((slot: HTMLSlotElement) => {\n        slot.hidden = slot.name !== key;\n      });\n      setCurKey(key);\n    }\n  };\n  useEffect(() => {\n    if (tabList?.length) {\n      setActiveItem(activeKey ?? tabList[0].key);\n    }\n  }, [activeKey, tabList]);\n  const tabElement = useMemo(() => {\n    return (\n      <div className={!tabList?.length ? \"titleWrapper\" : \"tabWrapper\"}>\n        {tabList?.length && (\n          <div className=\"tabLeft\">\n            {tabList.slice(0, Math.floor(tabList.length / 2)).map((item) => (\n              <div key={item.key} className=\"tabItem\">\n                <div\n                  className={classNames(\"text\", {\n                    active: item.key === curKey,\n                  })}\n                  onClick={() => onTabChange?.(item.key)}\n                >\n                  {item.text}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n        <slot className=\"text-container\" />\n        {tabList?.length && (\n          <div className=\"tabRight\">\n            {tabList.slice(Math.floor(tabList.length / 2)).map((item) => (\n              <div key={item.key} className=\"tabItem\">\n                <div\n                  className={classNames(\"text\", {\n                    active: item.key === curKey,\n                  })}\n                  onClick={() => onTabChange?.(item.key)}\n                >\n                  {item.text}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }, [tabList, curKey, onTabChange]);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"header\">\n        <svg\n          width=\"100%\"\n          height=\"100%\"\n          className=\"svg\"\n          viewBox=\"0 0 1967.1 180\"\n          version=\"1.1\"\n          preserveAspectRatio=\"none\"\n        >\n          <defs>\n            <radialGradient\n              cx=\"50%\"\n              cy=\"30.055444%\"\n              fx=\"50%\"\n              fy=\"30.055444%\"\n              r=\"713.130816%\"\n              gradientTransform=\"translate(0.500000,0.300554),scale(0.039316,1.000000),rotate(-2.429174),translate(-0.500000,-0.300554)\"\n              id=\"radialGradient-1\"\n            >\n              <stop stopColor=\"#00E0DB\" offset=\"0%\" />\n              <stop stopColor=\"#3D7FFF\" offset=\"100%\" />\n            </radialGradient>\n            <filter\n              x=\"-17.9%\"\n              y=\"-456.5%\"\n              width=\"135.9%\"\n              height=\"1013.0%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"filter-2\"\n            >\n              <feGaussianBlur stdDeviation=\"35\" in=\"SourceGraphic\" />\n            </filter>\n            <filter\n              x=\"-17.0%\"\n              y=\"-646.2%\"\n              width=\"133.9%\"\n              height=\"1392.3%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"filter-3\"\n            >\n              <feGaussianBlur stdDeviation=\"28\" in=\"SourceGraphic\" />\n            </filter>\n            <filter\n              x=\"-39.0%\"\n              y=\"-807.7%\"\n              width=\"178.1%\"\n              height=\"1715.4%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"filter-4\"\n            >\n              <feGaussianBlur stdDeviation=\"35\" in=\"SourceGraphic\" />\n            </filter>\n            <radialGradient\n              cx=\"50%\"\n              cy=\"30.055444%\"\n              fx=\"50%\"\n              fy=\"30.055444%\"\n              r=\"114.879371%\"\n              gradientTransform=\"translate(0.500000,0.300554),scale(0.252747,1.000000),rotate(-15.254524),translate(-0.500000,-0.300554)\"\n              id=\"radialGradient-5\"\n            >\n              <stop stopColor=\"#00E0DB\" offset=\"0%\" />\n              <stop stopColor=\"#3D7FFF\" offset=\"100%\" />\n            </radialGradient>\n            <filter\n              x=\"-115.4%\"\n              y=\"-456.5%\"\n              width=\"330.8%\"\n              height=\"1013.0%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"filter-6\"\n            >\n              <feGaussianBlur stdDeviation=\"35\" in=\"SourceGraphic\" />\n            </filter>\n            <filter\n              x=\"-109.1%\"\n              y=\"-646.2%\"\n              width=\"318.2%\"\n              height=\"1392.3%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"filter-7\"\n            >\n              <feGaussianBlur stdDeviation=\"28\" in=\"SourceGraphic\" />\n            </filter>\n            <filter\n              x=\"-250.0%\"\n              y=\"-807.7%\"\n              width=\"600.0%\"\n              height=\"1715.4%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"filter-8\"\n            >\n              <feGaussianBlur stdDeviation=\"35\" in=\"SourceGraphic\" />\n            </filter>\n            <linearGradient\n              x1=\"16.7328962%\"\n              y1=\"50.631978%\"\n              x2=\"61.6633946%\"\n              y2=\"50.3091958%\"\n              id=\"linearGradient-9\"\n            >\n              <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"0%\" />\n              <stop stopColor=\"#66FFFF\" offset=\"35.4287676%\" />\n              <stop\n                stopColor=\"#3D75FF\"\n                stopOpacity=\"0.698880262\"\n                offset=\"44.8355504%\"\n              />\n              <stop\n                stopColor=\"#3D76FF\"\n                stopOpacity=\"0.629205177\"\n                offset=\"67.6519137%\"\n              />\n              <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"42.3383926%\"\n              y1=\"50.0721671%\"\n              x2=\"83.9990204%\"\n              y2=\"50.314338%\"\n              id=\"linearGradient-10\"\n            >\n              <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"0%\" />\n              <stop\n                stopColor=\"#3D75FF\"\n                stopOpacity=\"0.698880262\"\n                offset=\"50.4124985%\"\n              />\n              <stop stopColor=\"#3D76FF\" offset=\"73.5915405%\" />\n              <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"69.6531753%\"\n              y1=\"50.0704039%\"\n              x2=\"93.6196303%\"\n              y2=\"50.6342349%\"\n              id=\"linearGradient-11\"\n            >\n              <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"0%\" />\n              <stop\n                stopColor=\"#3D76FF\"\n                stopOpacity=\"0.629205177\"\n                offset=\"50.5419037%\"\n              />\n              <stop stopColor=\"#66FFFF\" offset=\"72.7064129%\" />\n              <stop stopColor=\"#A6CCFF\" offset=\"83.4271198%\" />\n              <stop\n                stopColor=\"#FFFFFF\"\n                stopOpacity=\"0.25\"\n                offset=\"92.4032998%\"\n              />\n              <stop stopColor=\"#FFFFFF\" stopOpacity=\"0\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"0%\"\n              y1=\"50%\"\n              x2=\"100%\"\n              y2=\"49.9988662%\"\n              id=\"linearGradient-12\"\n            >\n              <stop stopColor=\"#01F5FF\" stopOpacity=\"0.05\" offset=\"0%\" />\n              <stop stopColor=\"#00FFF4\" offset=\"51.2723483%\" />\n              <stop stopColor=\"#01F5FF\" stopOpacity=\"0.05\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"121.823279%\"\n              y1=\"53.9346322%\"\n              x2=\"-21.823279%\"\n              y2=\"53.9346322%\"\n              id=\"linearGradient-13\"\n            >\n              <stop stopColor=\"#0E5FFF\" stopOpacity=\"0.05\" offset=\"0%\" />\n              <stop\n                stopColor=\"#0E5FFF\"\n                stopOpacity=\"0.2\"\n                offset=\"36.3753421%\"\n              />\n              <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"121.823279%\"\n              y1=\"53.9346322%\"\n              x2=\"-21.823279%\"\n              y2=\"53.9346322%\"\n              id=\"linearGradient-14\"\n            >\n              <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\" />\n              <stop\n                stopColor=\"#0E5FFF\"\n                stopOpacity=\"0.2\"\n                offset=\"63.6246579%\"\n              />\n              <stop stopColor=\"#0E5FFF\" stopOpacity=\"0.05\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"0%\"\n              y1=\"0%\"\n              x2=\"100%\"\n              y2=\"0%\"\n              id=\"linearGradient-15\"\n            >\n              <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\" />\n              <stop stopColor=\"#0E5FFF\" offset=\"21.3020387%\" />\n              <stop stopColor=\"#0E5FFF\" offset=\"60.4246107%\" />\n              <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"0%\"\n              y1=\"50%\"\n              x2=\"100%\"\n              y2=\"49.9988662%\"\n              id=\"linearGradient-16\"\n            >\n              <stop stopColor=\"#C8C8C8\" stopOpacity=\"0\" offset=\"0%\" />\n              <stop stopColor=\"#FFFFFF\" offset=\"51.2723483%\" />\n              <stop stopColor=\"#979797\" stopOpacity=\"0\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"50%\"\n              y1=\"-17.8886468%\"\n              x2=\"50%\"\n              y2=\"125.757911%\"\n              id=\"linearGradient-17\"\n            >\n              <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\" />\n              <stop\n                stopColor=\"#0E5FFF\"\n                stopOpacity=\"0.2\"\n                offset=\"63.6246579%\"\n              />\n              <stop stopColor=\"#0E5FFF\" stopOpacity=\"0.7\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"50%\"\n              y1=\"-19.0793713%\"\n              x2=\"50%\"\n              y2=\"197.916872%\"\n              id=\"linearGradient-18\"\n            >\n              <stop stopColor=\"#000000\" stopOpacity=\"0.5\" offset=\"0%\" />\n              <stop stopColor=\"#0E5FFF\" stopOpacity=\"0.12\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"35.9694535%\"\n              y1=\"126.83927%\"\n              x2=\"35.9694535%\"\n              y2=\"50%\"\n              id=\"linearGradient-19\"\n            >\n              <stop stopColor=\"#004BFF\" offset=\"0%\" />\n              <stop stopColor=\"#1C3A75\" stopOpacity=\"0\" offset=\"100%\" />\n            </linearGradient>\n            <path\n              d=\"M747.861553,95.4552188 C732.019206,95.4552188 716.403542,91.6912489 702.300975,84.4733839 L624.704053,44.7583369 C610.601486,37.540472 594.985822,33.7765021 579.143475,33.7765021 L2,33.7765021 L2,4.54747351e-13 L1966.5,0 L1966.5,33.7765021 L1389.35652,33.7765021 C1373.51418,33.7765021 1357.89851,37.540472 1343.79595,44.7583369 L1266.19902,84.4733839 C1252.09646,91.6912489 1236.48079,95.4552188 1220.63845,95.4552188 Z\"\n              id=\"path-20\"\n            />\n            <linearGradient\n              x1=\"26.2355307%\"\n              y1=\"100%\"\n              x2=\"69.0344979%\"\n              y2=\"100%\"\n              id=\"linearGradient-21\"\n            >\n              <stop stopColor=\"#FFFFFF\" stopOpacity=\"0.05\" offset=\"0%\" />\n              <stop stopColor=\"#FFFFFF\" offset=\"51.2723483%\" />\n              <stop stopColor=\"#FFFFFF\" stopOpacity=\"0.05\" offset=\"100%\" />\n            </linearGradient>\n            <linearGradient\n              x1=\"-0.523693994%\"\n              y1=\"49.9988662%\"\n              x2=\"94.7087296%\"\n              y2=\"50%\"\n              id=\"linearGradient-22\"\n            >\n              <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"0%\" />\n              <stop\n                stopColor=\"#3D75FF\"\n                stopOpacity=\"0.698880262\"\n                offset=\"33.9578719%\"\n              />\n              <stop stopColor=\"#66FFFF\" offset=\"48.5889698%\" />\n              <stop\n                stopColor=\"#3D76FF\"\n                stopOpacity=\"0.629205177\"\n                offset=\"67.6519137%\"\n              />\n              <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"100%\" />\n            </linearGradient>\n          </defs>\n          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g>\n              <g transform=\"translate(684, 94)\">\n                <ellipse\n                  fill=\"url(#radialGradient-1)\"\n                  opacity=\"0.400000006\"\n                  filter=\"url(#filter-2)\"\n                  cx=\"292.5\"\n                  cy=\"11.5\"\n                  rx=\"292.5\"\n                  ry=\"11.5\"\n                />\n                <ellipse\n                  fill=\"#0E14DE\"\n                  opacity=\"0.560000002\"\n                  filter=\"url(#filter-3)\"\n                  cx=\"293.5\"\n                  cy=\"7.5\"\n                  rx=\"247.5\"\n                  ry=\"6.5\"\n                />\n                <ellipse\n                  fill=\"#6580FF\"\n                  filter=\"url(#filter-4)\"\n                  cx=\"293.5\"\n                  cy=\"7.5\"\n                  rx=\"134.5\"\n                  ry=\"6.5\"\n                />\n              </g>\n              <g opacity=\"0.598772321\" transform=\"translate(1428, 53)\">\n                <ellipse\n                  fill=\"url(#radialGradient-5)\"\n                  opacity=\"0.400000006\"\n                  filter=\"url(#filter-6)\"\n                  cx=\"45.5\"\n                  cy=\"11.5\"\n                  rx=\"45.5\"\n                  ry=\"11.5\"\n                />\n                <ellipse\n                  fill=\"#0E14DE\"\n                  opacity=\"0.560000002\"\n                  filter=\"url(#filter-7)\"\n                  cx=\"45.5\"\n                  cy=\"7.5\"\n                  rx=\"38.5\"\n                  ry=\"6.5\"\n                />\n                <ellipse\n                  fill=\"#6580FF\"\n                  filter=\"url(#filter-8)\"\n                  cx=\"46\"\n                  cy=\"7.5\"\n                  rx=\"21\"\n                  ry=\"6.5\"\n                />\n              </g>\n              <path\n                d=\"M1966.5,10 L1966.5,33.7765021 L1463,33.7765021 L1389.35652,33.7765021 C1373.51418,33.7765021 1357.89851,37.540472 1343.79595,44.7583369 L1266.19902,84.4733839 C1252.09646,91.6912489 1236.48079,95.4552188 1220.63845,95.4552188 L879.807193,95.4552188 L879.807193,95.4552188 L879.807193,10\"\n                stroke=\"url(#linearGradient-9)\"\n                strokeWidth=\"1.2\"\n              />\n              <path\n                d=\"M879.807193,40.7765021 L1383.30719,40.7765021 L1456.95067,40.7765021 C1472.79302,40.7765021 1488.40868,44.540472 1502.51125,51.7583369 L1580.10817,91.4733839 C1594.21073,98.6912489 1609.8264,102.455219 1625.66875,102.455219 L1966.5,102.455219 L1966.5,102.455219\"\n                stroke=\"url(#linearGradient-10)\"\n                strokeWidth=\"1.2\"\n                transform=\"translate(1423.153596, 71.615860) scale(-1, 1) translate(-1423.153596, -71.615860) \"\n              />\n              <path\n                d=\"M1118.86343,37.7765021 L1622.36343,37.7765021 L1696.00691,37.7765021 C1711.84925,37.7765021 1727.46492,41.540472 1741.56748,48.7583369 L1819.16441,88.4733839 C1833.26697,95.6912489 1848.88264,99.4552188 1864.72498,99.4552188 C1909.95832,99.4552188 1943.88333,99.4552188 1966.5,99.4552188\"\n                stroke=\"url(#linearGradient-11)\"\n                strokeWidth=\"1.2\"\n                strokeLinecap=\"round\"\n                transform=\"translate(1542.681715, 68.615860) scale(-1, 1) translate(-1542.681715, -68.615860) \"\n              />\n              <line\n                x1=\"778\"\n                y1=\"102.495\"\n                x2=\"1197.5\"\n                y2=\"102.5\"\n                stroke=\"url(#linearGradient-12)\"\n                strokeWidth=\"2.5\"\n              />\n              <line\n                x1=\"1433.5\"\n                y1=\"35\"\n                x2=\"1965\"\n                y2=\"34.5\"\n                stroke=\"url(#linearGradient-15)\"\n                strokeWidth=\"2\"\n                transform=\"translate(1699.5, 35) scale(-1, 1) translate(-1699.5, -35) \"\n              />\n              <line\n                x1=\"0.5\"\n                y1=\"31\"\n                x2=\"531.5\"\n                y2=\"34.5\"\n                stroke=\"url(#linearGradient-15)\"\n                strokeWidth=\"2\"\n              />\n              {tabList?.length && (\n                <>\n                  <g\n                    transform=\"translate(1301, 48)\"\n                    fill=\"url(#linearGradient-13)\"\n                    opacity=\"0.7\"\n                  >\n                    <path d=\"M87.2678257,0 L665.492446,0 L665.492446,0 L665.492446,32 L0,32 L42.2611526,10.7005074 C56.2207863,3.66489441 71.6354483,-1.13392336e-14 87.2678257,0 Z\" />\n                  </g>\n                  <g\n                    transform=\"translate(332.746223, 64) scale(-1, 1) translate(-332.746223, -64.000000) translate(0.000000, 48.000000)\"\n                    fill=\"url(#linearGradient-14)\"\n                    opacity=\"0.7\"\n                  >\n                    <path d=\"M87.2678257,0 L665.492446,0 L665.492446,0 L665.492446,32 L0,32 L42.2611526,10.7005074 C56.2207863,3.66489441 71.6354483,-1.13392336e-14 87.2678257,0 Z\" />\n                  </g>\n                </>\n              )}\n              <line\n                x1=\"1440\"\n                y1=\"34.5\"\n                x2=\"1890\"\n                y2=\"34.5\"\n                stroke=\"url(#linearGradient-15)\"\n                strokeWidth=\"2\"\n                transform=\"translate(1665.000000, 34.500000) scale(-1, 1) translate(-1665.000000, -34.500000) \"\n              />\n              <line\n                x1=\"778\"\n                y1=\"95.495\"\n                x2=\"1197.5\"\n                y2=\"95.5\"\n                stroke=\"url(#linearGradient-16)\"\n                strokeWidth=\"2\"\n              />\n              <path\n                d=\"M1088.69281,10 L1088.69281,33.7765021 L585.192807,33.7765021 L511.549332,33.7765021 C495.706985,33.7765021 480.091321,37.540472 465.988754,44.7583369 L388.391832,84.4733839 C374.289265,91.6912489 358.673601,95.4552188 342.831254,95.4552188 L2,95.4552188 L2,95.4552188 L2,10\"\n                stroke=\"url(#linearGradient-9)\"\n                strokeWidth=\"1.2\"\n                transform=\"translate(545.346404, 52.727609) scale(-1, 1) translate(-545.346404, -52.727609) \"\n              />\n              <g>\n                <use fill=\"url(#linearGradient-17)\" xlinkHref=\"#path-20\" />\n                <use fill=\"url(#linearGradient-18)\" xlinkHref=\"#path-20\" />\n                <use fill=\"url(#linearGradient-19)\" xlinkHref=\"#path-20\" />\n              </g>\n              <path\n                d=\"M2,40.7765021 L505.5,40.7765021 L579.143475,40.7765021 C594.985822,40.7765021 610.601486,44.540472 624.704053,51.7583369 L702.300975,91.4733839 C716.403542,98.6912489 732.019206,102.455219 747.861553,102.455219 L1088.69281,102.455219 L1088.69281,102.455219\"\n                stroke=\"url(#linearGradient-10)\"\n                strokeWidth=\"1.2\"\n              />\n              <path\n                d=\"M2,37.7765021 L505.5,37.7765021 L579.143475,37.7765021 C594.985822,37.7765021 610.601486,41.540472 624.704053,48.7583369 L702.300975,88.4733839 C716.403542,95.6912489 732.019206,99.4552188 747.861553,99.4552188 C793.094894,99.4552188 827.019899,99.4552188 849.636569,99.4552188\"\n                stroke=\"url(#linearGradient-11)\"\n                strokeWidth=\"1.2\"\n                strokeLinecap=\"round\"\n              />\n              <line\n                x1=\"770.5\"\n                y1=\"102.495\"\n                x2=\"1190\"\n                y2=\"102.5\"\n                stroke=\"url(#linearGradient-21)\"\n                strokeWidth=\"3\"\n                transform=\"translate(980.500000, 102.000000) scale(-1, 1) translate(-980.500000, -102.000000) \"\n              />\n              <line\n                x1=\"78.5\"\n                y1=\"34.5\"\n                x2=\"528.5\"\n                y2=\"34.5\"\n                stroke=\"url(#linearGradient-15)\"\n                strokeWidth=\"2\"\n              />\n              <line\n                x1=\"770.5\"\n                y1=\"95.495\"\n                x2=\"1190\"\n                y2=\"95.5\"\n                stroke=\"url(#linearGradient-22)\"\n                strokeWidth=\"2\"\n                transform=\"translate(980.500000, 95.000000) scale(-1, 1) translate(-980.500000, -95.000000) \"\n              />\n            </g>\n          </g>\n        </svg>\n        <div className=\"toolbar\">\n          <slot name=\"start\" />\n          <slot name=\"end\" />\n        </div>\n        {tabElement}\n      </div>\n      {tabList?.length && (\n        <div className=\"content\" ref={contentRef}>\n          {tabList.map((item, index) => (\n            <slot name={item.key} key={`slot-${index}`} className=\"tabSlot\" />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport styleText from \"./styles.shadow.css\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\n\ntype TitleBarType = \"normal\" | \"sample\" | \"square\";\nconst { defineElement, property } = createDecorators();\ninterface TopTitleBarProps {\n  text: string;\n  type?: TitleBarType;\n}\n\n/**\n * 大屏标题栏三种样式构件\n * @author jiezhou\n * @category big-screen-content\n */\n@defineElement(\"data-view.top-title-bar\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass TopTitleBar extends ReactNextElement implements TopTitleBarProps {\n  /**\n   * 标题文本\n   * @default -\n   */\n  @property()\n  accessor text: string;\n\n  /**\n   * 标题类型\n   * @default normal\n   */\n  @property()\n  accessor type: TitleBarType = \"normal\";\n\n  render() {\n    return <TopTitleBarComponent text={this.text} type={this.type} />;\n  }\n}\n\nexport function TopTitleBarComponent(props: TopTitleBarProps) {\n  const { text, type } = props;\n  return (\n    <div>\n      <div className={`wrapper ${type}Wrapper`}>\n        {type === \"normal\" && (\n          <svg\n            className=\"svg\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 2217.80427 240\"\n            preserveAspectRatio=\"none\"\n            version=\"1.1\"\n          >\n            <defs>\n              <linearGradient\n                x1=\"121.823279%\"\n                y1=\"53.9346322%\"\n                x2=\"-21.823279%\"\n                y2=\"53.9346322%\"\n                id=\"linearGradient-1\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.2\"\n                  offset=\"63.6246579%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.05\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <radialGradient\n                cx=\"50%\"\n                cy=\"30.055444%\"\n                fx=\"50%\"\n                fy=\"30.055444%\"\n                r=\"1304.75488%\"\n                gradientTransform=\"translate(0.500000,0.300554),scale(0.021475,1.000000),rotate(-1.327418),translate(-0.500000,-0.300554)\"\n                id=\"radialGradient-2\"\n              >\n                <stop stopColor=\"#00E0DB\" offset=\"0%\"></stop>\n                <stop stopColor=\"#3D7FFF\" offset=\"100%\"></stop>\n              </radialGradient>\n              <filter\n                x=\"-9.8%\"\n                y=\"-456.5%\"\n                width=\"119.6%\"\n                height=\"1013.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-3\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-9.3%\"\n                y=\"-646.2%\"\n                width=\"118.5%\"\n                height=\"1392.3%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-4\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"28\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-21.3%\"\n                y=\"-807.7%\"\n                width=\"142.7%\"\n                height=\"1715.4%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-5\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-9.8%\"\n                y=\"-456.5%\"\n                width=\"119.6%\"\n                height=\"1013.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-6\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-9.3%\"\n                y=\"-646.2%\"\n                width=\"118.5%\"\n                height=\"1392.3%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-7\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"28\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-21.3%\"\n                y=\"-807.7%\"\n                width=\"142.7%\"\n                height=\"1715.4%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-8\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <radialGradient\n                cx=\"50%\"\n                cy=\"30.055444%\"\n                fx=\"50%\"\n                fy=\"30.055444%\"\n                r=\"254.543036%\"\n                gradientTransform=\"translate(0.500000,0.300554),scale(0.110834,1.000000),rotate(-6.819655),translate(-0.500000,-0.300554)\"\n                id=\"radialGradient-9\"\n              >\n                <stop stopColor=\"#00E0DB\" offset=\"0%\"></stop>\n                <stop stopColor=\"#3D7FFF\" offset=\"100%\"></stop>\n              </radialGradient>\n              <filter\n                x=\"-76.6%\"\n                y=\"-691.5%\"\n                width=\"253.3%\"\n                height=\"1483.1%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-10\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-72.4%\"\n                y=\"-983.5%\"\n                width=\"244.8%\"\n                height=\"2067.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-11\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"28\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-166.7%\"\n                y=\"-1229.4%\"\n                width=\"433.3%\"\n                height=\"2558.8%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-12\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <linearGradient\n                x1=\"12.7580373%\"\n                y1=\"50.14845%\"\n                x2=\"78.9824893%\"\n                y2=\"50.8811826%\"\n                id=\"linearGradient-13\"\n              >\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#3D75FF\"\n                  stopOpacity=\"0.698880262\"\n                  offset=\"51.6206928%\"\n                ></stop>\n                <stop stopColor=\"#66FFFF\" offset=\"72.4163966%\"></stop>\n                <stop\n                  stopColor=\"#3D76FF\"\n                  stopOpacity=\"0.629205177\"\n                  offset=\"87.7911862%\"\n                ></stop>\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"-5.58940209%\"\n                y1=\"49.8500523%\"\n                x2=\"28.8339154%\"\n                y2=\"50.7262367%\"\n                id=\"linearGradient-14\"\n              >\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#3D7EFF\"\n                  stopOpacity=\"0.0978483851\"\n                  offset=\"5.49524841%\"\n                ></stop>\n                <stop\n                  stopColor=\"#3D7CFF\"\n                  stopOpacity=\"0.219366106\"\n                  offset=\"20.6432099%\"\n                ></stop>\n                <stop\n                  stopColor=\"#3D76FF\"\n                  stopOpacity=\"0.629205177\"\n                  offset=\"27.1295052%\"\n                ></stop>\n                <stop stopColor=\"#66FFFF\" offset=\"40.2718846%\"></stop>\n                <stop\n                  stopColor=\"#3D75FF\"\n                  stopOpacity=\"0\"\n                  offset=\"60.1799339%\"\n                ></stop>\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"0%\"\n                y1=\"0%\"\n                x2=\"100%\"\n                y2=\"0%\"\n                id=\"linearGradient-15\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.1\"\n                  offset=\"25.830702%\"\n                ></stop>\n                <stop stopColor=\"#0E5FFF\" offset=\"60.4246107%\"></stop>\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"0%\"\n                y1=\"0%\"\n                x2=\"100%\"\n                y2=\"0%\"\n                id=\"linearGradient-16\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop stopColor=\"#1D89CE\" offset=\"51.9003973%\"></stop>\n                <stop stopColor=\"#1871B4\" offset=\"58.0467258%\"></stop>\n                <stop stopColor=\"#1777B7\" offset=\"66.5050399%\"></stop>\n                <stop stopColor=\"#00FFFF\" offset=\"74.7822335%\"></stop>\n                <stop stopColor=\"#0E5FFF\" offset=\"93.4671552%\"></stop>\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"0%\"\n                y1=\"0%\"\n                x2=\"100%\"\n                y2=\"0%\"\n                id=\"linearGradient-17\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop stopColor=\"#0E5FFF\" offset=\"21.3020387%\"></stop>\n                <stop stopColor=\"#0E5FFF\" offset=\"60.4246107%\"></stop>\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"-0.523693994%\"\n                y1=\"49.9915557%\"\n                x2=\"94.7087296%\"\n                y2=\"50%\"\n                id=\"linearGradient-18\"\n              >\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#3D75FF\"\n                  stopOpacity=\"0.698880262\"\n                  offset=\"18.75%\"\n                ></stop>\n                <stop stopColor=\"#66FFFF\" offset=\"48.5889698%\"></stop>\n                <stop\n                  stopColor=\"#3D76FF\"\n                  stopOpacity=\"0.629205177\"\n                  offset=\"81.3155594%\"\n                ></stop>\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"-0.523693994%\"\n                y1=\"49.9926573%\"\n                x2=\"94.7087296%\"\n                y2=\"50%\"\n                id=\"linearGradient-19\"\n              >\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#3D75FF\"\n                  stopOpacity=\"0.698880262\"\n                  offset=\"18.75%\"\n                ></stop>\n                <stop stopColor=\"#66FFFF\" offset=\"48.5889698%\"></stop>\n                <stop\n                  stopColor=\"#3D76FF\"\n                  stopOpacity=\"0.629205177\"\n                  offset=\"81.3155594%\"\n                ></stop>\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"-20.2424482%\"\n                y1=\"31.6059669%\"\n                x2=\"105.435461%\"\n                y2=\"65.1383097%\"\n                id=\"linearGradient-20\"\n              >\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#3D7EFF\"\n                  stopOpacity=\"0.0978483851\"\n                  offset=\"12.0585312%\"\n                ></stop>\n                <stop\n                  stopColor=\"#3D7CFF\"\n                  stopOpacity=\"0.219366106\"\n                  offset=\"29.0357369%\"\n                ></stop>\n                <stop\n                  stopColor=\"#3D76FF\"\n                  stopOpacity=\"0.629205177\"\n                  offset=\"38.5528284%\"\n                ></stop>\n                <stop stopColor=\"#66FFFF\" offset=\"65.3487657%\"></stop>\n                <stop\n                  stopColor=\"#3D75FF\"\n                  stopOpacity=\"0\"\n                  offset=\"97.8847467%\"\n                ></stop>\n                <stop stopColor=\"#3D7FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"7.46796795%\"\n                y1=\"50.7071096%\"\n                x2=\"100%\"\n                y2=\"50.7068707%\"\n                id=\"linearGradient-21\"\n              >\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0\"\n                  offset=\"0.0819493007%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.76\"\n                  offset=\"59.6181849%\"\n                ></stop>\n                <stop\n                  stopColor=\"#00FFFF\"\n                  stopOpacity=\"0.8\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"50%\"\n                y1=\"-17.8886468%\"\n                x2=\"50%\"\n                y2=\"125.757911%\"\n                id=\"linearGradient-22\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.2\"\n                  offset=\"63.6246579%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.7\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"50%\"\n                y1=\"-19.0793713%\"\n                x2=\"50%\"\n                y2=\"197.916872%\"\n                id=\"linearGradient-23\"\n              >\n                <stop stopColor=\"#000000\" stopOpacity=\"0.5\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.12\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"35.9694535%\"\n                y1=\"126.83927%\"\n                x2=\"35.9694535%\"\n                y2=\"50%\"\n                id=\"linearGradient-24\"\n              >\n                <stop stopColor=\"#004BFF\" offset=\"0%\"></stop>\n                <stop stopColor=\"#1C3A75\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <path\n                d=\"M820.97866,148.032269 L793.249955,121.315316 L673.236159,108.921487 L652.771821,89.5004936 L149.791919,51.7534484 L1108.90192,65.1604484 L2068.01226,51.7534484 L1565.03236,89.5004936 L1544.56802,108.921487 L1424.55422,121.315316 L1396.82552,148.032269 L820.97866,148.032269 Z\"\n                id=\"path-25\"\n              ></path>\n              <linearGradient\n                x1=\"50.0076988%\"\n                y1=\"49.9044114%\"\n                x2=\"50%\"\n                y2=\"50.1908502%\"\n                id=\"linearGradient-26\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.2\"\n                  offset=\"63.6246579%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.7\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <path\n                d=\"M820.97866,148.032269 L793.249955,121.315316 L673.236159,108.921487 L652.771821,89.5004936 L149.791919,51.7534484 L1108.90192,65.1604484 L2068.01226,51.7534484 L1565.03236,89.5004936 L1544.56802,108.921487 L1424.55422,121.315316 L1396.82552,148.032269 L820.97866,148.032269 Z\"\n                id=\"path-27\"\n              ></path>\n              <linearGradient\n                x1=\"121.823279%\"\n                y1=\"53.9346322%\"\n                x2=\"-21.823279%\"\n                y2=\"53.9346322%\"\n                id=\"linearGradient-28\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.2\"\n                  offset=\"63.6246579%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.05\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <filter\n                x=\"-76.6%\"\n                y=\"-691.5%\"\n                width=\"253.3%\"\n                height=\"1483.1%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-29\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-72.4%\"\n                y=\"-983.5%\"\n                width=\"244.8%\"\n                height=\"2067.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-30\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"28\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-166.7%\"\n                y=\"-1229.4%\"\n                width=\"433.3%\"\n                height=\"2558.8%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-31\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <linearGradient\n                x1=\"0%\"\n                y1=\"0%\"\n                x2=\"100%\"\n                y2=\"0%\"\n                id=\"linearGradient-32\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.1\"\n                  offset=\"25.830702%\"\n                ></stop>\n                <stop stopColor=\"#0E5FFF\" offset=\"60.4246107%\"></stop>\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"121.823279%\"\n                y1=\"53.9346322%\"\n                x2=\"-21.823279%\"\n                y2=\"53.9346322%\"\n                id=\"linearGradient-33\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.2\"\n                  offset=\"63.6246579%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.05\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"0%\"\n                y1=\"50%\"\n                x2=\"100%\"\n                y2=\"49.9988716%\"\n                id=\"linearGradient-34\"\n              >\n                <stop stopColor=\"#C8C8C8\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop stopColor=\"#00FFF4\" offset=\"51.2723483%\"></stop>\n                <stop\n                  stopColor=\"#979797\"\n                  stopOpacity=\"0\"\n                  offset=\"84.7628934%\"\n                ></stop>\n                <stop stopColor=\"#FFFFFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"26.2355307%\"\n                y1=\"100%\"\n                x2=\"69.0344979%\"\n                y2=\"100%\"\n                id=\"linearGradient-35\"\n              >\n                <stop stopColor=\"#FFFFFF\" stopOpacity=\"0.05\" offset=\"0%\"></stop>\n                <stop stopColor=\"#FFFFFF\" offset=\"51.2723483%\"></stop>\n                <stop\n                  stopColor=\"#FFFFFF\"\n                  stopOpacity=\"0.05\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n            </defs>\n            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(0, 0)\">\n                <g transform=\"translate(0, 0)\">\n                  <polygon\n                    fill=\"url(#linearGradient-1)\"\n                    opacity=\"0.7\"\n                    transform=\"translate(1901.604704, 48.760301) rotate(-4.000000) translate(-1901.604704, -48.760301) \"\n                    points=\"1585.80725 32.0591318 2217.40216 32.0591318 2217.40216 64.0591318 1607.01948 65.4614705\"\n                  ></polygon>\n                  <ellipse\n                    fill=\"url(#radialGradient-2)\"\n                    opacity=\"0.400000006\"\n                    filter=\"url(#filter-3)\"\n                    cx=\"1091.40209\"\n                    cy=\"152.743126\"\n                    rx=\"535.5\"\n                    ry=\"11.5\"\n                  ></ellipse>\n                  <ellipse\n                    fill=\"#0E14DE\"\n                    opacity=\"0.560000002\"\n                    filter=\"url(#filter-4)\"\n                    cx=\"1092.90209\"\n                    cy=\"148.743126\"\n                    rx=\"453\"\n                    ry=\"6.5\"\n                  ></ellipse>\n                  <ellipse\n                    fill=\"#6580FF\"\n                    filter=\"url(#filter-5)\"\n                    cx=\"1092.90209\"\n                    cy=\"148.743126\"\n                    rx=\"246\"\n                    ry=\"6.5\"\n                  ></ellipse>\n                  <ellipse\n                    fill=\"url(#radialGradient-2)\"\n                    opacity=\"0.400000006\"\n                    filter=\"url(#filter-6)\"\n                    transform=\"translate(1125.894535, 152.743126) scale(-1, 1) translate(-1125.894535, -152.743126) \"\n                    cx=\"1125.89454\"\n                    cy=\"152.743126\"\n                    rx=\"535.5\"\n                    ry=\"11.5\"\n                  ></ellipse>\n                  <ellipse\n                    fill=\"#0E14DE\"\n                    opacity=\"0.560000002\"\n                    filter=\"url(#filter-7)\"\n                    transform=\"translate(1124.394535, 148.743126) scale(-1, 1) translate(-1124.394535, -148.743126) \"\n                    cx=\"1124.39454\"\n                    cy=\"148.743126\"\n                    rx=\"453\"\n                    ry=\"6.5\"\n                  ></ellipse>\n                  <ellipse\n                    fill=\"#6580FF\"\n                    filter=\"url(#filter-8)\"\n                    transform=\"translate(1124.394535, 148.743126) scale(-1, 1) translate(-1124.394535, -148.743126) \"\n                    cx=\"1124.39454\"\n                    cy=\"148.743126\"\n                    rx=\"246\"\n                    ry=\"6.5\"\n                  ></ellipse>\n                  <g transform=\"translate(0.000000, 0.000000)\">\n                    <ellipse\n                      fill=\"url(#radialGradient-9)\"\n                      opacity=\"0.400000006\"\n                      filter=\"url(#filter-10)\"\n                      cx=\"1598.53102\"\n                      cy=\"135.263556\"\n                      rx=\"68.497263\"\n                      ry=\"7.59182797\"\n                    ></ellipse>\n                    <ellipse\n                      fill=\"#0E14DE\"\n                      opacity=\"0.326102121\"\n                      filter=\"url(#filter-11)\"\n                      cx=\"1599.031\"\n                      cy=\"132.89111\"\n                      rx=\"57.9976826\"\n                      ry=\"4.27040323\"\n                    ></ellipse>\n                    <ellipse\n                      fill=\"#6580FF\"\n                      filter=\"url(#filter-12)\"\n                      cx=\"1598.53102\"\n                      cy=\"132.89111\"\n                      rx=\"31.4987414\"\n                      ry=\"4.27040323\"\n                    ></ellipse>\n                    <path\n                      d=\"M1014.69063,116.758475 C994.767098,115.471104 1016.47631,117.685388 1079.81825,123.401325 L1133.00766,128.27268 L1160.22727,154.243126 L1557.13018,154.243126\"\n                      stroke=\"url(#linearGradient-13)\"\n                      strokeWidth=\"1.2\"\n                      transform=\"translate(1282.334969, 135.323314) scale(-1, 1) translate(-1282.334969, -135.323314) \"\n                    ></path>\n                    <polyline\n                      stroke=\"url(#linearGradient-14)\"\n                      strokeWidth=\"1.2\"\n                      transform=\"translate(1275.748015, 131.467642) scale(-1, 1) translate(-1275.748015, -131.467642) \"\n                      points=\"1007.53976 108.692158 1101.708 119.130922 1130.06298 154.243126 1543.95627 154.243126\"\n                    ></polyline>\n                    <polyline\n                      stroke=\"url(#linearGradient-15)\"\n                      strokeWidth=\"2\"\n                      transform=\"translate(1763.880796, 94.263570) scale(-1, 1) rotate(4.000000) translate(-1763.880796, -94.263570) \"\n                      points=\"1458.45763 86.4119318 1624.34488 87.7216836 1936.70436 90.456024 1954.99079 90.548599 1965.28573 101.204651 2069.30396 102.115208\"\n                    ></polyline>\n                    <polyline\n                      stroke=\"url(#linearGradient-16)\"\n                      strokeWidth=\"2\"\n                      transform=\"translate(1323.788737, 127.887725) scale(-1, 1) translate(-1323.788737, -127.887725) \"\n                      points=\"1090.5448 107.74318 1223.02325 121.315316 1251.75192 148.032269 1557.03268 148.032269\"\n                    ></polyline>\n                    <line\n                      x1=\"2024.64666\"\n                      y1=\"52.4480598\"\n                      x2=\"1573.843\"\n                      y2=\"89.401165\"\n                      stroke=\"url(#linearGradient-17)\"\n                      strokeWidth=\"2\"\n                      opacity=\"0.298851376\"\n                    ></line>\n                    <polygon\n                      fill=\"#00B5D7\"\n                      opacity=\"0.389113653\"\n                      transform=\"translate(2051.975519, 77.654193) scale(-1, 1) rotate(4.000000) translate(-2051.975519, -77.654193) \"\n                      points=\"2048.98703 74.817156 2054.9853 74.7958702 2054.96401 80.4912297 2048.96574 80.5125154\"\n                    ></polygon>\n                    <polygon\n                      fill=\"#0D58EC\"\n                      opacity=\"0.389113653\"\n                      transform=\"translate(2028.034938, 79.242930) scale(-1, 1) rotate(4.000000) translate(-2028.034938, -79.242930) \"\n                      points=\"2025.04645 76.4058935 2031.04472 76.3846077 2031.02343 82.0799671 2025.02516 82.1012529\"\n                    ></polygon>\n                    <polygon\n                      fill=\"#3C7DFB\"\n                      opacity=\"0.389113653\"\n                      transform=\"translate(2040.005229, 78.448562) scale(-1, 1) rotate(4.000000) translate(-2040.005229, -78.448562) \"\n                      points=\"2037.01674 75.6115247 2043.01501 75.590239 2042.99372 81.2855984 2036.99545 81.3068842\"\n                    ></polygon>\n                    <path\n                      d=\"M1440.91256,113.867476 L1683.96695,115.156393 C1685.01911,115.161972 1685.87075,116.01338 1685.87663,117.065535 L1685.87663,117.065535 L1685.87663,117.065535 L1439.02408,115.756477 C1439.01829,114.719003 1439.85464,113.87327 1440.89211,113.867479 C1440.89893,113.867441 1440.90574,113.86744 1440.91256,113.867476 Z\"\n                      fillOpacity=\"0.53\"\n                      fill=\"url(#linearGradient-18)\"\n                      transform=\"translate(1562.445054, 115.461470) rotate(-6.000000) translate(-1562.445054, -115.461470) \"\n                    ></path>\n                    <path\n                      d=\"M1575.88673,92.1473434 L1818.98374,93.2238544 C1820.03516,93.2285104 1820.88642,94.0795731 1820.89133,95.1309941 L1820.89133,95.1309941 L1820.89133,95.1309941 L1573.99685,94.0376668 C1573.992,92.9985162 1574.83047,92.1521905 1575.86962,92.1473454 C1575.87533,92.1473189 1575.88103,92.1473182 1575.88673,92.1473434 Z\"\n                      fillOpacity=\"0.53\"\n                      fill=\"url(#linearGradient-19)\"\n                      transform=\"translate(1697.439660, 93.634965) rotate(-5.000000) translate(-1697.439660, -93.634965) \"\n                    ></path>\n                    <polyline\n                      stroke=\"url(#linearGradient-20)\"\n                      transform=\"translate(1403.466823, 149.177725) scale(-1, 1) translate(-1403.466823, -149.177725) \"\n                      points=\"1391.83397 144.112325 1402.49098 154.243126 1415.09968 154.243126\"\n                    ></polyline>\n                    <path\n                      d=\"M1682.26247,53.3638469 L1698.75967,68.9270943 L1694.35985,68.9270943 L1677.86264,53.3638469 L1682.26247,53.3638469 Z M1671.4629,53.3638469 L1687.9601,68.9270943 L1683.56028,68.9270943 L1667.06307,53.3638469 L1671.4629,53.3638469 Z M1649.46378,53.3638469 L1665.96098,68.9270943 L1661.56116,68.9270943 L1645.06395,53.3638469 L1649.46378,53.3638469 Z M1660.26334,53.3638469 L1676.76055,68.9270943 L1672.36073,68.9270943 L1655.86352,53.3638469 L1660.26334,53.3638469 Z M1627.46465,53.3638469 L1643.96186,68.9270943 L1639.56204,68.9270943 L1623.06483,53.3638469 L1627.46465,53.3638469 Z M1638.26422,53.3638469 L1654.76143,68.9270943 L1650.36161,68.9270943 L1633.8644,53.3638469 L1638.26422,53.3638469 Z M1616.2651,53.3638469 L1632.76231,68.9270943 L1628.36249,68.9270943 L1611.86528,53.3638469 L1616.2651,53.3638469 Z M1594.26598,53.3638469 L1610.76319,68.9270943 L1606.36336,68.9270943 L1589.86616,53.3638469 L1594.26598,53.3638469 Z M1605.46553,53.3638469 L1621.96274,68.9270943 L1617.56292,68.9270943 L1601.06571,53.3638469 L1605.46553,53.3638469 Z M1572.26686,53.3638469 L1588.76407,68.9270943 L1584.36424,68.9270943 L1567.86704,53.3638469 L1572.26686,53.3638469 Z M1583.46641,53.3638469 L1599.96362,68.9270943 L1595.5638,68.9270943 L1579.06659,53.3638469 L1583.46641,53.3638469 Z\"\n                      fill=\"url(#linearGradient-21)\"\n                      transform=\"translate(1633.313355, 61.145471) scale(-1, -1) rotate(-5.000000) translate(-1633.313355, -61.145471) \"\n                    ></path>\n                    <path\n                      d=\"M633.439934,53.3638469 L649.937142,68.9270943 L645.537318,68.9270943 L629.04011,53.3638469 L633.439934,53.3638469 Z M622.640366,53.3638469 L639.137573,68.9270943 L634.737749,68.9270943 L618.240541,53.3638469 L622.640366,53.3638469 Z M600.641245,53.3638469 L617.138452,68.9270943 L612.738628,68.9270943 L596.24142,53.3638469 L600.641245,53.3638469 Z M611.440813,53.3638469 L627.938021,68.9270943 L623.538197,68.9270943 L607.040989,53.3638469 L611.440813,53.3638469 Z M578.642124,53.3638469 L595.139331,68.9270943 L590.739507,68.9270943 L574.2423,53.3638469 L578.642124,53.3638469 Z M589.441692,53.3638469 L605.9389,68.9270943 L601.539076,68.9270943 L585.041868,53.3638469 L589.441692,53.3638469 Z M567.442571,53.3638469 L583.939779,68.9270943 L579.539955,68.9270943 L563.042747,53.3638469 L567.442571,53.3638469 Z M545.44345,53.3638469 L561.940658,68.9270943 L557.540834,68.9270943 L541.043626,53.3638469 L545.44345,53.3638469 Z M556.643003,53.3638469 L573.14021,68.9270943 L568.740386,68.9270943 L552.243179,53.3638469 L556.643003,53.3638469 Z M523.444329,53.3638469 L539.941537,68.9270943 L535.541713,68.9270943 L519.044505,53.3638469 L523.444329,53.3638469 Z M534.643882,53.3638469 L551.141089,68.9270943 L546.741265,68.9270943 L530.244058,53.3638469 L534.643882,53.3638469 Z\"\n                      fill=\"url(#linearGradient-21)\"\n                      transform=\"translate(584.490823, 61.145471) scale(1, -1) rotate(-5.000000) translate(-584.490823, -61.145471) \"\n                    ></path>\n                    <g>\n                      <use\n                        fill=\"url(#linearGradient-22)\"\n                        xmlnsXlink=\"#path-25\"\n                      ></use>\n                      <use\n                        fill=\"url(#linearGradient-23)\"\n                        xmlnsXlink=\"#path-25\"\n                      ></use>\n                      <use\n                        fill=\"url(#linearGradient-24)\"\n                        xmlnsXlink=\"#path-25\"\n                      ></use>\n                    </g>\n                    <g>\n                      <use\n                        fill=\"url(#linearGradient-26)\"\n                        xmlnsXlink=\"#path-27\"\n                      ></use>\n                      <use\n                        fill=\"url(#linearGradient-23)\"\n                        xmlnsXlink=\"#path-27\"\n                      ></use>\n                      <use\n                        fill=\"url(#linearGradient-24)\"\n                        xmlnsXlink=\"#path-27\"\n                      ></use>\n                    </g>\n                    <polygon\n                      fill=\"url(#linearGradient-28)\"\n                      opacity=\"0.7\"\n                      transform=\"translate(1901.672610, 38.294764) rotate(-4.000000) translate(-1901.672610, -38.294764) \"\n                      points=\"1585.90935 21.9868061 2217.32234 24.2274712 2217.43587 54.6027215 1607.23397 53.7684467\"\n                    ></polygon>\n                    <ellipse\n                      fill=\"url(#radialGradient-9)\"\n                      opacity=\"0.400000006\"\n                      filter=\"url(#filter-29)\"\n                      transform=\"translate(619.273159, 135.263556) scale(-1, 1) translate(-619.273159, -135.263556) \"\n                      cx=\"619.273159\"\n                      cy=\"135.263556\"\n                      rx=\"68.497263\"\n                      ry=\"7.59182797\"\n                    ></ellipse>\n                    <ellipse\n                      fill=\"#0E14DE\"\n                      opacity=\"0.326102121\"\n                      filter=\"url(#filter-30)\"\n                      transform=\"translate(618.773179, 132.891110) scale(-1, 1) translate(-618.773179, -132.891110) \"\n                      cx=\"618.773179\"\n                      cy=\"132.89111\"\n                      rx=\"57.9976826\"\n                      ry=\"4.27040323\"\n                    ></ellipse>\n                    <ellipse\n                      fill=\"#6580FF\"\n                      filter=\"url(#filter-31)\"\n                      transform=\"translate(619.273159, 132.891110) scale(-1, 1) translate(-619.273159, -132.891110) \"\n                      cx=\"619.273159\"\n                      cy=\"132.89111\"\n                      rx=\"31.4987414\"\n                      ry=\"4.27040323\"\n                    ></ellipse>\n                    <path\n                      d=\"M667.824866,116.758475 C647.901338,115.471104 669.610545,117.685388 732.952488,123.401325 L786.141898,128.27268 L813.361511,154.243126 L1210.26442,154.243126\"\n                      stroke=\"url(#linearGradient-13)\"\n                      strokeWidth=\"1.2\"\n                    ></path>\n                    <polyline\n                      stroke=\"url(#linearGradient-14)\"\n                      strokeWidth=\"1.2\"\n                      points=\"673.847906 108.692158 768.016149 119.130922 796.371127 154.243126 1210.26442 154.243126\"\n                    ></polyline>\n                    <polyline\n                      stroke=\"url(#linearGradient-32)\"\n                      strokeWidth=\"2\"\n                      transform=\"translate(453.926362, 94.263768) rotate(4.000000) translate(-453.926362, -94.263768) \"\n                      points=\"148.506187 86.4121189 314.391811 87.7218765 626.74824 90.4562277 645.034488 90.5488034 655.329322 101.204856 759.346537 102.115417\"\n                    ></polyline>\n                    <polyline\n                      stroke=\"url(#linearGradient-16)\"\n                      strokeWidth=\"2\"\n                      points=\"660.771501 107.74318 793.249955 121.315316 821.97862 148.032269 1127.25938 148.032269\"\n                    ></polyline>\n                    <line\n                      x1=\"643.961181\"\n                      y1=\"52.4480598\"\n                      x2=\"193.157516\"\n                      y2=\"89.401165\"\n                      stroke=\"url(#linearGradient-17)\"\n                      strokeWidth=\"2\"\n                      opacity=\"0.298851376\"\n                      transform=\"translate(418.559348, 70.924612) scale(-1, 1) translate(-418.559348, -70.924612) \"\n                    ></line>\n                    <polygon\n                      fill=\"#00B5D7\"\n                      opacity=\"0.389113653\"\n                      transform=\"translate(165.828659, 77.654193) rotate(4.000000) translate(-165.828659, -77.654193) \"\n                      points=\"162.840166 74.817156 168.838438 74.7958702 168.817152 80.4912297 162.81888 80.5125154\"\n                    ></polygon>\n                    <polygon\n                      fill=\"#0D58EC\"\n                      opacity=\"0.389113653\"\n                      transform=\"translate(189.769240, 79.242930) rotate(4.000000) translate(-189.769240, -79.242930) \"\n                      points=\"186.780747 76.4058935 192.779018 76.3846077 192.757733 82.0799671 186.759461 82.1012529\"\n                    ></polygon>\n                    <polygon\n                      fill=\"#3C7DFB\"\n                      opacity=\"0.389113653\"\n                      transform=\"translate(177.798949, 78.448562) rotate(4.000000) translate(-177.798949, -78.448562) \"\n                      points=\"174.810456 75.6115247 180.808728 75.590239 180.787442 81.2855984 174.78917 81.3068842\"\n                    ></polygon>\n                    <path\n                      d=\"M533.826626,113.867476 L776.881022,115.156393 C777.933178,115.161972 778.784823,116.01338 778.790695,117.065535 L778.790695,117.065535 L778.790695,117.065535 L531.938152,115.756477 C531.932361,114.719003 532.768706,113.87327 533.80618,113.867479 C533.812995,113.867441 533.819811,113.86744 533.826626,113.867476 Z\"\n                      fillOpacity=\"0.53\"\n                      fill=\"url(#linearGradient-18)\"\n                      transform=\"translate(655.359124, 115.461470) scale(-1, 1) rotate(-6.000000) translate(-655.359124, -115.461470) \"\n                    ></path>\n                    <path\n                      d=\"M398.811586,92.1473434 L641.908596,93.2238544 C642.960019,93.2285104 643.811281,94.0795731 643.816183,95.1309941 L643.816183,95.1309941 L643.816183,95.1309941 L396.921706,94.0376668 C396.916861,92.9985162 397.755331,92.1521905 398.794481,92.1473454 C398.800183,92.1473189 398.805885,92.1473182 398.811586,92.1473434 Z\"\n                      fillOpacity=\"0.53\"\n                      fill=\"url(#linearGradient-19)\"\n                      transform=\"translate(520.364518, 93.634965) scale(-1, 1) rotate(-5.000000) translate(-520.364518, -93.634965) \"\n                    ></path>\n                    <polyline\n                      stroke=\"url(#linearGradient-20)\"\n                      points=\"802.704499 144.112325 813.361511 154.243126 825.970211 154.243126\"\n                    ></polyline>\n                    <polygon\n                      fill=\"url(#linearGradient-33)\"\n                      opacity=\"0.7\"\n                      transform=\"translate(316.131615, 38.294764) scale(-1, 1) rotate(-4.000000) translate(-316.131615, -38.294764) \"\n                      points=\"0.368402501 21.9868032 631.781303 24.227468 631.894827 54.6027241 21.6930202 53.7684499\"\n                    ></polygon>\n                  </g>\n                  <g transform=\"translate(835.402089, 146.253126)\">\n                    <line\n                      x1=\"43.5\"\n                      y1=\"1.99\"\n                      x2=\"464\"\n                      y2=\"1.74\"\n                      stroke=\"url(#linearGradient-34)\"\n                      strokeWidth=\"2\"\n                    ></line>\n                    <line\n                      x1=\"0\"\n                      y1=\"1.495\"\n                      x2=\"419.5\"\n                      y2=\"1.5\"\n                      stroke=\"url(#linearGradient-35)\"\n                      strokeWidth=\"5\"\n                      transform=\"translate(210.000000, 1.000000) scale(-1, 1) translate(-210.000000, -1.000000) \"\n                    ></line>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </svg>\n        )}\n        {type === \"sample\" && (\n          <svg\n            className=\"svg\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 1920 90\"\n            preserveAspectRatio=\"none\"\n            version=\"1.1\"\n          >\n            <defs>\n              <linearGradient\n                x1=\"50%\"\n                y1=\"-121.612961%\"\n                x2=\"50%\"\n                y2=\"100%\"\n                id=\"linearGradient-1\"\n              >\n                <stop stopColor=\"#125192\" offset=\"0%\"></stop>\n                <stop stopColor=\"#041A37\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"94.4482299%\"\n                y1=\"49.5593262%\"\n                x2=\"93.0498559%\"\n                y2=\"49.8957202%\"\n                id=\"linearGradient-2\"\n              >\n                <stop stopColor=\"#629EFC\" stopOpacity=\"0.5\" offset=\"0%\"></stop>\n                <stop stopColor=\"#629EFC\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"5.75577763%\"\n                y1=\"49.6119212%\"\n                x2=\"7.34938808%\"\n                y2=\"49.8667724%\"\n                id=\"linearGradient-3\"\n              >\n                <stop stopColor=\"#629EFC\" stopOpacity=\"0.5\" offset=\"0%\"></stop>\n                <stop stopColor=\"#629EFC\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <path\n                d=\"M960.380666,75.9212488 L957.24257,75.9162088 C899.134626,75.7515688 721.935926,71.5532488 625.646468,63.3212488 C599.564292,63.0204549 601.854257,36.9587021 576.275039,21.5549988 C568.264612,17.8180474 560.629124,15.4189916 553.368575,14.3578312 L551.649231,13.9548622 C523.752127,7.49396669 504.915695,6.87639585 490.780666,0 L960.578152,2.1609 L1430.37635,0 C1416.23987,6.87709753 1397.40104,7.49409266 1369.49924,13.9568402 L1367.78844,14.3578312 C1360.52789,15.4189916 1352.8924,17.8180474 1344.88197,21.5549988 C1319.30275,36.9587021 1321.59272,63.0204549 1295.51054,63.3212488 L1289.63912,63.8202088 C1194.12888,71.8875688 1017.7094,75.9212488 960.380666,75.9212488 Z\"\n                id=\"path-4\"\n              ></path>\n              <linearGradient\n                x1=\"50%\"\n                y1=\"0%\"\n                x2=\"50%\"\n                y2=\"145.866912%\"\n                id=\"linearGradient-5\"\n              >\n                <stop stopColor=\"#142132\" offset=\"0%\"></stop>\n                <stop stopColor=\"#0A45C4\" offset=\"100%\"></stop>\n              </linearGradient>\n              <path\n                d=\"M625.646468,63.3212488 C599.564292,63.0204549 599.141762,29.5489904 589.989325,21.5549988 C587.834838,19.090317 584.919078,16.7774596 581.242045,14.6164264 L580.797147,14.3578312 C576.352516,11.8026742 566.918451,7.01673046 552.494952,0 L945.666633,2.83840766 L1362.18009,0 L1356.36964,2.83840766 C1345.49852,8.17331531 1338.10862,11.9517668 1334.19992,14.173762 L1333.87789,14.3578312 C1329.99044,16.5926739 1326.92638,18.9917298 1324.68571,21.5549988 C1315.53328,29.5489904 1315.11075,63.0204549 1289.02857,63.3212488 C1120.91647,71.7212488 1011.49906,75.9212488 960.776345,75.9212488 C902.277642,75.9212488 790.567683,71.7212488 625.646468,63.3212488 Z\"\n                id=\"path-6\"\n              ></path>\n              <filter\n                x=\"-0.8%\"\n                y=\"-9.1%\"\n                width=\"101.6%\"\n                height=\"118.3%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-8\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"2\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <radialGradient\n                cx=\"48.7863339%\"\n                cy=\"100%\"\n                fx=\"48.7863339%\"\n                fy=\"100%\"\n                r=\"798.051696%\"\n                gradientTransform=\"translate(0.487863,1.000000),scale(0.056251,1.000000),rotate(97.428189),translate(-0.487863,-1.000000)\"\n                id=\"radialGradient-9\"\n              >\n                <stop stopColor=\"#4780DA\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#4780DA\"\n                  stopOpacity=\"0.488658841\"\n                  offset=\"77.1131131%\"\n                ></stop>\n                <stop stopColor=\"#4780DA\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </radialGradient>\n              <filter\n                x=\"-0.8%\"\n                y=\"-17.5%\"\n                width=\"101.6%\"\n                height=\"135.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-10\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"3\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <radialGradient\n                cx=\"48.7863339%\"\n                cy=\"100%\"\n                fx=\"48.7863339%\"\n                fy=\"100%\"\n                r=\"798.051696%\"\n                gradientTransform=\"translate(0.487863,1.000000),scale(0.056251,1.000000),rotate(97.428189),translate(-0.487863,-1.000000)\"\n                id=\"radialGradient-11\"\n              >\n                <stop stopColor=\"#5390F1\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#4780DA\"\n                  stopOpacity=\"0.488658841\"\n                  offset=\"77.1131131%\"\n                ></stop>\n                <stop stopColor=\"#4780DA\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </radialGradient>\n              <linearGradient\n                x1=\"100%\"\n                y1=\"50.1179185%\"\n                x2=\"-2.95410545%\"\n                y2=\"49.9460327%\"\n                id=\"linearGradient-12\"\n              >\n                <stop stopColor=\"#ABD7FC\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#73AEF7\"\n                  stopOpacity=\"0.947208469\"\n                  offset=\"5.27915311%\"\n                ></stop>\n                <stop stopColor=\"#73AEF7\" offset=\"7.03614871%\"></stop>\n                <stop\n                  stopColor=\"#73AEF7\"\n                  stopOpacity=\"0.260891132\"\n                  offset=\"83.0137857%\"\n                ></stop>\n                <stop stopColor=\"#73AEF7\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n            </defs>\n            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(-195.000000, -1083.679513)\">\n                <g transform=\"translate(195.000000, 1080)\">\n                  <path\n                    d=\"M1920,0.321248834 L1920,79.5212488 L1919.694,79.5212488 L1919.69495,77.3035344 C1905.19721,65.0963014 1884.07505,57.7313023 1856.32848,55.2085371 L1855.38,55.1244096 C1741.78565,51.2251968 1232.41659,51.2251968 958.129983,55.1244096 L958.140061,55.2382824 C680.67223,51.5477166 187.515617,51.6168419 75.972092,55.4456585 C47.757948,57.8857901 26.3196316,65.2788317 11.6571429,77.6247832 L11.657,79.5212488 L0,79.5212488 L0,0.321248834 L1920,0.321248834 Z\"\n                    fill=\"#0E1122\"\n                  ></path>\n                  <g>\n                    <use\n                      fill=\"url(#linearGradient-1)\"\n                      xlinkHref=\"#path-4\"\n                    ></use>\n                    <use\n                      fill=\"url(#linearGradient-2)\"\n                      xlinkHref=\"#path-4\"\n                    ></use>\n                    <use\n                      fill=\"url(#linearGradient-3)\"\n                      xlinkHref=\"#path-4\"\n                    ></use>\n                  </g>\n                  <mask fill=\"white\">\n                    <use xlinkHref=\"#path-6\"></use>\n                  </mask>\n                  <g>\n                    <use fill=\"#041A37\" xlinkHref=\"#path-6\"></use>\n                    <use\n                      fill=\"url(#linearGradient-5)\"\n                      xlinkHref=\"#path-6\"\n                    ></use>\n                  </g>\n                  <path\n                    d=\"M1359.43723,-3.6 L1353.62678,-0.76159234 C1342.75567,4.57331531 1335.36576,8.35176676 1331.45706,10.573762 L1331.13504,10.7578312 C1327.24758,12.9926739 1324.18352,15.3917298 1321.94286,17.9549988 C1312.79042,25.9489904 1312.36789,59.4204549 1286.28571,59.7212488 C1186.66885,68.1212488 1011.49906,72.3212488 960.776345,72.3212488 C902.277642,72.3212488 724.815302,68.1212488 628.389325,59.7212488 C602.307149,59.4204549 601.884619,25.9489904 592.732182,17.9549988 C590.577695,15.490317 587.661935,13.1774596 583.984902,11.0164264 L583.540004,10.7578312 C579.095373,8.20267418 569.661308,3.41673046 555.237809,-3.6\"\n                    stroke=\"#184BAE\"\n                    strokeWidth=\"2\"\n                    mask=\"url(#mask-7)\"\n                  ></path>\n                  <path\n                    d=\"M1356.00866,-7.2 L1350.19821,-4.36159234 C1339.3271,0.973315305 1331.93719,4.75176676 1328.02849,6.97376203 L1327.70646,7.15783116 C1323.81901,9.39267391 1320.75495,11.7917298 1318.51429,14.3549988 C1309.36185,22.3489904 1308.93932,55.8204549 1282.85714,56.1212488 C1185.52599,64.5212488 1011.49906,68.7212488 960.776345,68.7212488 C902.277642,68.7212488 725.729588,64.5212488 631.132182,56.1212488 C605.050007,55.8204549 604.627476,22.3489904 595.475039,14.3549988 C593.320552,11.890317 590.404792,9.57745958 586.727759,7.41642639 L586.282861,7.15783116 C581.83823,4.60267418 572.404165,-0.183269537 557.980666,-7.2\"\n                    stroke=\"#184BAE\"\n                    strokeWidth=\"2\"\n                    mask=\"url(#mask-7)\"\n                  ></path>\n                  <path\n                    d=\"M1362.18009,0 L1356.36964,2.83840766 C1345.49852,8.17331531 1338.10862,11.9517668 1334.19992,14.173762 L1333.87789,14.3578312 C1329.99044,16.5926739 1326.92638,18.9917298 1324.68571,21.5549988 C1315.53328,29.5489904 1315.11075,63.0204549 1289.02857,63.3212488 C1187.58314,71.7212488 1011.49906,75.9212488 960.776345,75.9212488 C902.277642,75.9212488 723.901017,71.7212488 625.646468,63.3212488 C599.564292,63.0204549 599.141762,29.5489904 589.989325,21.5549988 C587.834838,19.090317 584.919078,16.7774596 581.242045,14.6164264 L580.797147,14.3578312 C576.352516,11.8026742 566.918451,7.01673046 552.494952,0\"\n                    stroke=\"#5396FF\"\n                    strokeWidth=\"2\"\n                    filter=\"url(#filter-8)\"\n                  ></path>\n                  <path\n                    d=\"M1362.18009,0 L1356.36964,2.83840766 C1345.49852,8.17331531 1338.10862,11.9517668 1334.19992,14.173762 L1333.87789,14.3578312 C1329.99044,16.5926739 1326.92638,18.9917298 1324.68571,21.5549988 C1315.53328,29.5489904 1315.11075,63.0204549 1289.02857,63.3212488 C1187.58314,71.7212488 1011.49906,75.9212488 960.776345,75.9212488 C902.277642,75.9212488 723.901017,71.7212488 625.646468,63.3212488 C599.564292,63.0204549 599.141762,29.5489904 589.989325,21.5549988 C587.834838,19.090317 584.919078,16.7774596 581.242045,14.6164264 L580.797147,14.3578312 C576.352516,11.8026742 566.918451,7.01673046 552.494952,0\"\n                    stroke=\"#629EFC\"\n                    strokeWidth=\"2\"\n                  ></path>\n                  <path\n                    d=\"M1327.29292,45.3617233 L1326.78948,45.8235416 C1315.18078,56.5373749 1308.39661,67.2924814 1295.88571,67.8212488 C1196.27824,76.0690599 1014.51055,80.2676812 963.564933,80.4171129 L960.789371,80.420403 L957.687302,80.4113497 C906.278125,80.1825027 718.679443,75.9858024 620.077458,67.8212488 C607.347068,67.2832047 600.546115,56.1568552 588.558198,45.2597492 L588.157602,44.8973233 M1327.29292,45.3617233 L1327.40497,45.2597492 C1335.87919,37.5566226 1346.94535,29.9680495 1364.53019,26.315201 L1365.82857,26.0549988 C1368.06924,23.4917298 1466.26511,9.01845463 1542.72968,17.0222933 M373.233488,17.0222933 C449.698063,9.01845463 547.893934,23.4917298 550.1346,26.0549988 C568.039756,29.5135876 579.330461,37.0011002 587.93345,44.6963657 L588.157602,44.8973233\"\n                    stroke=\"url(#radialGradient-9)\"\n                    strokeWidth=\"5\"\n                    filter=\"url(#filter-10)\"\n                  ></path>\n                  <path\n                    d=\"M1327.29292,46.2617233 L1326.78948,46.7235416 C1315.18078,57.4373749 1308.39661,68.1924814 1295.88571,68.7212488 C1196.27824,76.9690599 1014.51055,81.1676812 963.564933,81.3171129 L960.789371,81.320403 L957.687302,81.3113497 C906.278125,81.0825027 718.679443,76.8858024 620.077458,68.7212488 C607.347068,68.1832047 600.546115,57.0568552 588.558198,46.1597492 L588.157602,45.7973233 M1327.29292,46.2617233 L1327.40497,46.1597492 C1335.87919,38.4566226 1346.94535,30.8680495 1364.53019,27.215201 L1365.82857,26.9549988 C1368.06924,24.3917298 1466.26511,9.91845463 1542.72968,17.9222933 M373.233488,17.9222933 C449.698063,9.91845463 547.893934,24.3917298 550.1346,26.9549988 C568.039756,30.4135876 579.330461,37.9011002 587.93345,45.5963657 L588.157602,45.7973233\"\n                    stroke=\"url(#radialGradient-11)\"\n                    strokeWidth=\"3\"\n                  ></path>\n                  <path\n                    d=\"M1356.22857,55.4456585 C1563.84852,51.5464456 1724.45567,51.5464456 1838.05002,55.4456585 C1866.26416,57.8857901 1887.70248,65.2788317 1902.36497,77.6247832\"\n                    stroke=\"url(#linearGradient-12)\"\n                    strokeWidth=\"2.5\"\n                  ></path>\n                  <path\n                    d=\"M11.6571429,55.4456585 C219.277088,51.5464456 379.884238,51.5464456 493.478592,55.4456585 C521.692736,57.8857901 543.131052,65.2788317 557.793541,77.6247832\"\n                    stroke=\"url(#linearGradient-12)\"\n                    strokeWidth=\"2.5\"\n                    transform=\"translate(284.725342, 65.073016) scale(-1, 1) translate(-284.725342, -65.073016) \"\n                  ></path>\n                </g>\n              </g>\n            </g>\n          </svg>\n        )}\n        {type === \"square\" && (\n          <svg\n            className=\"svg\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 1920 90\"\n            preserveAspectRatio=\"none\"\n            version=\"1.1\"\n          >\n            <defs>\n              <radialGradient\n                cx=\"50%\"\n                cy=\"30.055444%\"\n                fx=\"50%\"\n                fy=\"30.055444%\"\n                r=\"713.130816%\"\n                gradientTransform=\"translate(0.5, 0.3006), scale(0.0393, 1), rotate(-2.4292), translate(-0.5, -0.3006)\"\n                id=\"radialGradient-1\"\n              >\n                <stop stopColor=\"#00E0DB\" offset=\"0%\"></stop>\n                <stop stopColor=\"#3D7FFF\" offset=\"100%\"></stop>\n              </radialGradient>\n              <filter\n                x=\"-17.9%\"\n                y=\"-456.5%\"\n                width=\"135.9%\"\n                height=\"1013.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-2\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-17.0%\"\n                y=\"-646.2%\"\n                width=\"133.9%\"\n                height=\"1392.3%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-3\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"28\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-39.0%\"\n                y=\"-807.7%\"\n                width=\"178.1%\"\n                height=\"1715.4%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-4\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"35\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <linearGradient\n                x1=\"0%\"\n                y1=\"0%\"\n                x2=\"100%\"\n                y2=\"0%\"\n                id=\"linearGradient-5\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop stopColor=\"#0E5FFF\" offset=\"21.3020387%\"></stop>\n                <stop stopColor=\"#0E5FFF\" offset=\"60.4246107%\"></stop>\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"0%\"\n                y1=\"0%\"\n                x2=\"100%\"\n                y2=\"0%\"\n                id=\"linearGradient-6\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop stopColor=\"#0E5FFF\" offset=\"6.53284483%\"></stop>\n                <stop stopColor=\"#00FFFF\" offset=\"25.2177665%\"></stop>\n                <stop stopColor=\"#1777B7\" offset=\"33.4949601%\"></stop>\n                <stop stopColor=\"#1871B4\" offset=\"41.9532742%\"></stop>\n                <stop stopColor=\"#1D89CE\" offset=\"48.0996027%\"></stop>\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <filter\n                x=\"-0.5%\"\n                y=\"-19.7%\"\n                width=\"101.0%\"\n                height=\"139.4%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-7\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-51.4%\"\n                y=\"-51.4%\"\n                width=\"202.9%\"\n                height=\"202.9%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-8\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1.2\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-51.4%\"\n                y=\"-51.4%\"\n                width=\"202.9%\"\n                height=\"202.9%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-9\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1.2\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-51.4%\"\n                y=\"-51.4%\"\n                width=\"202.9%\"\n                height=\"202.9%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-10\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1.2\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-51.4%\"\n                y=\"-51.4%\"\n                width=\"202.9%\"\n                height=\"202.9%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-11\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1.2\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <linearGradient\n                x1=\"50%\"\n                y1=\"-17.8886468%\"\n                x2=\"50%\"\n                y2=\"125.757911%\"\n                id=\"linearGradient-12\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.2\"\n                  offset=\"63.6246579%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.7\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"50%\"\n                y1=\"-19.0793713%\"\n                x2=\"50%\"\n                y2=\"197.916872%\"\n                id=\"linearGradient-13\"\n              >\n                <stop stopColor=\"#000000\" stopOpacity=\"0.5\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.12\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"35.9694535%\"\n                y1=\"126.83927%\"\n                x2=\"35.9694535%\"\n                y2=\"50%\"\n                id=\"linearGradient-14\"\n              >\n                <stop stopColor=\"#004BFF\" offset=\"0%\"></stop>\n                <stop stopColor=\"#1C3A75\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <polygon\n                id=\"path-15\"\n                points=\"1191.00778 12 1296.00778 12 1336 70.0234278 1227.18439 70.0234278\"\n              ></polygon>\n              <filter\n                x=\"-6.2%\"\n                y=\"-15.5%\"\n                width=\"112.4%\"\n                height=\"131.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-16\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"3\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-48.0%\"\n                y=\"-48.0%\"\n                width=\"196.0%\"\n                height=\"196.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-17\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"0.96\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-48.0%\"\n                y=\"-48.0%\"\n                width=\"196.0%\"\n                height=\"196.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-18\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"0.96\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-48.0%\"\n                y=\"-48.0%\"\n                width=\"196.0%\"\n                height=\"196.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-19\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"0.96\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <linearGradient\n                x1=\"34.8240472%\"\n                y1=\"-221.721997%\"\n                x2=\"34.8240472%\"\n                y2=\"165.175953%\"\n                id=\"linearGradient-20\"\n              >\n                <stop stopColor=\"#00FFFF\" stopOpacity=\"0.8\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.76\"\n                  offset=\"40.3818151%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0\"\n                  offset=\"99.9180507%\"\n                ></stop>\n              </linearGradient>\n              <filter\n                x=\"-23.5%\"\n                y=\"0.0%\"\n                width=\"147.1%\"\n                height=\"100.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-21\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"36 0\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-0.5%\"\n                y=\"-19.7%\"\n                width=\"101.0%\"\n                height=\"139.4%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-22\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-51.4%\"\n                y=\"-51.4%\"\n                width=\"202.9%\"\n                height=\"202.9%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-23\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1.2\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-51.4%\"\n                y=\"-51.4%\"\n                width=\"202.9%\"\n                height=\"202.9%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-24\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1.2\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-51.4%\"\n                y=\"-51.4%\"\n                width=\"202.9%\"\n                height=\"202.9%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-25\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1.2\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-51.4%\"\n                y=\"-51.4%\"\n                width=\"202.9%\"\n                height=\"202.9%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-26\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"1.2\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <polygon\n                id=\"path-27\"\n                points=\"584 12 689 12 728.992217 70.0234278 620.176609 70.0234278\"\n              ></polygon>\n              <filter\n                x=\"-6.2%\"\n                y=\"-15.5%\"\n                width=\"112.4%\"\n                height=\"131.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-28\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"3\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-48.0%\"\n                y=\"-48.0%\"\n                width=\"196.0%\"\n                height=\"196.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-29\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"0.96\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-48.0%\"\n                y=\"-48.0%\"\n                width=\"196.0%\"\n                height=\"196.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-30\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"0.96\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-48.0%\"\n                y=\"-48.0%\"\n                width=\"196.0%\"\n                height=\"196.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-31\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"0.96\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <filter\n                x=\"-23.5%\"\n                y=\"0.0%\"\n                width=\"147.1%\"\n                height=\"100.0%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"filter-32\"\n              >\n                <feGaussianBlur\n                  stdDeviation=\"36 0\"\n                  in=\"SourceGraphic\"\n                ></feGaussianBlur>\n              </filter>\n              <linearGradient\n                x1=\"50%\"\n                y1=\"-17.8886468%\"\n                x2=\"50%\"\n                y2=\"125.757911%\"\n                id=\"linearGradient-33\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.2\"\n                  offset=\"63.6246579%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.7\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"50%\"\n                y1=\"-19.0793713%\"\n                x2=\"50%\"\n                y2=\"197.916872%\"\n                id=\"linearGradient-34\"\n              >\n                <stop stopColor=\"#000000\" stopOpacity=\"0.5\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0.12\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"35.9694535%\"\n                y1=\"126.83927%\"\n                x2=\"35.9694535%\"\n                y2=\"50%\"\n                id=\"linearGradient-35\"\n              >\n                <stop stopColor=\"#004BFF\" offset=\"0%\"></stop>\n                <stop stopColor=\"#1C3A75\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <polygon\n                id=\"path-36\"\n                points=\"694 0 737.82646 65.1665155 1181.00778 65.1665155 1225.87749 0\"\n              ></polygon>\n              <linearGradient\n                x1=\"-1.02240265e-14%\"\n                y1=\"-1.43982049e-13%\"\n                x2=\"100%\"\n                y2=\"0%\"\n                id=\"linearGradient-37\"\n              >\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"0%\"></stop>\n                <stop\n                  stopColor=\"#1D89CE\"\n                  stopOpacity=\"0.08\"\n                  offset=\"18.9496927%\"\n                ></stop>\n                <stop stopColor=\"#1871B4\" offset=\"38.7321779%\"></stop>\n                <stop stopColor=\"#1777B7\" offset=\"51.0897959%\"></stop>\n                <stop\n                  stopColor=\"#00FFFF\"\n                  stopOpacity=\"0.33\"\n                  offset=\"74.7822335%\"\n                ></stop>\n                <stop\n                  stopColor=\"#0E5FFF\"\n                  stopOpacity=\"0\"\n                  offset=\"93.4671552%\"\n                ></stop>\n                <stop stopColor=\"#0E5FFF\" stopOpacity=\"0\" offset=\"100%\"></stop>\n              </linearGradient>\n              <linearGradient\n                x1=\"26.2355307%\"\n                y1=\"100%\"\n                x2=\"69.0344979%\"\n                y2=\"100%\"\n                id=\"linearGradient-38\"\n              >\n                <stop stopColor=\"#FFFFFF\" stopOpacity=\"0.05\" offset=\"0%\"></stop>\n                <stop stopColor=\"#FFFFFF\" offset=\"51.2723483%\"></stop>\n                <stop\n                  stopColor=\"#FFFFFF\"\n                  stopOpacity=\"0.05\"\n                  offset=\"100%\"\n                ></stop>\n              </linearGradient>\n            </defs>\n            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(-172, -1385)\">\n                <g transform=\"translate(172, 1385)\">\n                  <ellipse\n                    fill=\"url(#radialGradient-1)\"\n                    opacity=\"0.400000006\"\n                    filter=\"url(#filter-2)\"\n                    cx=\"943.5\"\n                    cy=\"79.5\"\n                    rx=\"292.5\"\n                    ry=\"11.5\"\n                  ></ellipse>\n                  <ellipse\n                    fill=\"#0E14DE\"\n                    opacity=\"0.560000002\"\n                    filter=\"url(#filter-3)\"\n                    cx=\"944.5\"\n                    cy=\"75.5\"\n                    rx=\"247.5\"\n                    ry=\"6.5\"\n                  ></ellipse>\n                  <ellipse\n                    fill=\"#6580FF\"\n                    filter=\"url(#filter-4)\"\n                    cx=\"944.5\"\n                    cy=\"75.5\"\n                    rx=\"134.5\"\n                    ry=\"6.5\"\n                  ></ellipse>\n                  <line\n                    x1=\"1199.5\"\n                    y1=\"68.5\"\n                    x2=\"1291.5\"\n                    y2=\"68.5\"\n                    stroke=\"url(#linearGradient-5)\"\n                    strokeWidth=\"3\"\n                    transform=\"translate(1245.5, 68.5) scale(-1, 1) translate(-1245.5, -68.5)\"\n                  ></line>\n                  <line\n                    x1=\"627.5\"\n                    y1=\"68.5\"\n                    x2=\"719.5\"\n                    y2=\"68.5\"\n                    stroke=\"url(#linearGradient-5)\"\n                    strokeWidth=\"3\"\n                    transform=\"translate(673.5, 68.5) scale(-1, 1) translate(-673.5, -68.5)\"\n                  ></line>\n                  <polyline\n                    stroke=\"url(#linearGradient-6)\"\n                    strokeWidth=\"2\"\n                    filter=\"url(#filter-7)\"\n                    transform=\"translate(1618.4883, 76.3068) scale(1, -1) translate(-1618.4883, -76.3068)\"\n                    points=\"1316.97657 86.4469958 1608.0496 86.4469958 1628.17984 66.1665155 1766.77185 66.1665155 1786.74666 78.6400134 1885.67976 78.6400134 1920 78.6400134\"\n                  ></polyline>\n                  <circle\n                    stroke=\"#00FFF4\"\n                    strokeWidth=\"1.2\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-8)\"\n                    cx=\"1672.5\"\n                    cy=\"73.5\"\n                    r=\"2.9\"\n                  ></circle>\n                  <circle\n                    stroke=\"#00FFF4\"\n                    strokeWidth=\"1.2\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-9)\"\n                    cx=\"1689.5\"\n                    cy=\"73.5\"\n                    r=\"2.9\"\n                  ></circle>\n                  <circle\n                    stroke=\"#00FFF4\"\n                    strokeWidth=\"1.2\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-10)\"\n                    cx=\"1723.5\"\n                    cy=\"73.5\"\n                    r=\"2.9\"\n                  ></circle>\n                  <circle\n                    fill=\"#00FFF4\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-11)\"\n                    cx=\"1706.5\"\n                    cy=\"73.5\"\n                    r=\"3.5\"\n                  ></circle>\n                  <g\n                    filter=\"url(#filter-16)\"\n                    transform=\"translate(1263.5039, 41.0117) scale(-1, 1) translate(-1263.5039, -41.0117)\"\n                  >\n                    <use\n                      fill=\"url(#linearGradient-12)\"\n                      xmlnsXlink=\"#path-15\"\n                    ></use>\n                    <use\n                      fill=\"url(#linearGradient-13)\"\n                      xmlnsXlink=\"#path-15\"\n                    ></use>\n                    <use\n                      fill=\"url(#linearGradient-14)\"\n                      xmlnsXlink=\"#path-15\"\n                    ></use>\n                  </g>\n                  <circle\n                    stroke=\"#00FFF4\"\n                    strokeWidth=\"0.96\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-17)\"\n                    transform=\"translate(1264, 41) scale(-1, 1) translate(-1264, -41)\"\n                    cx=\"1264\"\n                    cy=\"41\"\n                    r=\"2.52\"\n                  ></circle>\n                  <circle\n                    fill=\"#00FFF4\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-18)\"\n                    transform=\"translate(1251, 41) scale(-1, 1) translate(-1251, -41)\"\n                    cx=\"1251\"\n                    cy=\"41\"\n                    r=\"3\"\n                  ></circle>\n                  <circle\n                    fill=\"#00FFF4\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-19)\"\n                    transform=\"translate(1277, 41) scale(-1, 1) translate(-1277, -41)\"\n                    cx=\"1277\"\n                    cy=\"41\"\n                    r=\"3\"\n                  ></circle>\n                  <path\n                    d=\"M1405.19463,13 L1373.3237,61 L1365.29412,61 L1397.16504,13 L1405.19463,13 Z M1417.51816,13 L1385.64723,61 L1377.61765,61 L1409.48857,13 L1417.51816,13 Z M1429.84169,13 L1397.97076,61 L1389.94118,61 L1421.8121,13 L1429.84169,13 Z M1442.16522,13 L1410.29429,61 L1402.26471,61 L1434.13563,13 L1442.16522,13 Z M1368.22404,13 L1336.35312,61 L1328.32353,61 L1360.19446,13 L1368.22404,13 Z M1380.54757,13 L1348.67665,61 L1340.64706,61 L1372.51799,13 L1380.54757,13 Z M1392.8711,13 L1361.00017,61 L1352.97059,61 L1384.84151,13 L1392.8711,13 Z M1454.48875,13 L1422.61782,61 L1414.58824,61 L1446.45916,13 L1454.48875,13 Z M1466.81228,13 L1434.94135,61 L1426.91176,61 L1458.78269,13 L1466.81228,13 Z M1479.13581,13 L1447.26488,61 L1439.23529,61 L1471.10622,13 L1479.13581,13 Z M1491.45934,13 L1459.58841,61 L1451.55882,61 L1483.42975,13 L1491.45934,13 Z M1355.90051,13 L1324.02959,61 L1316,61 L1347.87093,13 L1355.90051,13 Z M1540.75345,13 L1508.88253,61 L1500.85294,61 L1532.72387,13 L1540.75345,13 Z M1553.07698,13 L1521.20606,61 L1513.17647,61 L1545.0474,13 L1553.07698,13 Z M1565.40051,13 L1533.52959,61 L1525.5,61 L1557.37093,13 L1565.40051,13 Z M1577.72404,13 L1545.85312,61 L1537.82353,61 L1569.69446,13 L1577.72404,13 Z M1503.78287,13 L1471.91194,61 L1463.88235,61 L1495.75328,13 L1503.78287,13 Z M1516.1064,13 L1484.23547,61 L1476.20588,61 L1508.07681,13 L1516.1064,13 Z M1528.42992,13 L1496.559,61 L1488.52941,61 L1520.40034,13 L1528.42992,13 Z M1590.04757,13 L1558.17665,61 L1550.14706,61 L1582.01799,13 L1590.04757,13 Z M1602.3711,13 L1570.50017,61 L1562.47059,61 L1594.34151,13 L1602.3711,13 Z M1614.69463,13 L1582.8237,61 L1574.79412,61 L1606.66504,13 L1614.69463,13 Z M1627.01816,13 L1595.14723,61 L1587.11765,61 L1618.98857,13 L1627.01816,13 Z M1737.92992,13 L1706.059,61 L1698.02941,61 L1729.90034,13 L1737.92992,13 Z M1750.25345,13 L1718.38253,61 L1710.35294,61 L1742.22387,13 L1750.25345,13 Z M1762.57698,13 L1730.70606,61 L1722.67647,61 L1754.5474,13 L1762.57698,13 Z M1700.95934,13 L1669.08841,61 L1661.05882,61 L1692.92975,13 L1700.95934,13 Z M1713.28287,13 L1681.41194,61 L1673.38235,61 L1705.25328,13 L1713.28287,13 Z M1725.6064,13 L1693.73547,61 L1685.70588,61 L1717.57681,13 L1725.6064,13 Z M1774.90051,13 L1743.02959,61 L1735,61 L1766.87093,13 L1774.90051,13 Z M1639.34169,13 L1607.47076,61 L1599.44118,61 L1631.3121,13 L1639.34169,13 Z M1651.66522,13 L1619.79429,61 L1611.76471,61 L1643.63563,13 L1651.66522,13 Z M1663.98875,13 L1632.11782,61 L1624.08824,61 L1655.95916,13 L1663.98875,13 Z M1676.31228,13 L1644.44135,61 L1636.41176,61 L1668.28269,13 L1676.31228,13 Z M1688.63581,13 L1656.76488,61 L1648.73529,61 L1680.60622,13 L1688.63581,13 Z\"\n                    fill=\"url(#linearGradient-20)\"\n                    filter=\"url(#filter-21)\"\n                  ></path>\n                  <polyline\n                    stroke=\"url(#linearGradient-6)\"\n                    strokeWidth=\"2\"\n                    filter=\"url(#filter-22)\"\n                    transform=\"translate(301.5117, 76.3068) scale(-1, -1) translate(-301.5117, -76.3068)\"\n                    points=\"0 86.4469958 291.073031 86.4469958 311.203271 66.1665155 449.795275 66.1665155 469.770089 78.6400134 568.703185 78.6400134 603.023428 78.6400134\"\n                  ></polyline>\n                  <circle\n                    stroke=\"#00FFF4\"\n                    strokeWidth=\"1.2\"\n                    opacity=\"0.701565\"\n                    filter=\"url(#filter-23)\"\n                    transform=\"translate(247.5, 73.5) scale(-1, 1) translate(-247.5, -73.5)\"\n                    cx=\"247.5\"\n                    cy=\"73.5\"\n                    r=\"2.9\"\n                  ></circle>\n                  <circle\n                    stroke=\"#00FFF4\"\n                    strokeWidth=\"1.2\"\n                    opacity=\"0.701565\"\n                    filter=\"url(#filter-24)\"\n                    transform=\"translate(230.5, 73.5) scale(-1, 1) translate(-230.5, -73.5)\"\n                    cx=\"230.5\"\n                    cy=\"73.5\"\n                    r=\"2.9\"\n                  ></circle>\n                  <circle\n                    stroke=\"#00FFF4\"\n                    strokeWidth=\"1.2\"\n                    opacity=\"0.701565\"\n                    filter=\"url(#filter-25)\"\n                    transform=\"translate(196.5, 73.5) scale(-1, 1) translate(-196.5, -73.5)\"\n                    cx=\"196.5\"\n                    cy=\"73.5\"\n                    r=\"2.9\"\n                  ></circle>\n                  <circle\n                    fill=\"#00FFF4\"\n                    opacity=\"0.701565\"\n                    filter=\"url(#filter-26)\"\n                    transform=\"translate(213.5, 73.5) scale(-1, 1) translate(-213.5, -73.5)\"\n                    cx=\"213.5\"\n                    cy=\"73.5\"\n                    r=\"3.5\"\n                  ></circle>\n                  <g filter=\"url(#filter-28)\">\n                    <use\n                      fill=\"url(#linearGradient-12)\"\n                      xmlnsXlink=\"#path-27\"\n                    ></use>\n                    <use\n                      fill=\"url(#linearGradient-13)\"\n                      xmlnsXlink=\"#path-27\"\n                    ></use>\n                    <use\n                      fill=\"url(#linearGradient-14)\"\n                      xmlnsXlink=\"#path-27\"\n                    ></use>\n                  </g>\n                  <circle\n                    stroke=\"#00FFF4\"\n                    strokeWidth=\"0.96\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-29)\"\n                    cx=\"656\"\n                    cy=\"41\"\n                    r=\"2.52\"\n                  ></circle>\n                  <circle\n                    fill=\"#00FFF4\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-30)\"\n                    cx=\"669\"\n                    cy=\"41\"\n                    r=\"3\"\n                  ></circle>\n                  <circle\n                    fill=\"#00FFF4\"\n                    opacity=\"0.7\"\n                    filter=\"url(#filter-31)\"\n                    cx=\"643\"\n                    cy=\"41\"\n                    r=\"3\"\n                  ></circle>\n                  <path\n                    d=\"M234.294118,13 L202.423191,61 L194.393605,61 L226.264531,13 L234.294118,13 Z M246.617647,13 L214.746721,61 L206.717134,61 L238.58806,13 L246.617647,13 Z M258.941176,13 L227.07025,61 L219.040664,61 L250.91159,13 L258.941176,13 Z M271.264706,13 L239.39378,61 L231.364193,61 L263.235119,13 L271.264706,13 Z M197.323529,13 L165.452603,61 L157.423017,61 L189.293943,13 L197.323529,13 Z M209.647059,13 L177.776133,61 L169.746546,61 L201.617472,13 L209.647059,13 Z M221.970588,13 L190.099662,61 L182.070075,61 L213.941002,13 L221.970588,13 Z M283.588235,13 L251.717309,61 L243.687722,61 L275.558649,13 L283.588235,13 Z M295.911765,13 L264.040839,61 L256.011252,61 L287.882178,13 L295.911765,13 Z M308.235294,13 L276.364368,61 L268.334781,61 L300.205707,13 L308.235294,13 Z M320.558824,13 L288.687897,61 L280.658311,61 L312.529237,13 L320.558824,13 Z M185,13 L153.129074,61 L145.099487,61 L176.970413,13 L185,13 Z M369.852941,13 L337.982015,61 L329.952428,61 L361.823354,13 L369.852941,13 Z M382.176471,13 L350.305544,61 L342.275958,61 L374.146884,13 L382.176471,13 Z M394.5,13 L362.629074,61 L354.599487,61 L386.470413,13 L394.5,13 Z M406.823529,13 L374.952603,61 L366.923017,61 L398.793943,13 L406.823529,13 Z M332.882353,13 L301.011427,61 L292.98184,61 L324.852766,13 L332.882353,13 Z M345.205882,13 L313.334956,61 L305.305369,61 L337.176296,13 L345.205882,13 Z M357.529412,13 L325.658486,61 L317.628899,61 L349.499825,13 L357.529412,13 Z M419.147059,13 L387.276133,61 L379.246546,61 L411.117472,13 L419.147059,13 Z M431.470588,13 L399.599662,61 L391.570075,61 L423.441002,13 L431.470588,13 Z M443.794118,13 L411.923191,61 L403.893605,61 L435.764531,13 L443.794118,13 Z M456.117647,13 L424.246721,61 L416.217134,61 L448.08806,13 L456.117647,13 Z M567.029412,13 L535.158486,61 L527.128899,61 L558.999825,13 L567.029412,13 Z M579.352941,13 L547.482015,61 L539.452428,61 L571.323354,13 L579.352941,13 Z M591.676471,13 L559.805544,61 L551.775958,61 L583.646884,13 L591.676471,13 Z M530.058824,13 L498.187897,61 L490.158311,61 L522.029237,13 L530.058824,13 Z M542.382353,13 L510.511427,61 L502.48184,61 L534.352766,13 L542.382353,13 Z M554.705882,13 L522.834956,61 L514.805369,61 L546.676296,13 L554.705882,13 Z M604,13 L572.129074,61 L564.099487,61 L595.970413,13 L604,13 Z M468.441176,13 L436.57025,61 L428.540664,61 L460.41159,13 L468.441176,13 Z M480.764706,13 L448.89378,61 L440.864193,61 L472.735119,13 L480.764706,13 Z M493.088235,13 L461.217309,61 L453.187722,61 L485.058649,13 L493.088235,13 Z M505.411765,13 L473.540839,61 L465.511252,61 L497.382178,13 L505.411765,13 Z M517.735294,13 L485.864368,61 L477.834781,61 L509.705707,13 L517.735294,13 Z\"\n                    fill=\"url(#linearGradient-20)\"\n                    filter=\"url(#filter-32)\"\n                    transform=\"translate(374.5497, 37) scale(-1, 1) translate(-374.5497, -37)\"\n                  ></path>\n                  <g>\n                    <use\n                      fill=\"url(#linearGradient-33)\"\n                      xmlnsXlink=\"#path-36\"\n                    ></use>\n                    <use\n                      fill=\"url(#linearGradient-34)\"\n                      xmlnsXlink=\"#path-36\"\n                    ></use>\n                    <use\n                      fill=\"url(#linearGradient-35)\"\n                      xmlnsXlink=\"#path-36\"\n                    ></use>\n                  </g>\n                  <polyline\n                    stroke=\"url(#linearGradient-37)\"\n                    strokeWidth=\"2\"\n                    points=\"0 3 693.992217 3 737.384066 68.1665155 1181 68.1665155 1226.26962 3 1920 3\"\n                  ></polyline>\n                  <line\n                    x1=\"696\"\n                    y1=\"67.495\"\n                    x2=\"1184.5\"\n                    y2=\"67.5\"\n                    stroke=\"url(#linearGradient-38)\"\n                    strokeWidth=\"5\"\n                    transform=\"translate(940.5, 67) scale(-1, 1) translate(-940.5, -67)\"\n                  ></line>\n                </g>\n              </g>\n            </g>\n          </svg>\n        )}\n        <div className=\"text-container\">\n          <div className={`title-text ${type}Text`}>{text}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { TopTitleBar };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport styleText from \"./styles.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\ninterface LightsComponentTitleProps {\n  componentTitle: string;\n  theme: \"light\" | \"dark\";\n}\n/**\n * 构件 `data-view.lights-component-title`\n * @author astrid\n * @category big-screen-content\n */\n\nexport\n@defineElement(\"data-view.lights-component-title\", {\n  styleTexts: [styleText],\n})\nclass LightsComponentTitle\n  extends ReactNextElement\n  implements LightsComponentTitleProps\n{\n  /**\n   * 组件标题\n   * @default -\n   */\n  @property()\n  accessor componentTitle: string;\n  /**\n   * @default\n   * @required\n   * @description\n   */\n  @property()\n  accessor theme: \"light\" | \"dark\";\n  render() {\n    return (\n      <LightsComponentTitleComponent\n        componentTitle={this.componentTitle}\n        theme={this.theme}\n      />\n    );\n  }\n}\nexport function LightsComponentTitleComponent(\n  props: LightsComponentTitleProps\n) {\n  const { componentTitle, theme = \"light\" } = props;\n  return (\n    <div className=\"wrapper\">\n      <div className={theme === \"dark\" ? \"darkContent\" : \"lightContent\"}>\n        {theme === \"light\" && <div className=\"lightIcon\"></div>}\n        {theme === \"dark\" && <div className=\"darkIcon\"></div>}\n        <div className={theme === \"dark\" ? \"darkTitle\" : \"lightTitle\"}>\n          {componentTitle}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport styleText from \"./styles.shadow.css\";\nimport variablesStyleText from \"../data-view-variables.shadow.css\";\n\nexport type buttonType =\n  | \"default\"\n  | \"parallelogram\"\n  | \"stereoscopic\"\n  | \"shading\"\n  | \"round\";\n\nexport interface HiTechButtonProps {\n  type?: buttonType;\n  disabled?: boolean;\n  buttonStyle?: React.CSSProperties;\n}\n\nconst { defineElement, property } = createDecorators();\n\n/**\n * 大屏按钮\n * @author jiezhou\n * @slot - 按钮内容\n */\n@defineElement(\"data-view.hi-tech-button\", {\n  styleTexts: [variablesStyleText, styleText],\n})\nclass HiTechButton extends ReactNextElement implements HiTechButtonProps {\n  /** 按钮类型 */\n  @property() accessor type: buttonType | undefined;\n\n  /**\n   * 按钮样式\n   * @group other\n   */\n  @property({ attribute: false }) accessor buttonStyle:\n    | React.CSSProperties\n    | undefined;\n\n  /**\n   * 是否禁用\n   * @default false\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor disabled: boolean | undefined;\n\n  render() {\n    return (\n      <HiTechButtonComponent\n        type={this.type}\n        buttonStyle={this.buttonStyle}\n        disabled={this.disabled}\n      />\n    );\n  }\n}\n\nexport function HiTechButtonComponent({\n  type = \"default\",\n  buttonStyle,\n  disabled,\n}: HiTechButtonProps) {\n  const button = useMemo(\n    () => (\n      <button\n        disabled={disabled}\n        className={`buttonWrapper ${type}`}\n        style={buttonStyle}\n      >\n        <div className=\"button-container\">\n          <slot />\n        </div>\n      </button>\n    ),\n    [type]\n  );\n\n  return button;\n}\n\nexport { HiTechButton };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\n\nconst { defineElement } = createDecorators();\n\n/**\n * 大屏框架构件-网格纹\n * @author jiezhou\n * @slot - 页面内容\n * @category big-screen-layout\n */\nexport\n@defineElement(\"data-view.tech-mesh-base-view\", {\n  styleTexts: [styleText],\n})\nclass TechMeshBaseView extends ReactNextElement {\n  render() {\n    return <TechMeshBaseViewComponent />;\n  }\n}\n\nexport function TechMeshBaseViewComponent() {\n  return (\n    <div className=\"layout-wrapper\">\n      <div>\n        <slot name=\"titleBar\" />\n      </div>\n      <div className=\"contentWrapper\">\n        <slot name=\"content\" />\n      </div>\n    </div>\n  );\n}\n","import React, { CSSProperties } from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\nimport classNames from \"classnames\";\n\nconst { defineElement, property } = createDecorators();\n\ninterface descriptionListItem {\n  key: string;\n  value: string;\n}\nexport interface SimpleCardItemProps {\n  cardTitle: string;\n  description: string;\n  status?: \"normal\" | \"warning\";\n  titleStyle?: CSSProperties;\n  desStyle?: CSSProperties;\n  color?: CSSProperties[\"color\"];\n  background?: CSSProperties[\"background\"];\n  descriptionList?: descriptionListItem[];\n}\n\n/**\n * 基础卡片项\n * @author astrid\n * @category big-screen-content\n */\nexport\n@defineElement(\"data-view.simple-card-item\", {\n  styleTexts: [styleText],\n})\nclass SimpleCardItem extends ReactNextElement {\n  /**\n   * 状态\n   */\n  @property()\n  accessor status: \"normal\" | \"warning\" = \"normal\";\n\n  /**\n   *  标题\n   */\n  @property()\n  accessor cardTitle: string;\n\n  /**\n   * 标题样式\n   */\n  @property({ attribute: false })\n  accessor titleStyle: CSSProperties;\n\n  /**\n   * 描述\n   */\n  @property()\n  accessor description: string;\n\n  /**\n   * 字体颜色\n   */\n  @property({ attribute: false })\n  accessor color: CSSProperties[\"color\"];\n\n  /**\n   * 描述样式\n   */\n  @property({ attribute: false })\n  accessor desStyle: CSSProperties;\n\n  /**\n   * 描述列表\n   */\n  @property({ attribute: false })\n  accessor descriptionList: descriptionListItem[];\n\n  /**\n   * 背景颜色\n   */\n  @property({ attribute: false })\n  accessor background: React.CSSProperties[\"background\"];\n  render() {\n    return (\n      <SimpleCardItemComponent\n        cardTitle={this.cardTitle}\n        description={this.description}\n        titleStyle={this.titleStyle}\n        desStyle={this.desStyle}\n        status={this.status}\n        background={this.background}\n        color={this.color}\n        descriptionList={this.descriptionList}\n      />\n    );\n  }\n}\n\nexport function SimpleCardItemComponent(props: SimpleCardItemProps) {\n  const { status, cardTitle, description, background, color, descriptionList } =\n    props;\n  return (\n    <div\n      className={classNames(\n        \"card-item-container\",\n        status && `status-${status}`\n      )}\n      style={{\n        background,\n        color,\n      }}\n    >\n      <div className=\"card-item\">\n        <div className=\"card-item-text-container\">\n          {cardTitle && (\n            <div className=\"card-item-title\" style={props.titleStyle}>\n              {cardTitle}\n            </div>\n          )}\n          {description && (\n            <div className=\"card-item-description\" style={props.desStyle}>\n              {description}\n            </div>\n          )}\n          {!!descriptionList?.length && (\n            <div className=\"card-item-description-list\">\n              {descriptionList.map((item, index) => (\n                <div key={index}>\n                  <span>{item.key}：</span>\n                  <span>{item.value}</span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\nimport { isNumber, isNil } from \"lodash\";\n\nconst { defineElement, property } = createDecorators();\n\n/**\n * 基础指标组构件\n * @category big-screen-content\n */\ninterface BasicIndexGroupProps {\n  width?: number;\n  gap?: number;\n  itemList: ItemProps[];\n  layout?: string;\n}\nexport interface ItemProps {\n  title: string;\n  number: number;\n  // 内置四种图标，如果配置了，则imgSrc无效。如果不设置type，则不显示图标，需要配置imgSrc\n  type?: \"host\" | \"cloud\" | \"network\" | \"database\";\n  imgSrc?: string;\n  description?: string;\n  trendIcon?: \"up\" | \"down\";\n}\n\n/**\n * 基础指标组构件\n * @author annzhang\n */\n@defineElement(\"data-view.basic-index-group\", {\n  styleTexts: [styleText],\n})\nclass BasicIndexGroup extends ReactNextElement {\n  /**\n   * 指标组的数据源\n   * @required true\n   */\n  @property({\n    attribute: false,\n  })\n  accessor itemList: ItemProps[];\n  /**\n   * 容器组宽度\n   */\n  @property({\n    attribute: false,\n  })\n  accessor width: number;\n  /**\n   * 指标卡片之间的间距\n   * @default 30\n   */\n  @property({\n    attribute: false,\n  })\n  accessor gap: number;\n  /**\n   * 布局,左右或上下两种形式\n   * @default `left-right`\n   */\n  @property({\n    attribute: false,\n  })\n  accessor layout: string;\n  render() {\n    return (\n      <BasicIndexGroupComponent\n        width={this.width}\n        itemList={this.itemList}\n        gap={this.gap}\n        layout={this.layout}\n      />\n    );\n  }\n}\n\nfunction BasicIndexGroupComponent(props: BasicIndexGroupProps) {\n  const { itemList, width, gap, layout } = props;\n  const groupStyle = {\n    ...(width ? { width: `${width}px` } : {}),\n    ...{ gap: gap ? `${gap}px` : \"30px\" },\n  };\n\n  return (\n    <div className=\"groupWrapper\" style={groupStyle}>\n      {itemList?.map((item: Record<string, any>, index: number) => {\n        return (\n          <div\n            key={index}\n            className={`cardWrapper ${\n              layout === \"top-bottom\" ? \"topBottomWrapper\" : \"leftRightWrapper\"\n            } ${isNil(item.description) ? \"thinCard\" : \"\"}`}\n          >\n            <div\n              className={`iconWrapper ${item.type ?? \"\"}`}\n              style={\n                item.imgSrc ? { backgroundImage: `url(${item.imgSrc})` } : {}\n              }\n            ></div>\n            <div\n              className={`contentWrapper ${\n                isNil(item.description) || layout === \"top-bottom\"\n                  ? \"noDescription\"\n                  : \"hasDescription\"\n              }`}\n            >\n              <div className=\"titleWrapper\">{item.title}</div>\n              <div className=\"numberWrapper\">{item.number}</div>\n              {!isNil(item.description) && layout !== \"top-bottom\" && (\n                <div className=\"descriptionWrapper\">\n                  {!!item.trendIcon && (\n                    <span className={`trendIcon ${item.trendIcon}`}></span>\n                  )}\n                  <span className=\"descriptionText\">{item.description}</span>\n                </div>\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport { BasicIndexGroup };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\nexport interface DataDisplayFlipperProps {\n  flipperTitle?: string;\n  data: number | string;\n  unit: string;\n  flipperStyle?: React.CSSProperties;\n  enableTitlePrefix?: boolean;\n  showDefaultPrefix?: boolean;\n  separator?: string;\n}\n\n/**\n * 翻牌器-type-3\n * @author jiezhou\n * @category big-screen-content\n */\n@defineElement(\"data-view.data-display-flipper\", {\n  styleTexts: [styleText],\n})\nclass DataDisplayFlipper\n  extends ReactNextElement\n  implements DataDisplayFlipperProps\n{\n  /** 翻牌器标题 */\n  @property() accessor flipperTitle: string;\n\n  /**\n   * 翻牌器样式\n   * @group other\n   */\n  @property({ attribute: false }) accessor flipperStyle:\n    | React.CSSProperties\n    | undefined;\n\n  /**\n   * 翻牌器数值\n   */\n  @property({ attribute: false })\n  accessor data: number | string;\n\n  /**\n   * 翻牌器单位\n   */\n  @property({ attribute: false })\n  accessor unit: string;\n\n  /**\n   * 是否启用标题前缀插槽\n   * @default false\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor enableTitlePrefix: boolean | undefined;\n\n  /**\n   * 标题是否展示默认前缀图片\n   * @default true\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor showDefaultPrefix: boolean | undefined;\n\n  /**\n   * 翻牌器数字和单位之间的分隔符\n   */\n  @property({ attribute: false })\n  accessor separator: string;\n\n  render() {\n    return (\n      <DataDisplayFlipperComponent\n        flipperTitle={this.flipperTitle}\n        flipperStyle={this.flipperStyle}\n        data={this.data}\n        unit={this.unit}\n        enableTitlePrefix={this.enableTitlePrefix}\n        showDefaultPrefix={this.showDefaultPrefix}\n        separator={this.separator}\n      />\n    );\n  }\n}\n\nexport function DataDisplayFlipperComponent(props: DataDisplayFlipperProps) {\n  const {\n    flipperTitle,\n    data,\n    unit,\n    flipperStyle,\n    enableTitlePrefix,\n    showDefaultPrefix = true,\n    separator,\n  } = props;\n  return (\n    <div className=\"flipperWrapper\" style={{ ...flipperStyle }}>\n      <div>\n        {\n          <div className=\"prefix\">\n            {enableTitlePrefix && <slot name=\"titlePrefix\" />}\n            {!enableTitlePrefix && showDefaultPrefix && (\n              <div className=\"default-title-prefix\" />\n            )}\n          </div>\n        }\n      </div>\n      <div>\n        <div className=\"title-wrapper\">\n          <div className=\"title-content\">\n            <span className=\"title\">{flipperTitle}</span>\n          </div>\n        </div>\n        <div\n          className=\"data-wrapper\"\n          style={\n            showDefaultPrefix || enableTitlePrefix ? { marginTop: 40 } : {}\n          }\n        >\n          <div className=\"data-content\">\n            <div className=\"data\">{data?.toLocaleString()}</div>\n            <div className=\"unit\">\n              {separator ?? \"/\"}\n              {unit}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { DataDisplayFlipper };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\nexport interface DataDisplayFlipperFifthProps {\n  flipperTitle?: string;\n  data: number | string;\n  unit: string;\n  flipperStyle?: React.CSSProperties;\n  enableTitlePrefix?: boolean;\n  showDefaultPrefix?: boolean;\n}\n\n/**\n * 翻牌器-type-5\n * @category big-screen-content\n */\n@defineElement(\"data-view.data-display-flipper-fifth\", {\n  styleTexts: [styleText],\n})\nclass DataDisplayFlipperFifth\n  extends ReactNextElement\n  implements DataDisplayFlipperFifthProps\n{\n  /** 翻牌器标题 */\n  @property() accessor flipperTitle: string;\n\n  /**\n   * 翻牌器样式\n   * @group other\n   */\n  @property({ attribute: false }) accessor flipperStyle:\n    | React.CSSProperties\n    | undefined;\n\n  /**\n   * 翻牌器数值\n   */\n  @property({ attribute: false })\n  accessor data: number | string;\n\n  /**\n   * 翻牌器单位\n   */\n  @property({ attribute: false })\n  accessor unit: string;\n\n  /**\n   * 是否启用标题前缀插槽\n   * @default false\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor enableTitlePrefix: boolean | undefined;\n\n  /**\n   * 标题是否展示默认前缀图片\n   * @default true\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor showDefaultPrefix: boolean | undefined;\n\n  render() {\n    return (\n      <DataDisplayFlipperFifthFifthComponent\n        flipperTitle={this.flipperTitle}\n        flipperStyle={this.flipperStyle}\n        data={this.data}\n        unit={this.unit}\n        enableTitlePrefix={this.enableTitlePrefix}\n        showDefaultPrefix={this.showDefaultPrefix}\n      />\n    );\n  }\n}\n\nexport function DataDisplayFlipperFifthFifthComponent(\n  props: DataDisplayFlipperFifthProps\n) {\n  const {\n    flipperTitle,\n    data,\n    unit,\n    flipperStyle,\n    enableTitlePrefix,\n    showDefaultPrefix = true,\n  } = props;\n  return (\n    <div className=\"flipperWrapper\" style={{ ...flipperStyle }}>\n      <div className=\"title-wrapper\">\n        <div className=\"title-content\">\n          <div className=\"prefix\">\n            {enableTitlePrefix && <slot name=\"titlePrefix\" />}\n            {!enableTitlePrefix && showDefaultPrefix && (\n              <div className=\"default-title-prefix\" />\n            )}\n          </div>\n          <span className=\"title\">{flipperTitle}</span>\n        </div>\n      </div>\n      <div className=\"data-wrapper\">\n        <div className=\"data-content\">\n          <div className=\"data\">{data?.toLocaleString()}</div>\n          <div className=\"unit\">{unit}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { DataDisplayFlipperFifth };\n","import React from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\n\nconst { defineElement, property } = createDecorators();\n\nexport interface DataDisplayFlipperSixthProps {\n  flipperTitle?: string;\n  data: number | string;\n  flipperStyle?: React.CSSProperties;\n}\n\n/**\n * 翻牌器-type-6\n * @author jiezhou\n * @category big-screen-content\n */\n@defineElement(\"data-view.data-display-flipper-sixth\", {\n  styleTexts: [styleText],\n})\nclass DataDisplayFlipperSixth\n  extends ReactNextElement\n  implements DataDisplayFlipperSixthProps\n{\n  /** 翻牌器标题 */\n  @property() accessor flipperTitle: string;\n\n  /**\n   * 翻牌器样式\n   * @group other\n   */\n  @property({ attribute: false }) accessor flipperStyle:\n    | React.CSSProperties\n    | undefined;\n\n  /**\n   * 翻牌器数值\n   */\n  @property({ attribute: false })\n  accessor data: number | string;\n\n  render() {\n    return (\n      <DataDisplayFlipperSixthComponent\n        flipperTitle={this.flipperTitle}\n        flipperStyle={this.flipperStyle}\n        data={this.data}\n      />\n    );\n  }\n}\n\nexport function DataDisplayFlipperSixthComponent(\n  props: DataDisplayFlipperSixthProps\n) {\n  const { flipperTitle, data, flipperStyle } = props;\n  return (\n    <div className=\"flipperWrapper\" style={{ ...flipperStyle }}>\n      <div className=\"title-wrapper\">\n        <div className=\"title-content\">\n          <span className=\"title\">{flipperTitle}</span>\n        </div>\n      </div>\n      <div className=\"data-wrapper\">\n        <div className=\"data-content\">\n          <div className=\"data\">{data?.toLocaleString()}</div>\n        </div>\n      </div>\n      <div className=\"flipperBg\"></div>\n    </div>\n  );\n}\n\nexport { DataDisplayFlipperSixth };\n","import React, { useMemo } from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\nimport classnames from \"classnames\";\nimport blockUrl from \"../asset/images/block.png\";\n\nconst { defineElement, property } = createDecorators();\n\n/**\n * 指标卡片\n * @author alexchen\n * @category big-screen-content\n */\nexport\n@defineElement(\"data-view.indicator-card\", {\n  styleTexts: [styleText],\n})\nclass IndicatorCard extends ReactNextElement {\n  /**\n   * 展示类型，  `column`类型为上下三行、`row`类型为左右两行模式\n   * @default `column`\n   */\n  @property({ attribute: false })\n  accessor layout: Layout = \"column\";\n\n  /**\n   * 数据源\n   * @default `[]`\n   */\n  @property({ attribute: false })\n  accessor datasource: Datasource[] = [];\n\n  render() {\n    return (\n      <IndicatorCardComponent\n        datasource={this.datasource}\n        layout={this.layout}\n      />\n    );\n  }\n}\n\nexport type Layout = \"column\" | \"column-townhouse\" | \"row\" | \"row-townhouse\";\nexport interface Datasource {\n  value: any;\n  desc: string;\n  unit?: string;\n}\nexport interface IndicatorCardComponentProps {\n  datasource: Datasource[];\n  layout?: Layout;\n}\nexport function IndicatorCardComponent({\n  datasource,\n  layout,\n}: IndicatorCardComponentProps) {\n  const renderColumnView = useMemo(() => {\n    return datasource.map((data, index) => (\n      <div key={index} className={classnames(\"col-wrapper flex flex-col\")}>\n        <div className={\"col-value\"}>{data.value}</div>\n        <div className={\"col-desc\"}>{data.desc}</div>\n        <div className={\"col-unit\"}>{data.unit}</div>\n      </div>\n    ));\n  }, [datasource]);\n\n  const renderRowView = useMemo(() => {\n    return datasource.map((data, index) => (\n      <div key={index} className={\"row-wrapper flex flex-row\"}>\n        <div className={\"row-left\"}>\n          <img src={blockUrl} />\n        </div>\n        <div className={\"row-right flex flex-col\"}>\n          <div className={\"row-desc\"}>{data.desc}</div>\n          <div className={\"row-value\"}> {data.value}</div>\n        </div>\n      </div>\n    ));\n  }, [datasource]);\n\n  return (\n    <div\n      className={classnames(\"container flex flex-row \", {\n        townhouse: layout === \"column-townhouse\" || layout === \"row-townhouse\",\n      })}\n    >\n      {layout.includes(\"row\") ? renderRowView : renderColumnView}\n    </div>\n  );\n}\n\n// Nth Fibonacci number\n","import React, { useEffect, useState, CSSProperties } from \"react\";\nimport { createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\n\nimport { maxBy } from \"lodash\";\nimport { useResizeObserver } from \"../hooks/index.js\";\n\nconst { defineElement, property } = createDecorators();\n\n/**\n * 构件 `data-view.progress-bar-list`\n */\nexport\n@defineElement(\"data-view.progress-bar-list\", {\n  styleTexts: [styleText],\n})\nclass ProgressBarList extends ReactNextElement {\n  /**\n   * @default\n   * @required\n   * @description 数据\n   */\n  @property({\n    attribute: false,\n  })\n  accessor dataSource: Data[];\n  render() {\n    return <ProgressBarListComponent dataSource={this.dataSource} />;\n  }\n}\n\nexport interface ProgressBarListProps {\n  dataSource: Data[];\n  // Define props here.\n}\ninterface Data {\n  title: string;\n  count: number;\n  loopBackground?: CSSProperties[\"background\"];\n  barBackground?: CSSProperties[\"background\"];\n}\nexport function ProgressBarListComponent(props: ProgressBarListProps) {\n  const { dataSource = [] } = props;\n  const [barWidth, setBarWidth] = useState<number>();\n  const [list, setList] = useState<(Data & { width: number })[]>([]);\n  const [containerRef, { clientWidth }] = useResizeObserver<HTMLDivElement>();\n  useEffect(() => {\n    const element = containerRef.current;\n    if (element) {\n      setBarWidth(clientWidth - 225);\n    }\n  }, [clientWidth]);\n  useEffect(() => {\n    if (barWidth && dataSource.length) {\n      const maxData = maxBy(dataSource, \"count\");\n      setList(\n        dataSource.map((i) => ({\n          ...i,\n          width: (barWidth * i.count) / maxData.count,\n        }))\n      );\n    }\n  }, [dataSource, barWidth]);\n  return (\n    <div className=\"container\" ref={containerRef}>\n      {list.map((i, index) => (\n        <div className=\"outermostContainer\" key={index}>\n          <div className=\"titleText\">{i.title}</div>\n          <div className=\"innerBarContainer\">\n            <div\n              className=\"barContainer\"\n              style={{\n                width: i.width,\n                left: -i.width,\n                background:\n                  i.barBackground ||\n                  \"linear-gradient( 90deg, rgba(66,130,237,0) 0%, #4282ED 100%)\",\n              }}\n            >\n              <div\n                className=\"smallLoop\"\n                style={{\n                  background: i.loopBackground || \"#4282ED\",\n                }}\n              ></div>\n\n              <div\n                style={{\n                  border: `1px solid ${i.loopBackground || \"#4282ED\"}`,\n                }}\n                className=\"bigLoop\"\n              ></div>\n            </div>\n            <div\n              className=\"barBgContent\"\n              style={{\n                width: barWidth,\n              }}\n            ></div>\n          </div>\n\n          <div className=\"countText\">{i.count}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState, CSSProperties } from \"react\";\nimport { EventEmitter, createDecorators } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport \"@next-core/theme\";\nimport styleText from \"./styles.shadow.css\";\n\nimport { Scene, PolygonLayer, LineLayer, Marker, ImageLayer } from \"@antv/l7\";\nimport { Map } from \"@antv/l7-maps\";\nimport { cloneDeep, isEmpty, isEqual, toNumber } from \"lodash\";\nimport defaultPng from \"./assets/default.png\";\nimport selectedPng from \"./assets/selected.png\";\nimport chinaPng from \"./assets/china.png\";\nimport { CHINA } from \"./map\";\n\nconst { defineElement, property, event } = createDecorators();\n\n/**\n * 构件 `data-view.china-map-chart`\n */\nexport\n@defineElement(\"data-view.china-map-chart\", {\n  styleTexts: [styleText],\n})\nclass ChinaMapChart extends ReactNextElement {\n  /**\n   * 数据源\n   */\n  @property({ attribute: false })\n  accessor dataSource: DataSource[] | undefined;\n\n  /**\n   * 数据源\n   */\n  @property({ attribute: false })\n  accessor detailContentStyle: CSSProperties | undefined;\n  /**\n   * 当提示可见性开始变化时触发\n   * @detail 当前是否可见\n   */\n  @event({ type: \"detail.open.change\" })\n  accessor #openChangeEvent!: EventEmitter<{\n    open: boolean;\n    data: Record<string, any>;\n  }>;\n  #handleOpenChange = (open: boolean, data: Record<string, any>): void => {\n    this.#openChangeEvent.emit({ open, data });\n  };\n\n  render() {\n    return (\n      <ChinaMapChartComponent\n        dataSource={this.dataSource}\n        onDetailOpenChange={this.#handleOpenChange}\n        detailContentStyle={this.detailContentStyle}\n      />\n    );\n  }\n}\ninterface DataSource {\n  city: string;\n  detailDisplayLocation: \"pageCenter\" | \"textBottom\";\n  text: string;\n  [x: string]: any;\n}\n\nexport interface ChinaMapChartProps {\n  onDetailOpenChange: (open: boolean, data: Record<string, any>) => void;\n  dataSource: DataSource[];\n  detailContentStyle?: CSSProperties;\n  // Define props here.\n}\n\nexport function ChinaMapChartComponent(props: ChinaMapChartProps) {\n  const {\n    onDetailOpenChange,\n    dataSource = [],\n    detailContentStyle = {},\n  } = props;\n  const mapRef = useRef<HTMLDivElement>();\n  const slotRef = useRef<HTMLSlotElement>();\n  const [showData, setShowData] = useState<DataSource>();\n  const showDataRef = useRef<DataSource>();\n  const [textPosition, setTextPosition] = useState<{\n    left: string;\n    top: string;\n  }>();\n\n  const textClick = (e: MouseEvent, data: any) => {\n    e.stopPropagation();\n    if (isEqual(data, showDataRef.current)) {\n      setShowData(null);\n      return;\n    }\n    setShowData(data);\n    setTextPosition({\n      left: `${toNumber((e.target as any).style.left.replace(\"px\", \"\")) + 24}px`,\n      top: `${toNumber((e.target as any).style.top.replace(\"px\", \"\")) + 28}px`,\n    });\n  };\n  useEffect(() => {\n    const scene = new Scene({\n      id: mapRef.current,\n      logoVisible: false,\n      map: new Map({\n        center: [90.268, 40.3628],\n        pitch: 35,\n        zoom: 1,\n      }),\n    });\n    scene.setMapStatus({ doubleClickZoom: false, zoomEnable: false });\n    const defaultImg = new Image();\n    defaultImg.src = defaultPng;\n\n    const selectedImg = new Image();\n    selectedImg.src = selectedPng;\n\n    scene.addImage(\"default\", defaultImg);\n    scene.addImage(\"selected\", selectedImg);\n    scene.addImage(\"chinaBg\", chinaPng);\n\n    scene.on(\"loaded\", () => {\n      const data = {\n        ...CHINA,\n        features: CHINA.features.slice(0, CHINA.features.length - 2),\n      };\n      const southSeaData = {\n        ...CHINA,\n        features: CHINA.features.slice(\n          CHINA.features.length - 2,\n          CHINA.features.length\n        ),\n      };\n      const seventhPolygonLayer = new PolygonLayer({\n        autoFit: false,\n      }).source(data);\n\n      seventhPolygonLayer\n        .shape(\"extrude\")\n        .color(\"rgba(84, 239, 241, 0.20)\")\n        .style({\n          heightfixed: true,\n          pickLight: true,\n          opacity: 1,\n          raisingHeight: -1300000,\n        });\n\n      const sixthPolygonLayer = new PolygonLayer({\n        autoFit: false,\n      }).source(data);\n\n      sixthPolygonLayer.shape(\"extrude\").color(\"rgba(14, 11, 75, 0.58)\").style({\n        heightfixed: true,\n        pickLight: true,\n        opacity: 1,\n        raisingHeight: -1100000,\n      });\n\n      const fifthPolygonLayer = new PolygonLayer({\n        autoFit: false,\n      }).source(data);\n\n      fifthPolygonLayer.shape(\"extrude\").color(\"rgba(190, 225, 226, 1)\").style({\n        heightfixed: true,\n        pickLight: true,\n        opacity: 1,\n        raisingHeight: -900000,\n      });\n      const fourthPolygonLayer = new PolygonLayer({\n        autoFit: false,\n      }).source(data);\n\n      fourthPolygonLayer.shape(\"extrude\").color(\"rgba(18, 26, 45, 1)\").style({\n        heightfixed: true,\n        pickLight: true,\n        opacity: 1,\n        raisingHeight: -700000,\n      });\n\n      const thirdPolygonLayer = new PolygonLayer({\n        autoFit: false,\n      }).source(data);\n\n      thirdPolygonLayer.shape(\"extrude\").color(\"#111D3C\").style({\n        heightfixed: true,\n        pickLight: true,\n        opacity: 1,\n        raisingHeight: -500000,\n      });\n      const secondPolygonLayer = new PolygonLayer({\n        autoFit: false,\n      }).source(data);\n\n      secondPolygonLayer.shape(\"extrude\").color(\"#121A2D\").style({\n        heightfixed: true,\n        pickLight: true,\n        opacity: 1,\n        raisingHeight: -300000,\n      });\n\n      const firstPolygonLayer = new PolygonLayer({\n        autoFit: true,\n      }).source(data);\n\n      firstPolygonLayer.shape(\"fill\").color(\"rgba(8, 77, 255, 0.60)\");\n      // .select({\n      //   color: \"rgba(177, 254, 254, 1)\",\n      // });//编排上层缩放会影响到高亮功能，还不知道怎么解决，暂时不实现。\n\n      const chinaImgLayer = new ImageLayer({\n        autoFit: false,\n        zIndex: 1,\n      }).source(chinaPng, {\n        parser: {\n          type: \"image\",\n          extent: [73.33, 17.9, 134.85, 53.73],\n        },\n      });\n\n      chinaImgLayer.shape(\"img\").style({\n        opacity: 1,\n      });\n\n      const fourthLineLayer = new LineLayer()\n        .source(data)\n        .shape(\"line\")\n        .color(\"rgba(43, 100, 255, 1)\")\n        .size(1)\n        .style({\n          raisingHeight: -1600000,\n        });\n\n      const thirdLineLayer = new LineLayer()\n        .source(data)\n        .shape(\"line\")\n        .color(\"rgba(84, 239, 241, 1)\")\n        .size(1)\n        .style({\n          raisingHeight: -1200000,\n        });\n\n      const secondLineLayer = new LineLayer()\n        .source(data)\n        .shape(\"line\")\n        .color(\"rgba(43, 100, 255, 1)\")\n        .size(1)\n        .style({\n          raisingHeight: -600000,\n        });\n\n      const firstLineLayer = new LineLayer({ zIndex: 2 })\n        .source(data)\n        .shape(\"line\")\n        .color(\"#3DC6FF\")\n        .size(1)\n        .style({\n          raisingHeight: 0,\n        })\n        .scale(\"density\", {\n          type: \"quantile\",\n        });\n\n      // const hightLayer = new LineLayer({\n      //   zIndex: 10, // 设置显示层级\n      //   name: \"hightlight\",\n      // })\n      //   .source({\n      //     type: \"FeatureCollection\",\n      //     features: [],\n      //   })\n      //   .shape(\"line\")\n      //   .size(2)\n      //   .color(\"rgba(177, 254, 254, 1)\")\n      //   .style({\n      //     opacity: 1,\n      //   });\n      // const hightPolygonLayer = new PolygonLayer({zIndex: 10})\n      //   .source({\n      //     type: \"FeatureCollection\",\n      //     features: [],\n      //   })\n      //   .shape(\"fill\")\n      //   .color(\"rgba(177, 254, 254, 1)\")\n      //   .style({\n      //     heightfixed: true,\n      //     pickLight: true,\n      //     opacity: 1,\n      //     raisingHeight: 0,\n      //   }); //自定义选择高亮\n\n      scene.addLayer(seventhPolygonLayer);\n      scene.addLayer(sixthPolygonLayer);\n      scene.addLayer(fifthPolygonLayer);\n      scene.addLayer(fourthPolygonLayer);\n      scene.addLayer(thirdPolygonLayer);\n      scene.addLayer(secondPolygonLayer);\n      scene.addLayer(chinaImgLayer);\n      // scene.addLayer(hightLayer);\n      // scene.addLayer(hightPolygonLayer);\n      scene.addLayer(firstPolygonLayer);\n\n      scene.addLayer(fourthLineLayer);\n      scene.addLayer(thirdLineLayer);\n      scene.addLayer(secondLineLayer);\n      scene.addLayer(firstLineLayer);\n\n      // firstPolygonLayer.on(\"click\", (e) => {\n      //   const { feature } = e;\n      //   hightPolygonLayer.setData({\n      //     type: \"FeatureCollection\",\n      //     features: [feature],\n      //   });\n      //   hightLayer.setData({\n      //     type: \"FeatureCollection\",\n      //     features: [feature],\n      //   });\n      // });\n\n      const southSeaPolygonLayer = new PolygonLayer({\n        autoFit: false,\n      }).source(southSeaData);\n\n      southSeaPolygonLayer.shape(\"fill\").color(\"black\");\n\n      const southSeaLineLayer = new LineLayer({ zIndex: 2 })\n        .source(southSeaData)\n        .shape(\"line\")\n        .color(\"rgba(30, 144, 255, 1)\")\n        .size(0.5)\n        .style({\n          raisingHeight: 0,\n        })\n        .scale(\"density\", {\n          type: \"quantile\",\n        });\n      scene.addLayer(southSeaPolygonLayer);\n      scene.addLayer(southSeaLineLayer);\n\n      dataSource.map((i) => {\n        const el = document.createElement(\"div\");\n        let classNameText = \"text\";\n        el.textContent = i.text;\n        const city = data.features.find((f) =>\n          f.properties.name.includes(i.city)\n        );\n        //先手动调整位置，缓解重叠的问题\n        if (\n          [\n            \"410000\",\n            \"820000\",\n            \"140000\",\n            \"110000\",\n            \"420000\",\n            \"430000\",\n            \"450000\",\n            \"500000\",\n            \"520000\",\n            \"530000\",\n            \"510000\",\n            \"610000\",\n            \"640000\",\n            \"150000\",\n            \"630000\",\n            \"540000\",\n            \"340000\",\n          ].includes(city.id)\n        ) {\n          classNameText = `${classNameText} leftText`;\n          i.isLeftOffset = true;\n        }\n        if (\n          [\n            \"620000\",\n            \"640000\",\n            \"450000\",\n            \"440000\",\n            \"120000\",\n            \"340000\",\n            \"510000\",\n            \"150000\",\n            \"320000\",\n          ].includes(city.id)\n        ) {\n          classNameText = `${classNameText} topText`;\n          i.isTopOffset = true;\n        }\n        el.className = classNameText;\n\n        el.onclick = (e) => {\n          i.width = el.getBoundingClientRect().width;\n          textClick(e, i);\n        };\n\n        const imgEl = document.createElement(\"img\");\n        imgEl.src = defaultPng;\n        imgEl.className = \"iconImg\";\n\n        const center = city.properties.center;\n        let lat = center[1];\n        if (\n          [\n            \"530000\",\n            \"520000\",\n            \"430000\",\n            \"360000\",\n            \"330000\",\n            \"610000\",\n            \"370000\",\n            \"130000\",\n          ].includes(city.id)\n        ) {\n          lat -= 1;\n        }\n\n        const marker = new Marker({\n          element: el,\n        }).setLnglat({ lng: center[0], lat });\n        const imgMarker = new Marker({\n          element: imgEl,\n        }).setLnglat({ lng: center[0], lat });\n        scene.addMarker(marker);\n        scene.addMarker(imgMarker);\n      });\n    });\n\n    return () => {\n      scene.destroy();\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleClick = (e: MouseEvent) => {\n      if (slotRef.current && e.composedPath().includes(slotRef.current)) return;\n      setShowData(null);\n    };\n    document?.addEventListener(\"click\", handleClick);\n    return () => {\n      document?.removeEventListener(\"click\", handleClick);\n    };\n  }, []);\n\n  useEffect(() => {\n    showDataRef.current = cloneDeep(showData);\n    onDetailOpenChange(!isEmpty(showData), showData);\n  }, [showData]);\n  return (\n    <div>\n      <div id=\"map\" ref={mapRef} className=\"map\"></div>\n      {showData && (\n        <div\n          className=\"detailContent\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          style={{\n            ...(showData.detailDisplayLocation === \"textBottom\"\n              ? {\n                  left: textPosition.left,\n                  top: textPosition.top,\n                  transform: `translate(${showData.isLeftOffset ? -showData.width : 0}px, ${showData.isTopOffset ? -50 : -40}px)`,\n                }\n              : {\n                  transform: \"translate(-50%, 0%)\",\n                  top: \"50%\",\n                  left: \"50%\",\n                }),\n            ...detailContentStyle,\n          }}\n        >\n          <slot name=\"detail\" ref={slotRef}></slot>\n        </div>\n      )}\n    </div>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../asset/images/host.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../asset/images/cloud.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"../asset/images/network.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"../asset/images/database.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(\"../asset/images/arrow-up.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_5___ = new URL(\"../asset/images/arrow-down.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}.groupWrapper{display:flex;flex-wrap:wrap}.cardWrapper.topBottomWrapper{width:96px;text-align:center}.cardWrapper.topBottomWrapper .contentWrapper{margin-top:-10px}.cardWrapper.leftRightWrapper{width:220px}.cardWrapper.leftRightWrapper.thinCard{width:165px}.cardWrapper.leftRightWrapper{display:flex}.cardWrapper.leftRightWrapper .contentWrapper{margin-left:5px}.cardWrapper .iconWrapper{width:96px;height:85px}.host:is(.cardWrapper .iconWrapper){background:url(${___CSS_LOADER_URL_REPLACEMENT_0___}) no-repeat}.cloud:is(.cardWrapper .iconWrapper){background:url(${___CSS_LOADER_URL_REPLACEMENT_1___}) no-repeat}.network:is(.cardWrapper .iconWrapper){background:url(${___CSS_LOADER_URL_REPLACEMENT_2___}) no-repeat}.database:is(.cardWrapper .iconWrapper){background:url(${___CSS_LOADER_URL_REPLACEMENT_3___}) no-repeat}.hasDescription:is(.cardWrapper .contentWrapper){padding-top:5px}.hasDescription:is(.cardWrapper .contentWrapper) .titleWrapper{font-weight:600}.noDescription:is(.cardWrapper .contentWrapper){padding-top:15px}.noDescription:is(.cardWrapper .contentWrapper) .titleWrapper{font-weight:500;opacity:0.75}:is(.cardWrapper .contentWrapper) .numberWrapper{font-weight:700;font-size:24px;line-height:28px;color:#0bf9fe;text-shadow:0px 2px 6px rgba(25,0,255,0.5)}:is(:is(.cardWrapper .contentWrapper) .descriptionWrapper) .descriptionText{font-weight:400;font-size:10px}:is(:is(.cardWrapper .contentWrapper) .descriptionWrapper) .trendIcon{width:7px;height:9px;display:inline-block;margin-right:2px}.up:is(:is(:is(.cardWrapper .contentWrapper) .descriptionWrapper) .trendIcon){background:url(${___CSS_LOADER_URL_REPLACEMENT_4___}) no-repeat}.down:is(:is(:is(.cardWrapper .contentWrapper) .descriptionWrapper) .trendIcon){background:url(${___CSS_LOADER_URL_REPLACEMENT_5___}) no-repeat}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.container{position:relative;margin:auto;text-align:center;border-radius:var(--medius-border-radius)}.header{display:inline-block;width:12px;height:2px;background:#296DFF;box-shadow:0 1px 2px 0 rgba(41,109,255,0.6);border-radius:4px}.content{position:relative;background:var(--color-fill-bg-base-4);border-radius:var(--medius-border-radius);margin:auto}.word{position:absolute;left:calc(110% + 10px);top:calc(50% - 12px);width:auto;white-space:nowrap}.threshold{position:absolute;bottom:50%;left:-10%;width:120%;border-top:2px dotted rgba(255,255,255,0.4);z-index:2}.valueWrapper{position:absolute;width:100%;bottom:0;left:0;border-radius:0 0 4px 4px;z-index:1}.value{content:\"\";position:absolute;left:0;right:0;bottom:0;background:linear-gradient(180deg,#246EFF 0%,#26CE90 100%);border-radius:0 0 4px 4px;animation:run 1s linear forwards}@keyframes run{0%{height:0;border-radius:0 0 5px 5px}100%{height:100%}}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}.container{display:flex;font-size:var(--auxiliary-font-size);align-items:center;gap:10px}.icon{color:#3259ce}.message{color:var(--palette-rgba-white-7)}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block;width:100%}:host([hidden]){display:none}*,\n*::before,\n*::after{box-sizing:border-box}.container{display:flex;flex-direction:column;align-items:center;cursor:pointer;transition:opacity 0.5s}.app-title{font-size:var(--title-font-size-larger);font-weight:var(--font-weight-500);color:var(--palette-rgba-white-10);line-height:45px;margin-bottom:5px;transition:color 0.5s}.divider{width:100%;height:var(--border-width-tribble-base);background-color:#007aca;transition:background-color 0.5s}.container:hover .app-title,\n.container.status-active .app-title{color:#50ffff}.container:hover .divider,\n.container.status-active .divider{background-color:#1f7dbd}.status-faded{opacity:0.4}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.closeBtn{width:46px;height:46px;text-align:center;border:1px solid;font-size:20px;line-height:46px;cursor:pointer;border-image:linear-gradient(360deg,rgba(80,255,255,0.2),rgba(80,255,255,1)) 1 1;display:flex;justify-content:center;align-items:center;position:relative;color:#50FFFFFF}.closeBtn:before,\n.closeBtn:after{content:\"\";width:2px;height:50%;max-height:50px;background:currentColor;position:absolute}.closeBtn:before{transform:rotateZ(45deg)}.closeBtn:after{transform:rotateZ(-45deg)}.closeBtn:hover:after,\n.closeBtn:hover:before{background:var(--color-normal-text)}.closeBtn:hover{border-image:linear-gradient(360deg,rgba(255,255,255,0.2),rgba(255,255,255,1)) 1 1}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `*,\n*:after,\n*:before{box-sizing:border-box}.wrapper{width:100%;height:100%;position:relative}.container{width:100%;height:100%;border:3px solid;-webkit-backdrop-filter:blur(1px);backdrop-filter:blur(1px);display:flex;flex-direction:column;cursor:pointer;overflow:hidden}.wrapper:after,\n.wrapper:before{content:\"\";position:absolute;left:50%;border:3px solid;-webkit-backdrop-filter:blur(1px);backdrop-filter:blur(1px);transform:translateX(-50%)}.wrapper:before{width:calc(100% - 10px);height:100%;bottom:-14px;z-index:-1;opacity:0.6}.wrapper:after{width:calc(100% - 30px);height:100%;bottom:-24px;z-index:-10;opacity:0.4}.hostWrapper:before,\n.hostWrapper:after{border-image:radial-gradient(circle,rgba(55,229,252,1),#007aca) 3 3}.hostWrapper:not(:has(.item:hover)):hover:before,\n.hostWrapper.wrapper-active:before{border-image:radial-gradient(circle,rgba(55,229,252,1),#45e4ff) 3 3}.k8sWrapper:after,\n.k8sWrapper:before{border-image:radial-gradient(circle,rgba(255,102,51,1),#ff663380) 3 3}.hostContainer{background:rgba(7,4,21,0.85);-webkit-backdrop-filter:blur(1px);backdrop-filter:blur(1px);border-image:radial-gradient(circle,rgba(55,229,252,1),#007aca) 3 3}.hostContainer:not(:has(.item:hover)):hover,\n.hostContainer.container-active{border-image:radial-gradient(circle,rgba(55,229,252,1),#45e4ff) 3 3;box-shadow:inset 0 0 30px 0 #45e4ff,inset 0 0 20px 0 #45e4ff}.hostWrapper.wrapper-faded:after,\n.hostWrapper.wrapper-faded:before,\n.k8sWrapper.wrapper-faded:after,\n.k8sWrapper.wrapper-faded:before{opacity:0.1}.k8sContainer{background:rgba(7,4,21,0.8);border-image:radial-gradient(circle,rgba(255,102,51,1),#ff663399) 3 3}.k8sContainer:not(:has(.item:hover)):hover,\n.k8sContainer.container-active{box-shadow:inset 0 0 30px 0 #ff6633,inset 0 0 20px 0 #ff6633}.hostContainer.container-faded,\n.k8sContainer.container-faded{opacity:0.4}.content{flex:1;padding:20px 10px;width:100%;box-sizing:border-box;overflow:hidden;display:flex}.contentLayout{overflow:auto;height:100%}.itemContent{display:inline-block;vertical-align:middle}.item{min-width:56px;min-height:63px;max-width:118px;margin:auto}.footer{width:100%;height:57px;text-align:center;line-height:57px;font-size:var(--auxiliary-font-size);font-weight:var(--font-weight-400);color:var(--color-normal-text);position:relative;display:flex}.footerTitle{flex:1;width:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.footer:after{content:\"\";width:100%;height:100%;position:absolute;left:0;top:0;z-index:-1}.hostContainer > .footer:after{background:linear-gradient(180deg,rgba(26,103,157,0.2) 0%,#1b69a0 100%)}.k8sContainer > .footer:after{background:linear-gradient(180deg,rgba(255,102,51,0.1) 0%,rgba(255,102,51,0.55) 100%)}.hostContainer:not(:has(.item:hover)):hover > .footer:after,\n.hostContainer.container-active > .footer:after,\n.k8sContainer:not(:has(.item:hover)):hover > .footer:after,\n.k8sContainer.container-active > .footer:after{opacity:0.65}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block;width:100%}:host([hidden]){display:none}*,\n*::before,\n*::after{box-sizing:border-box}.container{display:flex;flex-direction:column;align-items:center;cursor:pointer;transition:opacity 0.5s}.image{width:100%;border:2px solid transparent}.node-title{width:100%;text-align:center;font-size:var(--normal-font-size);font-weight:var(--font-weight-400);color:var(--color-normal-text);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.type-container-group:hover .image,\n.type-container-group.status-active .image{box-shadow:inset 0 0 16px 0 #ff9900;border-color:#ff9900}.type-physical-machine:hover .image,\n.type-virtual-machine:hover .image,\n.type-physical-machine.status-active .image,\n.type-virtual-machine.status-active .image,\n.type-pod:hover .image,\n.type-type-pod.status-active .image{box-shadow:inset 0 0 16px 0 #50ffff;border-color:#50ffff}.status-faded{opacity:0.4}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `*,\n*:after,\n*:before{box-sizing:border-box}.wrapper{width:100%;height:100%}.wrapper,\n.thumbnailLayout{display:flex;justify-content:center;align-items:center}.appLayer{width:90%;margin-bottom:16px;align-self:center;pointer-events:none}.thumbnailLayout{flex-direction:column}.layout{display:flex;gap:17px;margin-top:27px;align-items:stretch}.clusterWrapper{width:100%;height:auto}.clusterContainer{width:100%;height:100%;border:3px solid;-webkit-backdrop-filter:blur(1px);backdrop-filter:blur(1px);display:flex;flex-direction:column}.clusterHostContainer{background:rgba(7,4,21,0.85);-webkit-backdrop-filter:blur(1px);backdrop-filter:blur(1px);border-image:radial-gradient(circle,rgba(55,229,252,1),#007aca) 3 3}.clusterK8sContainer{background:rgba(7,4,21,0.8);border-image:radial-gradient(circle,rgba(255,102,51,1),#ff663399) 3 3}.clusterContent{flex:1;padding:20px 10px;width:100%}.clusterContentLayout{display:grid;width:100%}.itemContent{width:118px;pointer-events:none;height:105px}.clusterTitle{width:100%;text-align:center;line-height:57px;font-size:var(--auxiliary-font-size);font-weight:var(--font-weight-400);color:var(--color-normal-text);position:relative;display:flex}.title{flex:1;width:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.clusterTitle:after{content:\"\";width:100%;height:100%;position:absolute;left:0;top:0;z-index:-1}.clusterHostContainer > .clusterTitle:after{background:linear-gradient(180deg,rgba(26,103,157,0.2) 0%,#1b69a0 100%)}.clusterK8sContainer > .clusterTitle:after{background:linear-gradient(180deg,rgba(255,102,51,0.1) 0%,rgba(255,102,51,0.55) 100%)}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:block;height:100%}:host([hidden]){display:none}*,\n*::before,\n*::after{box-sizing:border-box}.wrapper{transform-style:preserve-3d;perspective-origin:50% 50%;perspective:4000px;height:100%}.container{display:flex;position:relative;height:100%;flex-direction:column;transform-origin:50% 50%;transform:rotateX(45deg)}.app-layer{width:40%;margin-bottom:28px;align-self:center}.cluster-container{flex:1;display:grid;grid-gap:17px;height:calc(100% - 60px)}.cluster-content{display:block;height:100%;overflow:hidden}.close-button{position:absolute;top:0;right:0}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.wrapper{width:100%;position:relative}.inputWrapper{width:100%;height:32px;position:relative}input{height:100%;line-height:32px;border:none;width:100%;box-sizing:border-box;padding:0 32px;background:var(--color-fill-bg-base-1);border-radius:var(--medius-border-radius);font-size:var(--auxiliary-font-size-small);font-weight:var(--font-weight-400);color:var(--color-normal-text)}input::placeholder{color:var(--color-disabled-text);font-size:var(--auxiliary-font-size-small);font-weight:var(--font-weight-400)}input:not(:disabled):focus{border:none;outline:0}.icon{position:absolute;color:var(--color-normal-text);opacity:0.6}.searchIcon{left:10px;top:6px;font-size:16px}.clearIcon{right:10px;top:7px;font-size:14px}.dropdownWrapper{width:100%;height:336px;margin:5px 0;padding:8px 0;box-sizing:border-box;position:absolute;z-index:900;overflow:auto;background:var(--color-fill-bg-base-1);border-radius:var(--medius-border-radius);-webkit-backdrop-filter:blur(24px);backdrop-filter:blur(24px)}.emptyData{width:100%;height:100%;display:flex;justify-content:center;align-items:center;flex-direction:column;color:var(--color-disabled-text);gap:20px}.emptyData img{width:62px}.dropdownMenu{overflow-y:auto}.dropdownMenuItem{padding:6px 18px;color:var(--color-normal-text);font-size:var(--auxiliary-font-size-small);font-weight:var(--font-weight-400);display:flex;align-items:center;gap:6px;height:32px;line-height:20px;box-sizing:border-box;cursor:pointer}.menuTitle{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.menuIcon{font-size:20px}.dropdownMenuItem:hover{border-radius:var(--no-border-radius);background:var(--color-fill-bg-container-1)}.dropdownMenuItemTooltip{position:absolute;width:324px;left:-325px;top:0;background:var(--color-fill-bg-base-4);border-radius:var(--medius-border-radius)}.dropdownMenuItemTooltip:before{content:\"\";position:absolute;top:0;width:100%;height:100%;left:0;background:#282e3a linear-gradient(186deg,rgba(51,102,255,0.3) 0%,rgba(51,102,255,0) 100%);border-radius:4px;-webkit-backdrop-filter:blur(4px);backdrop-filter:blur(4px)}.useBrickWrapper{position:relative;min-height:100px;max-height:465px;overflow:auto}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../asset/images/flipper5-Bg.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../asset/images/flipper5-title-icon.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}.flipperWrapper{display:flex;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-repeat:no-repeat;background-position:center center;background-size:100% 100%;flex-flow:column;height:93px}.title-content{display:flex;align-items:center;height:32px;padding:0 7px}.prefix{margin-right:1px}.default-title-prefix{width:18.42px;height:18.42px;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_1___});background-repeat:no-repeat;background-position:center center;background-size:contain}.title{font-size:16px;font-family:PangMenZhengDao-3,PangMenZhengDao;font-weight:normal;color:#ffffff;line-height:18px}.data-content{display:flex;align-items:center;justify-content:center;padding:0px 14px 0 14px}.data{font-size:36px;font-family:Roboto-Black,Roboto;font-weight:900;color:#ffffff;line-height:42px;letter-spacing:1px}.unit{font-size:14px;font-weight:400;color:#ffffff;line-height:42px;align-self:flex-end;margin-left:12px}.data-wrapper{justify-content:center;display:flex;height:59px}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../asset/images/flipper6-Bg.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}.flipperWrapper{display:flex;flex-flow:column;min-width:134px}.title-content{display:flex;align-items:center;padding:0 7px;justify-content:center}.prefix{margin-right:1px}.title{font-size:15px;font-family:PingFangTC-Medium,PingFangTC;font-weight:500;color:#bcfeff;line-height:9px;text-shadow:0px 2px 4px rgba(0,0,0,0.5);letter-spacing:0.92px}.data-wrapper{justify-content:center;display:flex}.data-content{display:flex;justify-content:center;height:42px;align-items:end}.data{font-size:34px;font-family:Roboto-Black,Roboto;font-weight:900;color:#0bf9fe;line-height:40px;text-shadow:0px 4px 8px #076668,0px 0px 2px #ffffff;background:linear-gradient(180deg,#ebffff 0%,#9ddedf 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;margin-bottom:-10px}.flipperBg{height:73px;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-repeat:no-repeat;background-position:center center;background-size:100% 100%}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../asset/images/flipper-title-icon.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../asset/images/flipper3-Bg.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}.flipperWrapper{display:flex}.title-content{display:flex;margin-bottom:20px}.prefix{margin-right:10px}.default-title-prefix{width:23px;height:21px;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-repeat:no-repeat;background-position:center center;background-size:contain}.title{font-size:18px;font-family:SourceHanSansCN-Bold,SourceHanSansCN;font-weight:bold;color:#ffffff;line-height:18px;margin-top:3px}.data-content{position:relative;display:flex;align-items:center;justify-content:center;margin-bottom:20px;z-index:2;padding:0 32px 23px 41px}.data{font-size:39px;font-family:Roboto-Bold,Roboto;font-weight:bold;color:#66ffff;line-height:39px;-webkit-box-reflect:below -7px -webkit-linear-gradient(transparent,transparent 50%,rgba(255,255,255,0.1))}.unit{font-size:18px;font-family:SourceHanSansCN-Regular,SourceHanSansCN;font-weight:400;color:#66ffff;line-height:27px;margin-left:6px}.data-wrapper{position:relative;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_1___});background-repeat:no-repeat;background-position:center center;background-size:100% 100%;margin-left:7px;justify-content:center;display:flex;height:41px}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}*,\n*::before,\n*::after{box-sizing:border-box}.container{position:relative}.select{position:relative}.select:hover .select-selector{background:var(--color-brand)}.select-focused .select-selector{background:var(--color-brand-active)!important}.select:hover .select-clear{opacity:1}.select-focused .select-selector-item,\n.select-focused .select-selection-placeholder{color:var(--color-disabled-text)}.select.select-allow-clear:hover .select-selector-item~.select-arrow{opacity:0}.select-selector{display:flex;position:relative;width:100%;height:46px;padding:0 12px;border:var(--border-width-base) solid;border-image:linear-gradient(90deg,var(--palette-rgba-white-5),transparent,var(--palette-rgba-white-5)) 1;border-radius:var(--no-border-radius);background:var(--color-fill-bg-base-3);box-shadow:inset 0px 0px 11px 0px #3366ff;transition:all .2s cubic-bezier(.645,.045,.355,1);cursor:text}.select-selector-search{position:absolute;top:0;bottom:0;inset-inline-start:11px;inset-inline-end:29px}.select-selector-search-input{width:100%;height:calc(46px - var(--border-width-base) * 2);color:var(--color-normal-text);margin:0;padding:0;background:none;border:none;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:auto}.select-selector-search-input::-webkit-search-cancel-button{display:none;-webkit-appearance:none;appearance:none}.select-selection-placeholder,\n.select-selector-item{flex:1;padding:0;padding-inline-end:18px;line-height:calc(46px - var(--border-width-base) * 2);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:var(--auxiliary-font-size);font-weight:var(--font-weight-500)}.select-selection-placeholder{color:var(--color-normal-text);transition:color .3s;pointer-events:none}.select-selector-item{color:var(--color-normal-text);position:relative;-webkit-user-select:none;user-select:none;transition:color .3s;font-weight:400}.select-arrow,\n.select-clear{margin-top:-6px;position:absolute;top:50%;inset-inline-start:auto;inset-inline-end:11px;text-align:center;font-size:12px;line-height:1;width:12px;height:12px;-webkit-user-select:none;user-select:none}.select-arrow{pointer-events:none;transition:opacity .3s ease}.select-clear{opacity:0;z-index:1;transition:color .2s ease,opacity .3s ease;cursor:pointer}.ant-select-suffix{display:inline-block;width:100%;height:100%;line-height:1}.search-icon{color:var(--color-disabled-text)}.down-icon,\n.clear-icon{color:var(--color-auxiliary-text)}.select-dropdown{position:absolute;bottom:50px;width:100%;border-radius:var(--no-border-radius);background:rgba(var(--palette-tech-blue-6-channel),.4);box-shadow:inset 0px 0px 11px 0px #1861D6;-webkit-backdrop-filter:blur(3px);backdrop-filter:blur(3px)}.dropdown-list{max-height:160px;padding:8px 0;overflow-y:scroll;overflow-anchor:none}.dropdown-inner{display:flex;flex-direction:column;height:36px}.select-item{display:flex;align-items:center;padding:7px;border-radius:var(--no-border-radius);cursor:pointer;transition:background 0.3s ease}.select-item:hover,\n.select-item.selected{background:var(--color-fill-bg-container-1)}.select-item-option-content{font-size:var(--auxiliary-font-size);font-weight:var(--font-weight-400);color:var(--color-normal-text);line-height:22px}.empty-state{padding:47px 0;display:flex;flex-direction:column;align-items:center}.empty-image{width:auto;height:39px;-webkit-user-select:none;user-select:none}.empty-description{margin-top:10px;color:var(--palette-rgba-white-6)}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.gaugeChartWrapper{text-align:center;background:var(--color-fill-global-bg)}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `*{width:100%;height:100%}.container{display:grid}.item{display:flex;flex-direction:column;justify-content:center;align-items:center;gap:10px}.node{animation:animateNode 0.8s linear 0.4s forwards;transform:translateY(30px) scale(1.1)}.text{animation:animateText 0.4s cubic-bezier(0.215,0.61,0.355,1) 1s forwards;opacity:0}@keyframes animateNode{0%{transform:translateY(30px) scale(1.1)}50%{transform:translateY(0px) scale(1.1)}100%{transform:translateY(0px) scale(1)}}@keyframes animateText{0%{transform:translateY(22px);opacity:0}100%{transform:translateY(0);opacity:1}}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.wrapper{position:relative}.node{position:absolute;bottom:42%;left:30%;width:40%}.wrapper img{width:100%}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.content{display:flex;justify-content:center;align-items:center;border-radius:var(--medius-border-radius);padding:4px;width:100%;position:relative;--treemap-tooltip-background:rgba(103,149,219,0.12) radial-gradient(100% 100% ellipse at 12px 4px,rgba(var(--palette-tech-blue-6-channel),0.3),rgba(var(--palette-tech-blue-6-channel),0));--treemap-backdrop-filter:blur(5px)}.content:before{position:absolute;content:\"\";left:0;top:0;width:100%;height:100%;clear:both;display:block;z-index:-1;background:var(--treemap-tooltip-background);-webkit-backdrop-filter:var(--treemap-backdrop-filter);backdrop-filter:var(--treemap-backdrop-filter);border-radius:var(--medius-border-radius)}.text,\n.symbol{font-size:var(--normal-font-size);font-weight:var(--font-weight-500);color:var(--color-auxiliary-text)}.text{word-wrap:break-word;word-break:break-all}.value{font-weight:var(--font-weight-500);font-size:var(--normal-data-font-size-larger);color:var(--color-normal-text);text-shadow:var(--text-shadow)}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.wrapper{position:relative;width:100%;height:100%;display:flex;justify-content:center;align-items:center}.mask{position:absolute;width:40%;height:10%;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(41,109,255,0.8);opacity:0.29;filter:blur(80px)}.animateLine{stroke-dasharray:500,1000;stroke-dashoffset:500;animation:animate 2s linear 1.4s infinite;animation-fill-mode:both}.delay{stroke-dasharray:500,1000;stroke-dashoffset:500;animation:delay 2s linear 3.9s infinite;animation-fill-mode:both}@keyframes animate{to{stroke-dasharray:500,1000;stroke-dashoffset:-1000}}@keyframes delay{to{stroke-dasharray:500,1000;stroke-dashoffset:-1000}}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../asset/images/normalButton.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../asset/images/parallelogramButton.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"../asset/images/stereoscopicButton.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"../asset/images/shadingButton.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(\"../asset/images/roundButton.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}.buttonWrapper{position:relative;display:flex;justify-content:center;cursor:pointer;align-items:center;background:transparent;border:none}.default{min-width:388px;height:128px;background:url(${___CSS_LOADER_URL_REPLACEMENT_0___}) no-repeat}.parallelogram{min-width:430px;height:119px;background:url(${___CSS_LOADER_URL_REPLACEMENT_1___}) no-repeat}.stereoscopic{min-width:366px;height:150px;background:url(${___CSS_LOADER_URL_REPLACEMENT_2___}) no-repeat}.shading{min-width:362px;height:119px;background:url(${___CSS_LOADER_URL_REPLACEMENT_3___}) no-repeat}.round{height:116px;min-width:338px;background:url(${___CSS_LOADER_URL_REPLACEMENT_4___}) no-repeat}.buttonBg{position:absolute}.button-container{overflow:hidden;white-space:nowrap;padding:0 30px;z-index:0;display:flex;align-items:center;font-size:32px;font-weight:normal;color:var(--button-text-color);line-height:38px;letter-spacing:2px;background:linear-gradient(180deg,#fdfdfd 0%,#91a6d5 61%,#ecf4ff 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../asset/images/rowBg.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../asset/images/divider.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"../asset/images/colBg.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}.container{gap:8px}.flex{display:flex}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.col-wrapper{padding:9px 21px 7px;text-align:center;background:url(${___CSS_LOADER_URL_REPLACEMENT_0___}) center bottom repeat-x rgba(28,58,117,0.2);border-top:1px solid;border-image:radial-gradient(circle,rgb(0,149,255),rgba(0,149,255,0)) 2 /1 /0 stretch}.townhouse{gap:0}.townhouse .col-wrapper{background:none;padding:9px 25px 7px}:is(.townhouse .col-wrapper):not(:last-child){border-right:1px solid;border-image:url(${___CSS_LOADER_URL_REPLACEMENT_1___}) 2 /1 /0 stretch;background:none}:is(.townhouse .col-wrapper):last-child{border:none}.townhouse .row-wrapper{background:none;padding:10px 18px}.col-value{font-size:20px;font-weight:bold;color:#0bf9fe;line-height:24px}.col-desc{font-size:12px;font-weight:400;color:rgba(255,255,255,1);line-height:18px}.col-unit{font-size:10px;font-weight:400;color:rgba(255,255,255,0.65);line-height:14px}.row-left img{width:100%;position:relative;top:-7px}.row-right{text-align:left}.row-wrapper{padding:10px 14px;gap:11px;background:url(${___CSS_LOADER_URL_REPLACEMENT_2___}) center bottom repeat-x rgba(28,58,117,0.2)}.row-desc{font-size:14px;font-weight:500;color:#ffffff;line-height:9px;color:rgba(255,255,255,0.8)}.row-value{font-size:24px;font-weight:900;color:#ffffff;line-height:28px;padding-top:8px}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../asset/images/lightBg.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../asset/images/darkBg.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"../asset/images/darkIcon.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"../asset/images/lightIcon.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host([hidden]){display:none}.wrapper{position:relative;height:38px}.backgroundSvg{position:absolute}.darkBgSvg{position:absolute;top:13px;left:30px}.lightContent{display:flex;gap:16px;align-items:center;position:relative;z-index:1;height:100%;padding:0 12px;background:url(${___CSS_LOADER_URL_REPLACEMENT_0___}) no-repeat}.lightTitle{font-size:20px;color:#fffdfc;letter-spacing:4px;line-height:1em;font-weight:500;text-shadow:3px 0 8px #178afe;flex:1}.darkContent{display:flex;gap:30px;position:relative;z-index:1;height:100%;background:url(${___CSS_LOADER_URL_REPLACEMENT_1___}) no-repeat 30px 13px}.darkTitle{font-size:21px;color:#F8F4DF;letter-spacing:4px;font-weight:500;text-shadow:3px 0 8px #178afe;flex:1}.darkIcon{width:30px;height:23px;margin-top:8px;margin-left:2px;background:url(${___CSS_LOADER_URL_REPLACEMENT_2___}) no-repeat center}.lightIcon{width:24px;height:24px;background:url(${___CSS_LOADER_URL_REPLACEMENT_3___}) no-repeat center}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.wrapper{position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:1001;background:var(--color-fill-global-bg);display:flex;justify-content:center;align-items:center}.wrapper:before{content:\"\";position:absolute;width:100%;height:100%;display:block;opacity:0.35;background:radial-gradient(#3366FF 0%,rgba(51,102,255,0) 100%)}.titleWrapper{transform:translate(-50px,0)}.title{color:var(--color-normal-text);font-size:46px}.description{color:var(--color-secondary-text);font-size:16px;letter-spacing:3px}.progress{font-size:100px;color:rgba(51,102,255,0.5);position:absolute;z-index:-1;left:calc(50% - 80px)}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.wrapper{position:relative;height:34px}.left-slash-component{position:absolute;top:0;left:0;transform:rotate(-40deg)}.right-slash-component{position:absolute;top:0;right:0;transform:rotate(40deg)}.bottom-line{position:absolute;top:32px;height:2px;border-radius:1px}.title-wrapper{display:flex;align-items:center}.title-text-container{display:flex}.title-text{font-size:var(--title-font-size);font-weight:var(--font-weight-500);line-height:25px;color:var(--color-normal-text);text-shadow:var(--text-shadow)}.slash-component-wrapper{position:relative;transform-origin:10px 10px}.circle{width:20px;height:20px;border-radius:50%;border:var(--border-width-base) solid var(--color-border-divider-line)}.blue-slash{position:absolute;top:10px;left:8px;width:4px;height:26px;background-color:var(--color-brand)}.gray-slash{position:absolute;top:10px;left:9px;width:2px;height:29px;border-radius:1px;background-color:var(--color-text-divider-line-1)}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.wrapper{height:82px;position:relative;display:flex;justify-content:center}.svg{position:absolute}.background-container{width:100%;height:100%;position:absolute;background:var(--color-fill-bg-base-5);clip-path:polygon(0 0,0 58px,36.25% 58px,38.75% 80px,61.25% 80px,63.75% 58px,100% 58px,100% 0)}.left-round{position:absolute;width:144px;height:144px;border-radius:50%;left:37.5%;transform:translateX(-50%);background:radial-gradient(closest-side,rgba(var(--palette-tech-blue-6-channel),100%),rgba(var(--palette-tech-blue-6-channel),0%));opacity:0.4}.right-round{position:absolute;width:144px;height:144px;border-radius:50%;left:62.5%;transform:translateX(-50%);background:radial-gradient(closest-side,rgba(var(--palette-sea-green-4-channel),100%),rgba(var(--palette-sea-green-4-channel),0%));opacity:0.3}.text-container{z-index:0;display:flex;flex-direction:column;align-items:center}.title-text{margin-top:20px;font-size:var(--title-font-size-larger);font-weight:var(--font-weight-600);color:var(--color-header-text-big);letter-spacing:2px;line-height:1em;text-shadow:0px 2px 2px rgba(114,81,230,0.7)}.description{margin-top:6px;font-size:var(--auxiliary-font-size-small);font-weight:var(--font-weight-500);color:var(--color-secondary-text);line-height:14px}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.animation-wrapper{width:125px;height:125px;position:relative;overflow-y:hidden}.particle-wrapper{position:absolute;overflow-y:hidden}.particle{position:absolute;filter:blur(0.5px);border-radius:4px 4px 10px 10px;animation:animParticle 1.2s linear infinite;opacity:1}.delay{position:absolute;filter:blur(0.5px);border-radius:2px 2px 10px 10px;animation:animParticle 1.2s linear 0.5s infinite;opacity:1}.circle-container{width:100%;height:100%;position:absolute}.circle{background:currentColor;filter:blur(1px);border-radius:50%;position:absolute;mix-blend-mode:screen}.circle-container > .circle:nth-child(1){width:2px;height:2px;left:25%;bottom:10%;animation:circle-move-1 1.2s linear infinite}.circle-container > .circle:nth-child(2){width:3px;height:3px;left:30%;bottom:20%;animation:circle-move-2 2s linear infinite}.circle-container > .circle:nth-child(3){width:4px;height:4px;left:20%;bottom:30%;animation:circle-move-3 1.4s linear infinite}.circle-container > .circle:nth-child(4){width:2px;height:2px;left:40%;bottom:25%;animation:circle-move-4 1.5s linear infinite}.circle-container > .circle:nth-child(5){width:3px;height:3px;left:55%;bottom:30%;animation:circle-move-5 1.2s linear infinite}.circle-container > .circle:nth-child(6){width:2px;height:2px;left:60%;bottom:18%;animation:circle-move-6 1.8s linear infinite}.circle-container > .circle:nth-child(7){width:3px;height:3px;left:68%;bottom:10%;animation:circle-move-7 2s linear infinite}.circle-container > .circle:nth-child(8){width:4px;height:4px;left:76%;bottom:15%;animation:circle-move-8 1.8s linear infinite}@keyframes animParticle{0%{bottom:0;opacity:1}25%{bottom:50%;opacity:0.7}50%{bottom:75%;opacity:0.5}75%{bottom:100%;opacity:0.3}100%{bottom:125%;opacity:0.1}}@keyframes circle-move-1{from{bottom:10%}to{bottom:120%}}@keyframes circle-move-2{from{bottom:20%}to{bottom:120%}}@keyframes circle-move-3{from{bottom:30%}to{bottom:120%}}@keyframes circle-move-4{from{bottom:25%}to{bottom:145%}}@keyframes circle-move-5{from{bottom:30%}to{bottom:150%}}@keyframes circle-move-6{from{bottom:60%}to{bottom:180%}}@keyframes circle-move-7{from{bottom:10%}to{bottom:110%}}@keyframes circle-move-8{from{bottom:18%}to{bottom:120%}}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:flex}:host([hidden]){display:none}.countText{width:100px;margin-left:9px;color:#8fabbf;font-size:12px;word-break:break-all}.barBgContent{position:absolute;background:rgba(83,105,128,0.15);top:8px;height:6px}.bigLoop{position:absolute;right:-7.5px;top:-8px;border-radius:50%;width:20px;height:20px;animation:scale 2s infinite}.smallLoop{width:8px;height:8px;border-radius:50%;position:absolute;right:-1px;top:-1px}.barContainer{position:absolute;min-width:14px;top:8px;animation:move 2s linear forwards;height:6px}.container{width:100%;min-width:300px;display:grid}.outermostContainer{display:flex;align-items:center;flex-flow:row wrap;min-height:22px}.titleText{width:100px;text-align:end;color:#8fabbf;font-size:12px;margin-right:9px;word-break:break-all}.innerBarContainer{position:relative;overflow-y:auto;overflow-x:hidden;min-height:22px;flex:1 1 0}@keyframes move{to{left:0%}}@keyframes scale{from{transform:scale(0.5)}to{transform:scale(1)}}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.radarWrap{position:relative;width:100%;height:100%}.radarWrap .canvasWrap{display:block;width:100%;height:100%}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../asset/images/alertBg.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}.card-item-container{position:relative;width:100%;height:100%}.card-item-container.status-normal{background:linear-gradient(180deg,#f5f5f5 0%,#f5f7f9 100%)}.card-item-container.status-warning{background:linear-gradient(180deg,#ff4949 0%,#ff9560 100%)}.card-item-container.status-warning:after{content:\"\";position:absolute;display:block;width:100%;height:100%;background:url(${___CSS_LOADER_URL_REPLACEMENT_0___}) 0 0 no-repeat;background-size:100% 100%;top:0;left:0}.status-normal:hover{box-shadow:0 0 32px 0 rgba(0,62,179,0.24);border:2px solid #fff}.status-warning:hover{box-shadow:0 0 4px 0 rgba(242,76,37,0.5);border:2px solid #fff}.card-item-text-container{padding:22px 14px 0}.card-item-title{font-size:16px;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;font-weight:var(--font-weight-500);border-color:transparent;transition:border-color 0.5s;margin-bottom:4px}.card-item-description{font-size:12px;font-weight:var(--font-weight-400);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;-webkit-line-clamp:2;-webkit-box-orient:vertical}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.drawerWrapper{position:fixed;right:0;top:0;height:100vh;z-index:1000}.drawerWrapper.open,\n.drawerWrapper.close{transition:transform 0.3s cubic-bezier(0.7,0.3,0.1,1),box-shadow 0.3s cubic-bezier(0.7,0.3,0.1,1)}.drawerBody{display:flex;min-width:200px;height:100%;background:var(--color-fill-global-bg)}.drawerWrapper.open{transform:translate(0,0)}.drawerWrapper.close{transform:translateX(100%)}.drawerBodyHidden{display:none}.menuWrapper{position:relative;width:46px;height:100%;background:var(--color-fill-bg-base-1)}.menuMask{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(41,109,255,0.8);opacity:0.1;filter:blur(50px);pointer-events:none}.closeIconBtn{position:absolute;top:50%;left:-17px;width:17px;height:40px;background:linear-gradient(180deg,#232431 0%,#15191F 53%,#232431 100%);display:flex;justify-content:center;align-items:center;border-radius:4px 0 0 4px}.closeIconBtn:hover{background:#3B3C4F}.closeIcon{width:3px;height:11px;border-left:2px solid var(--color-normal-text);border-right:2px solid var(--color-normal-text)}.menuIconItem{width:100%;height:46px;text-align:center;line-height:46px;color:var(--color-normal-text);background:rgba(25,26,34,0);opacity:0.4;position:relative}.menuIconItem:hover{opacity:0.8}.menuIconItem.active{background:var(--color-fill-global-bg);opacity:1}.menuIconItemHover:hover  > .menuIconTooltip{display:block}.menuIconTooltip{display:none;position:absolute;right:55px;top:7px;line-height:20px;padding:8px 15px 8px 8px;font-size:var(--chart-tooltips-font-size-2);color:var(--color-normal-text);width:auto;white-space:nowrap;--treemap-tooltip-background:rgba(103,149,219,0.12) radial-gradient(100% 100% ellipse at 12px 4px,rgba(var(--palette-tech-blue-6-channel),0.3),rgba(var(--palette-tech-blue-6-channel),0));--treemap-backdrop-filter:blur(5px);z-index:0}.menuIconTooltip:before,\n.menuIconTooltip:after{content:\"\";clear:both;position:absolute;display:block;left:0;right:0;top:0;bottom:0;z-index:-1;background:var(--treemap-tooltip-background);-webkit-backdrop-filter:var(--treemap-backdrop-filter);backdrop-filter:var(--treemap-backdrop-filter)}.menuIconTooltip::before{clip-path:inset(0 7px 0 0 round var(--medius-border-radius))}.menuIconTooltip::after{clip-path:polygon(calc(100% - 7px) calc(50% - 7px),100% 50%,calc(100% - 7px) calc(50% + 7px))}.content{flex:1}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.header{height:180px;position:relative;width:100%}.svg{position:absolute;z-index:0}.toolbar{height:30px;display:flex;justify-content:space-between;align-items:center;padding:0 10px;position:relative}.toolbar,\n.titleWrapper,\n.tabWrapper,\n.text-container{position:relative;z-index:1}.titleWrapper{display:flex;justify-content:center;align-items:center}.tabWrapper{display:grid;grid-template-columns:repeat(3,1fr)}.tabLeft,\n.tabRight{padding-top:16px;height:36px;display:flex;flex-wrap:nowrap;justify-content:center;align-items:center}.tabRight{padding-left:10%}.tabLeft{padding-right:10%}.tabItem{flex:1;display:inline-flex;justify-content:center;align-items:center;text-align:center}.text{font-size:var(--auxiliary-font-size);color:var(--color-disabled-text);padding:0 20px;cursor:pointer}.text.active{color:#ffffffd9;position:relative}.text.active:after{content:\"\";width:100%;display:block;position:absolute;left:0;bottom:-6px;border-top:2px solid;border-image:linear-gradient(90deg,rgba(14,95,255,0),rgba(14,95,255,1),rgba(14,95,255,1),rgba(14,95,255,0)) 2 2}.content{margin-top:-36px}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../asset/images/mesh-layout-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../asset/images/mesh-layout-right.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"../asset/images/mesh-layout-bottom.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"../asset/images/mesh-layout-center.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:block}:host([hidden]){display:none}.layout-wrapper{width:100%;height:100%;display:flex;flex-flow:column;justify-content:space-between;align-items:space-between;background:#050c27;position:absolute}.contentWrapper{width:calc(100% - 30px);margin:0 15px;flex:auto;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___}),url(${___CSS_LOADER_URL_REPLACEMENT_1___}),url(${___CSS_LOADER_URL_REPLACEMENT_2___}),url(${___CSS_LOADER_URL_REPLACEMENT_3___});background-repeat:no-repeat;background-position:left center,right center,center bottom,bottom;background-size:contain,auto,auto,cover}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:host{display:inline-block}:host([hidden]){display:none}.content{position:relative;display:flex;justify-content:center;align-items:center}.title{letter-spacing:17px;font-weight:var(--font-weight-500);font-size:42px;line-height:42px}.stroke-filter{position:absolute;color:#cbcaf3}.stroke-shadow{position:absolute;color:rgba(0,255,255,0.5);text-shadow:0 4px 10px #04183e,0 1px 3px rgba(0,255,255,0.5)}.stroke-text{position:relative;background:linear-gradient(180deg,#ffffff 0%,#cbcaf3 100%);-webkit-background-clip:text;-webkit-text-fill-color:transparent;color:transparent;background-clip:text}.normal-text{color:var(--color-normal-text)}.gradient-text{position:relative;background:linear-gradient(180deg,#ffffff 0%,#a1c5ff 100%);-webkit-background-clip:text;-webkit-text-fill-color:transparent;color:#ffffff;background-clip:text}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.wrapper{position:relative;display:flex;justify-content:center}.normalWrapper{height:164px}.sampleWrapper{height:90px}.squareWrapper{height:90px}.svg{position:absolute}.text-container{z-index:0;display:flex;flex-direction:column;align-items:center}.title-text{font-size:42px;font-weight:normal;color:var(--palette-rgba-white-10)}.normalText{margin-top:82px;letter-spacing:15px}.sampleText{letter-spacing:10px;position:relative;background:linear-gradient(180deg,#ffffff 0%,#a1c5ff 100%);-webkit-background-clip:text;-webkit-text-fill-color:transparent;color:var(--palette-rgba-white-10);background-clip:text}.squareText{margin-top:8px;letter-spacing:9px;font-size:36px}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n"],"names":["defineElement","property","createDecorators","_AppWallCardItem","_A","WeakMap","_B","_C","AppWallCardItem","ReactNextElement","constructor","arguments","_classPrivateFieldInitSpec","_init_status","_init_extra_status","_init_cardTitle","_init_extra_cardTitle","_init_description","_init_extra_description","status","_classPrivateFieldGet","v","_classPrivateFieldSet","cardTitle","description","render","React","AppWallCardItemElement","this","props","className","classNames","_AppWallCardItem2","e","c","_initClass","_applyDecs","styleTexts","variablesStyleText","styleText","_AppWallRelationLine","AppWallRelationLine","_init_lightColor","_init_extra_lightColor","lightColor","AppWallRelationLineElement","_AppWallRelationLine2","event","WrappedIcon","wrapBrick","_SystemCard","_D","_E","_F","_SystemCard_brand","WeakSet","SystemCard","_classPrivateMethodInitSpec","_init_itemList","_init_extra_itemList","_init_buttonName","_init_extra_buttonName","_init_containerStyle","_init_extra_containerStyle","_init_onClickEvent","_defineProperty","_init_extra_onClickEvent","_classPrivateGetter","_get_onClickEvent","emit","itemList","buttonName","containerStyle","SystemCardComponent","handleClick","descriptionRef","useRef","useEffect","_descriptionRef$curre","_descriptionRef$curre2","current","scrollTo","call","style","title","length","ref","map","item","index","key","value","onClick","lib","icon","theme","_SystemCard2","_set_onClickEvent","attribute","type","o","_","has","_checkInRHS","_GaugeChart","GaugeChart","_init_radius","_init_extra_radius","_init_strokeWidth","_init_extra_strokeWidth","_init_value","_init_extra_value","_init_fontSize","_init_extra_fontSize","radius","strokeWidth","fontSize","GaugeChartComponent","x","setX","useState","y","setY","calculateXy","deg","r","tanQ","Math","tan","PI","abs","sqrt","path","useMemo","angle","initAngle","timer","window","setInterval","clearInterval","location","_path","i","location1","location2","transform","width","height","circleR","round","innerStrokeRadius","version","xmlns","viewBox","id","offset","stopColor","dx","dy","stdDeviation","floodColor","d","stroke","fill","cx","cy","textAnchor","fontWeight","filter","opacity","_GaugeChart2","Number","_ModernStyleComponent","ModernStyleComponentTitle","_init_hideLeftComponent","_init_extra_hideLeftComponent","_init_hideRightComponent","_init_extra_hideRightComponent","_init_componentTitle","_init_extra_componentTitle","_init_titleTextStyle","_init_extra_titleTextStyle","_init_squareColor","_init_extra_squareColor","hideLeftComponent","hideRightComponent","componentTitle","titleTextStyle","squareColor","ModernStyleComponentTitleElement","SlashComponent","useCallback","_ref","backgroundColor","left","right","backgroundImage","justifyContent","name","marginLeft","marginRight","flexDirection","_ModernStyleComponentTitle","Boolean","_ModernStylePageTitle","ModernStylePageTitle","_init_pageTitle","_init_extra_pageTitle","_init_backgroundStyle","_init_extra_backgroundStyle","_init_leftRoundStyle","_init_extra_leftRoundStyle","_init_rightRoundStyle","_init_extra_rightRoundStyle","pageTitle","backgroundStyle","leftRoundStyle","rightRoundStyle","ModernStylePageTitleElement","preserveAspectRatio","x1","y1","x2","y2","stopOpacity","_ModernStylePageTitle2","method","_TabsDrawer","_G","_H","_TabsDrawer_brand","_I","_J","_handleTabChange","_handleDrawerOpen","_handleDrawerClose","TabsDrawer","_initProto","_init_tabList","_init_extra_tabList","_init_activeKey","_init_extra_activeKey","_init_width","_init_extra_width","_init_drawerStyle","_init_extra_drawerStyle","_init_bodyStyle","_init_extra_bodyStyle","_init_zIndex","_init_extra_zIndex","_init_visible","_init_extra_visible","_init_drawerOpenEvent","_init_extra_drawerOpenEvent","_init_drawerCloseEvent","_init_extra_drawerCloseEvent","_init_tabChangeEvent","_init_extra_tabChangeEvent","activeKey","_get_tabChangeEvent","visible","_get_drawerOpenEvent","_get_drawerCloseEvent","tabList","drawerStyle","bodyStyle","zIndex","open","close","TabsDrawerComponent","onClose","onOpen","onTabChange","contentRef","containerRef","setActiveKey","composedPath","some","ele","_contentSlot","_slotElement","querySelectorAll","forEach","slot","hidden","setActiveItem","document","addEventListener","removeEventListener","menuElement","menuIconItemHover","tooltip","active","_TabsDrawer2","_set_drawerOpenEvent","_set_drawerCloseEvent","_set_tabChangeEvent","TailTypes","_ModernStyleTreemap","_ModernStyleTreemap_brand","_handleClick","ModernStyleTreemap","_init_data","_init_extra_data","_init_tail","_init_extra_tail","_init_leafUseBrick","_init_extra_leafUseBrick","_init_leafContainerStyle","_init_extra_leafContainerStyle","_init_tooltipUseBrick","_init_extra_tooltipUseBrick","_init_tooltipStyle","_init_extra_tooltipStyle","data","tail","leafUseBrick","leafContainerStyle","tooltipUseBrick","tooltipStyle","ModernStyleTreemapElement","_ModernStyleTreemap2","tailMap","treemapBinary","treemapDice","treemapResquarify","treemapSlice","treemapSliceDice","treemapSquarify","wrapperRef","clientWidth","wrapperWidth","clientHeight","wrapperHeight","useResizeObserver","tooltipRef","tooltipHeight","mouseData","setMouseData","clientX","clientY","tooltipPosition","setTooltipPosition","tooltipTransform","wrapperClientRect","getBoundingClientRect","widthScale","heightScale","scaledLeft","placement","scaledTop","top","bottom","topOrBottom","hierarchyNode","hierarchy","sum","sort","a","b","tm","treemap","tile","size","padding","leaves","leavesMap","_leaves","keyBy","leavesNode","y0","x0","useBrick","ReactUseMultipleBricks","curTooltipData","handleMouseMove","debounceByAnimationFrame","curLeaf","target","closest","curName","getAttribute","pre","onMouseMove","onMouseEnter","visibility","onMouseLeave","bottomRight","bottomLeft","topLeft","topRight","_BatteryChart","BatteryChart","_init_batteryWidth","_init_extra_batteryWidth","_init_batteryHeight","_init_extra_batteryHeight","_init_thresholdColors","_init_extra_thresholdColors","_init_thresholdValue","_init_extra_thresholdValue","batteryWidth","batteryHeight","thresholdColors","thresholdValue","BatteryChartComponent","defaultThresholdColors","color","startValue","endValue","headerColor","calculationRatio","lastThreshold","proportion","currentThreshold","find","threshold","thresholdValueLineHeight","isFullMarks","background","boxShadow","borderRadius","_BatteryChart2","_DropdownMenu","_DropdownMenu_brand","_handleValueChange","DropdownMenu","_init_options","_init_extra_options","_init_placeholder","_init_extra_placeholder","_init_allowClear","_init_extra_allowClear","_init_valueChange","_init_extra_valueChange","_get_valueChange","options","placeholder","allowClear","DropdownMenuElement","curElement","onChange","isDropHidden","setIsDropHidden","inputRef","inputValue","setInputValue","isInputFocused","setIsInputFocused","setValue","optionsMap","handleDocumentClick","contains","blur","filteredOptions","search","trim","toLowerCase","label","includes","focus","autoComplete","onMouseDown","preventDefault","stopPropagation","display","selected","src","emptyUrl","_DropdownMenu2","_set_valueChange","K","NS","initializeReactI18n","en","EMPTY_DATA","zh","_ComplexSearch","_ComplexSearch_brand","ComplexSearch","_init_inputChangeEvent","_init_extra_inputChangeEvent","_init_onSearchEvent","_init_extra_onSearchEvent","_init_onSelectEvent","_init_extra_onSelectEvent","_init_onFocusEvent","_init_extra_onFocusEvent","_init_onBlurEvent","_init_extra_onBlurEvent","_get_inputChangeEvent","_get_onSearchEvent","_get_onFocusEvent","_get_onBlurEvent","_get_onSelectEvent","ComplexSearchComponent","onInputChange","handleInputChange","onSearch","handleSearch","onBlur","handleBlur","onFocus","handleFocus","onSelect","handleSelect","t","useTranslation","setAllowClear","setVisible","currentData","setCurrentData","positionTop","setPositionTop","tooltipVisible","setTooltipVisible","TooltipBrick","handleValueChange","val","onKeyDown","onClearValue","option","handleMouseEnter","_extends","empty","alt","_ComplexSearch2","_set_inputChangeEvent","_set_onSearchEvent","_set_onSelectEvent","_set_onFocusEvent","_set_onBlurEvent","_LoadingPanel","_LoadingPanel_brand","LoadingPanel","_init_customTitle","_init_extra_customTitle","_init_loading","_init_extra_loading","_init_useRealTimeProgress","_init_extra_useRealTimeProgress","_init_progress","_init_extra_progress","_init_intervalTime","_init_extra_intervalTime","_init_onEndEvent","_init_extra_onEndEvent","_get_onEndEvent","customTitle","loading","useRealTimeProgress","progress","intervalTime","LoadingPanelComponent","onEnd","progressValue","setProgressValue","timerRef","prevProgress","usePrevious","getStep","curVal","start","end","ceil","step","params","time","init","intervalTimer","_LoadingPanel2","_set_onEndEvent","_ParticleAnimation","ParticleAnimation","_init_colors","_init_extra_colors","colors","ParticleAnimationComponent","randomParticleList","Array","h","w","particle","particleStyle","startColor","middleColor","endColor","circle","_ParticleAnimation2","_CabinetButton","CabinetButton","_init_buttonStyle","_init_extra_buttonStyle","buttonStyle","_CabinetButton2","imageMap","containerGroupImg","virtualMachineImg","physicalMachineImg","virtualMachineWarningImg","physicalMachineWarningImg","pod","_CabinetNode","CabinetNode","_init_type","_init_extra_type","_init_nodeTitle","_init_extra_nodeTitle","_init_isAlert","_init_extra_isAlert","nodeTitle","isAlert","CabinetNodeElement","_CabinetNode2","_CabinetAppLayer","CabinetAppLayer","_init_appTitle","_init_extra_appTitle","appTitle","CabinetAppLayerElement","_CabinetAppLayer2","WrappedNode","_CabinetContainer","_CabinetContainer_brand","CabinetContainer","_init_onHandleClick","_init_extra_onHandleClick","_init_onHandleDbClick","_init_extra_onHandleDbClick","_get_onHandleClick","_get_onHandleDbClick","CabinetContainerComponent","handleDbClick","isDbClick","binarySearch","maxSizeCol","minSizeCol","maxSizeRow","minSizeRow","maxRow","max","minRow","min","minCol","maxCol","centerCol","centerRow","needRow","col","row","layoutWidth","realWidth","realHeight","floor","maxSizeNum","minSizeNum","allNum","itemWidth","handleOnClick","clearTimeout","setTimeout","handleOnDBClick","hostWrapper","k8sWrapper","undefined","onDoubleClick","hostContainer","k8sContainer","_CabinetContainer2","_set_onHandleClick","_set_onHandleDbClick","variablesText","WrappedCabinetAppLayer","_CabinetThumbnail","CabinetThumbnail","_init_clusters","_init_extra_clusters","_init_columns","_init_extra_columns","_init_appName","_init_extra_appName","clusters","columns","appName","CabinetThumbnailComponent","layoutRef","scale","setScale","preScale","useLayoutEffect","wScale","hScale","clusterHostContainer","clusterK8sContainer","gridTemplateColumns","node","_CabinetThumbnail2","WrappedCabinetButton","WrappedCabinetContainer","_CabinetGraph","_CabinetGraph_brand","_handleCloseBtnClick","_handleDbClick","_handleActiveKeyChange","CabinetGraph","_init_dataSource","_init_extra_dataSource","_init_hiddenCloseBtn","_init_extra_hiddenCloseBtn","_init_closeBtnClickEvent","_init_extra_closeBtnClickEvent","_init_cabinetClickEvent","_init_extra_cabinetClickEvent","_init_cabinetDbClickEvent","_init_extra_cabinetDbClickEvent","_get_closeBtnClickEvent","newKey","_get_cabinetDbClickEvent","_get_cabinetClickEvent","dataSource","hiddenCloseBtn","CabinetGraphElement","onCloseBtnClick","onActiveKeyChange","activeKeys","concat","filterKeys","keys","clu","push","nodes","includeClu","clusterName","includeNode","_ref2","_CabinetGraph2","_set_closeBtnClickEvent","_set_cabinetClickEvent","_set_cabinetDbClickEvent","_AppWall","_K","_L","_AppWall_brand","_handleSystemCardButtonClick","_M","_N","_O","_P","AppWall","_init_relations","_init_extra_relations","_init_useDblclick","_init_extra_useDblclick","_init_useDistanceConfig","_init_extra_useDistanceConfig","_init_disabledDefaultClickEvent","_init_extra_disabledDefaultClickEvent","_init_cardSize","outerWidth","outerHeight","lgWidth","lgHeight","_init_extra_cardSize","_init_cardBrickName","_init_extra_cardBrickName","_init_containerId","_init_extra_containerId","_init_noRotate","_init_extra_noRotate","_init_boundMargin","_init_extra_boundMargin","_init_useSystemPopover","_init_extra_useSystemPopover","_init_systemCardButtonClickEvent","_init_extra_systemCardButtonClickEvent","_get_systemCardButtonClickEvent","_init_onLeftClickEvent","_init_extra_onLeftClickEvent","_init_onRightClickEvent","_init_extra_onRightClickEvent","_init_onDbClickEvent","_init_extra_onDbClickEvent","_get_onLeftClickEvent","_get_onRightClickEvent","_get_onDbClickEvent","relations","useDblclick","useDistanceConfig","disabledDefaultClickEvent","cardSize","cardBrickName","containerId","noRotate","boundMargin","useSystemPopover","AppWallElement","onSystemCardButtonClick","leftBtnOnClick","handleLeftClick","rightBtnOnClick","handleRightClick","handleCardDbClick","handleCardClick","_AppWall2","_set_systemCardButtonClickEvent","_set_onLeftClickEvent","_set_onRightClickEvent","_set_onDbClickEvent","dependencies","SYMBOL","_GraphText","GraphText","_init_text","_init_extra_text","text","GraphTextComponent","_GraphText2","_GraphNode","GraphNode","_init_url","_init_extra_url","url","GraphNodeComponent","baseImg","_GraphNode2","WrappedGraphNode","WrappedGraphText","_GraphLayoutGrid","GraphLayoutGrid","_init_rows","_init_extra_rows","_init_isReverse","_init_extra_isReverse","rows","isReverse","GraphLayoutGridComponent","layoutItems","items","j","curData","gridArea","_GraphLayoutGrid2","_GridBackground","GridBackground","_init_color","_init_extra_color","_init_maskStyle","_init_extra_maskStyle","_init_particleColor","_init_extra_particleColor","maskStyle","particleColor","GridBackgroundComponent","fx","fy","gradientTransform","fillRule","_GridBackground2","_GearBackground","GearBackground","GearBackgroundComponent","maskContentUnits","maskUnits","xlinkHref","attributeName","from","to","begin","dur","repeatCount","strokeLinecap","strokeLinejoin","strokeDasharray","attributeType","mask","_GearBackground2","colorMap","baseUserConfig","dataFill","fillStyle","dataCircle","strokeStyle","lineWidth","dataLine","baseRadarConfig","n","dataRadiusOfPercent","dataRadius","angleArr","tooltipsContentArr","originDataSource","drawPolygon","context","origin","ratio","save","beginPath","translate","moveTo","rotate","lineTo","closePath","lineCap","gradient","createLinearGradient","addColorStop","restore","drawGradientPolygon","startX","cos","startY","sin","endX","endY","drawCircle","originX","originY","arc","lineJoin","Radar","canvasRef","contextRef","baseConfig","setBaseConfig","userConfig","setUserConfig","devicePixelRatio","canvas","getContext","canvasWidth","canvasHeight","defaultRadius","cloneDeep","disAngle","maxValue","constructBaseConfig","merge","constructUserConfig","radiusPrecent","drawFrame","requestAnimationFrame","cancelAnimationFrame","clearRect","layer","evenFillStyle","drawRadarBackground","dataPointsPosArray","dataRadiusArr","curPoinrPos","getDataPointsPos","dataLineOptions","dataPoints","dataCircleOptions","dataFillOptions","dataPointsLen","drawDataLine","dataPointsPosArrayLen","drawDataFill","drawDataCircle","drawDataPoly","polygonOuterPointsPosArr","dotsArray","curPos","getPolygonPos","point","drawVertexLine","offsetX","offsetY","offsetEndX","_dataSource$i","_dataSource$i2","_dataSource$i3","_dataSource$i4","curPosX","curPosMiddleX","curPosEndX","curPosY","rectX","rectY","percentValue","legendSize","fillRect","textAlign","font","fillText","rectSize","_dataSource$i5","percentSize","drawLeadLineAndText","textBaseline","_RadarChart","RadarChart","_init_scale","_init_extra_scale","_init_height","_init_extra_height","_init_dataFill","_init_extra_dataFill","_init_dataCircle","_init_extra_dataCircle","_init_dataLine","_init_extra_dataLine","_RadarChart2","_TitleText","TitleText","_init_fontWeight","_init_extra_fontWeight","_init_letterSpacing","_init_extra_letterSpacing","letterSpacing","TitleTextComponent","lineHeight","_TitleText2","_BrickNotification","BrickNotification","_init_message","_init_extra_message","_init_icon","_init_extra_icon","message","BrickNotificationComponent","_BrickNotification2","_TabsPageTitle","_TabsPageTitle_brand","TabsPageTitle","TabsPageTitleComponent","curKey","setCurKey","tabElement","slice","filterUnits","in","rx","ry","_TabsPageTitle2","_TopTitleBar","TopTitleBar","TopTitleBarComponent","points","fillOpacity","xmlnsXlink","_TopTitleBar2","_LightsComponentTitle","LightsComponentTitle","_init_theme","_init_extra_theme","LightsComponentTitleComponent","_LightsComponentTitle2","_HiTechButton","HiTechButton","_init_disabled","_init_extra_disabled","disabled","HiTechButtonComponent","_HiTechButton2","_TechMeshBaseView","TechMeshBaseView","TechMeshBaseViewComponent","_TechMeshBaseView2","_SimpleCardItem","SimpleCardItem","_init_titleStyle","_init_extra_titleStyle","_init_desStyle","_init_extra_desStyle","_init_descriptionList","_init_extra_descriptionList","_init_background","_init_extra_background","titleStyle","desStyle","descriptionList","SimpleCardItemComponent","_SimpleCardItem2","_BasicIndexGroup","BasicIndexGroup","_init_gap","_init_extra_gap","_init_layout","_init_extra_layout","gap","layout","BasicIndexGroupComponent","groupStyle","isNil","imgSrc","number","trendIcon","_BasicIndexGroup2","_DataDisplayFlipper","DataDisplayFlipper","_init_flipperTitle","_init_extra_flipperTitle","_init_flipperStyle","_init_extra_flipperStyle","_init_unit","_init_extra_unit","_init_enableTitlePrefix","_init_extra_enableTitlePrefix","_init_showDefaultPrefix","_init_extra_showDefaultPrefix","_init_separator","_init_extra_separator","flipperTitle","flipperStyle","unit","enableTitlePrefix","showDefaultPrefix","separator","DataDisplayFlipperComponent","marginTop","toLocaleString","_DataDisplayFlipper2","_DataDisplayFlipperFi","DataDisplayFlipperFifth","DataDisplayFlipperFifthFifthComponent","_DataDisplayFlipperFifth","_DataDisplayFlipperSi","DataDisplayFlipperSixth","DataDisplayFlipperSixthComponent","_DataDisplayFlipperSixth","_IndicatorCard","IndicatorCard","_init_datasource","_init_extra_datasource","datasource","IndicatorCardComponent","renderColumnView","classnames","desc","renderRowView","blockUrl","townhouse","_IndicatorCard2","_ProgressBarList","ProgressBarList","ProgressBarListComponent","barWidth","setBarWidth","list","setList","maxData","maxBy","count","barBackground","loopBackground","border","_ProgressBarList2","_ChinaMapChart","_ChinaMapChart_brand","_handleOpenChange","ChinaMapChart","_init_detailContentStyle","_init_extra_detailContentStyle","_init_openChangeEvent","_init_extra_openChangeEvent","_get_openChangeEvent","detailContentStyle","ChinaMapChartComponent","onDetailOpenChange","mapRef","slotRef","showData","setShowData","showDataRef","textPosition","setTextPosition","scene","Scene","logoVisible","Map","center","pitch","zoom","setMapStatus","doubleClickZoom","zoomEnable","defaultImg","Image","defaultPng","selectedImg","selectedPng","addImage","chinaPng","on","CHINA","features","southSeaData","seventhPolygonLayer","PolygonLayer","autoFit","source","shape","heightfixed","pickLight","raisingHeight","sixthPolygonLayer","fifthPolygonLayer","fourthPolygonLayer","thirdPolygonLayer","secondPolygonLayer","firstPolygonLayer","chinaImgLayer","ImageLayer","parser","extent","fourthLineLayer","LineLayer","thirdLineLayer","secondLineLayer","firstLineLayer","addLayer","southSeaPolygonLayer","southSeaLineLayer","el","createElement","classNameText","textContent","city","f","properties","isLeftOffset","isTopOffset","onclick","textClick","isEqual","toNumber","replace","imgEl","lat","marker","Marker","element","setLnglat","lng","imgMarker","addMarker","destroy","_document","_document2","isEmpty","detailDisplayLocation","_ChinaMapChart2","_set_openChangeEvent","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_IMPORT_2___","___CSS_LOADER_URL_IMPORT_3___","___CSS_LOADER_URL_IMPORT_4___","___CSS_LOADER_URL_IMPORT_5___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","___CSS_LOADER_URL_REPLACEMENT_3___","___CSS_LOADER_URL_REPLACEMENT_4___","___CSS_LOADER_URL_REPLACEMENT_5___","module","toString"],"sourceRoot":""}
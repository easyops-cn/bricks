{"version":3,"file":"chunks/eo-table.8c9e6a7b.js","mappings":"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","sources":["webpack:///./src/table/BrickTable.tsx","webpack:///./src/table/i18n.ts","webpack:///./src/table/index.tsx","webpack:///./src/table/utils.tsx","webpack:///./src/table/table.shadow.css"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { Table, type TableProps, ConfigProvider } from \"antd\";\nimport { getCellStyle } from \"./utils.js\";\nimport { pickBy, isNil, toPath, isEqual } from \"lodash\";\nimport classNames from \"classnames\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport { CustomColumn } from \"./index.js\";\nimport { ReactUseMultipleBricks } from \"@next-core/react-runtime\";\nimport type { UseSingleBrickConf } from \"@next-core/types\";\nimport { wrapBrick } from \"@next-core/react-element\";\nimport { StyleProvider, createCache } from \"@ant-design/cssinjs\";\nimport { K, NS, locales } from \"./i18n.js\";\nimport { useTranslation, initializeReactI18n } from \"@next-core/i18n/react\";\n\nimport { i18n } from \"@next-core/i18n\";\n\nimport type { Locale } from \"antd/es/locale\";\nimport enUS from \"antd/locale/en_US.js\";\nimport zhCN from \"antd/locale/zh_CN.js\";\n\nimport type {\n  GeneralIcon,\n  GeneralIconProps,\n} from \"@next-bricks/icons/general-icon\";\ninitializeReactI18n(NS, locales);\nconst type = \"DraggableBodyRow\";\n\nconst downMenuIcon: GeneralIconProps = {\n  lib: \"antd\",\n  icon: \"down\",\n  theme: \"outlined\",\n};\n\nconst rightMenuIcon: GeneralIconProps = {\n  lib: \"antd\",\n  icon: \"right\",\n  theme: \"outlined\",\n};\n\nconst WrappedIcon = wrapBrick<GeneralIcon, GeneralIconProps>(\"eo-icon\");\n\nexport interface BrickTableProps {\n  shadowRoot: ShadowRoot | null;\n  dataSource: Record<string, any>[];\n  columns: CustomColumn[];\n  configProps?: TableProps<any>;\n  error?: any;\n  onDelete?: (index: number) => void;\n  onChange: any;\n  onSelectChange?: (selected: string[]) => void;\n  showCard?: boolean;\n  // 展开行相关属性\n  expandedRowBrick?: {\n    useBrick?: UseSingleBrickConf;\n  };\n  expandIcon?: {\n    collapsedIcon: GeneralIconProps;\n    expandedIcon: GeneralIconProps;\n  };\n  expandIconAsCell?: boolean;\n  expandIconColumnIndex?: number;\n  expandRowByClick?: boolean;\n  defaultExpandAllRows?: boolean;\n  onExpand?: (expanded: boolean, record: Record<string, any>) => void;\n  onExpandedRowsChange?: (expandedRows: React.Key[]) => void;\n  expandedRowKeys?: React.Key[];\n  rowKey?: string;\n  childrenColumnName?: string;\n  tableDraggable?: boolean;\n  onDrag?: (data: Record<string, any>[]) => void;\n  zebraPattern?: boolean;\n  scroll?: TableProps<unknown>[\"scroll\"];\n  optimizedColumns?: Array<string | number>;\n  ellipsisInfo?: boolean;\n  thTransparent?: boolean;\n  showHeader?: boolean;\n  xSmallSizeTable?: boolean;\n}\n\nconst DraggableBodyRow = ({\n  index,\n  moveRow,\n  className,\n  style,\n  ...restProps\n}: any) => {\n  const ref = React.useRef(null);\n  const [{ isOver, dropClassName }, drop] = useDrop({\n    accept: type,\n    collect: (monitor: any) => {\n      const { index: dragIndex } = monitor.getItem() || {};\n      if (dragIndex === index) {\n        return {};\n      }\n      return {\n        isOver: monitor.isOver(),\n        dropClassName:\n          dragIndex < index ? `dropOverDownward` : `dropOverUpward`,\n      };\n    },\n    drop: (item: any) => {\n      moveRow(item.index, index);\n    },\n  });\n  const [, drag] = useDrag({\n    type,\n    item: { type, index },\n    collect: (monitor: any) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  drop(drag(ref));\n  return (\n    <tr\n      ref={ref}\n      className={classNames(className, {\n        [dropClassName as string]: isOver,\n      })}\n      style={{ cursor: \"move\", ...style }}\n      {...restProps}\n    />\n  );\n};\n\nconst getCustomHeader = (\n  useBrick: UseSingleBrickConf,\n  data?: { title: unknown }\n): (() => React.ReactElement) => {\n  return function CustomHeader() {\n    return <ReactUseMultipleBricks useBrick={useBrick} data={data} />;\n  };\n};\n\ntype ItemBrickDataMap = Map<unknown, BrickData>;\ntype BrickData = {\n  cellData: unknown;\n  rowData: Record<string, unknown>;\n  columnIndex: number;\n};\n\nconst getCustomComp = (\n  useBrick: UseSingleBrickConf,\n  itemBrickDataMap?: ItemBrickDataMap\n) => {\n  return function CustomComp(\n    value: any,\n    item: Record<string, any>,\n    index: number\n  ) {\n    if (useBrick) {\n      let brickData: BrickData | undefined = itemBrickDataMap?.get(item);\n\n      if (!brickData) {\n        brickData = {\n          cellData: value,\n          rowData: item,\n          columnIndex: index,\n        };\n        itemBrickDataMap?.set(item, brickData);\n      }\n\n      return <ReactUseMultipleBricks useBrick={useBrick} data={brickData} />;\n    }\n  };\n};\n\nexport function BrickTable(props: BrickTableProps): React.ReactElement {\n  const { t } = useTranslation(NS);\n\n  const locale = (i18n.language.split(\"-\")[0] === \"zh\"\n    ? zhCN\n    : enUS) as unknown as Locale;\n  if (props.error) {\n    throw props.error;\n  }\n\n  const {\n    configProps = {\n      pagination: true,\n      sortBy: false,\n    },\n    columns,\n    rowKey = \"key\",\n    expandIconAsCell,\n    expandIconColumnIndex,\n    childrenColumnName,\n    scroll,\n    optimizedColumns,\n    onDelete, // 用于 brick form 中，will be deprecated\n    ellipsisInfo,\n    showHeader,\n  } = props;\n\n  const initData = useMemo(() => {\n    return props.dataSource?.map((item, index) =>\n      isNil(item[rowKey]) ? { ...item, [rowKey]: index } : item\n    );\n  }, [props.dataSource, rowKey]);\n\n  const [data, setData] = useState(initData);\n  const rowKeyExpandIconMapRef = useRef<Map<unknown, React.ReactNode>>(\n    new Map()\n  );\n  const columnTitleBrickDataMapRef = useRef<\n    Map<CustomColumn, { title: unknown }>\n  >(new Map());\n  const useBrickItemBrickDataMapRef = useRef<\n    Map<UseSingleBrickConf, ItemBrickDataMap>\n  >(new Map());\n  const itemExpandedRowBrickDataMapRef = useRef<Map<unknown, unknown>>(\n    new Map()\n  );\n\n  useEffect(() => {\n    itemExpandedRowBrickDataMapRef.current.clear();\n    setData(initData);\n  }, [initData]);\n\n  const expandIconColumnIndexOffset = (configProps as TableProps<any>)\n    ?.rowSelection\n    ? -1\n    : 0;\n  const customColumns = useMemo(() => {\n    if (columns) {\n      columnTitleBrickDataMapRef.current.clear();\n      useBrickItemBrickDataMapRef.current.clear();\n      const customColumns = columns.map((column, index) => {\n        const {\n          useBrick,\n          valueSuffix,\n          cellStatus,\n          cellStyle = {},\n          headerBrick,\n          colSpanKey,\n          rowSpanKey,\n          filterDropdownBrick,\n          ...columnConf\n        } = column;\n        if (headerBrick?.useBrick) {\n          const useBrick = headerBrick?.useBrick;\n          let data = columnTitleBrickDataMapRef.current.get(column);\n\n          if (!data) {\n            data = {\n              title: columnConf.title,\n            };\n            columnTitleBrickDataMapRef.current.set(column, data);\n          }\n\n          columnConf.title = getCustomHeader(\n            useBrick as UseSingleBrickConf,\n            data\n          );\n        }\n\n        if (filterDropdownBrick?.useBrick) {\n          columnConf.filterDropdown = (\n            <ReactUseMultipleBricks useBrick={filterDropdownBrick.useBrick} />\n          );\n        }\n\n        if (useBrick) {\n          let itemBrickDataMap: ItemBrickDataMap | undefined;\n\n          if (useBrick) {\n            itemBrickDataMap =\n              useBrickItemBrickDataMapRef.current.get(useBrick);\n\n            if (!itemBrickDataMap) {\n              itemBrickDataMap = new Map();\n              useBrickItemBrickDataMapRef.current.set(\n                useBrick,\n                itemBrickDataMap\n              );\n            }\n          }\n\n          columnConf.render = getCustomComp(useBrick, itemBrickDataMap);\n          // [only update when record changed](https://ant.design/components/table-cn/#%E4%B8%BA%E4%BB%80%E4%B9%88-%E6%9B%B4%E6%96%B0-state-%E4%BC%9A%E5%AF%BC%E8%87%B4%E5%85%A8%E8%A1%A8%E6%B8%B2%E6%9F%93%EF%BC%9F)\n          columnConf.shouldCellUpdate = (record: any, prevRecord: any) => {\n            return !isEqual(record, prevRecord);\n          };\n        } else if (valueSuffix) {\n          columnConf.render = (value: string) => value + valueSuffix;\n        }\n        if (\n          !expandIconAsCell &&\n          index === Number(expandIconColumnIndex) + expandIconColumnIndexOffset\n        ) {\n          const innerRender = columnConf.render;\n          columnConf.render = function ExpandIcon(\n            value: any,\n            record: any,\n            index: any\n          ) {\n            return (\n              <>\n                {!record[childrenColumnName as string] &&\n                  rowKeyExpandIconMapRef.current.get(\n                    rowKey ? record[rowKey] : record\n                  )}\n                {innerRender ? innerRender(value, record, index) : value}\n              </>\n            );\n          };\n        }\n        if (cellStatus || colSpanKey || rowSpanKey || cellStyle) {\n          const innerRender = columnConf.render;\n          columnConf.render = (value: any, item: any, index: number) => {\n            return {\n              children: innerRender ? innerRender(value, item, index) : value,\n              props: {\n                colSpan: item[colSpanKey as string],\n                rowSpan: item[rowSpanKey as string],\n                style: {\n                  ...(cellStatus ? getCellStyle(cellStatus, item, value) : {}),\n                  ...cellStyle,\n                },\n              },\n            };\n          };\n        }\n\n        if (typeof columnConf.dataIndex === \"string\") {\n          columnConf.dataIndex = toPath(columnConf.dataIndex);\n        }\n        if (columnConf.verticalAlign === \"top\") {\n          columnConf.className\n            ? (columnConf.className += \" alignTop\")\n            : (columnConf.className = \"alignTop\");\n        }\n        if (columnConf.verticalAlign === \"bottom\") {\n          columnConf.className\n            ? (columnConf.className += \" alignBottom\")\n            : (columnConf.className = \"alignBottom\");\n        }\n        if (ellipsisInfo) {\n          columnConf.className\n            ? (columnConf.className += \" ellipsisInfoCell\")\n            : (columnConf.className = \"ellipsisInfoCell\");\n        }\n        return columnConf;\n      });\n\n      return customColumns;\n    }\n  }, [\n    columns,\n    childrenColumnName,\n    expandIconAsCell,\n    expandIconColumnIndex,\n    expandIconColumnIndexOffset,\n    rowKey,\n    onDelete,\n    ellipsisInfo,\n  ]);\n\n  const expandedRowRender = (record: Record<string, any>, index: number) => {\n    let data = itemExpandedRowBrickDataMapRef.current.get(record);\n\n    if (!data) {\n      data = {\n        rowData: record,\n        rowIndex: index,\n      };\n      itemExpandedRowBrickDataMapRef.current.set(record, data);\n    }\n\n    return (\n      <ReactUseMultipleBricks\n        useBrick={props.expandedRowBrick?.useBrick as UseSingleBrickConf}\n        data={data}\n      />\n    );\n  };\n\n  const components = {\n    body: {\n      row: DraggableBodyRow,\n    },\n  };\n\n  const moveRow = (dragIndex: number, hoverIndex: number) => {\n    const dragRow = data[dragIndex];\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const newData = update(data, {\n      $splice: [\n        [dragIndex, 1],\n        [hoverIndex, 0, dragRow],\n      ],\n    });\n    setData(newData);\n    props.onDrag && props.onDrag(newData);\n  };\n\n  const onExpand = (expanded: boolean, record: Record<string, any>) => {\n    props.onExpand && props.onExpand(expanded, record);\n  };\n\n  const onExpandedRowsChange = (expandedRows: React.Key[]) => {\n    props.onExpandedRowsChange && props.onExpandedRowsChange(expandedRows);\n  };\n\n  const getCustomExpandIcon = (iconProps: any) => {\n    const { record, expandable, expanded, onExpand } = iconProps;\n    let icon = props.expandIcon?.collapsedIcon || downMenuIcon;\n    let iconNode: React.ReactNode;\n    if (expandable) {\n      if (!expanded) {\n        icon = props.expandIcon?.expandedIcon || rightMenuIcon;\n      }\n      iconNode = (\n        <span\n          className=\"expandIconSpan\"\n          data-testid=\"expand-icon\"\n          onClick={(e) => {\n            onExpand(record, e);\n          }}\n        >\n          <WrappedIcon {...(icon as GeneralIconProps)} />\n        </span>\n      );\n    } else {\n      iconNode = (\n        <span className=\"expandIconSpan\" data-testid=\"expand-icon\">\n          <span style={{ visibility: \"hidden\" }}>\n            <WrappedIcon {...(icon as GeneralIconProps)} />\n          </span>\n        </span>\n      );\n    }\n\n    if (iconNode) {\n      if (!expandIconAsCell) {\n        rowKeyExpandIconMapRef.current.set(\n          rowKey ? record[rowKey] : record,\n          iconNode\n        );\n      }\n      return iconNode;\n    } else {\n      return <></>;\n    }\n  };\n\n  const pickExpandProps = pickBy(\n    {\n      expandIconColumnIndex,\n      expandIconAsCell,\n      expandRowByClick: props.expandRowByClick,\n      expandedRowKeys: props.expandedRowKeys,\n      defaultExpandAllRows: props.defaultExpandAllRows,\n    },\n    (item) => !isNil(item)\n  );\n\n  let table = (\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    <Table\n      className={classNames(\"brickTable\", {\n        expandIconCellHidden: !expandIconAsCell,\n        customDropTable: props.tableDraggable,\n        tableThTransparent: props.thTransparent,\n        zebraPatternTable: data?.length >= 2 && props.zebraPattern,\n        xSmallSizeTable: props.xSmallSizeTable,\n      })}\n      dataSource={data}\n      {...(props.tableDraggable\n        ? {\n            components,\n            onRow: (record, index) => ({\n              index,\n              moveRow: moveRow,\n            }),\n          }\n        : {})}\n      columns={customColumns}\n      onChange={props.onChange}\n      {...(props.expandedRowBrick\n        ? {\n            expandedRowRender,\n          }\n        : {})}\n      {...pickExpandProps}\n      onExpand={onExpand}\n      showSorterTooltip={false}\n      onExpandedRowsChange={onExpandedRowsChange}\n      rowKey={rowKey}\n      childrenColumnName={childrenColumnName}\n      rowClassName={(record, index) => {\n        if (record.invalidRow) {\n          return \"invalidRow\";\n        }\n        if (record.disabledRow) {\n          return \"disabledRow\";\n        }\n        return props.zebraPattern && index % 2 ? \"brickTableOddRow\" : \"\";\n      }}\n      expandIcon={getCustomExpandIcon}\n      scroll={scroll}\n      showHeader={showHeader}\n      {...configProps}\n    />\n  );\n\n  if (props.tableDraggable) {\n    table = <DndProvider backend={HTML5Backend}>{table}</DndProvider>;\n  }\n\n  const cahce = useMemo(() => {\n    return createCache();\n  }, []);\n\n  return (\n    <ConfigProvider locale={locale}>\n      <StyleProvider container={props.shadowRoot as ShadowRoot} cache={cahce}>\n        {table}\n      </StyleProvider>\n    </ConfigProvider>\n  );\n}\n","export enum K {}\n\nconst en: Locale = {};\n\nconst zh: Locale = {};\n\nexport const NS = \"bricks/advanced/eo-table\";\n\nexport const locales = { en, zh };\n\ntype Locale = { [k in K]: string };\n","import React from \"react\";\nimport { createDecorators, type EventEmitter } from \"@next-core/element\";\nimport { ReactNextElement } from \"@next-core/react-element\";\nimport styleText from \"./table.shadow.css\";\nimport { ColumnProps, TablePaginationConfig, TableProps } from \"antd/es/table\";\nimport { BrickEventsMap, UseSingleBrickConf } from \"@next-core/types\";\nimport {\n  get,\n  map,\n  set,\n  isEmpty,\n  merge,\n  isNil,\n  forEach,\n  cloneDeep,\n  isArray,\n  uniq,\n  pullAll,\n  every,\n  find,\n  pull,\n  filter,\n  flatten,\n  keyBy,\n} from \"lodash\";\nimport { getHistory } from \"@next-core/runtime\";\nimport { BrickTable } from \"./BrickTable.js\";\nimport {\n  TableRowSelection,\n  SorterResult,\n  RowSelectionType,\n} from \"antd/lib/table/interface.js\";\nimport {\n  compareFunMap,\n  getKeysOfData,\n  getRowsOfData,\n  stripEmptyExpandableChildrenByName,\n} from \"./utils.js\";\nimport type { SortOrder } from \"antd/lib/table/interface.js\";\nimport type { DataIndex } from \"rc-table/lib/interface.js\";\nimport type { SizeType } from \"antd/lib/config-provider/SizeContext.js\";\nimport type { GeneralIconProps } from \"@next-bricks/icons/general-icon\";\nimport \"@next-core/theme\";\n\nconst { defineElement, property, event, method } = createDecorators();\n\nexport interface RowDisabledProps {\n  field: string;\n  value: any;\n  operator:\n    | \"$eq\"\n    | \"$ne\"\n    | \"$lt\"\n    | \"$lte\"\n    | \"$gt\"\n    | \"$gte\"\n    | \"$isEqual\"\n    | \"$notEqual\"\n    | \"$in\"\n    | \"$nin\"\n    | \"$exists\";\n}\n\nexport interface CellStatusProps {\n  dataIndex?: string;\n  mapping: Array<{\n    leftBorderColor: string;\n    value: any;\n  }>;\n}\n\nexport interface CustomColumnComponent {\n  /** 构件名称 */\n  brick: string | any;\n  /** 字段值、列表项和 index 对应所用构件的属性的 key */\n  fields?: {\n    value?: string;\n    item?: string;\n    index?: string;\n  };\n  /** 构件属性 */\n  properties?: Record<string, any>;\n  /** 事件 */\n  events?: BrickEventsMap;\n}\n\nexport interface CustomColumn extends ColumnProps<Record<string, any>> {\n  /**\n   * 支持为某列自定义展示构件\n   */\n  useBrick?: UseSingleBrickConf;\n  /**\n   * 字段的值展示时的后缀\n   */\n  valueSuffix?: string;\n  /**\n   * 支持为某列的表头自定义展示构件，可通过 DATA.title 获取标题文本\n   */\n  headerBrick?: {\n    useBrick: UseSingleBrickConf;\n  };\n  /**\n   * 在渲染自定义构件的场景下额外设置单元格的状态样式， `dataIndex` 表示取哪一列的字段值作为判断数据，不填的话默认取当前列的字段，`mapping` 表示判断的条件，条件被成功匹配时用当前的样式。目前仅支持单元格 `leftBorderColor` 属性的设置\n   */\n  cellStatus?: CellStatusProps;\n  /**\n   * 设置列的每个单元格样式\n   */\n  cellStyle?: React.CSSProperties;\n  /**\n   * 单元格内元素的垂直对齐方式\n   */\n  verticalAlign?: \"top\" | \"bottom\";\n  /**\n   * 每条记录的控制列合并的值的 key\n   */\n  colSpanKey?: string;\n  /**\n   * 每条记录的控制行合并的值的 key\n   */\n  rowSpanKey?: string;\n  /**\n   * 自定义筛选菜单\n   */\n  filterDropdownBrick?: {\n    useBrick: UseSingleBrickConf;\n  };\n}\n\n/**\n * 通用表格构件\n * @author sailor\n * @category table\n *\n * @insider\n */\n@defineElement(\"eo-table\", {\n  styleTexts: [styleText],\n  alias: [\"advanced.general-table\"],\n})\nclass TableComponent extends ReactNextElement {\n  /**\n   * 页码变化,pagePath 可在 fields.page 中设置，默认为 page\n   */\n  @event({ type: \"page.update\" }) accessor #pageUpdate!: EventEmitter<\n    Record<string, number>\n  >;\n\n  /**\n   * 每页条数变化 ,pagePath 可在 fields.page 中设置,pageSizePath 可在 fields.pageSize 中设置，默认为 pageSize\n   */\n  @event({ type: \"filter.update\" }) accessor #filterUpdate!: EventEmitter<\n    Record<string, number>\n  >;\n\n  /**\n   * 勾选框变化，detail 中为所选的行数据\n   */\n  @event({ type: \"select.update\" }) accessor #selectUpdate!: EventEmitter<\n    Record<string, any>[]\n  >;\n\n  /**\n   * 勾选框变化，detail 中为所选的行key集合\n   */\n  @event({ type: \"select.row.keys.update\" })\n  accessor #selectRowKeysUpdate!: EventEmitter<string[]>;\n\n  /**\n   * 排序变化，detail 中的 sort 为对应排序列的 key/dataIndex，order 为升序/降序\n   */\n  @event({ type: \"sort.update\", cancelable: true })\n  accessor #sortUpdate!: EventEmitter<{\n    sort: string;\n    order: string | number;\n  }>;\n\n  /**\n   * 点击展开图标时触发的事件，事件详情中`expanded`为是否展开，`record`被点击的行信息\n   */\n  @event({ type: \"row.expand\" }) accessor #rowExpand!: EventEmitter<{\n    expanded: boolean;\n    record: Record<string, any>;\n  }>;\n\n  /**\n   * 展开的行变化时触发的事件，事件详情为当前展开的所有行的`rowKey`集合\n   */\n  @event({ type: \"expand.rows.change\" })\n  accessor #expandRowsChange!: EventEmitter<{\n    expandedRows: React.Key[];\n  }>;\n\n  /**\n   * 表格行拖拽结束发生的事件，事件详情为拖拽后重新排序的所有行数据\n   */\n  @event({ type: \"row.drag\" }) accessor #rowDrag!: EventEmitter<{\n    data: Record<string, any>[];\n  }>;\n\n  /**\n   * 扩展自 ant-design 的 Column 相关配置项,具体查阅：[Column](https://ant.design/components/table-cn/#Column)\n   */\n  set columns(value: CustomColumn[]) {\n    this._columns = value;\n    this._render();\n  }\n  get columns(): CustomColumn[] {\n    return this._columns as CustomColumn[];\n  }\n\n  /**\n   * 数据源，通过 useResolves 从后台接口获取或者直接在 storyboard 中配置\n   */\n  set dataSource(value: Record<string, any>[]) {\n    this._isInSelect = false;\n    this._originalDataSource = value;\n    this._dataSource = cloneDeep(\n      this._fields.dataSource ? get(value, this._fields.dataSource) : value\n    );\n    // 前端搜索需要保留一个干净的数据\n    this._pureSource = cloneDeep(this._dataSource);\n    if (this.stripEmptyExpandableChildren) {\n      const columnName =\n        this.configProps?.expandable?.childrenColumnName || \"children\";\n      stripEmptyExpandableChildrenByName(columnName, this._dataSource);\n    }\n    this.#total = get(value, this._fields.total as string);\n    this.page = get(value, \"page\") ?? this.page ?? 1;\n    this.pageSize =\n      get(value, \"page_size\") ?? get(value, \"pageSize\") ?? this.pageSize ?? 10;\n    this._render();\n  }\n\n  /**\n   * 是否显示外层卡片\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor showCard = true;\n\n  /**\n   * 表格行是否可选择，具体查阅：[rowSelection](https://ant.design/components/table-cn/#rowSelection)\n   */\n  @property({\n    attribute: false,\n  })\n  accessor rowSelection: false | TableRowSelection<any> | undefined;\n\n  /**\n   * 指定每一行的 key，不指定则默认为索引 index。强烈建议设置该属性，否则在某些情况下可能行为不如预期。\n   */\n  @property()\n  accessor rowKey: string | undefined;\n\n  /**\n   * 隐藏相应列（输入对应的 dataIndex 或者 key 即可）\n   */\n  @property({\n    attribute: false,\n  })\n  accessor hiddenColumns: Array<string | number> | undefined;\n\n  /**\n   * 是否显示已选择信息和清除按钮。仅在设置了`rowSelection`时有效。默认不显示\n   * @group rowSelection\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor showSelectInfo = false;\n\n  // 表头过滤的 filters\n  /**\n   * 表头过滤的过滤项，key 为 column 的 dataIndex，value 为过滤值集合。\n   * @group paginationAndFilter\n   */\n  @property({\n    attribute: false,\n  })\n  accessor filters: Record<string, string[]> | undefined;\n\n  /**\n   * ant-design 的 Table 相关配置项,具体查阅：[Table](https://ant.design/components/table-cn/#Table)，其中分页配置和行选择配值在构件中设置了常用的默认配置，也可自行覆盖，具体描述见下表\n   * @group other\n   */\n  @property({\n    attribute: false,\n  })\n  accessor configProps: any;\n\n  /**\n   * 被排序列的 dataIndex。通常来自于 url 参数，可以设置成 ${QUERY.sort}。\n   * @group paginationAndFilter\n   */\n  @property()\n  accessor sort: string | undefined | null;\n\n  /**\n   * 升序/降序，可以设置成 ${QUERY.order}。\n   * @group paginationAndFilter\n   */\n  @property({\n    attribute: false,\n  })\n  accessor order: string | number | undefined | null;\n\n  /**\n   * 配置每一行是否禁用，其中 `field` 表示数据源中的字段路径， `value` 表示与其字段比较的值， `operator` 表示两者比较的方法，结果为 `true` 时会禁用当前行, 需要注意的是该配置需要在 `rowSelection: true` 的前提下使用，并且设置 `rowKey` 属性赋予每行唯一的 key，防止顺序变化时造成的错误勾选（如上 demo 所示）\n   * @group rowSelection\n   */\n  @property({\n    attribute: false,\n  })\n  accessor rowDisabledConfig: RowDisabledProps | RowDisabledProps[] | undefined;\n\n  // start -- 行展开相关属性\n  /**\n   * 自定义行展开的构件 [UseBrickConf](/next-docs/docs/api-reference/brick-types.usesinglebrickconf)\n   * @group expand\n   */\n  @property({\n    attribute: false,\n  })\n  accessor expandedRowBrick:\n    | {\n        useBrick?: UseSingleBrickConf;\n      }\n    | undefined;\n\n  /**\n   * 自定义展开图标。\n   * @default {collapsedIcon:{lib:'antd',icon:'down',theme:'outlined'},expandedIcon:{lib:'antd',icon:'right',theme:'outlined'}}\n   * @group expand\n   */\n  @property({\n    attribute: false,\n  })\n  accessor expandIcon:\n    | {\n        collapsedIcon: GeneralIconProps;\n        expandedIcon: GeneralIconProps;\n      }\n    | undefined;\n\n  /**\n   * 展开的图标是否为一个单元格，默认显示在第一列；设置为 false 的时候，可以通过`expandIconColumnIndex`属性设置展开的图标在哪一列\n   * @default true\n   * @group expand\n   */\n  @property({\n    attribute: false,\n  })\n  accessor expandIconAsCell = true;\n\n  /**\n   * 展开的图标显示在哪一列，如果没有 rowSelection，默认显示在第一列，否则显示在选择框后面。当`expandIconAsCell`为 false 时，该属性生效。\n   * @group expand\n   */\n  @property({\n    type: Number,\n  })\n  accessor expandIconColumnIndex: number | undefined;\n\n  /**\n   * 通过点击行来展开子行\n   * @group expand\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor expandRowByClick: boolean | undefined;\n\n  /**\n   * 优化渲染的列（输入对应的 dataIndex），针对配置了 useBrick 的列。当前 antd 在更新 state 的时候，会全量渲染单元格，如果确定某一列在后续操作中不需要重新渲染，例如仅作为展示的单元格，可通过该属性设置以优化性能。注意，在树形表格中，当某一列内包含展开/收起按钮，则不应该设置该列。\n   * @group advanced\n   */\n  @property({\n    attribute: false,\n  })\n  accessor optimizedColumns: Array<string | number> | undefined;\n\n  /**\n   * 树形数据展示时是否需要去除空数组\n   * @group expand\n   */\n  @property({\n    attribute: false,\n  })\n  accessor stripEmptyExpandableChildren = false;\n\n  /**\n   * 初始时，是否展开所有行\n   * @group expand\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor defaultExpandAllRows: boolean | undefined;\n\n  /**\n   * 是否显示省略信息\n   * @group basic\n   */\n  @property({ type: Boolean })\n  accessor ellipsisInfo: boolean | undefined;\n\n  /**\n   * 展开的行的 rowKey\n   * @group expand\n   */\n  @property({\n    attribute: false,\n  })\n  accessor expandedRowKeys: string[] | undefined;\n\n  // end -- 行展开相关属性\n\n  /**\n   * 表格树形数据展示的时候，行选择父节点的时候是否同步勾选/取消勾选所有子节点，并且被同步勾选的子节点不能单独取消。注意，该属性必须设置 `rowKey` 属性。\n   * @group expand\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor selectAllChildren: boolean | undefined;\n\n  /**\n   * 是否默认选择所有行。注意，该属性必须设置 `rowKey` 属性。\n   * @group expand\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor defaultSelectAll: boolean | undefined;\n\n  private _disabledChildrenKeys: React.Key[] = [];\n\n  /**\n   * 指定树形结构的列名\n   * @default children\n   * @group expand\n   */\n  @property({\n    attribute: false,\n  })\n  accessor childrenColumnName = \"children\";\n\n  /**\n   * 是否支持排序。默认开启，当对应列的sorter设置成true时则可排序。sortable为false时则排序都不生效。\n   * @default true\n   * @group paginationAndFilter\n   */\n  @property({\n    attribute: false,\n  })\n  accessor sortable = true;\n\n  /**\n   * 设置相关字段取自哪里，具体描述见下表\n   * @group advanced\n   */\n  set fields(value: any) {\n    this._fields = { ...this._fields, ...value };\n    this._render();\n  }\n\n  /**\n   * 是否前端进行搜索，配合`presentational-bricks.brick-input`使用\n   * @group paginationAndFilter\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor frontSearch: boolean | undefined;\n\n  /**\n   * 前端搜索参数\n   * @group paginationAndFilter\n   */\n  @property()\n  accessor frontSearchQuery = \"\";\n\n  /**\n   * 是否精确搜索\n   * @group paginationAndFilter\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor exactSearch: boolean | undefined;\n\n  /**\n   * 进行前端搜索的字段，支持嵌套的写法如[\"name\",\"value.a\"]，不配置的时候默认为对所有 columns 的 dataIndex[]进行前端搜索\n   * @group paginationAndFilter\n   */\n  @property({\n    attribute: false,\n  })\n  accessor frontSearchFilterKeys: string[] | undefined;\n\n  /**\n   * 页码。后台搜索的时候一般不需要配置，列表接口返回格式通常为{list:[],page:1,pageSize:10,total:20}，即默认取自 page；前台搜索的时候，一般配置成 \"${query.page=1|number}\"\n   * @group paginationAndFilter\n   */\n  @property({\n    type: Number,\n  })\n  accessor page: number | undefined;\n\n  /**\n   * 页码条数。后台搜索的时候一般不需要配置，列表接口返回格式通常为{list:[],page:1,pageSize:10,total:20}，即默认取自 pageSize/page_size；前台搜索的时候，一般配置成 \"${query.pageSize=10|number}\"\n   * @group paginationAndFilter\n   */\n  @property({\n    type: Number,\n  })\n  accessor pageSize: number | undefined;\n\n  /**\n   * @kind {\n   *   x?: string | number | true;\n   *   y?: number | string;\n   * } & {\n   *   scrollToFirstRowOnChange?: boolean;\n   * }\n   * 表格是否可滚动，也可以指定滚动区域的宽、高，配置项。详见 [scroll](https://ant.design/components/table-cn/#scroll)\n   * @required false\n   * @default { x: true }\n   * @group other\n   */\n  @property({\n    attribute: false,\n  })\n  accessor scrollConfigs: TableProps<unknown>[\"scroll\"] = { x: true };\n\n  /**\n   * 把过滤条件更新到 url 时的字段名\n   * @default \"q\"\n   * @group paginationAndFilter\n   */\n  @property()\n  accessor qField = \"q\";\n\n  /**\n   * 表格行是否可拖拽，注意，树形数据的表格不支持该功能\n   * @group basic\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor tableDraggable: boolean | undefined;\n\n  /**\n   * 是否展示斑马纹\n   * @group ui\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor zebraPattern: boolean | undefined;\n\n  /**\n   * 翻页时是否记住之前选中的项。注意，选中项的rowKey将保存在url中，如果不设置rowKey，该设置不生效。如果选择太多可能会造成url过长，请谨慎使用\n   * @group other\n   */\n  @property({ type: Boolean })\n  accessor storeCheckedByUrl: boolean | undefined;\n\n  /**\n   * 额外的行，通常为跨页勾选时，不在当前页的行\n   * @group other\n   */\n  @property({ attribute: false })\n  accessor extraRows: Record<string, unknown>[] = [];\n\n  /**\n   * 当所有子节点选中时，自动选中父节点\n   * @group expand\n   */\n  @property({ type: Boolean })\n  accessor autoSelectParentWhenAllChildrenSelected: boolean | undefined;\n\n  /**\n   * 表格表头是否透明\n   * @group ui\n   */\n  @property({ type: Boolean })\n  accessor thTransparent: boolean | undefined;\n\n  /**\n   * 是否显示表头\n   * @default true\n   * @group ui\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor showHeader = true;\n\n  /**\n   * 是否显示分页\n   * @group paginationAndFilter\n   */\n  @property({\n    attribute: false,\n  })\n  accessor pagination: false | TablePaginationConfig | undefined;\n\n  /**\n   * 表格大小（antd原生size）\n   * @group ui\n   */\n  @property()\n  accessor size: SizeType | \"x-small\";\n\n  /**\n   * 选框类型（单选/多选）\n   * @group rowSelection\n   */\n  @property({\n    attribute: false,\n  })\n  accessor type: RowSelectionType | undefined;\n\n  /**\n   * 是否更新 url 参数。设置为否之后，如果是后台进行分页/排序等功能，则需要结合事件进行编排。如果是前台进行分页/排序，则不需要。\n   * @default true\n   * @group other\n   */\n  @property({ type: Boolean })\n  accessor shouldUpdateUrlParams = true;\n\n  /**\n   * 更新 url 参数时是否触发页面重新渲染。仅在`shouldUpdateUrlParams`为true时有效。\n   * @default true\n   * @group other\n   */\n  @property({\n    type: Boolean,\n  })\n  accessor shouldRenderWhenUrlParamsUpdate = true;\n\n  // 对外获取内部 _dataSource 的值\n  // istanbul ignore next\n  get processedDataSource() {\n    return this._dataSource;\n  }\n\n  // 对外获取内部 _finalConfigProps 的值\n  // istanbul ignore next\n  get processConfigProps() {\n    return this._finalConfigProps;\n  }\n\n  // 对外获取内部 _columns 的值\n  // istanbul ignore next\n  get processedColumns() {\n    return this.getModifyColumns();\n  }\n\n  private _originalDataSource: Record<string, any>[] = [];\n  private _dataSource: Record<string, any>[] = [];\n  private _pureSource: Record<string, any>[] | undefined;\n  private _columns: CustomColumn[] | undefined;\n  private _finalConfigProps: any = {}; //处理过的配置，主要处理分页和rowSelect\n  private _error: any;\n\n  #total?: number | undefined;\n\n  private _selectUpdateEventName = \"\";\n  private _selectUpdateEventDetailKeys: string[] = [];\n  private _selectUpdateEventDetailField = \"\";\n  private _selectUpdateEventDetailExtra: any = {};\n\n  private _fields: {\n    dataSource: string; // 指定 dataSource 从哪里来，默认为列表接口返回格式是{list:[],page:1,pageSize:10,total:20}，即默认取自 list\n    total: string; // 指定 total 从哪里来，默认为列表接口返回格式是{list:[],page:1,pageSize:10,total:20}，即默认取自 total\n    page: string; // 指定请求后台 page 参数 path\n    pageSize: string; // 指定请求后台 pageSize 参数 path\n    rowKey?: string; // 指定每一行的 key，不指定则默认为 index\n    ascend?: string | number; // 指定 ascend 排序对应字段，例如有些后台对应为 1 ，有些对应为 \"asc\"。这里默认为 \"ascend\"。\n    descend?: string | number; // 指定 descend 排序对应字段，例如有些后台对应为 0 ，有些对应为 \"desc\"。这里默认为 \"descend\"。\n    order?: number;\n  } = {\n    page: \"page\",\n    pageSize: \"pageSize\",\n    dataSource: \"list\",\n    total: \"total\",\n    ascend: \"ascend\",\n    descend: \"descend\",\n  };\n\n  /**\n   * 指定选中项的 key 数组\n   * @default []\n   * @group rowSelection\n   */\n  @property({\n    attribute: false,\n  })\n  accessor selectedRowKeys: React.Key[] = [];\n\n  private _selected = false;\n  private _selectedRow: Record<string, unknown> | undefined;\n  private _selectedRows: Record<string, any>[] = [];\n  private _allChildren: Record<string, any>[] = [];\n  private _isInSelect = false;\n  /**\n   * 搜索过滤\n   */\n  @method()\n  filterSourceData(event: CustomEvent): void {\n    const q = this.exactSearch\n      ? event.detail.q.trim()\n      : event.detail.q.trim().toLowerCase();\n    if (this.shouldUpdateUrlParams) {\n      const history = getHistory();\n      const urlSearchParams = new URLSearchParams(history.location.search);\n      urlSearchParams.set(\"page\", \"1\");\n      if (q) {\n        urlSearchParams.set(this.qField, q);\n        history.push(`?${urlSearchParams}`, { notify: !this.frontSearch });\n      } else {\n        urlSearchParams.delete(this.qField);\n        history.push(`?${urlSearchParams}`, { notify: !this.frontSearch });\n      }\n      this.page = 1;\n    }\n    this.frontSearchQuery = q;\n  }\n\n  handleFrontendDataChange(\n    data: Record<string, any>[] = [],\n    columns: CustomColumn[] = []\n  ): Record<string, any>[] {\n    if (this.shouldUpdateUrlParams) {\n      const history = getHistory();\n      const urlSearchParams = new URLSearchParams(history.location.search);\n      this.frontSearchQuery = urlSearchParams.get(this.qField) as string;\n    }\n    let tempDataSource: Record<string, any>[] = [];\n    tempDataSource = this.handleFrontendFilterSource(\n      data,\n      this.frontSearchQuery || \"\",\n      columns\n    );\n    const order = isNil(this.order)\n      ? null\n      : this._fields.ascend === this.order\n        ? \"ascend\"\n        : \"descend\";\n    tempDataSource = this.handleFrontendSorter(tempDataSource, {\n      columnKey: this.sort as string,\n      order,\n    });\n    tempDataSource = this.handleFrontendFilters(tempDataSource);\n    this.#total = tempDataSource.length;\n    return tempDataSource;\n  }\n\n  // 前端过滤\n  handleFrontendFilterSource(\n    data: Record<string, any>[],\n    q: string,\n    columns: CustomColumn[],\n    filterKeys?: DataIndex[]\n  ): Record<string, any>[] {\n    if (!q) {\n      return data;\n    }\n\n    const dataSource: Record<string, any>[] = [];\n\n    if (!filterKeys) {\n      filterKeys = (this.frontSearchFilterKeys ||\n        columns.map((column) => column.dataIndex)) as DataIndex[];\n    }\n\n    data.forEach((item) => {\n      const children = item[this.childrenColumnName];\n\n      if (children) {\n        const filteredChildren = this.handleFrontendFilterSource(\n          children,\n          q,\n          columns,\n          filterKeys\n        );\n\n        if (filteredChildren.length > 0) {\n          dataSource.push({\n            ...item,\n            [this.childrenColumnName]: filteredChildren,\n          });\n          return;\n        }\n      }\n\n      const valid = filterKeys?.some((key) => {\n        const value = get(item, key);\n        if (isNil(value)) {\n          return false;\n        }\n        if (this.exactSearch) {\n          return value === q;\n        }\n        return JSON.stringify(value).toLowerCase().includes(q);\n      });\n\n      if (valid) {\n        dataSource.push(item);\n      }\n    });\n    return dataSource;\n  }\n\n  private _getRowKey = (): string =>\n    this.rowKey ?? this._fields.rowKey ?? this.configProps?.rowKey ?? \"key\";\n\n  private _findParentByChildKeyValue = (\n    value: string,\n    rowKey: string,\n    list: Record<string, unknown>[],\n    parent?: Record<string, unknown>\n  ): Record<string, unknown> | undefined => {\n    let matchedParent: Record<string, unknown> | undefined;\n\n    list.some((item) => {\n      if (item[rowKey] === value) {\n        matchedParent = parent;\n      } else {\n        const children = item[this.childrenColumnName] as Record<\n          string,\n          unknown\n        >[];\n\n        if (children) {\n          matchedParent = this._findParentByChildKeyValue(\n            value,\n            rowKey,\n            children,\n            item\n          );\n        }\n      }\n\n      return matchedParent ? true : false;\n    });\n\n    return matchedParent;\n  };\n\n  // istanbul ignore next\n  private _handleRowSelectChange = (\n    selectedRowKeys: string[],\n    selectedRows: any[]\n  ): void => {\n    const rowKey = this._getRowKey();\n    const rowKeyRowMap = keyBy(selectedRows, rowKey);\n    if (this._selected) {\n      const _selectedRowKeys = [...selectedRowKeys];\n      this._allChildren.forEach((child) => {\n        const rowKeyValue = child[rowKey];\n        _selectedRowKeys.push(rowKeyValue);\n        rowKeyRowMap[rowKeyValue] = child;\n      });\n      if (this.autoSelectParentWhenAllChildrenSelected && this._selectedRow) {\n        const selectedRowKeySet = new Set(selectedRowKeys);\n        const parent = this._findParentByChildKeyValue(\n          this._selectedRow[rowKey] as string,\n          rowKey,\n          this._dataSource as Record<string, unknown>[]\n        );\n\n        if (\n          parent &&\n          (parent[this.childrenColumnName] as Record<string, unknown>[]).every(\n            (item) => selectedRowKeySet.has(item[rowKey] as string)\n          )\n        ) {\n          const rowKeyValue = parent[rowKey] as string;\n          _selectedRowKeys.push(rowKeyValue);\n          rowKeyRowMap[rowKeyValue] = parent;\n        }\n      }\n      this.selectedRowKeys = uniq(_selectedRowKeys);\n    } else {\n      let parent: Record<string, unknown> | undefined;\n\n      if (this.autoSelectParentWhenAllChildrenSelected && this._selectedRow) {\n        parent = this._findParentByChildKeyValue(\n          this._selectedRow[rowKey] as string,\n          rowKey,\n          this._dataSource as Record<string, unknown>[]\n        );\n      }\n      this.selectedRowKeys = pullAll(\n        selectedRowKeys,\n        map(\n          this._allChildren.concat(\n            parent as unknown as Record<string, unknown>[]\n          ),\n          rowKey\n        )\n      );\n    }\n    this._selectedRow = undefined;\n    const extraRowKeyRowMap = keyBy(this.extraRows, rowKey);\n    this._selectedRows = this.selectedRowKeys.map(\n      (key) =>\n        rowKeyRowMap[key as string | number] ||\n        extraRowKeyRowMap[key as string | number]\n    );\n\n    let detail = null;\n    const data = isEmpty(this._selectUpdateEventDetailField)\n      ? this._selectedRows\n      : map(this._selectedRows, (row) =>\n          get(row, this._selectUpdateEventDetailField)\n        );\n    detail =\n      isEmpty(this._selectUpdateEventDetailKeys) || isEmpty(data)\n        ? data\n        : set({}, this._selectUpdateEventDetailKeys, data);\n    if (!isEmpty(detail)) {\n      detail = merge(detail, this._selectUpdateEventDetailExtra);\n    }\n    if (!this._selectUpdateEventName) {\n      this.#selectUpdate.emit(detail);\n    } else {\n      this.dispatchEvent(\n        new CustomEvent(this._selectUpdateEventName, { detail })\n      );\n    }\n    this.#selectRowKeysUpdate.emit(selectedRowKeys);\n  };\n\n  // istanbul ignore next\n  private _getSelectedRowsWithChildren = (\n    row: Record<string, any>\n  ): Record<string, any>[] => {\n    const result: Record<string, any>[] = [];\n    if (\n      !isEmpty(row[this.childrenColumnName]) &&\n      isArray(row[this.childrenColumnName])\n    ) {\n      forEach(row[this.childrenColumnName], (item) => {\n        result.push(item);\n        result.push(...this._getSelectedRowsWithChildren(item));\n      });\n    }\n    return result;\n  };\n\n  // istanbul ignore next\n  private _handleOnSelect = (\n    row: Record<string, any>,\n    checked: boolean\n  ): void => {\n    this._selected = checked;\n    this._selectedRow = row;\n    this._isInSelect = true;\n    const rowKey = this._getRowKey();\n    const allChildren = this.selectAllChildren\n      ? this._getSelectedRowsWithChildren(row)\n      : [];\n\n    this._allChildren = allChildren;\n    if (!this.autoSelectParentWhenAllChildrenSelected) {\n      if (checked) {\n        this._disabledChildrenKeys = uniq([\n          ...this._disabledChildrenKeys,\n          ...map(allChildren, rowKey),\n        ]);\n      } else {\n        this._disabledChildrenKeys = pullAll(this._disabledChildrenKeys, [\n          ...map(allChildren, rowKey),\n        ]);\n      }\n    }\n    if (this.storeCheckedByUrl && !!rowKey) {\n      this._updateUrlChecked([row[rowKey]], checked);\n    }\n  };\n\n  // istanbul ignore next\n  private _handleSelectAll = (\n    selected: boolean,\n    selectedRows: Record<string, any>[],\n    changeRows: Record<string, any>[]\n  ): void => {\n    this._selected = selected;\n    this._isInSelect = true;\n    const rowKey = this._getRowKey();\n    if (this.selectAllChildren) {\n      const allParentKeys = map(this._dataSource, rowKey);\n      const changedParentRows = changeRows.filter((v) =>\n        allParentKeys.includes(v[rowKey])\n      );\n      const toChangedChildrenKeys = flatten(\n        map(changedParentRows, (r) =>\n          map(this._getSelectedRowsWithChildren(r), (cr) => cr[rowKey])\n        )\n      );\n      const allChildren = flatten(\n        map(changedParentRows, (r) =>\n          map(this._getSelectedRowsWithChildren(r), (cr) => cr)\n        )\n      );\n      this._allChildren = allChildren;\n\n      if (!this.autoSelectParentWhenAllChildrenSelected) {\n        if (selected) {\n          this._disabledChildrenKeys = uniq(\n            this._disabledChildrenKeys.concat(toChangedChildrenKeys)\n          );\n        } else {\n          // disabled children in changeRows should be removed\n          this._disabledChildrenKeys = this._disabledChildrenKeys.filter(\n            (v) => !toChangedChildrenKeys.includes(v)\n          );\n        }\n      }\n    }\n    if (this.storeCheckedByUrl && !!rowKey) {\n      this._updateUrlChecked(map(changeRows, rowKey), selected);\n    }\n  };\n\n  private _getCheckedFromUrl = () => {\n    const history = getHistory();\n    const urlSearchParams = new URLSearchParams(history.location.search);\n    const checked = urlSearchParams.get(\"checked\");\n    return isEmpty(checked) ? [] : (checked as string).split(\",\");\n  };\n\n  private _updateUrlChecked = (options: any[], checked: boolean) => {\n    const history = getHistory();\n    let checkedOptions: string[] = this._getCheckedFromUrl();\n    if (checked) {\n      checkedOptions = [...checkedOptions, ...options];\n    } else {\n      pull(checkedOptions, ...options);\n    }\n    if (this.shouldUpdateUrlParams) {\n      history.pushQuery(\n        { checked: checkedOptions.join(\",\") },\n        { notify: false }\n      );\n    }\n  };\n  private _handleOnChange = (\n    pagination: TablePaginationConfig,\n    filters: Record<string, string[]>,\n    sorter: SorterResult<Record<string, any>>\n  ): void => {\n    const history = getHistory();\n    const urlSearchParams = new URLSearchParams(history.location.search);\n    // 分页\n    if (!isEmpty(pagination)) {\n      if (pagination.pageSize !== this.pageSize) {\n        pagination.current = 1;\n        urlSearchParams.set(\"page\", \"1\");\n        urlSearchParams.set(\n          \"pageSize\",\n          (pagination?.pageSize as number).toString()\n        );\n        this.#filterUpdate.emit({\n          [this._fields.pageSize]: pagination.pageSize as number,\n          [this._fields.page]: 1,\n        });\n        this.page = 1;\n        this.pageSize = pagination.pageSize;\n      } else if (pagination.current !== this.page) {\n        const newPage = pagination.current || 1;\n        urlSearchParams.set(\"page\", newPage.toString());\n        this.#pageUpdate.emit({\n          [this._fields.page]: newPage, // 可配置的 path\n        });\n        this.page = newPage;\n      }\n    }\n    this.filters = filters;\n    // 过滤\n    if (!isEmpty(filters)) {\n      forEach(filters, (value: any, key) => {\n        isNil(value) || value.length === 0\n          ? urlSearchParams.delete(key)\n          : urlSearchParams.set(key, value);\n      });\n    }\n    // 排序: 切换分页和页码的时候不应该触发sort.update事件  排序触发/取消的时候，order的类型 'descend' | 'ascend' | null，没触发是false\n    if (\n      sorter.order &&\n      isNil(sorter.order) &&\n      (sorter.columnKey !== this.sort ||\n        this._fields[sorter.order] !== this.order)\n    ) {\n      if (sorter.columnKey && sorter.order) {\n        urlSearchParams.set(\"sort\", sorter.columnKey as string);\n        urlSearchParams.set(\n          \"order\",\n          (this._fields[sorter.order] as number).toString()\n        );\n        this.sort = sorter.columnKey as string;\n        this.order = this._fields[sorter.order];\n      } else {\n        urlSearchParams.delete(\"sort\");\n        urlSearchParams.delete(\"order\");\n        this.sort = null;\n        this.order = null;\n      }\n      this.#sortUpdate.emit({\n        sort: this.sort as string,\n        order: this.order as unknown as string,\n      });\n    }\n    if (this.frontSearch) {\n      if (this.shouldUpdateUrlParams) {\n        history.push(`?${urlSearchParams}`, { notify: false });\n      }\n      this.frontendSearch(pagination, filters, sorter);\n    } else {\n      if (this.shouldUpdateUrlParams) {\n        history.push(`?${urlSearchParams}`, {\n          notify: !!this.shouldRenderWhenUrlParamsUpdate,\n        });\n      }\n    }\n  };\n\n  // istanbul ignore next\n  private renderSelectInfo = () => {\n    // eslint-disable-next-line react/display-name\n    return (\n      <span style={{ marginLeft: 20 }}>\n        <span>已选择{this.selectedRowKeys.length}项</span>\n        <a\n          role=\"button\"\n          style={{ marginLeft: \"10px\" }}\n          onClick={() => {\n            this.selectedRowKeys = [];\n            this._selectedRows = [];\n            this._disabledChildrenKeys = [];\n            this._allChildren = [];\n            if (!this._selectUpdateEventName) {\n              this.#selectUpdate.emit([]);\n            } else {\n              this.dispatchEvent(\n                new CustomEvent(this._selectUpdateEventName, { detail: [] })\n              );\n            }\n          }}\n        >\n          清空\n        </a>\n      </span>\n    );\n  };\n\n  // 对前端搜索数据进行排序\n  private handleFrontendSorter(\n    dataSource: Record<string, any>[],\n    sorter: Partial<SorterResult<Record<string, any>>>\n  ): Record<string, any>[] {\n    const tempDataSource: Record<string, any>[] = dataSource || [];\n    const { columnKey, order } = sorter;\n\n    if (!columnKey || !order) {\n      return dataSource;\n    }\n\n    let direction: 1 | -1 = 1;\n\n    if (order === \"descend\") {\n      direction = -1;\n    } else if (order === \"ascend\") {\n      direction = 1;\n    }\n\n    if (direction !== undefined) {\n      tempDataSource.sort((a, b) => {\n        const aValue = get(a, columnKey as string | number);\n        const bValue = get(b, columnKey as string | number);\n\n        if (isNil(aValue)) {\n          if (!isNil(bValue)) {\n            return 1;\n          }\n        } else {\n          if (isNil(bValue)) {\n            return -1;\n          }\n        }\n\n        if (aValue == bValue) {\n          return 0;\n        }\n\n        if (aValue > bValue) {\n          return direction;\n        }\n\n        return -direction;\n      });\n      tempDataSource.forEach((item) => {\n        const children = item[this.childrenColumnName];\n\n        if (children) {\n          this.handleFrontendSorter(children, sorter);\n        }\n      });\n    }\n\n    return tempDataSource;\n  }\n\n  // 对前端搜索数据进行表头筛选项过滤\n  private handleFrontendFilters(\n    dataSource: Record<string, any>[]\n  ): Record<string, any>[] {\n    let tempDataSource: Record<string, any>[] = dataSource || [];\n    const filtersArray = map(this.filters, (item, k) => ({\n      key: k,\n      value: item,\n    })).filter((item) => !isNil(item.value) && item.value.length !== 0);\n    tempDataSource = tempDataSource.filter((item) => {\n      return every(filtersArray, (filter) => {\n        return filter.value?.includes(get(item, filter.key)) ?? true;\n      });\n    });\n    return tempDataSource;\n  }\n\n  // istanbul ignore next\n  private frontendSearch(\n    pagination: TablePaginationConfig,\n    filters: Record<string, string[]>,\n    sorter: SorterResult<Record<string, any>>\n  ): void {\n    this.sort = isNil(sorter.order) ? null : (sorter.columnKey as string);\n    this.order = isNil(sorter.order) ? null : this._fields[sorter.order];\n  }\n\n  // 点击展开图标时触发的事件\n  // istanbul ignore next\n  private _handleOnExpand = (\n    expanded: boolean,\n    record: Record<string, any>\n  ): void => {\n    if (this.expandedRowKeys) {\n      const rowKey = this._getRowKey();\n      const pullKeys: string[] = [get(record, rowKey)];\n      const recordChildren = get(record, this.childrenColumnName);\n      if (!isEmpty(recordChildren)) {\n        const keysToPull = map(\n          filter(recordChildren, (c) =>\n            isEmpty(get(c, this.childrenColumnName))\n          ),\n          rowKey\n        );\n        pullKeys.push(...keysToPull);\n      }\n      this.expandedRowKeys = expanded\n        ? [...this.expandedRowKeys, ...pullKeys]\n        : pull(this.expandedRowKeys, ...pullKeys);\n      this._render();\n    }\n    this.#rowExpand.emit({\n      expanded,\n      record,\n    });\n  };\n\n  // 展开的行变化时触发的事件\n  // istanbul ignore next\n  private _handleOnExpandedRowsChange = (expandedRows: React.Key[]): void => {\n    this.#expandRowsChange.emit({\n      expandedRows,\n    });\n  };\n\n  // 拖拽排序后触发的事件\n  // istanbul ignore next\n  private _handleOnDrag = (data: Record<string, any>[]): void => {\n    this.#rowDrag.emit({\n      data,\n    });\n  };\n\n  /**\n   * 展开所有行\n   */\n  @method()\n  expandAll() {\n    const allKeys: string[] = [];\n    const rowKey = this._getRowKey();\n    if (this._dataSource)\n      getKeysOfData(this._dataSource, rowKey, this.childrenColumnName, allKeys);\n    this.expandedRowKeys = allKeys;\n  }\n\n  getModifyColumns(): CustomColumn[] {\n    let columns = this._columns;\n    if (this._columns && this.hiddenColumns) {\n      columns = this._columns.filter((column) => {\n        return !this.hiddenColumns?.includes(\n          (column.dataIndex as string) ?? column.key\n        );\n      });\n    }\n    if (this.sortable === false) {\n      columns = map(columns, (column) => {\n        column.sorter = false;\n        return column;\n      });\n    }\n    return columns as CustomColumn[];\n  }\n\n  render() {\n    // 前端搜索的参数处理\n    if (this.frontSearch) {\n      this._dataSource = this.handleFrontendDataChange(\n        this._pureSource,\n        this._columns\n      );\n    }\n    this._initConfigProps();\n    return (\n      // https://github.com/ant-design/ant-design/issues/38911\n      <BrickTable\n        shadowRoot={this.shadowRoot}\n        dataSource={this._dataSource || []}\n        columns={this.getModifyColumns()}\n        configProps={this._finalConfigProps}\n        error={this._error}\n        onChange={this._handleOnChange}\n        showCard={this.showCard}\n        showHeader={this.showHeader}\n        expandedRowBrick={this.expandedRowBrick}\n        expandIconAsCell={this.expandIconAsCell}\n        expandIconColumnIndex={this.expandIconColumnIndex}\n        expandRowByClick={this.expandRowByClick}\n        defaultExpandAllRows={this.defaultExpandAllRows}\n        onExpand={this._handleOnExpand}\n        onExpandedRowsChange={this._handleOnExpandedRowsChange}\n        expandedRowKeys={this.expandedRowKeys}\n        rowKey={this._getRowKey()}\n        childrenColumnName={this.childrenColumnName}\n        tableDraggable={this.tableDraggable || this.draggable}\n        onDrag={this._handleOnDrag}\n        zebraPattern={this.zebraPattern}\n        expandIcon={this.expandIcon}\n        scroll={this.scrollConfigs}\n        optimizedColumns={this.optimizedColumns}\n        ellipsisInfo={this.ellipsisInfo}\n        thTransparent={this.thTransparent}\n        xSmallSizeTable={this.size == \"x-small\"}\n      />\n    );\n  }\n\n  // istanbul ignore next\n  private _getAllRows = (): Record<string, any>[] => {\n    const allRows: Record<string, any>[] = [];\n    getRowsOfData(this._dataSource, this.childrenColumnName, allRows);\n    return allRows;\n  };\n\n  // istanbul ignore next\n  private _handleDefaultSelectAll = () => {\n    this._isInSelect = true;\n    const rowKey = this._getRowKey();\n    this._selectedRows = this._getAllRows();\n    this.selectedRowKeys = map(this._selectedRows, rowKey);\n    return this.selectedRowKeys;\n  };\n\n  private _initConfigProps = () => {\n    // 默认分页配置\n    const defaultPagination: TablePaginationConfig = {\n      current: this.page,\n      pageSize: this.pageSize,\n      total: this.#total,\n      showSizeChanger: true,\n      pageSizeOptions: [\"10\", \"20\", \"50\"],\n      // eslint-disable-next-line react/display-name\n      showTotal: (totals) => (\n        <>\n          <span className=\"totalText\">\n            共 <strong className=\"total\">{totals}</strong> 条\n          </span>\n          {(this.configProps?.rowSelection || this.rowSelection) &&\n            this.showSelectInfo &&\n            this.selectedRowKeys.length !== 0 &&\n            this.renderSelectInfo()}\n        </>\n      ),\n    };\n\n    const rowKey = this._getRowKey();\n    let rowDisabledConfig: RowDisabledProps[];\n\n    if (this.rowDisabledConfig) {\n      rowDisabledConfig = Array.isArray(this.rowDisabledConfig)\n        ? this.rowDisabledConfig\n        : [this.rowDisabledConfig];\n    }\n\n    // 当 rowSelection 为 true 或者有相关配置的时候的默认行选择配置\n    const defaultRowSelection: TableRowSelection<any> = {\n      ...(rowKey\n        ? ({\n            selectedRowKeys: this._isInSelect\n              ? this.selectedRowKeys\n              : this.storeCheckedByUrl\n                ? this._getCheckedFromUrl()\n                : this.defaultSelectAll\n                  ? this._handleDefaultSelectAll()\n                  : this.selectedRowKeys,\n            onSelect: this._handleOnSelect,\n            onSelectAll: this._handleSelectAll,\n            onChange: this._handleRowSelectChange,\n            preserveSelectedRowKeys: true,\n          } as any)\n        : {\n            // 当用户没有设置rowKey时的兼容处理\n            onChange: this._handleRowSelectChange,\n            preserveSelectedRowKeys: true,\n          }),\n      getCheckboxProps: (record: any) => {\n        if (\n          !isEmpty(this._disabledChildrenKeys) &&\n          this._disabledChildrenKeys.includes(get(record, rowKey))\n        ) {\n          return {\n            disabled: true,\n          };\n        }\n        if (!rowDisabledConfig) return {};\n\n        return {\n          disabled: rowDisabledConfig.some((config) => {\n            const { field, value, operator } = config;\n            const fun = compareFunMap[operator];\n\n            return fun?.(value, get(record, field));\n          }),\n        };\n      },\n    };\n    if (this.configProps) {\n      this._finalConfigProps = cloneDeep(this.configProps);\n      if (this.configProps.pagination !== false) {\n        this._finalConfigProps.pagination = {\n          ...defaultPagination,\n          ...this.pagination,\n          ...this.configProps.pagination,\n        };\n        if (\n          (this.configProps.pagination === undefined ||\n            this.configProps.pagination === null) &&\n          this.pagination === false\n        ) {\n          this._finalConfigProps.pagination = false;\n        }\n      }\n      if (!this.configProps.size) {\n        this._finalConfigProps.size = this.size == \"x-small\" ? \"\" : this.size;\n      }\n    } else {\n      this._finalConfigProps = {};\n      this._finalConfigProps.pagination =\n        this.pagination !== false ? defaultPagination : false;\n      this._finalConfigProps.size = this.size == \"x-small\" ? \"\" : this.size;\n    }\n    const rowSelec = this.configProps?.rowSelection ?? this.rowSelection;\n    if (rowSelec) {\n      if (rowSelec === true) {\n        this._finalConfigProps.rowSelection = {\n          ...defaultRowSelection,\n          type: this.type ?? \"checkbox\",\n        };\n      } else {\n        this._finalConfigProps.rowSelection = {\n          ...defaultRowSelection,\n          type: this.type ?? \"checkbox\",\n          ...rowSelec,\n          ...(defaultRowSelection.selectedRowKeys\n            ? { selectedRowKeys: defaultRowSelection.selectedRowKeys }\n            : {}),\n        };\n      }\n    } else if (this.type) {\n      this._finalConfigProps.rowSelection = {\n        ...defaultRowSelection,\n        type: this.type,\n      };\n    } else {\n      this._finalConfigProps.rowSelection = false;\n    }\n\n    // 初始化列排序\n    if (this._columns) {\n      this._columns = this._columns.map((item) => {\n        if (isNil(item.key)) {\n          item.key = item.dataIndex as string;\n        }\n        if (item.sorter) {\n          item.sortOrder = (this.sort === item.key &&\n            !isNil(this.order) &&\n            (this._fields.ascend === this.order\n              ? \"ascend\"\n              : \"descend\")) as SortOrder;\n        }\n        // 初始化表头过滤值\n        if (item.filters) {\n          const history = getHistory();\n          const urlSearchParams = new URLSearchParams(history.location.search);\n          const filteredValue =\n            urlSearchParams.get(item.key as string) ??\n            get(this.filters, item.key as string | number)?.join(\",\");\n          if (!isNil(filteredValue) && !isEmpty(filteredValue)) {\n            item.filtered = true;\n            item.filteredValue = filteredValue\n              .split(\",\")\n              .map(\n                (v: any) =>\n                  find(item.filters, (f) => String(f.value) === v)?.value ?? v\n              );\n          } else {\n            item.filtered = false;\n            item.filteredValue = [];\n          }\n        }\n        return item;\n      });\n    }\n  };\n\n  _test_only_getOriginalDataSource(): Record<string, any>[] {\n    return this._originalDataSource;\n  }\n\n  updateData(event: CustomEvent): void {\n    this._dataSource = event.detail;\n    this._error = null;\n    this._render();\n  }\n\n  updateError(event: CustomEvent): void {\n    this._error = event.detail;\n    this._render();\n  }\n\n  set selectUpdateEventName(value: string) {\n    this._selectUpdateEventName = value;\n  }\n\n  set selectUpdateEventDetailKeys(value: string[]) {\n    this._selectUpdateEventDetailKeys = value;\n  }\n\n  set selectUpdateEventDetailField(value: string) {\n    this._selectUpdateEventDetailField = value;\n  }\n\n  set selectUpdateEventDetailExtra(value: any) {\n    this._selectUpdateEventDetailExtra = value;\n  }\n}\n\nexport { TableComponent };\n","import {\n  lt,\n  lte,\n  gt,\n  gte,\n  get,\n  isEqual,\n  forEach,\n  includes,\n  isUndefined,\n} from \"lodash\";\nimport { type CellStatusProps } from \"./index.js\";\nexport const compareFunMap: Record<string, any> = {\n  $eq: isEqual,\n  $lt: lt,\n  $lte: lte,\n  $gt: gt,\n  $gte: gte,\n  $ne: (value: any, fieldValue: any): boolean => !isEqual(value, fieldValue),\n  $isEqual: isEqual,\n  $notEqual: (value: any, fieldValue: any): boolean =>\n    !isEqual(value, fieldValue),\n  $in: includes,\n  $nin: (value: any, fieldValue: any): boolean => !includes(value, fieldValue),\n  $exists: (value: any, fieldValue: any): boolean =>\n    value ? !isUndefined(fieldValue) : isUndefined(fieldValue),\n};\n\nexport function getCellStyle(\n  cellStatus: CellStatusProps,\n  item: Record<string, any>,\n  value?: any\n): Record<string, string> {\n  const { dataIndex, mapping: list } = cellStatus;\n  const finalValue = dataIndex !== undefined ? get(item, dataIndex) : value;\n  const ret = list.find((item) => item.value === finalValue);\n\n  if (!ret) return {};\n\n  return {\n    borderLeft: `4px solid ${ret.leftBorderColor}`,\n  };\n}\nexport const getKeysOfData = (\n  data: Record<string, any>[],\n  rowKey: string,\n  childrenColumnName: string,\n  keys: string[]\n): void => {\n  if (data) {\n    forEach(data, (item) => {\n      const children = get(item, childrenColumnName);\n      const key = get(item, rowKey);\n      keys.push(key);\n      if (children?.length) {\n        getKeysOfData(children, rowKey, childrenColumnName, keys);\n      }\n    });\n  }\n};\nexport const getRowsOfData = (\n  data: Record<string, any>[],\n  childrenColumnName: string,\n  rows: Record<string, any>[]\n): void => {\n  if (data) {\n    forEach(data, (item) => {\n      const children = get(item, childrenColumnName);\n      rows.push(item);\n      if (children?.length) {\n        getRowsOfData(children, childrenColumnName, rows);\n      }\n    });\n  }\n};\n\nexport function stripEmptyExpandableChildrenByName(\n  name: string,\n  data: Record<string, any>[] = []\n): Record<string, any>[] {\n  if (data?.length) {\n    data.forEach((value) => {\n      if (value[name]?.length) {\n        return stripEmptyExpandableChildrenByName(name, value[name]);\n      }\n\n      delete value[name];\n      return value;\n    });\n  }\n  return data;\n}\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.brickTableOddRow{background-color:var(--color-fill-bg-base-4)}.ant-table-small .ant-table-body{margin:0}.ant-table-small .ant-table-thead{background:var(--antd-table-header-bg)}.ant-table-small .ant-table-row{line-height:26px}.ant-table-tbody > tr.invalidRow > td{background-color:var(--color-error-bg)}.ant-table-tbody > tr.invalidRow:hover > td{background-color:var(--color-error-bg)}.ant-table-tbody > tr.disabledRow > td{background-color:var(--theme-gray-border-color)}.ant-table-tbody > .ant-table-row-selected td{background:var(--antd-table-cell-fixed-body-bg)!important}td.alignTop{vertical-align:top}td.alignBottom{vertical-align:bottom}.expandIconCellHidden .ant-table-row-expand-icon-cell,\n.expandIconCellHidden .ant-table-expand-icon-col{width:1px;min-width:auto}.expandIconCellHidden .ant-table-row-expand-icon-cell > *,\n.expandIconCellHidden .ant-table-expand-icon-col > *{display:none}.expandIconSpan{cursor:pointer;margin-right:9px;color:var(--antd-table-row-expand-icon-color);font-size:11px}.expandIconSpan .anticon{background:var(--antd-table-row-expand-icon-action-bg);border-radius:2px;padding:3px}.tableThTransparent thead.ant-table-thead > tr > th{background:var(--antd-table-header-bg)}.zebraPatternTable .ant-table-tbody tr td{border-bottom:0}.ellipsis{max-width:240px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.totalText{color:var(--antd-pagination-total-text)}.total{font-weight:normal;color:var(--antd-pagination-total-strong-text)}.ant-table-wrapper .ant-table-thead > tr > th{padding:11px 16px;font-size:12px;line-height:20px;border-bottom:0;font-weight:500;color:var(--antd-table-header-color)}.ant-table-wrapper .ant-table-pagination.ant-pagination{margin:24px 0}.xSmallSizeTable .ant-table{line-height:1}.xSmallSizeTable .ant-table .ant-table-selection-col{width:32px}.xSmallSizeTable .ant-table-thead tr th,\n.xSmallSizeTable .ant-table-tbody tr td{padding:0px 2px}.xSmallSizeTable .ant-table-thead tr th:first-child,\n.xSmallSizeTable .ant-table-tbody tr td:first-child{padding:0}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n"],"names":["initializeReactI18n","NS","locales","type","downMenuIcon","lib","icon","theme","rightMenuIcon","WrappedIcon","wrapBrick","DraggableBodyRow","_ref","index","moveRow","className","style","restProps","ref","React","isOver","dropClassName","drop","useDrop","accept","collect","monitor","dragIndex","getItem","item","drag","useDrag","isDragging","_extends","classNames","cursor","getCustomHeader","useBrick","data","ReactUseMultipleBricks","getCustomComp","itemBrickDataMap","value","brickData","get","cellData","rowData","columnIndex","set","BrickTable","props","useTranslation","locale","i18n","language","split","zhCN","enUS","error","configProps","pagination","sortBy","columns","rowKey","expandIconAsCell","expandIconColumnIndex","childrenColumnName","scroll","optimizedColumns","onDelete","ellipsisInfo","showHeader","initData","useMemo","_props$dataSource","dataSource","map","isNil","setData","useState","rowKeyExpandIconMapRef","useRef","Map","columnTitleBrickDataMapRef","useBrickItemBrickDataMapRef","itemExpandedRowBrickDataMapRef","useEffect","current","clear","expandIconColumnIndexOffset","rowSelection","customColumns","column","valueSuffix","cellStatus","cellStyle","headerBrick","colSpanKey","rowSpanKey","filterDropdownBrick","columnConf","title","filterDropdown","render","shouldCellUpdate","record","prevRecord","isEqual","Number","innerRender","children","colSpan","rowSpan","getCellStyle","dataIndex","toPath","verticalAlign","components","body","row","hoverIndex","dragRow","newData","update","$splice","onDrag","pickExpandProps","pickBy","expandRowByClick","expandedRowKeys","defaultExpandAllRows","table","Table","expandIconCellHidden","customDropTable","tableDraggable","tableThTransparent","thTransparent","zebraPatternTable","length","zebraPattern","xSmallSizeTable","onRow","onChange","expandedRowBrick","expandedRowRender","_props$expandedRowBri","rowIndex","onExpand","expanded","showSorterTooltip","onExpandedRowsChange","expandedRows","rowClassName","invalidRow","disabledRow","expandIcon","iconProps","_props$expandIcon","expandable","iconNode","collapsedIcon","_props$expandIcon2","expandedIcon","onClick","e","visibility","DndProvider","backend","HTML5Backend","cahce","createCache","ConfigProvider","StyleProvider","container","shadowRoot","cache","en","zh","defineElement","property","event","method","createDecorators","_TableComponent","_A","WeakMap","_TableComponent_brand","WeakSet","_B","_C","_D","_E","_F","_G","_H","_I","_J","_K","_L","_M","_N","_O","_P","_Q","_R","_S","_T","_U","_V","_W","_X","_Y","_Z","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_total","_AA","TableComponent","ReactNextElement","constructor","arguments","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_initProto","_init_pageUpdate","_init_extra_pageUpdate","_init_filterUpdate","_init_extra_filterUpdate","_init_selectUpdate","_init_extra_selectUpdate","_init_selectRowKeysUpdate","_init_extra_selectRowKeysUpdate","_init_sortUpdate","_init_extra_sortUpdate","_init_rowExpand","_init_extra_rowExpand","_init_expandRowsChange","_init_extra_expandRowsChange","_init_rowDrag","_init_extra_rowDrag","_init_showCard","_init_extra_showCard","_init_rowSelection","_init_extra_rowSelection","_init_rowKey","_init_extra_rowKey","_init_hiddenColumns","_init_extra_hiddenColumns","_init_showSelectInfo","_init_extra_showSelectInfo","_init_filters","_init_extra_filters","_init_configProps","_init_extra_configProps","_init_sort","_init_extra_sort","_init_order","_init_extra_order","_init_rowDisabledConfig","_init_extra_rowDisabledConfig","_init_expandedRowBrick","_init_extra_expandedRowBrick","_init_expandIcon","_init_extra_expandIcon","_init_expandIconAsCell","_init_extra_expandIconAsCell","_init_expandIconColumnIndex","_init_extra_expandIconColumnIndex","_init_expandRowByClick","_init_extra_expandRowByClick","_init_optimizedColumns","_init_extra_optimizedColumns","_init_stripEmptyExpandableChildren","_init_extra_stripEmptyExpandableChildren","_init_defaultExpandAllRows","_init_extra_defaultExpandAllRows","_init_ellipsisInfo","_init_extra_ellipsisInfo","_init_expandedRowKeys","_init_extra_expandedRowKeys","_init_selectAllChildren","_init_extra_selectAllChildren","_init_defaultSelectAll","_defineProperty","_init_extra_defaultSelectAll","_init_childrenColumnName","_init_extra_childrenColumnName","_init_sortable","_init_extra_sortable","_init_frontSearch","_init_extra_frontSearch","_init_frontSearchQuery","_init_extra_frontSearchQuery","_init_exactSearch","_init_extra_exactSearch","_init_frontSearchFilterKeys","_init_extra_frontSearchFilterKeys","_init_page","_init_extra_page","_init_pageSize","_init_extra_pageSize","_init_scrollConfigs","x","_init_extra_scrollConfigs","_init_qField","_init_extra_qField","_init_tableDraggable","_init_extra_tableDraggable","_init_zebraPattern","_init_extra_zebraPattern","_init_storeCheckedByUrl","_init_extra_storeCheckedByUrl","_init_extraRows","_init_extra_extraRows","_init_autoSelectParentWhenAllChildrenSelected","_init_extra_autoSelectParentWhenAllChildrenSelected","_init_thTransparent","_init_extra_thTransparent","_init_showHeader","_init_extra_showHeader","_init_pagination","_init_extra_pagination","_init_size","_init_extra_size","_init_type","_init_extra_type","_init_shouldUpdateUrlParams","_init_extra_shouldUpdateUrlParams","_init_shouldRenderWhenUrlParamsUpdate","_init_extra_shouldRenderWhenUrlParamsUpdate","page","pageSize","total","ascend","descend","_init_selectedRowKeys","_init_extra_selectedRowKeys","_this$configProps","this","_fields","list","parent","matchedParent","some","_findParentByChildKeyValue","selectedRowKeys","selectedRows","_getRowKey","rowKeyRowMap","keyBy","_selected","_selectedRowKeys","_allChildren","forEach","child","rowKeyValue","push","autoSelectParentWhenAllChildrenSelected","_selectedRow","selectedRowKeySet","Set","_dataSource","every","has","uniq","pullAll","concat","undefined","extraRowKeyRowMap","extraRows","_selectedRows","key","detail","isEmpty","_selectUpdateEventDetailField","_selectUpdateEventDetailKeys","merge","_selectUpdateEventDetailExtra","_selectUpdateEventName","dispatchEvent","CustomEvent","_classPrivateGetter","_get_selectUpdate","emit","_get_selectRowKeysUpdate","result","isArray","_getSelectedRowsWithChildren","checked","_isInSelect","allChildren","selectAllChildren","_disabledChildrenKeys","storeCheckedByUrl","_updateUrlChecked","selected","changeRows","allParentKeys","changedParentRows","filter","v","includes","toChangedChildrenKeys","flatten","r","cr","history","getHistory","URLSearchParams","location","search","options","checkedOptions","_getCheckedFromUrl","pull","shouldUpdateUrlParams","pushQuery","join","notify","filters","sorter","urlSearchParams","toString","_get_filterUpdate","newPage","_get_pageUpdate","delete","order","columnKey","sort","_get_sortUpdate","frontSearch","frontendSearch","shouldRenderWhenUrlParamsUpdate","marginLeft","role","pullKeys","recordChildren","keysToPull","c","_render","_get_rowExpand","_get_expandRowsChange","_get_rowDrag","allRows","getRowsOfData","_getAllRows","_this$configProps3","defaultPagination","_classPrivateFieldGet","showSizeChanger","pageSizeOptions","showTotal","totals","_this$configProps2","showSelectInfo","renderSelectInfo","rowDisabledConfig","Array","defaultRowSelection","defaultSelectAll","_handleDefaultSelectAll","onSelect","_handleOnSelect","onSelectAll","_handleSelectAll","_handleRowSelectChange","preserveSelectedRowKeys","getCheckboxProps","disabled","config","field","operator","fun","compareFunMap","_finalConfigProps","cloneDeep","size","rowSelec","_columns","sortOrder","_get","filteredValue","filtered","_find","find","f","String","_originalDataSource","_pureSource","stripEmptyExpandableChildren","_this$configProps4","columnName","stripEmptyExpandableChildrenByName","_classPrivateFieldSet","showCard","hiddenColumns","sortable","fields","frontSearchQuery","exactSearch","frontSearchFilterKeys","scrollConfigs","qField","processedDataSource","processConfigProps","processedColumns","getModifyColumns","filterSourceData","q","trim","toLowerCase","handleFrontendDataChange","tempDataSource","handleFrontendFilterSource","handleFrontendSorter","handleFrontendFilters","filterKeys","_filterKeys","filteredChildren","JSON","stringify","direction","a","b","aValue","bValue","filtersArray","k","_filter$value","expandAll","allKeys","getKeysOfData","_this$hiddenColumns","_initConfigProps","_error","_handleOnChange","_handleOnExpand","_handleOnExpandedRowsChange","draggable","_handleOnDrag","_test_only_getOriginalDataSource","updateData","updateError","selectUpdateEventName","selectUpdateEventDetailKeys","selectUpdateEventDetailField","selectUpdateEventDetailExtra","_TableComponent2","_set_pageUpdate","_set_filterUpdate","_set_selectUpdate","_set_selectRowKeysUpdate","_set_sortUpdate","_set_rowExpand","_set_expandRowsChange","_set_rowDrag","_initClass","_applyDecs","styleTexts","styleText","alias","o","cancelable","Boolean","attribute","_","_checkInRHS","$eq","$lt","lt","$lte","lte","$gt","gt","$gte","gte","$ne","fieldValue","$isEqual","$notEqual","$in","$nin","$exists","isUndefined","mapping","finalValue","ret","borderLeft","leftBorderColor","keys","rows","name","_value$name","___CSS_LOADER_EXPORT___","module","id"],"sourceRoot":""}
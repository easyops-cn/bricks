"use strict";(globalThis.webpackChunkbrick_docs=globalThis.webpackChunkbrick_docs||[]).push([[8931],{6999:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>s,default:()=>T,frontMatter:()=>c,metadata:()=>u,toc:()=>g});var a=t(5893),i=t(1151),r=t(4752),o=t(7886),p=(t(7268),t(5673)),d=t(1243),l=(t(9898),t(9265)),y=t(2535);const c={description:"<eo-diagram>"},s=void 0,u={id:"bricks/diagram/eo-diagram",title:"eo-diagram",description:"<eo-diagram>",source:"@site/docs/bricks/diagram/eo-diagram.mdx",sourceDirName:"bricks/diagram",slug:"/bricks/diagram/eo-diagram",permalink:"/bricks/diagram/eo-diagram",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{description:"<eo-diagram>"},sidebar:"docsSidebar",previous:{title:"editable-label",permalink:"/bricks/diagram/editable-label"},next:{title:"eo-display-canvas",permalink:"/bricks/diagram/eo-display-canvas"}},m={},g=[{value:"Examples",id:"examples",level:2},{value:"Basic",id:"basic",level:3},{value:"Page Architecture",id:"page-architecture",level:3},{value:"Force",id:"force",level:3},{value:"Properties",id:"properties",level:2},{value:"Events",id:"events",level:2},{value:"Methods",id:"methods",level:2},{value:"Type references",id:"type-references",level:2}];function b(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return y.vy||f("TypeReferencesContext",!1),y.vy.Provider||f("TypeReferencesContext.Provider",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.Z,{name:"eo-diagram",alias:null,insider:!1,deprecated:!1}),"\n",(0,a.jsxs)(n.p,{children:["\u6784\u4ef6 ",(0,a.jsx)(n.code,{children:"eo-diagram"})]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.h3,{id:"basic",children:"Basic"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'preview minHeight="600px"',children:'brick: div\nproperties:\n  style:\n    position: fixed\n    height: 100vh\n    width: 100vw\n    top: 0px\n    left: 0px\ncontext:\n  - name: activeTarget\n    value: null\n  - name: nodes\n    value:\n      - id: kspacey\n        label: Kevin Spacey\n      - id: swilliams\n        label: Saul Williams\n      - id: bpitt\n        label: Brad Pitt\n      # - id: hford\n      #   label: Harrison Ford\n      - id: lwilson\n        label: Luke Wilson\n      - id: kbacon\n        label: Kevin Bacon\n  - name: edges\n    value:\n      - source: kspacey\n        target: swilliams\n      - source: swilliams\n        target: kbacon\n      - source: bpitt\n        target: kbacon\n      # - source: hford\n      #   target: lwilson\n      - source: lwilson\n        target: kbacon\nchildren:\n  - brick: eo-button\n    properties:\n      textContent: Add Harrison Ford\n    events:\n      click:\n        - action: context.replace\n          args:\n            - nodes\n            - |\n              <%\n                CTX.nodes.concat({\n                  id: "hford",\n                  label: "Harrison Ford",\n                })\n              %>\n        - action: context.replace\n          args:\n            - edges\n            - |\n              <%\n                CTX.edges.concat({\n                  source: "hford",\n                  target: "lwilson",\n                })\n              %>\n        - target: _self\n          properties:\n            style:\n              visibility: hidden\n  - brick: eo-button\n    properties:\n      textContent: Remove Kevin Spacey\n    events:\n      click:\n        - action: context.replace\n          args:\n            - nodes\n            - |\n              <%\n                CTX.nodes.filter(node => node.id !== "kspacey")\n              %>\n        - action: context.replace\n          args:\n            - edges\n            - |\n              <%\n                CTX.edges.filter(({ source, target }) => source !== "kspacey" && target !== "kspacey")\n              %>\n        - target: _self\n          properties:\n            style:\n              visibility: hidden\n  - brick: eo-diagram\n    properties:\n      layout: dagre\n      nodes: <%= CTX.nodes %>\n      edges: <%= CTX.edges %>\n      lines:\n        - arrow: true\n      activeTarget: <%= CTX.activeTarget %>\n      nodeBricks:\n        - useBrick:\n            # if: <% DATA.node.id !== "kbacon" %>\n            brick: div\n            properties:\n              style: |\n                <%=\n                  {\n                    width: "180px",\n                    height: "100px",\n                    border: "2px solid green",\n                    display: "flex",\n                    alignItems: "center",\n                    justifyContent: "center",\n                    outline: CTX.activeTarget?.type === "node" && CTX.activeTarget.nodeId === DATA.node.id ? "2px solid orange" : "none",\n                    outlineOffset: "2px",\n                  }\n                %>\n            children:\n              - brick: span\n                properties:\n                  textContent: <% DATA.node.label %>\n            events:\n              click:\n                action: context.replace\n                args:\n                  - activeTarget\n                  - type: node\n                    nodeId: <% DATA.node.id %>\n    events:\n      activeTarget.change:\n        action: context.replace\n        args:\n          - activeTarget\n          - <% EVENT.detail %>\n# -- YAML HEADING DELIMITER start (1nbbm8) --\ndiagram/eo-diagram/basic\n# -- YAML HEADING DELIMITER end (1nbbm8) --\n# -- YAML DELIMITER (1nbbm8) --\n# <div style="position: fixed; height: 100vh; width: 100vw; top: 0px; left: 0px">\n#   <eo-button id="brick-1">Add Harrison Ford</eo-button>\n#   <eo-button id="brick-2">Remove Kevin Spacey</eo-button>\n#   <eo-diagram layout="dagre" id="brick-3"></eo-diagram>\n# </div>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.addEventListener("click", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n#   brick_1.addEventListener("click", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n#   brick_1.addEventListener("click", (e) => {\n#     const brick = e.target;\n#     brick.style = {\n#       visibility: "hidden",\n#     };\n#   });\n# \n#   const brick_2 = document.getElementById("brick-2");\n#   brick_2.addEventListener("click", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n#   brick_2.addEventListener("click", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n#   brick_2.addEventListener("click", (e) => {\n#     const brick = e.target;\n#     brick.style = {\n#       visibility: "hidden",\n#     };\n#   });\n# \n#   const brick_3 = document.getElementById("brick-3");\n#   brick_3.nodes = "<%= CTX.nodes %>";\n#   brick_3.edges = "<%= CTX.edges %>";\n#   brick_3.lines = [\n#     {\n#       arrow: true,\n#     },\n#   ];\n#   brick_3.activeTarget = "<%= CTX.activeTarget %>";\n#   brick_3.nodeBricks = [\n#     {\n#       useBrick: {\n#         brick: "div",\n#         properties: {\n#           style:\n#             \'<%=\\n  {\\n    width: "180px",\\n    height: "100px",\\n    border: "2px solid green",\\n    display: "flex",\\n    alignItems: "center",\\n    justifyContent: "center",\\n    outline: CTX.activeTarget?.type === "node" && CTX.activeTarget.nodeId === DATA.node.id ? "2px solid orange" : "none",\\n    outlineOffset: "2px",\\n  }\\n%>\\n\',\n#         },\n#         children: [\n#           {\n#             brick: "span",\n#             properties: {\n#               textContent: "<% DATA.node.label %>",\n#             },\n#           },\n#         ],\n#         events: {\n#           click: {\n#             action: "context.replace",\n#             args: [\n#               "activeTarget",\n#               {\n#                 type: "node",\n#                 nodeId: "<% DATA.node.id %>",\n#               },\n#             ],\n#           },\n#         },\n#       },\n#     },\n#   ];\n#   brick_3.addEventListener("activeTarget.change", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n# <\/script>\n# \n'})}),"\n",(0,a.jsx)(n.h3,{id:"page-architecture",children:"Page Architecture"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'preview minHeight="600px"',children:'brick: div\nproperties:\n  style:\n    position: fixed\n    height: 100vh\n    width: 100vw\n    top: 0px\n    left: 0px\ncontext:\n  - name: activeTarget\n    value: null\n  - name: tempNodeId\n  - name: targetNode\n  - name: editingLabelNodes\n    value: []\n  - name: editingLabelEdges\n    value: []\n  - name: nodes\n    value:\n      - type: board\n        id: 60bf6078b095f\n        name: Visual Builder\n        depth: 0\n        parentId:\n        description: \u67d0\u67d0\u4ea7\u54c1\n      - type: page\n        id: 60bf60848d6d2\n        name: \u9879\u76ee\u5217\u8868\n        depth: 1\n        parentId: 60bf6078b095f\n        description: \u5217\u8868\u9875\n      - type: page\n        id: 60d533eba4ab2\n        name: ccc\n        depth: 1\n        parentId: 60bf6078b095f\n        description: cccc\n      - type: link\n        id: 60bf6091a1089\n        name: \u65b0\u5efa\u9879\u76ee\n        pageType: information:form:basic-form\n        description: \u65b0\u5efa\u9875213\n        to:\n          "@":\n            description: \u65e0\u9879\u76ee\n            instanceId: 60c5fea301b32\n          description: \u65b0\u5efa\u9875213\n          instanceId: 60bf6091a1089\n          module: []\n          name: \u65b0\u5efa\u9879\u76ee\n          pageType: information:form:basic-form\n        depth: -1\n        parentId:\n      - type: link\n        id: 60bf60a258613\n        name: \u9879\u76ee\u9996\u9875-\u8def\u7531\u7ba1\u7406\n        description: \u8def\u7531\u7ba1\u7406\n        to:\n          description: \u8def\u7531\u7ba1\u7406\n          instanceId: 60bf60a258613\n          module:\n            - instanceId: 60bf609b26889\n              name: Project\n          name: \u9879\u76ee\u9996\u9875-\u8def\u7531\u7ba1\u7406\n        depth: -1\n        parentId:\n      - type: link\n        id: 60c5f39a2c2e1\n        name: Launchpad \u51fa\u5382\u914d\u7f6e\n        description: Launchpad \u51fa\u5382\u914d\u7f6e\n        to:\n          description: Launchpad \u51fa\u5382\u914d\u7f6e\n          instanceId: 60c5f39a2c2e1\n          module: []\n          name: Launchpad \u51fa\u5382\u914d\u7f6e\n        depth: -1\n        parentId:\n  - name: edges\n    value:\n      - type: menu\n        source: 60bf6078b095f\n        target: 60bf60848d6d2\n      - type: menu\n        source: 60bf6078b095f\n        target: 60d533eba4ab2\n      - type: link\n        source: 60bf60848d6d2\n        target: 60bf6091a1089\n        description: \u65e0\u9879\u76ee\n      - type: link\n        source: 60bf60848d6d2\n        target: 60bf60a258613\n      - type: link\n        source: 60bf60848d6d2\n        target: 60c5f39a2c2e1\nchildren:\n  - brick: eo-diagram\n    properties:\n      layout: dagre\n      nodes: <%= CTX.nodes %>\n      edges: <%= CTX.edges %>\n      lines:\n        - edgeType: link\n          strokeColor: var(--theme-blue-color)\n          arrow: true\n          interactable: true\n          label:\n            useBrick:\n              brick: diagram.editable-label\n              properties:\n                label: <% DATA.edge.description %>\n                type: line\n              events:\n                label.change:\n                  if: <% (DATA.edge.description || "") !== (EVENT.detail || "") %>\n                  action: context.replace\n                  args:\n                    - edges\n                    - |-\n                      <%\n                        CTX.edges.map((edge) =>\n                          edge.source === DATA.edge.source &&\n                          edge.target === DATA.edge.target\n                            ? { ...edge, description: EVENT.detail }\n                            : edge\n                        )\n                      %>\n                label.editing.change:\n                  action: context.replace\n                  args:\n                    - editingLabelEdges\n                    - |-\n                      <%\n                        EVENT.detail\n                          ? CTX.editingLabelEdges.concat(\n                              `${DATA.edge.source}-:-${DATA.edge.target}`\n                            )\n                          : CTX.editingLabelEdges.filter(\n                              (id) =>\n                                id !== `${DATA.edge.source}-:-${DATA.edge.target}`\n                            )\n                      %>\n                click:\n                  action: context.replace\n                  args:\n                    - activeTarget\n                    - type: edge\n                      edge: <% DATA.edge %>\n        - edgeType: menu\n          strokeColor: var(--palette-gray-5)\n          arrow: true\n          interactable: true\n      layoutOptions:\n        nodePadding: [4, 10, 10]\n      activeTarget: <%= CTX.activeTarget %>\n      disableKeyboardAction: <%= CTX.editingLabelNodes.length > 0 || CTX.editingLabelEdges.length > 0 %>\n      connectNodes:\n        arrow: true\n        strokeColor: |-\n          <%\n            DATA.source.type === "board"\n              ? "var(--palette-gray-5)"\n              : "var(--theme-blue-color)"\n          %>\n      nodeBricks:\n        - useBrick:\n            brick: visual-builder.page-arch-node\n            properties:\n              label: <% DATA.node.name %>\n              type: <% DATA.node.type %>\n              autoFocusOnce: |\n                <% DATA.node.$temp ? DATA.node.id : undefined %>\n              active: <%= CTX.activeTarget?.type === "node" && CTX.activeTarget.nodeId === DATA.node.id %>\n            events:\n              click:\n                action: context.replace\n                args:\n                  - activeTarget\n                  - type: node\n                    nodeId: <% DATA.node.id %>\n              label.editing.change:\n                action: context.replace\n                args:\n                  - editingLabelNodes\n                  - |\n                    <%\n                      EVENT.detail\n                        ? CTX.editingLabelNodes.concat(DATA.node.id)\n                        : CTX.editingLabelNodes.filter(\n                            id => id !== DATA.node.id\n                          )\n                    %>\n              label.change:\n              - if: <% CTX.nodes.find(({id}) => id === DATA.node.id)?.$temp %>\n                action: context.replace\n                args:\n                args:\n                  - nodes\n                  - |\n                    <%\n                      CTX.nodes.map((node) => (\n                        node.id === DATA.node.id\n                          ? { ...node, $temp: false, name: EVENT.detail }\n                          : node\n                      ))\n                    %>\n                # Take reaction only if the label has been changed\n              - if: <% CTX.nodes.find(({id}) => id === DATA.node.id)?.name !== EVENT.detail %>\n                action: context.replace\n                args:\n                  - nodes\n                  - |\n                    <%\n                      CTX.nodes.map((node) => (\n                        node.id === DATA.node.id\n                          ? { ...node, name: EVENT.detail }\n                          : node\n                      ))\n                    %>\n              child.append:\n                - action: context.replace\n                  args:\n                    - tempNodeId\n                    - <% _.uniqueId(\'$temp-\') %>\n                - action: context.replace\n                  args:\n                    - nodes\n                    - |\n                      <% CTX.nodes.concat({ id: CTX.tempNodeId, name: "\u672a\u547d\u540d", $temp: true }) %>\n                - action: context.replace\n                  args:\n                    - edges\n                    - |\n                      <% CTX.edges.concat({ source: DATA.node.id, target: CTX.tempNodeId, name: "\u672a\u547d\u540d", type: "link", $temp: true }) %>\n                - action: context.replace\n                  args:\n                    - activeTarget\n                    - type: node\n                      nodeId: <% CTX.tempNodeId %>\n    events:\n      activeTarget.change:\n        action: context.replace\n        args:\n          - activeTarget\n          - <% EVENT.detail %>\n      node.delete:\n        - action: context.replace\n          args:\n            - targetNode\n            - <% EVENT.detail %>\n        - useProvider: basic.show-dialog\n          args:\n          - type: delete\n            title: Delete Confirm\n            content: Please enter {{ expect }} to delete the node.\n            expect: <% EVENT.detail.name || "\u672a\u547d\u540d" %>\n          callback:\n            success:\n            - action: context.replace\n              args:\n                - nodes\n                - |-\n                  <%\n                    CTX.nodes.filter(\n                      ({ id }) => id !== CTX.targetNode.id\n                    )\n                  %>\n            - action: context.replace\n              args:\n                - edges\n                - |-\n                  <%\n                    CTX.edges.filter(\n                      ({ source, target }) =>\n                        source !== CTX.targetNode.id &&\n                        target !== CTX.targetNode.id\n                    )\n                  %>\n      edge.delete:\n        action: context.replace\n        args:\n          - edges\n          - |-\n            <%\n              CTX.edges.filter(\n                ({ source, target }) =>\n                  source !== EVENT.detail.source ||\n                  target !== EVENT.detail.target\n              )\n            %>\n      line.click:\n        action: context.replace\n        args:\n          - activeTarget\n          - type: edge\n            edge: <% EVENT.detail.edge %>\n      line.dblclick:\n        target: _self\n        method: callOnLineLabel\n        args:\n          - <% `${EVENT.detail.id}-center` %>\n          - enableEditing\n      nodes.connect:\n        if: |-\n          <%\n            EVENT.detail.target.type !== "board" &&\n            !CTX.edges.some(\n              (edge) =>\n                edge.source === EVENT.detail.source.id &&\n                edge.target === EVENT.detail.target.id\n            )\n          %>\n        action: context.replace\n        args:\n          - edges\n          - |-\n            <%\n              CTX.edges.concat({\n                source: EVENT.detail.source.id,\n                target: EVENT.detail.target.id,\n                type:\n                  EVENT.detail.source.type === "board"\n                    ? "menu"\n                    : "link",\n              })\n            %>\n# -- YAML HEADING DELIMITER start (1nbbm8) --\ndiagram/eo-diagram/page architecture\n# -- YAML HEADING DELIMITER end (1nbbm8) --\n# -- YAML DELIMITER (1nbbm8) --\n# <div style="position: fixed; height: 100vh; width: 100vw; top: 0px; left: 0px">\n#   <eo-diagram layout="dagre" disable-keyboard-action id="brick-1"></eo-diagram>\n# </div>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.nodes = "<%= CTX.nodes %>";\n#   brick_1.edges = "<%= CTX.edges %>";\n#   brick_1.lines = [\n#     {\n#       edgeType: "link",\n#       strokeColor: "var(--theme-blue-color)",\n#       arrow: true,\n#       interactable: true,\n#       label: {\n#         useBrick: {\n#           brick: "diagram.editable-label",\n#           properties: {\n#             label: "<% DATA.edge.description %>",\n#             type: "line",\n#           },\n#           events: {\n#             "label.change": {\n#               if: \'<% (DATA.edge.description || "") !== (EVENT.detail || "") %>\',\n#               action: "context.replace",\n#               args: [\n#                 "edges",\n#                 "<%\\n  CTX.edges.map((edge) =>\\n    edge.source === DATA.edge.source &&\\n    edge.target === DATA.edge.target\\n      ? { ...edge, description: EVENT.detail }\\n      : edge\\n  )\\n%>",\n#               ],\n#             },\n#             "label.editing.change": {\n#               action: "context.replace",\n#               args: [\n#                 "editingLabelEdges",\n#                 "<%\\n  EVENT.detail\\n    ? CTX.editingLabelEdges.concat(\\n        `${DATA.edge.source}-:-${DATA.edge.target}`\\n      )\\n    : CTX.editingLabelEdges.filter(\\n        (id) =>\\n          id !== `${DATA.edge.source}-:-${DATA.edge.target}`\\n      )\\n%>",\n#               ],\n#             },\n#             click: {\n#               action: "context.replace",\n#               args: [\n#                 "activeTarget",\n#                 {\n#                   type: "edge",\n#                   edge: "<% DATA.edge %>",\n#                 },\n#               ],\n#             },\n#           },\n#         },\n#       },\n#     },\n#     {\n#       edgeType: "menu",\n#       strokeColor: "var(--palette-gray-5)",\n#       arrow: true,\n#       interactable: true,\n#     },\n#   ];\n#   brick_1.layoutOptions = {\n#     nodePadding: [4, 10, 10],\n#   };\n#   brick_1.activeTarget = "<%= CTX.activeTarget %>";\n#   brick_1.connectNodes = {\n#     arrow: true,\n#     strokeColor:\n#       \'<%\\n  DATA.source.type === "board"\\n    ? "var(--palette-gray-5)"\\n    : "var(--theme-blue-color)"\\n%>\',\n#   };\n#   brick_1.nodeBricks = [\n#     {\n#       useBrick: {\n#         brick: "visual-builder.page-arch-node",\n#         properties: {\n#           label: "<% DATA.node.name %>",\n#           type: "<% DATA.node.type %>",\n#           autoFocusOnce: "<% DATA.node.$temp ? DATA.node.id : undefined %>\\n",\n#           active:\n#             \'<%= CTX.activeTarget?.type === "node" && CTX.activeTarget.nodeId === DATA.node.id %>\',\n#         },\n#         events: {\n#           click: {\n#             action: "context.replace",\n#             args: [\n#               "activeTarget",\n#               {\n#                 type: "node",\n#                 nodeId: "<% DATA.node.id %>",\n#               },\n#             ],\n#           },\n#           "label.editing.change": {\n#             action: "context.replace",\n#             args: [\n#               "editingLabelNodes",\n#               "<%\\n  EVENT.detail\\n    ? CTX.editingLabelNodes.concat(DATA.node.id)\\n    : CTX.editingLabelNodes.filter(\\n        id => id !== DATA.node.id\\n      )\\n%>\\n",\n#             ],\n#           },\n#           "label.change": [\n#             {\n#               if: "<% CTX.nodes.find(({id}) => id === DATA.node.id)?.$temp %>",\n#               action: "context.replace",\n#               args: [\n#                 "nodes",\n#                 "<%\\n  CTX.nodes.map((node) => (\\n    node.id === DATA.node.id\\n      ? { ...node, $temp: false, name: EVENT.detail }\\n      : node\\n  ))\\n%>\\n",\n#               ],\n#             },\n#             {\n#               if: "<% CTX.nodes.find(({id}) => id === DATA.node.id)?.name !== EVENT.detail %>",\n#               action: "context.replace",\n#               args: [\n#                 "nodes",\n#                 "<%\\n  CTX.nodes.map((node) => (\\n    node.id === DATA.node.id\\n      ? { ...node, name: EVENT.detail }\\n      : node\\n  ))\\n%>\\n",\n#               ],\n#             },\n#           ],\n#           "child.append": [\n#             {\n#               action: "context.replace",\n#               args: ["tempNodeId", "<% _.uniqueId(\'$temp-\') %>"],\n#             },\n#             {\n#               action: "context.replace",\n#               args: [\n#                 "nodes",\n#                 \'<% CTX.nodes.concat({ id: CTX.tempNodeId, name: "\u672a\u547d\u540d", $temp: true }) %>\\n\',\n#               ],\n#             },\n#             {\n#               action: "context.replace",\n#               args: [\n#                 "edges",\n#                 \'<% CTX.edges.concat({ source: DATA.node.id, target: CTX.tempNodeId, name: "\u672a\u547d\u540d", type: "link", $temp: true }) %>\\n\',\n#               ],\n#             },\n#             {\n#               action: "context.replace",\n#               args: [\n#                 "activeTarget",\n#                 {\n#                   type: "node",\n#                   nodeId: "<% CTX.tempNodeId %>",\n#                 },\n#               ],\n#             },\n#           ],\n#         },\n#       },\n#     },\n#   ];\n#   brick_1.addEventListener("activeTarget.change", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n#   brick_1.addEventListener("node.delete", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n#   brick_1.addEventListener("node.delete", (e) => {\n#     const provider = document.createElement("basic.show-dialog");\n#     const promise = Promise.resolve(\n#       provider.resolve({\n#         type: "delete",\n#         title: "Delete Confirm",\n#         content: "Please enter {{ expect }} to delete the node.",\n#         expect: \'<% EVENT.detail.name || "\u672a\u547d\u540d" %>\',\n#       })\n#     );\n#     promise.then((r) => {\n#       // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#     });\n#     promise.then((r) => {\n#       // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#     });\n#   });\n#   brick_1.addEventListener("edge.delete", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n#   brick_1.addEventListener("line.click", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n#   brick_1.addEventListener("line.dblclick", (e) => {\n#     const brick = e.target;\n#     brick.callOnLineLabel(\n#       /* WARN: incompatible expressions in HTML, please try YAML: */\n#       "<% `${EVENT.detail.id}-center` %>",\n#       "enableEditing"\n#     );\n#   });\n#   brick_1.addEventListener("nodes.connect", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n# <\/script>\n# \n'})}),"\n",(0,a.jsx)(n.h3,{id:"force",children:"Force"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'preview minHeight="600px"',children:'brick: div\nproperties:\n  style:\n    position: fixed\n    height: 100vh\n    width: 100vw\n    top: 0px\n    left: 0px\ncontext:\n  - name: activeTarget\n    value: null\n  - name: nodes\n    value:\n      - id: \u4ea7\u54c1\u8bc4\u4ef7\n      - id: \u4ea7\u54c1\u7ebf\n      - id: \u7528\u6237\u89d2\u8272\n      - id: \u6a21\u578b\u89c6\u56fe\n      - id: \u4ea7\u54c1\n      - id: \u4e1a\u52a1\u573a\u666f\n      - id: \u4e1a\u52a1\u89c4\u5219\n      - id: \u6a21\u578b\n      - id: \u4ea7\u54c1\u6a21\u5757\n      - id: \u4ea7\u54c1\u4ef7\u503c\u70b9\n      - id: \u5de5\u4f5c\u6d41\n      - id: \u6d4b\u8bd5\u7528\u4f8b\n      - id: \u529f\u80fd\u70b9\n      # - id: \u5176\u4ed6\n  - name: edges\n    value:\n      - source: \u4ea7\u54c1\n        target: \u4ea7\u54c1\u8bc4\u4ef7\n        sourceName: \u8bc4\u4ef7\u5217\u8868\n        targetName: \u6240\u5c5e\u4ea7\u54c1\n        sourceConstraints:\n          required: true\n        targetConstraints:\n          multiple: true\n      - source: \u4ea7\u54c1\n        target: \u4ea7\u54c1\u7ebf\n        sourceName: \u6240\u5c5e\u4ea7\u54c1\u7ebf\n        targetName: \u4ea7\u54c1\u5217\u8868\n        sourceConstraints:\n          multiple: true\n        targetConstraints:\n          required: true\n      - source: \u4ea7\u54c1\n        target: \u7528\u6237\u89d2\u8272\n        sourceName: \u8d1f\u8d23\u4eba\n        targetName: \u8d1f\u8d23\u7684\u4ea7\u54c1\n        sourceConstraints:\n          multiple: true\n        targetConstraints:\n          multiple: true\n      - source: \u4ea7\u54c1\n        target: \u6a21\u578b\u89c6\u56fe\n        sourceName: \u6a21\u578b\u89c6\u56fe\u5217\u8868\n        targetName: \u6240\u5c5e\u4ea7\u54c1\n        sourceConstraints:\n          required: true\n        targetConstraints:\n          multiple: true\n      - source: \u4ea7\u54c1\n        target: \u4e1a\u52a1\u573a\u666f\n        sourceName: \u4e1a\u52a1\u573a\u666f\u5217\u8868\n        targetName: \u6240\u5c5e\u4ea7\u54c1\n        sourceConstraints:\n          required: true\n        targetConstraints:\n          multiple: true\n      - source: \u4e1a\u52a1\u573a\u666f\n        target: \u4e1a\u52a1\u573a\u666f\n      - source: \u4e1a\u52a1\u573a\u666f\n        target: \u4e1a\u52a1\u89c4\u5219\n        sourceName: \u4e1a\u52a1\u89c4\u5219\u5217\u8868\n        targetName: \u6240\u5c5e\u4e1a\u52a1\u573a\u666f\n        sourceConstraints:\n          required: true\n        targetConstraints:\n          multiple: true\n      - source: \u4e1a\u52a1\u573a\u666f\n        target: \u7528\u6237\u89d2\u8272\n        sourceName: \u8d1f\u8d23\u4eba\n        targetName: \u8d1f\u8d23\u7684\u4e1a\u52a1\u573a\u666f\n        sourceConstraints:\n          multiple: true\n        targetConstraints:\n          multiple: true\n      - source: \u4ea7\u54c1\n        target: \u6a21\u578b\n        sourceName: \u6a21\u578b\u5217\u8868\n        targetName: \u5173\u8054\u7684\u4ea7\u54c1\n        sourceConstraints:\n          required: true\n        targetConstraints:\n          multiple: true\n      - source: \u4ea7\u54c1\n        target: \u4ea7\u54c1\u6a21\u5757\n        sourceName: \u6a21\u5757\u5217\u8868\n        targetName: \u6240\u5c5e\u4ea7\u54c1\n        sourceConstraints:\n          required: true\n        targetConstraints:\n          multiple: true\n      - source: \u4ea7\u54c1\n        target: \u4ea7\u54c1\u4ef7\u503c\u70b9\n        sourceName: \u4ef7\u503c\u70b9\u5217\u8868\n        targetName: \u6240\u5c5e\u4ea7\u54c1\n        sourceConstraints:\n          required: true\n        targetConstraints:\n          multiple: true\n      - source: \u4e1a\u52a1\u573a\u666f\n        target: \u4ea7\u54c1\u4ef7\u503c\u70b9\n        sourceName: \u4ef7\u503c\u70b9\u5217\u8868\n        targetName: \u5173\u8054\u7684\u4e1a\u52a1\u573a\u666f\n      - source: \u4e1a\u52a1\u573a\u666f\n        target: \u5de5\u4f5c\u6d41\n      - source: \u4e1a\u52a1\u89c4\u5219\n        target: \u5de5\u4f5c\u6d41\n      - source: \u4ea7\u54c1\u6a21\u5757\n        target: \u4ea7\u54c1\u6a21\u5757\n      - source: \u4ea7\u54c1\u6a21\u5757\n        target: \u6d4b\u8bd5\u7528\u4f8b\n        sourceName: \u6d4b\u8bd5\u7528\u4f8b\u5217\u8868\n        targetName: \u6240\u5c5e\u4ea7\u54c1\u6a21\u5757\n        sourceConstraints:\n          multiple: true\n        targetConstraints:\n          multiple: true\n      - source: \u4ea7\u54c1\u6a21\u5757\n        target: \u529f\u80fd\u70b9\n        sourceName: \u529f\u80fd\u70b9\u5217\u8868\n        targetName: \u6240\u5c5e\u4ea7\u54c1\u6a21\u5757\n        sourceConstraints:\n          required: true\n        targetConstraints:\n          multiple: true\n      - source: \u6d4b\u8bd5\u7528\u4f8b\n        target: \u529f\u80fd\u70b9\n        sourceName: \u5173\u8054\u7684\u529f\u80fd\u70b9\n        targetName: \u5173\u8054\u7684\u6d4b\u8bd5\u7528\u4f8b\n        sourceConstraints:\n          multiple: true\n        targetConstraints:\n          multiple: true\n      # - source: \u4ea7\u54c1\u7ebf\n      #   target: \u6a21\u578b\u89c6\u56fe\nchildren:\n  - brick: eo-diagram\n    properties:\n      layout: force\n      dragNodes: {}\n      nodes: <%= CTX.nodes %>\n      edges: <%= CTX.edges %>\n      activeTarget: <%= CTX.activeTarget %>\n      layoutOptions:\n        # nodePadding: 5\n        dummyNodesOnEdges: 1\n        collide:\n          dummyRadius: 10\n          radiusDiff: 40\n        # rankdir: LR\n        # acyclicer: greedy\n        # align: DL\n      lines:\n        - label:\n            - useBrick:\n                brick: span\n                properties:\n                  hidden: <%= CTX.activeTarget?.type !== "node" || (DATA.edge.source !== CTX.activeTarget.nodeId && DATA.edge.target !== CTX.activeTarget.nodeId) %>\n                  textContent: |\n                    <%= DATA.edge.source === CTX.activeTarget?.nodeId ? DATA.edge.sourceName : DATA.edge.target === CTX.activeTarget?.nodeId ? DATA.edge.targetName : "" %>\n                  style:\n                    color: var(--palette-gray-6)\n          overrides:\n            activeRelated:\n              strokeColor: var(--palette-blue-4)\n      nodeBricks:\n        - useBrick:\n            # if: <% DATA.node.id !== "kbacon" %>\n            brick: div\n            properties:\n              style: |\n                <%=\n                  {\n                    width: "160px",\n                    height: "50px",\n                    background: "var(--palette-green-1)",\n                    border: "1px solid var(--palette-gray-4)",\n                    borderRadius: "8px",\n                    display: "flex",\n                    alignItems: "center",\n                    justifyContent: "center",\n                    outline: CTX.activeTarget?.type === "node" && DATA.node.id === CTX.activeTarget.nodeId ? "2px solid orange" : "none",\n                    outlineOffset: "2px",\n                    cursor: "pointer",\n                    userSelect: "none",\n                  }\n                %>\n            children:\n              - brick: span\n                properties:\n                  textContent: <% DATA.node.id %>\n            events:\n              click:\n                action: context.replace\n                args:\n                  - activeTarget\n                  - type: node\n                    nodeId: <% DATA.node.id %>\n    events:\n      activeTarget.change:\n        action: context.replace\n        args:\n          - activeTarget\n          - <% EVENT.detail %>\n# -- YAML HEADING DELIMITER start (1nbbm8) --\ndiagram/eo-diagram/force\n# -- YAML HEADING DELIMITER end (1nbbm8) --\n# -- YAML DELIMITER (1nbbm8) --\n# <div style="position: fixed; height: 100vh; width: 100vw; top: 0px; left: 0px">\n#   <eo-diagram layout="force" id="brick-1"></eo-diagram>\n# </div>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.dragNodes = {};\n#   brick_1.nodes = "<%= CTX.nodes %>";\n#   brick_1.edges = "<%= CTX.edges %>";\n#   brick_1.activeTarget = "<%= CTX.activeTarget %>";\n#   brick_1.layoutOptions = {\n#     dummyNodesOnEdges: 1,\n#     collide: {\n#       dummyRadius: 10,\n#       radiusDiff: 40,\n#     },\n#   };\n#   brick_1.lines = [\n#     {\n#       label: [\n#         {\n#           useBrick: {\n#             brick: "span",\n#             properties: {\n#               hidden:\n#                 \'<%= CTX.activeTarget?.type !== "node" || (DATA.edge.source !== CTX.activeTarget.nodeId && DATA.edge.target !== CTX.activeTarget.nodeId) %>\',\n#               textContent:\n#                 \'<%= DATA.edge.source === CTX.activeTarget?.nodeId ? DATA.edge.sourceName : DATA.edge.target === CTX.activeTarget?.nodeId ? DATA.edge.targetName : "" %>\\n\',\n#               style: {\n#                 color: "var(--palette-gray-6)",\n#               },\n#             },\n#           },\n#         },\n#       ],\n#       overrides: {\n#         activeRelated: {\n#           strokeColor: "var(--palette-blue-4)",\n#         },\n#       },\n#     },\n#   ];\n#   brick_1.nodeBricks = [\n#     {\n#       useBrick: {\n#         brick: "div",\n#         properties: {\n#           style:\n#             \'<%=\\n  {\\n    width: "160px",\\n    height: "50px",\\n    background: "var(--palette-green-1)",\\n    border: "1px solid var(--palette-gray-4)",\\n    borderRadius: "8px",\\n    display: "flex",\\n    alignItems: "center",\\n    justifyContent: "center",\\n    outline: CTX.activeTarget?.type === "node" && DATA.node.id === CTX.activeTarget.nodeId ? "2px solid orange" : "none",\\n    outlineOffset: "2px",\\n    cursor: "pointer",\\n    userSelect: "none",\\n  }\\n%>\\n\',\n#         },\n#         children: [\n#           {\n#             brick: "span",\n#             properties: {\n#               textContent: "<% DATA.node.id %>",\n#             },\n#           },\n#         ],\n#         events: {\n#           click: {\n#             action: "context.replace",\n#             args: [\n#               "activeTarget",\n#               {\n#                 type: "node",\n#                 nodeId: "<% DATA.node.id %>",\n#               },\n#             ],\n#           },\n#         },\n#       },\n#     },\n#   ];\n#   brick_1.addEventListener("activeTarget.change", (e) => {\n#     // WARN: encountered incompatible event handlers in HTML mode, please try YAML.\n#   });\n# <\/script>\n# \n'})}),"\n",(0,a.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(y.vy.Provider,{value:["DiagramNode","DiagramNodeId","DiagramEdge","NodeBrickConf","LineConf","LineType","CurveType","TextOptions","LineLabelPlacement","LineLabelConf","LineConfOverrides","LineConfOverridable","LineMarkerConf","LineMarkerPlacement","LineMarkerType","LayoutOptions","LayoutOptionsDagre","BaseLayoutOptions","PartialRectTuple","LayoutOptionsForce","ForceCollideOptions","ActiveTarget","ActiveTargetOfNode","ActiveTargetOfEdge","ConnectNodesOptions","NodesFilterOptions","DragNodesOptions","UserViewQuery","RangeTuple","LineTarget","ConnectLineDetail"],children:(0,a.jsx)(o.Z,{properties:[{name:"layout",description:"",required:!0,type:'"dagre" | "force"',annotation:{type:"union",types:[{type:"jsLiteral",value:"dagre"},{type:"jsLiteral",value:"force"}]}},{name:"nodes",attribute:!1,type:"DiagramNode[]",annotation:{type:"array",elementType:{type:"reference",typeName:{type:"identifier",name:"DiagramNode"}}}},{name:"edges",attribute:!1,type:"DiagramEdge[]",annotation:{type:"array",elementType:{type:"reference",typeName:{type:"identifier",name:"DiagramEdge"}}}},{name:"nodeBricks",attribute:!1,type:"NodeBrickConf[]",annotation:{type:"array",elementType:{type:"reference",typeName:{type:"identifier",name:"NodeBrickConf"}}}},{name:"lines",attribute:!1,type:"LineConf[]",annotation:{type:"array",elementType:{type:"reference",typeName:{type:"identifier",name:"LineConf"}}}},{name:"layoutOptions",attribute:!1,type:"LayoutOptions",annotation:{type:"reference",typeName:{type:"identifier",name:"LayoutOptions"}}},{name:"activeTarget",attribute:!1,type:"ActiveTarget | null",annotation:{type:"union",types:[{type:"reference",typeName:{type:"identifier",name:"ActiveTarget"}},{type:"keyword",value:"null"}]}},{name:"disableKeyboardAction",type:"boolean",annotation:{type:"keyword",value:"boolean"}},{name:"connectNodes",attribute:!1,type:"ConnectNodesOptions",annotation:{type:"reference",typeName:{type:"identifier",name:"ConnectNodesOptions"}}},{name:"dragNodes",attribute:!1,type:"DragNodesOptions",annotation:{type:"reference",typeName:{type:"identifier",name:"DragNodesOptions"}}},{name:"zoomable",type:"boolean",default:"true",annotation:{type:"keyword",value:"boolean"}},{name:"scrollable",type:"boolean",default:"true",annotation:{type:"keyword",value:"boolean"}},{name:"pannable",type:"boolean",default:"true",annotation:{type:"keyword",value:"boolean"}},{name:"scaleRange",attribute:!1,type:"RangeTuple",annotation:{type:"reference",typeName:{type:"identifier",name:"RangeTuple"}}}]})}),"\n",(0,a.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,a.jsx)(y.vy.Provider,{value:["DiagramNode","DiagramNodeId","DiagramEdge","NodeBrickConf","LineConf","LineType","CurveType","TextOptions","LineLabelPlacement","LineLabelConf","LineConfOverrides","LineConfOverridable","LineMarkerConf","LineMarkerPlacement","LineMarkerType","LayoutOptions","LayoutOptionsDagre","BaseLayoutOptions","PartialRectTuple","LayoutOptionsForce","ForceCollideOptions","ActiveTarget","ActiveTargetOfNode","ActiveTargetOfEdge","ConnectNodesOptions","NodesFilterOptions","DragNodesOptions","UserViewQuery","RangeTuple","LineTarget","ConnectLineDetail"],children:(0,a.jsx)(p.Z,{events:[{name:"activeTarget.change",detail:{type:"ActiveTarget | null",annotation:{type:"union",types:[{type:"reference",typeName:{type:"identifier",name:"ActiveTarget"}},{type:"keyword",value:"null"}]}}},{name:"node.delete",detail:{type:"DiagramNode",annotation:{type:"reference",typeName:{type:"identifier",name:"DiagramNode"}}}},{name:"edge.delete",detail:{type:"DiagramEdge",annotation:{type:"reference",typeName:{type:"identifier",name:"DiagramEdge"}}}},{name:"line.click",detail:{type:"LineTarget",annotation:{type:"reference",typeName:{type:"identifier",name:"LineTarget"}}}},{name:"line.dblclick",detail:{type:"LineTarget",annotation:{type:"reference",typeName:{type:"identifier",name:"LineTarget"}}}},{name:"nodes.connect",detail:{type:"ConnectLineDetail",annotation:{type:"reference",typeName:{type:"identifier",name:"ConnectLineDetail"}}}}]})}),"\n",(0,a.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(y.vy.Provider,{value:["DiagramNode","DiagramNodeId","DiagramEdge","NodeBrickConf","LineConf","LineType","CurveType","TextOptions","LineLabelPlacement","LineLabelConf","LineConfOverrides","LineConfOverridable","LineMarkerConf","LineMarkerPlacement","LineMarkerType","LayoutOptions","LayoutOptionsDagre","BaseLayoutOptions","PartialRectTuple","LayoutOptionsForce","ForceCollideOptions","ActiveTarget","ActiveTargetOfNode","ActiveTargetOfEdge","ConnectNodesOptions","NodesFilterOptions","DragNodesOptions","UserViewQuery","RangeTuple","LineTarget","ConnectLineDetail"],children:(0,a.jsx)(d.Z,{methods:[{name:"callOnLineLabel",params:[{name:"id",type:"string",annotation:{type:"keyword",value:"string"}},{name:"method",type:"string",annotation:{type:"keyword",value:"string"}},{name:"param_3",type:"unknown[]",annotation:{type:"array",elementType:{type:"keyword",value:"unknown"}}}],returns:{}}]})}),"\n",(0,a.jsx)(n.h2,{id:"type-references",children:"Type references"}),"\n",(0,a.jsx)(l.Z,{types:[{type:"interface",name:"DiagramNode",body:[{type:"propertySignature",key:{type:"identifier",name:"id"},annotation:{type:"reference",typeName:{type:"identifier",name:"DiagramNodeId"}},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"type"},annotation:{type:"keyword",value:"string"},optional:!0,computed:!1},{type:"indexSignature",parameter:{type:"identifier",name:"key",annotation:{type:"keyword",value:"string"}},annotation:{type:"keyword",value:"unknown"}}]},{type:"typeAlias",name:"DiagramNodeId",annotation:{type:"keyword",value:"string"}},{type:"interface",name:"DiagramEdge",body:[{type:"propertySignature",key:{type:"identifier",name:"source"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"target"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"type"},annotation:{type:"keyword",value:"string"},optional:!0,computed:!1},{type:"indexSignature",parameter:{type:"identifier",name:"key",annotation:{type:"keyword",value:"string"}},annotation:{type:"keyword",value:"unknown"}}]},{type:"interface",name:"NodeBrickConf",body:[{type:"propertySignature",key:{type:"identifier",name:"useBrick"},annotation:{type:"reference",typeName:{type:"identifier",name:"UseSingleBrickConf"}},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"nodeType"},annotation:{type:"union",types:[{type:"keyword",value:"string"},{type:"array",elementType:{type:"keyword",value:"string"}}]},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"if"},annotation:{type:"union",types:[{type:"keyword",value:"string"},{type:"keyword",value:"boolean"},{type:"keyword",value:"null"}]},optional:!0,computed:!1}]},{type:"interface",name:"LineConf",body:[{type:"propertySignature",key:{type:"identifier",name:"edgeType"},annotation:{type:"union",types:[{type:"keyword",value:"string"},{type:"array",elementType:{type:"keyword",value:"string"}}]},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"if"},annotation:{type:"union",types:[{type:"keyword",value:"string"},{type:"keyword",value:"boolean"},{type:"keyword",value:"null"}]},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"draw"},annotation:{type:"keyword",value:"boolean"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"type"},annotation:{type:"reference",typeName:{type:"identifier",name:"LineType"}},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"interactable"},annotation:{type:"keyword",value:"boolean"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"curveType"},annotation:{type:"reference",typeName:{type:"identifier",name:"CurveType"}},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"arrow"},annotation:{type:"keyword",value:"boolean"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"text"},annotation:{type:"union",types:[{type:"reference",typeName:{type:"identifier",name:"TextOptions"}},{type:"array",elementType:{type:"reference",typeName:{type:"identifier",name:"TextOptions"}}}]},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"label"},annotation:{type:"union",types:[{type:"reference",typeName:{type:"identifier",name:"LineLabelConf"}},{type:"array",elementType:{type:"reference",typeName:{type:"identifier",name:"LineLabelConf"}}}]},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"cursor"},annotation:{type:"indexedAccess",objectType:{type:"reference",typeName:{type:"qualifiedName",left:{type:"identifier",name:"React"},right:{type:"identifier",name:"CSSProperties"}}},indexType:{type:"jsLiteral",value:"cursor"}},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"overrides"},annotation:{type:"reference",typeName:{type:"identifier",name:"LineConfOverrides"}},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"markers"},annotation:{type:"array",elementType:{type:"reference",typeName:{type:"identifier",name:"LineMarkerConf"}}},optional:!0,computed:!1}],extends:[{type:"expressionWithTypeArguments",expression:{type:"identifier",name:"LineConfOverridable"}}]},{type:"typeAlias",name:"LineType",annotation:{type:"union",types:[{type:"jsLiteral",value:"auto"},{type:"jsLiteral",value:"curve"},{type:"jsLiteral",value:"straight"},{type:"jsLiteral",value:"polyline"}]}},{type:"typeAlias",name:"CurveType",annotation:{type:"unsupported",source:"`curve${string}`"}},{type:"interface",name:"TextOptions",body:[{type:"propertySignature",key:{type:"identifier",name:"content"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"style"},annotation:{type:"reference",typeName:{type:"identifier",name:"CSSProperties"}},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"placement"},annotation:{type:"reference",typeName:{type:"identifier",name:"LineLabelPlacement"}},optional:!0,computed:!1}]},{type:"typeAlias",name:"LineLabelPlacement",annotation:{type:"union",types:[{type:"jsLiteral",value:"center"},{type:"jsLiteral",value:"start"},{type:"jsLiteral",value:"end"}]}},{type:"interface",name:"LineLabelConf",body:[{type:"propertySignature",key:{type:"identifier",name:"if"},annotation:{type:"union",types:[{type:"keyword",value:"string"},{type:"keyword",value:"boolean"},{type:"keyword",value:"null"}]},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"useBrick"},annotation:{type:"reference",typeName:{type:"identifier",name:"UseSingleBrickConf"}},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"placement"},annotation:{type:"reference",typeName:{type:"identifier",name:"LineLabelPlacement"}},optional:!0,computed:!1}]},{type:"interface",name:"LineConfOverrides",body:[{type:"propertySignature",key:{type:"identifier",name:"active"},annotation:{type:"reference",typeName:{type:"identifier",name:"LineConfOverridable"}},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"activeRelated"},annotation:{type:"reference",typeName:{type:"identifier",name:"LineConfOverridable"}},optional:!0,computed:!1}]},{type:"interface",name:"LineConfOverridable",body:[{type:"propertySignature",key:{type:"identifier",name:"strokeColor"},annotation:{type:"keyword",value:"string"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"strokeWidth"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"interactStrokeWidth"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1}]},{type:"interface",name:"LineMarkerConf",body:[{type:"propertySignature",key:{type:"identifier",name:"placement"},annotation:{type:"reference",typeName:{type:"identifier",name:"LineMarkerPlacement"}},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"type"},annotation:{type:"reference",typeName:{type:"identifier",name:"LineMarkerType"}},optional:!0,computed:!1}]},{type:"typeAlias",name:"LineMarkerPlacement",annotation:{type:"union",types:[{type:"jsLiteral",value:"start"},{type:"jsLiteral",value:"end"}]}},{type:"typeAlias",name:"LineMarkerType",annotation:{type:"union",types:[{type:"jsLiteral",value:"arrow"},{type:"jsLiteral",value:"circle"},{type:"jsLiteral",value:"0..1"},{type:"jsLiteral",value:"0..N"}]}},{type:"typeAlias",name:"LayoutOptions",annotation:{type:"union",types:[{type:"reference",typeName:{type:"identifier",name:"LayoutOptionsDagre"}},{type:"reference",typeName:{type:"identifier",name:"LayoutOptionsForce"}}]}},{type:"interface",name:"LayoutOptionsDagre",body:[{type:"propertySignature",key:{type:"identifier",name:"rankdir"},annotation:{type:"union",types:[{type:"jsLiteral",value:"TB"},{type:"jsLiteral",value:"BT"},{type:"jsLiteral",value:"LR"},{type:"jsLiteral",value:"RL"}]},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"ranksep"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"edgesep"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"nodesep"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"align"},annotation:{type:"union",types:[{type:"jsLiteral",value:"UL"},{type:"jsLiteral",value:"UR"},{type:"jsLiteral",value:"DL"},{type:"jsLiteral",value:"DR"}]},optional:!0,computed:!1}],extends:[{type:"expressionWithTypeArguments",expression:{type:"identifier",name:"BaseLayoutOptions"}}]},{type:"interface",name:"BaseLayoutOptions",body:[{type:"propertySignature",key:{type:"identifier",name:"nodePadding"},annotation:{type:"reference",typeName:{type:"identifier",name:"PartialRectTuple"}},optional:!0,computed:!1}]},{type:"typeAlias",name:"PartialRectTuple",annotation:{type:"union",types:[{type:"keyword",value:"number"},{type:"tuple",elementTypes:[{type:"namedTupleMember",label:"all",optional:!1,elementType:{type:"keyword",value:"number"}}]},{type:"tuple",elementTypes:[{type:"namedTupleMember",label:"vertical",optional:!1,elementType:{type:"keyword",value:"number"}},{type:"namedTupleMember",label:"horizontal",optional:!1,elementType:{type:"keyword",value:"number"}}]},{type:"tuple",elementTypes:[{type:"namedTupleMember",label:"top",optional:!1,elementType:{type:"keyword",value:"number"}},{type:"namedTupleMember",label:"horizontal",optional:!1,elementType:{type:"keyword",value:"number"}},{type:"namedTupleMember",label:"bottom",optional:!1,elementType:{type:"keyword",value:"number"}}]},{type:"tuple",elementTypes:[{type:"namedTupleMember",label:"top",optional:!1,elementType:{type:"keyword",value:"number"}},{type:"namedTupleMember",label:"right",optional:!1,elementType:{type:"keyword",value:"number"}},{type:"namedTupleMember",label:"bottom",optional:!1,elementType:{type:"keyword",value:"number"}},{type:"namedTupleMember",label:"left",optional:!1,elementType:{type:"keyword",value:"number"}}]}]}},{type:"interface",name:"LayoutOptionsForce",body:[{type:"propertySignature",key:{type:"identifier",name:"dummyNodesOnEdges"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"collide"},annotation:{type:"union",types:[{type:"keyword",value:"boolean"},{type:"reference",typeName:{type:"identifier",name:"ForceCollideOptions"}}]},optional:!0,computed:!1}],extends:[{type:"expressionWithTypeArguments",expression:{type:"identifier",name:"BaseLayoutOptions"}}]},{type:"interface",name:"ForceCollideOptions",body:[{type:"propertySignature",key:{type:"identifier",name:"dummyRadius"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"radiusDiff"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"strength"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"iterations"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1}]},{type:"typeAlias",name:"ActiveTarget",annotation:{type:"union",types:[{type:"reference",typeName:{type:"identifier",name:"ActiveTargetOfNode"}},{type:"reference",typeName:{type:"identifier",name:"ActiveTargetOfEdge"}}]}},{type:"interface",name:"ActiveTargetOfNode",body:[{type:"propertySignature",key:{type:"identifier",name:"type"},annotation:{type:"jsLiteral",value:"node"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"nodeId"},annotation:{type:"keyword",value:"string"},computed:!1}]},{type:"interface",name:"ActiveTargetOfEdge",body:[{type:"propertySignature",key:{type:"identifier",name:"type"},annotation:{type:"jsLiteral",value:"edge"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"edge"},annotation:{type:"reference",typeName:{type:"identifier",name:"DiagramEdge"}},computed:!1}]},{type:"interface",name:"ConnectNodesOptions",body:[{type:"propertySignature",key:{type:"identifier",name:"strokeColor"},annotation:{type:"keyword",value:"string"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"strokeWidth"},annotation:{type:"keyword",value:"number"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"arrow"},annotation:{type:"keyword",value:"boolean"},optional:!0,computed:!1}],extends:[{type:"expressionWithTypeArguments",expression:{type:"identifier",name:"NodesFilterOptions"}}]},{type:"interface",name:"NodesFilterOptions",body:[{type:"propertySignature",key:{type:"identifier",name:"sourceType"},annotation:{type:"union",types:[{type:"keyword",value:"string"},{type:"array",elementType:{type:"keyword",value:"string"}}]},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"if"},annotation:{type:"union",types:[{type:"keyword",value:"string"},{type:"keyword",value:"boolean"},{type:"keyword",value:"null"}]},optional:!0,computed:!1}]},{type:"interface",name:"DragNodesOptions",body:[{type:"propertySignature",key:{type:"identifier",name:"save"},annotation:{type:"reference",typeName:{type:"identifier",name:"UserViewQuery"}},optional:!0,computed:!1}],extends:[{type:"expressionWithTypeArguments",expression:{type:"identifier",name:"NodesFilterOptions"}}]},{type:"interface",name:"UserViewQuery",body:[{type:"propertySignature",key:{type:"identifier",name:"namespace"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"key"},annotation:{type:"keyword",value:"string"},computed:!1}]},{type:"typeAlias",name:"RangeTuple",annotation:{type:"tuple",elementTypes:[{type:"namedTupleMember",label:"min",optional:!1,elementType:{type:"keyword",value:"number"}},{type:"namedTupleMember",label:"max",optional:!1,elementType:{type:"keyword",value:"number"}}]}},{type:"interface",name:"LineTarget",body:[{type:"propertySignature",key:{type:"identifier",name:"id"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"edge"},annotation:{type:"reference",typeName:{type:"identifier",name:"DiagramEdge"}},computed:!1}]},{type:"interface",name:"ConnectLineDetail",body:[{type:"propertySignature",key:{type:"identifier",name:"source"},annotation:{type:"reference",typeName:{type:"identifier",name:"DiagramNode"}},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"target"},annotation:{type:"reference",typeName:{type:"identifier",name:"DiagramNode"}},computed:!1}]}]})]})}function T(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}function f(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
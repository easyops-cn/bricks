"use strict";(self.webpackChunkbrick_docs=self.webpackChunkbrick_docs||[]).push([[49],{27625:(e,n,t)=>{t.d(n,{Z:()=>s});var i=t(67294),r=t(4871),o=t(32403);function s(e){let{params:n}=e;return 0===n.length?i.createElement("p",null,"None"):i.createElement("table",null,i.createElement("thead",null,i.createElement("tr",null,i.createElement("th",null,"#"),i.createElement("th",null,"Name"),i.createElement("th",null,"Description"),i.createElement("th",null,"Type"))),i.createElement("tbody",null,n.map(((e,n)=>i.createElement("tr",{key:n},i.createElement("td",null,n+1),i.createElement("td",null,i.createElement("code",null,e.isRestElement&&"...",e.name)),i.createElement("td",null,e.description),i.createElement("td",null,i.createElement(o.Z,null,i.createElement(r.ZP,{annotation:e.annotation}))))))))}},93556:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>k,frontMatter:()=>p,metadata:()=>m,toc:()=>y});var i=t(87462),r=(t(67294),t(3905)),o=t(59263),s=t(4871),a=t(32403),c=t(27625),l=t(75944);const p={description:"<basic.show-dialog>"},d=void 0,m={unversionedId:"bricks/basic/show-dialog",id:"bricks/basic/show-dialog",title:"show-dialog",description:"<basic.show-dialog>",source:"@site/docs/bricks/basic/show-dialog.mdx",sourceDirName:"bricks/basic",slug:"/bricks/basic/show-dialog",permalink:"/bricks/basic/show-dialog",draft:!1,tags:[],version:"current",frontMatter:{description:"<basic.show-dialog>"},sidebar:"docsSidebar",previous:{title:"http-request",permalink:"/bricks/basic/http-request"},next:{title:"show-notification",permalink:"/bricks/basic/show-notification"}},u={},y=[{value:"Examples",id:"examples",level:2},{value:"Confirm",id:"confirm",level:3},{value:"Alert",id:"alert",level:3},{value:"Delete",id:"delete",level:3},{value:"Usage in pro-code",id:"usage-in-pro-code",level:2},{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Type references",id:"type-references",level:2}],g={toc:y},b="wrapper";function k(e){let{components:n,...t}=e;return(0,r.kt)(b,(0,i.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)(o.Z,{name:"basic.show-dialog",isProvider:!0,mdxType:"BrickTagName"}),(0,r.kt)("p",null,"\u663e\u793a\u5bf9\u8bdd\u6846\u3002"),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"confirm"},"Confirm"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"preview",preview:!0},'brick: div\nproperties:\n  style:\n    height: 320px\nchildren:\n  - brick: eo-button\n    properties:\n      type: primary\n      textContent: Confirm\n    events:\n      click:\n        useProvider: basic.show-dialog\n        args:\n          - type: confirm\n            title: Please Confirm\n            content: Are you sure?\n        callback:\n          success:\n            action: message.success\n            args:\n              - You just confirmed!\n          error:\n            action: message.warn\n            args:\n              - You just canceled.\n# -- YAML DELIMITER (1nbbm8) --\n# <div style="height: 320px">\n#   <eo-button type="primary" id="brick-1">Confirm</eo-button>\n# </div>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.addEventListener("click", (e) => {\n#     const provider = document.createElement("basic.show-dialog");\n#     const promise = Promise.resolve(\n#       provider.resolve({\n#         type: "confirm",\n#         title: "Please Confirm",\n#         content: "Are you sure?",\n#       })\n#     );\n#     promise.then((r) => {\n#       const message = document.createElement("basic.show-notification");\n#       message.resolve({ type: "success", message: "You just confirmed!" });\n#     });\n#     promise.catch((r) => {\n#       const message = document.createElement("basic.show-notification");\n#       message.resolve({ type: "warn", message: "You just canceled." });\n#     });\n#   });\n# <\/script>\n# \n')),(0,r.kt)("h3",{id:"alert"},"Alert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"preview",preview:!0},'brick: div\nproperties:\n  style:\n    height: 320px\n    display: grid\nchildren:\n  - brick: eo-button\n    properties:\n      textContent: Success\n    events:\n      click:\n        useProvider: basic.show-dialog\n        args:\n          - type: success\n            title: Success\n            content: You\'ve done!\n        callback:\n          success:\n            action: message.info\n            args:\n              - That\'s ok.\n  - brick: eo-button\n    properties:\n      textContent: Error\n    events:\n      click:\n        useProvider: basic.show-dialog\n        args:\n          - type: error\n            title: Error\n            content: Something went wrong.\n  - brick: eo-button\n    properties:\n      textContent: Info\n    events:\n      click:\n        useProvider: basic.show-dialog\n        args:\n          - type: info\n            title: Info\n            content: Something happened.\n  - brick: eo-button\n    properties:\n      textContent: Warn\n    events:\n      click:\n        useProvider: basic.show-dialog\n        args:\n          - type: warn\n            title: Warn\n            content: Something went wrong.\n# -- YAML DELIMITER (1nbbm8) --\n# <div style="height: 320px; display: grid">\n#   <eo-button id="brick-1">Success</eo-button>\n#   <eo-button id="brick-2">Error</eo-button>\n#   <eo-button id="brick-3">Info</eo-button>\n#   <eo-button id="brick-4">Warn</eo-button>\n# </div>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.addEventListener("click", (e) => {\n#     const provider = document.createElement("basic.show-dialog");\n#     const promise = Promise.resolve(\n#       provider.resolve({\n#         type: "success",\n#         title: "Success",\n#         content: "You\'ve done!",\n#       })\n#     );\n#     promise.then((r) => {\n#       const message = document.createElement("basic.show-notification");\n#       message.resolve({ type: "info", message: "That\'s ok." });\n#     });\n#   });\n# \n#   const brick_2 = document.getElementById("brick-2");\n#   brick_2.addEventListener("click", (e) => {\n#     const provider = document.createElement("basic.show-dialog");\n#     provider.resolve({\n#       type: "error",\n#       title: "Error",\n#       content: "Something went wrong.",\n#     });\n#   });\n# \n#   const brick_3 = document.getElementById("brick-3");\n#   brick_3.addEventListener("click", (e) => {\n#     const provider = document.createElement("basic.show-dialog");\n#     provider.resolve({\n#       type: "info",\n#       title: "Info",\n#       content: "Something happened.",\n#     });\n#   });\n# \n#   const brick_4 = document.getElementById("brick-4");\n#   brick_4.addEventListener("click", (e) => {\n#     const provider = document.createElement("basic.show-dialog");\n#     provider.resolve({\n#       type: "warn",\n#       title: "Warn",\n#       content: "Something went wrong.",\n#     });\n#   });\n# <\/script>\n# \n')),(0,r.kt)("h3",{id:"delete"},"Delete"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"preview",preview:!0},'brick: div\nproperties:\n  style:\n    height: 320px\nchildren:\n  - brick: eo-button\n    properties:\n      textContent: Delete\n      danger: true\n      type: primary\n    events:\n      click:\n        useProvider: basic.show-dialog\n        args:\n          - type: delete\n            title: Delete Confirm\n            content: Please enter {{ expect }} to delete the file.\n            expect: cat.png\n        callback:\n          success:\n            action: message.success\n            args:\n              - Deleted successfully!\n# -- YAML DELIMITER (1nbbm8) --\n# <div style="height: 320px">\n#   <eo-button danger type="primary" id="brick-1">Delete</eo-button>\n# </div>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.addEventListener("click", (e) => {\n#     const provider = document.createElement("basic.show-dialog");\n#     const promise = Promise.resolve(\n#       provider.resolve({\n#         type: "delete",\n#         title: "Delete Confirm",\n#         content: "Please enter {{ expect }} to delete the file.",\n#         expect: "cat.png",\n#       })\n#     );\n#     promise.then((r) => {\n#       const message = document.createElement("basic.show-notification");\n#       message.resolve({ type: "success", message: "Deleted successfully!" });\n#     });\n#   });\n# <\/script>\n# \n')),(0,r.kt)("h2",{id:"usage-in-pro-code"},"Usage in pro-code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { unwrapProvider } from "@next-core/utils/general";\nimport type { showDialog as _showDialog } from "@next-bricks/basic/data-providers/show-dialog/show-dialog";\n\n// Use `unwrapProvider` to get the original function of a provider\nconst showDialog = unwrapProvider<typeof _showDialog>("basic.show-dialog");\n\nfunction MyComponent() {\n  const handleClick = useCallback(() => {\n    showDialog({\n      type: "confirm",\n      content: "Are you sure?",\n    });\n  }, []);\n  return <button onClick={handleClick} />;\n}\n')),(0,r.kt)("h2",{id:"definition"},"Definition"),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)(s.vy.Provider,{value:["DialogOptions"]},(0,r.kt)(c.Z,{params:[{name:"options",description:"\u9009\u9879",annotation:{type:"reference",typeName:{type:"identifier",name:"DialogOptions"}}}],mdxType:"ProviderDocParams"})),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)(a.Z,{mdxType:"MaybeEmptyCode"},(0,r.kt)(s.vy.Provider,{value:["DialogOptions"]},(0,r.kt)(s.ZP,{annotation:{type:"reference",typeName:{type:"identifier",name:"Promise"},typeParameters:{type:"typeParameterInstantiation",params:[{type:"keyword",value:"void"}]}},mdxType:"GeneralType"})))),(0,r.kt)("h2",{id:"type-references"},"Type references"),(0,r.kt)(l.Z,{types:[{type:"interface",name:"DialogOptions",body:[{type:"propertySignature",key:{type:"identifier",name:"type"},annotation:{type:"union",types:[{type:"jsLiteral",value:"success"},{type:"jsLiteral",value:"error"},{type:"jsLiteral",value:"warn"},{type:"jsLiteral",value:"info"},{type:"jsLiteral",value:"confirm"},{type:"jsLiteral",value:"delete"}]},optional:!0,computed:!1,description:"\u5bf9\u8bdd\u6846\u7c7b\u578b"},{type:"propertySignature",key:{type:"identifier",name:"title"},annotation:{type:"keyword",value:"string"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"content"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"expect"},annotation:{type:"keyword",value:"string"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"contentStyle"},annotation:{type:"reference",typeName:{type:"qualifiedName",left:{type:"identifier",name:"React"},right:{type:"identifier",name:"CSSProperties"}}},optional:!0,computed:!1}]}],mdxType:"BrickDocTypes"}))}k.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkbrick_docs=self.webpackChunkbrick_docs||[]).push([[9727],{2245:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>m,default:()=>T,frontMatter:()=>p,metadata:()=>y,toc:()=>u});var r=t(87462),a=(t(67294),t(3905)),i=t(59263),o=t(20456),s=(t(98277),t(46470)),l=(t(10080),t(70516),t(75944)),c=t(4871);const p={description:"<vs.code-editor>"},m=void 0,y={unversionedId:"bricks/vs/code-editor",id:"bricks/vs/code-editor",title:"code-editor",description:"<vs.code-editor>",source:"@site/docs/bricks/vs/code-editor.mdx",sourceDirName:"bricks/vs",slug:"/bricks/vs/code-editor",permalink:"/bricks/vs/code-editor",draft:!1,tags:[],version:"current",frontMatter:{description:"<vs.code-editor>"},sidebar:"docsSidebar",previous:{title:"vs",permalink:"/bricks/category/vs"}},d={},u=[{value:"Examples",id:"examples",level:2},{value:"Automatic layout - fit-content",id:"automatic-layout---fit-content",level:3},{value:"Automatic layout - fit-container",id:"automatic-layout---fit-container",level:3},{value:"Brick Next YAML",id:"brick-next-yaml",level:3},{value:"Brick Next YAML with highlight",id:"brick-next-yaml-with-highlight",level:3},{value:"Properties",id:"properties",level:2},{value:"Events",id:"events",level:2},{value:"Type references",id:"type-references",level:2}],g={toc:u},k="wrapper";function T(e){let{components:n,...t}=e;return(0,a.kt)(k,(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{name:"vs.code-editor",alias:null,mdxType:"BrickTagName"}),(0,a.kt)("p",null,"\u57fa\u4e8e ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/microsoft/monaco-editor"},"Monaco Editor")," \u7684\u4ee3\u7801\u7f16\u8f91\u5668\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"preview",preview:!0},'brick: vs.code-editor\nproperties:\n  language: typescript\n  value: |\n    function sayHello(): string {\n      return "hello";\n    }\n# -- YAML DELIMITER (1nbbm8) --\n# <vs.code-editor language="typescript" id="brick-1"></vs.code-editor>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.value = \'function sayHello(): string {\\n  return "hello";\\n}\\n\';\n# <\/script>\n# \n')),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("h3",{id:"automatic-layout---fit-content"},"Automatic layout - fit-content"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"preview",preview:!0},'brick: vs.code-editor\nproperties:\n  automaticLayout: fit-content\n  language: typescript\n  value: |\n    function sayHello(): string {\n      return "hello";\n    }\n# -- YAML DELIMITER (1nbbm8) --\n# <vs.code-editor\n#   automatic-layout="fit-content"\n#   language="typescript"\n#   id="brick-1"\n# ></vs.code-editor>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.value = \'function sayHello(): string {\\n  return "hello";\\n}\\n\';\n# <\/script>\n# \n')),(0,a.kt)("h3",{id:"automatic-layout---fit-container"},"Automatic layout - fit-container"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"preview",preview:!0},'brick: div\nproperties:\n  style:\n    height: 200px\nchildren:\n  - brick: vs.code-editor\n    properties:\n      automaticLayout: fit-container\n      language: typescript\n      value: |\n        function sayHello(): string {\n          return "hello";\n        }\n# -- YAML DELIMITER (1nbbm8) --\n# <div style="height: 200px">\n#   <vs.code-editor\n#     automatic-layout="fit-container"\n#     language="typescript"\n#     id="brick-1"\n#   ></vs.code-editor>\n# </div>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.value = \'function sayHello(): string {\\n  return "hello";\\n}\\n\';\n# <\/script>\n# \n')),(0,a.kt)("h3",{id:"brick-next-yaml"},"Brick Next YAML"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"preview",preview:!0},'- brick: vs.code-editor\n  properties:\n    language: brick_next_yaml\n    value: |\n      # Enhanced yaml for Brick Next\n      brick: button\n      properties:\n        textContent: \'<% CTX.error ? "CTX.error": "Hello" %>\'\n    automaticLayout: fit-content\n- brick: vs.code-editor\n  properties:\n    language: yaml\n    value: |\n      # Normal yaml\n      brick: button\n      properties:\n        textContent: \'<% CTX.error ? "Oops": "Hello" %>\'\n    automaticLayout: fit-content\n    style:\n      marginTop: 2em\n# -- YAML DELIMITER (1nbbm8) --\n# <vs.code-editor\n#   language="brick_next_yaml"\n#   automatic-layout="fit-content"\n#   id="brick-1"\n# ></vs.code-editor>\n# <vs.code-editor\n#   language="yaml"\n#   automatic-layout="fit-content"\n#   style="margin-top: 2em"\n#   id="brick-2"\n# ></vs.code-editor>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.value =\n#     \'# Enhanced yaml for Brick Next\\nbrick: button\\nproperties:\\n  textContent: \\\'<% CTX.error ? "CTX.error": "Hello" %>\\\'\\n\';\n# \n#   const brick_2 = document.getElementById("brick-2");\n#   brick_2.value =\n#     \'# Normal yaml\\nbrick: button\\nproperties:\\n  textContent: \\\'<% CTX.error ? "Oops": "Hello" %>\\\'\\n\';\n# <\/script>\n# \n')),(0,a.kt)("h3",{id:"brick-next-yaml-with-highlight"},"Brick Next YAML with highlight"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"preview",preview:!0},'- brick: vs.code-editor\n  events:\n    highlight.click:\n      - action: console.log\n  properties:\n    language: brick_next_yaml\n    value: |\n      basicUsige:\n        keyword:\n         Expression:\n          expression1: <% CTX.work %>\n          expression2: <% `${CTX.work}` %>\n          expression3:\n            test1: |\n              <%\n                CTX.a ? CTX.b : CTX.c \n              %>\n            test2: |-\n              <% \n                CTX.a ? CTX.b : CTX.c \n              %>\n            test3: >\n              <% \n                CTX.a ? CTX.b : CTX.c \n              %>\n            test4: >-\n              <% \n                CTX.a ? CTX.b : CTX.c \n              %>\n          expression4: "<% CTX.a ? CTX.b : CTX.c %>"\n          expression7: <% CTX.list.map(item => FN.getDetail(item, CTX.name)) %>\n          expression8: <% CTX.list.map(FN.getDetail) %>\n          expression9: |\n            <% \n              [\n                CTX.work,\n                CTX.work.a,\n                ACTX,\n                CTXA,\n                ACTX.noWork,\n                CTXA.noWork,\n                a.CTX.noWork,\n              ]\n            %>\n          expression10: |\n            <% \n              "TPL is warn", \n              TPL.id \n            %>\n          expression11: |\n            <%\n              FN.getDetail(CTX.abc, CTX.efg) %>\n          expression12:\n            test1:\n              test2:          <%  CTX.name %>\n              test3: |\n                              <% \n                                CTX.name\n                              %>\n          expression13: <%= CTX.b + CTX.c %>\n          expression14: |\n            <%=\n              APP.id + CTX.name\n            %>\n          expression15: \n            test1: |\n              <% \n                CTX.name %>\n            test2: |\n              <% CTX.name\n              %>\n            test3: |\n              <% "track context", CTX.name\n              %>\n            test4: |\n              <%      \n                "track context", CTX.name \n              %>\n            test5: |\n              <%      \n                "track context", \n                CTX.name \n              %>\n            test6: |\n              <% "track context", \n                CTX.name \n              %>\n            test7: |\n              <%  "track context",  CTX.name \n          exporession16:\n            - <% CTX.a %>     \n            - CTX.b\n            -   <% CTX.c %>    \n            - <% "CTX.d" %>\n        markers:\n          hit:\n            PATH: <% PATH.instanceId %>\n          info:\n            QUERY: <% QUERY.info %>\n          warn:\n            ANCHOR: <% ANCHOR.id %>\n          error:\n            STATE: <% STATE.name %>\n        stringAndNoWork:\n          string1: CTX.noWork\n          string2: FN.getTest\n          string3: <% "FN.getTest(CTX.test)" %>\n    automaticLayout: fit-content\n    links:\n      - CTX\n      - FN\n    markers:\n      - token: CTX\n        params:\n          - a\n          - b\n      - token: PATH\n        message: \u201c\u8fd9\u662f PATH\u201d\n        level: hit\n      - token: QUERY\n        message: \u201c\u8fd9\u662f QUERY\u201d\n        level: info\n      - token: ANCHOR\n        message: \u201c\u8fd9\u662f ANCHOR\u201c\n        level: warn\n      - token: STATE\n        message: "\u8fd9\u91cc\u4e0d\u80fd\u5199 STATE"\n        level: error\n        code:\n          value: "\u8be6\u60c5\u5730\u5740"\n          target: https://brick-next.js.org/docs/concepts/context\n      - token: TPL\n        level: warn\n        message: \u4e0d\u5141\u8bb8\u5199\u5165TPL\n    completers:\n      - label: buttonName\n        detail: string\n      - label: buttonType\n        detail: "primary|default|link|danger"\n      - label: buttonSize\n        insertText: size\n    advancedCompleters:\n      target:\n        triggerCharacter: ":"\n        completers:\n          - label: a\n          - label: b\n      CTX:\n        triggerCharacter: "."\n        completers:\n          - label: pageTitle\n          - label: name\n      FN:\n        triggerCharacter: "."\n        completers:\n          - label: getPageDetail\n          - label: getInstance\n      PATH:\n        triggerCharacter: "."\n        completers:\n          - label: instanceId\n          - label: name\n# -- YAML DELIMITER (1nbbm8) --\n# <vs.code-editor\n#   language="brick_next_yaml"\n#   automatic-layout="fit-content"\n#   id="brick-1"\n# ></vs.code-editor>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.value =\n#     \'basicUsige:\\n  keyword:\\n   Expression:\\n    expression1: <% CTX.work %>\\n    expression2: <% `${CTX.work}` %>\\n    expression3:\\n      test1: |\\n        <%\\n          CTX.a ? CTX.b : CTX.c \\n        %>\\n      test2: |-\\n        <% \\n          CTX.a ? CTX.b : CTX.c \\n        %>\\n      test3: >\\n        <% \\n          CTX.a ? CTX.b : CTX.c \\n        %>\\n      test4: >-\\n        <% \\n          CTX.a ? CTX.b : CTX.c \\n        %>\\n    expression4: "<% CTX.a ? CTX.b : CTX.c %>"\\n    expression7: <% CTX.list.map(item => FN.getDetail(item, CTX.name)) %>\\n    expression8: <% CTX.list.map(FN.getDetail) %>\\n    expression9: |\\n      <% \\n        [\\n          CTX.work,\\n          CTX.work.a,\\n          ACTX,\\n          CTXA,\\n          ACTX.noWork,\\n          CTXA.noWork,\\n          a.CTX.noWork,\\n        ]\\n      %>\\n    expression10: |\\n      <% \\n        "TPL is warn", \\n        TPL.id \\n      %>\\n    expression11: |\\n      <%\\n        FN.getDetail(CTX.abc, CTX.efg) %>\\n    expression12:\\n      test1:\\n        test2:          <%  CTX.name %>\\n        test3: |\\n                        <% \\n                          CTX.name\\n                        %>\\n    expression13: <%= CTX.b + CTX.c %>\\n    expression14: |\\n      <%=\\n        APP.id + CTX.name\\n      %>\\n    expression15: \\n      test1: |\\n        <% \\n          CTX.name %>\\n      test2: |\\n        <% CTX.name\\n        %>\\n      test3: |\\n        <% "track context", CTX.name\\n        %>\\n      test4: |\\n        <%      \\n          "track context", CTX.name \\n        %>\\n      test5: |\\n        <%      \\n          "track context", \\n          CTX.name \\n        %>\\n      test6: |\\n        <% "track context", \\n          CTX.name \\n        %>\\n      test7: |\\n        <%  "track context",  CTX.name \\n    exporession16:\\n      - <% CTX.a %>     \\n      - CTX.b\\n      -   <% CTX.c %>    \\n      - <% "CTX.d" %>\\n  markers:\\n    hit:\\n      PATH: <% PATH.instanceId %>\\n    info:\\n      QUERY: <% QUERY.info %>\\n    warn:\\n      ANCHOR: <% ANCHOR.id %>\\n    error:\\n      STATE: <% STATE.name %>\\n  stringAndNoWork:\\n    string1: CTX.noWork\\n    string2: FN.getTest\\n    string3: <% "FN.getTest(CTX.test)" %>\\n\';\n#   brick_1.links = ["CTX", "FN"];\n#   brick_1.markers = [\n#     {\n#       token: "CTX",\n#       params: ["a", "b"],\n#     },\n#     {\n#       token: "PATH",\n#       message: "\u201c\u8fd9\u662f PATH\u201d",\n#       level: "hit",\n#     },\n#     {\n#       token: "QUERY",\n#       message: "\u201c\u8fd9\u662f QUERY\u201d",\n#       level: "info",\n#     },\n#     {\n#       token: "ANCHOR",\n#       message: "\u201c\u8fd9\u662f ANCHOR\u201c",\n#       level: "warn",\n#     },\n#     {\n#       token: "STATE",\n#       message: "\u8fd9\u91cc\u4e0d\u80fd\u5199 STATE",\n#       level: "error",\n#       code: {\n#         value: "\u8be6\u60c5\u5730\u5740",\n#         target: "https://brick-next.js.org/docs/concepts/context",\n#       },\n#     },\n#     {\n#       token: "TPL",\n#       level: "warn",\n#       message: "\u4e0d\u5141\u8bb8\u5199\u5165TPL",\n#     },\n#   ];\n#   brick_1.completers = [\n#     {\n#       label: "buttonName",\n#       detail: "string",\n#     },\n#     {\n#       label: "buttonType",\n#       detail: "primary|default|link|danger",\n#     },\n#     {\n#       label: "buttonSize",\n#       insertText: "size",\n#     },\n#   ];\n#   brick_1.advancedCompleters = {\n#     target: {\n#       triggerCharacter: ":",\n#       completers: [\n#         {\n#           label: "a",\n#         },\n#         {\n#           label: "b",\n#         },\n#       ],\n#     },\n#     CTX: {\n#       triggerCharacter: ".",\n#       completers: [\n#         {\n#           label: "pageTitle",\n#         },\n#         {\n#           label: "name",\n#         },\n#       ],\n#     },\n#     FN: {\n#       triggerCharacter: ".",\n#       completers: [\n#         {\n#           label: "getPageDetail",\n#         },\n#         {\n#           label: "getInstance",\n#         },\n#       ],\n#     },\n#     PATH: {\n#       triggerCharacter: ".",\n#       completers: [\n#         {\n#           label: "instanceId",\n#         },\n#         {\n#           label: "name",\n#         },\n#       ],\n#     },\n#   };\n#   brick_1.addEventListener("highlight.click", (e) => {\n#     console.log(e.detail);\n#   });\n# <\/script>\n# \n')),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)(c.vy.Provider,{value:["Marker"]},(0,a.kt)(o.Z,{properties:[{name:"name",type:"string",annotation:{type:"keyword",value:"string"}},{name:"label",type:"string",annotation:{type:"keyword",value:"string"}},{name:"value",attribute:!1,type:"string",annotation:{type:"keyword",value:"string"}},{name:"language",description:"",default:'"plaintext"',type:"string",annotation:{type:"keyword",value:"string"}},{name:"theme",description:'\u4e3b\u9898\uff0c\u652f\u6301 `"auto" | "vs" | "vs-dark"`',default:'"auto"',type:"string",annotation:{type:"keyword",value:"string"}},{name:"required",type:"boolean",annotation:{type:"keyword",value:"boolean"}},{name:"readOnly",type:"boolean",annotation:{type:"keyword",value:"boolean"}},{name:"automaticLayout",type:'"fit-container" | "fit-content" | "none"',annotation:{type:"union",types:[{type:"jsLiteral",value:"fit-container"},{type:"jsLiteral",value:"fit-content"},{type:"jsLiteral",value:"none"}]}},{name:"minLines",description:"",default:"3",type:"number",annotation:{type:"keyword",value:"number"}},{name:"completers",attribute:!1,type:"monaco.languages.CompletionItem[]",annotation:{type:"array",elementType:{type:"reference",typeName:{type:"qualifiedName",left:{type:"qualifiedName",left:{type:"identifier",name:"monaco"},right:{type:"identifier",name:"languages"}},right:{type:"identifier",name:"CompletionItem"}}}}},{name:"advancedCompleters",attribute:!1,type:"Record<\n        string,\n        {\n          triggerCharacter: string;\n          completers: monaco.languages.CompletionItem[];\n        }\n      >",annotation:{type:"reference",typeName:{type:"identifier",name:"Record"},typeParameters:{type:"typeParameterInstantiation",params:[{type:"keyword",value:"string"},{type:"typeLiteral",members:[{type:"propertySignature",key:{type:"identifier",name:"triggerCharacter"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"completers"},annotation:{type:"array",elementType:{type:"reference",typeName:{type:"qualifiedName",left:{type:"qualifiedName",left:{type:"identifier",name:"monaco"},right:{type:"identifier",name:"languages"}},right:{type:"identifier",name:"CompletionItem"}}}},computed:!1}]}]}}},{name:"markers",attribute:!1,type:"Marker[]",annotation:{type:"array",elementType:{type:"reference",typeName:{type:"identifier",name:"Marker"}}}},{name:"links",attribute:!1,type:"string[]",annotation:{type:"array",elementType:{type:"keyword",value:"string"}}},{name:"maxLines",description:"",default:"Infinity",type:"number",annotation:{type:"keyword",value:"number"}},{name:"height",attribute:!1,type:"string | number",annotation:{type:"union",types:[{type:"keyword",value:"string"},{type:"keyword",value:"number"}]}},{name:"message",type:"string",annotation:{type:"keyword",value:"string"}}],mdxType:"BrickDocProperties"})),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)(c.vy.Provider,{value:["Marker"]},(0,a.kt)(s.Z,{events:[{name:"code.change",detail:{type:"string",annotation:{type:"keyword",value:"string"}}},{name:"user.input",detail:{type:"string",annotation:{type:"keyword",value:"string"}}},{name:"token.click",detail:{type:"string",annotation:{type:"keyword",value:"string"}}}],mdxType:"BrickDocEvents"})),(0,a.kt)("h2",{id:"type-references"},"Type references"),(0,a.kt)(l.Z,{types:[{type:"interface",name:"Marker",body:[{type:"propertySignature",key:{type:"identifier",name:"token"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"level"},annotation:{type:"typeOperator",operator:"keyof",annotation:{type:"typeQuery",exprName:{type:"identifier",name:"Level"}}},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"message"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"code"},annotation:{type:"typeLiteral",members:[{type:"propertySignature",key:{type:"identifier",name:"value"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"target"},annotation:{type:"keyword",value:"string"},computed:!1}]},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"params"},annotation:{type:"array",elementType:{type:"keyword",value:"string"}},optional:!0,computed:!1}]}],mdxType:"BrickDocTypes"}))}T.isMDXComponent=!0}}]);
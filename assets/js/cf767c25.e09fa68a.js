"use strict";(self.webpackChunkbrick_docs=self.webpackChunkbrick_docs||[]).push([[4658],{27625:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294),i=n(4871),a=n(32403);function l(e){let{params:t}=e;return 0===t.length?r.createElement("p",null,"None"):r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"#"),r.createElement("th",null,"Name"),r.createElement("th",null,"Description"),r.createElement("th",null,"Type"))),r.createElement("tbody",null,t.map(((e,t)=>r.createElement("tr",{key:t},r.createElement("td",null,t+1),r.createElement("td",null,r.createElement("code",null,e.isRestElement&&"...",e.name)),r.createElement("td",null,e.description),r.createElement("td",null,r.createElement(a.Z,null,r.createElement(i.ZP,{annotation:e.annotation}))))))))}},19310:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>v,frontMatter:()=>c,metadata:()=>d,toc:()=>k});var r=n(87462),i=(n(67294),n(3905)),a=n(59263),l=n(4871),o=n(32403),s=n(27625),u=n(75944);const c={description:"<illustrations.get-illustration>"},p=void 0,d={unversionedId:"bricks/illustrations/get-illustration",id:"bricks/illustrations/get-illustration",title:"get-illustration",description:"<illustrations.get-illustration>",source:"@site/docs/bricks/illustrations/get-illustration.mdx",sourceDirName:"bricks/illustrations",slug:"/bricks/illustrations/get-illustration",permalink:"/bricks/illustrations/get-illustration",draft:!1,tags:[],version:"current",frontMatter:{description:"<illustrations.get-illustration>"},sidebar:"docsSidebar",previous:{title:"illustrations",permalink:"/bricks/category/illustrations"},next:{title:"markdown",permalink:"/bricks/category/markdown"}},m={},k=[{value:"Examples",id:"examples",level:2},{value:"Usage in pro-code",id:"usage-in-pro-code",level:2},{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Type references",id:"type-references",level:2}],y={toc:k},g="wrapper";function v(e){let{components:t,...n}=e;return(0,i.kt)(g,(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(a.Z,{name:"illustrations.get-illustration",isProvider:!0,mdxType:"BrickTagName"}),(0,i.kt)("p",null,"\u83b7\u53d6\u63d2\u753b\u3002"),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"preview",preview:!0},'brick: basic.general-button\nproperties:\n  textContent: View illustration\nevents:\n  click:\n    useProvider: illustrations.get-illustration\n    args:\n      - category: feedback\n        name: fail\n    callback:\n      success:\n        action: window.open\n        args:\n          - "<% EVENT.detail %>"\n          - _blank\n# -- YAML DELIMITER (1nbbm8) --\n# <basic.general-button id="brick-1">View illustration</basic.general-button>\n# \n# <script>\n#   const brick_1 = document.getElementById("brick-1");\n#   brick_1.addEventListener("click", (e) => {\n#     const provider = document.createElement("illustrations.get-illustration");\n#     const promise = Promise.resolve(\n#       provider.resolve({ category: "feedback", name: "fail" })\n#     );\n#     promise.then((r) => {\n#       window.open(r, "_blank");\n#     });\n#   });\n# <\/script>\n# \n')),(0,i.kt)("h2",{id:"usage-in-pro-code"},"Usage in pro-code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { unwrapProvider } from "@next-core/utils/general";\nimport type { getIllustration as _getIllustration } from "@next-bricks/illustrations/data-providers/get-illustration";\n\n// Use `unwrapProvider` to get the original function of a provider\nconst getIllustration = unwrapProvider<typeof _getIllustration>(\n  "illustrations.get-illustration"\n);\n\nfunction MyComponent() {\n  const src = getIllustration({ category: "feedback", name: "fail" });\n  return <img src={src} />;\n}\n')),(0,i.kt)("h2",{id:"definition"},"Definition"),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)(l.vy.Provider,{value:["IllustrationProps"]},(0,i.kt)(s.Z,{params:[{name:"props",annotation:{type:"reference",typeName:{type:"identifier",name:"IllustrationProps"}}}],mdxType:"ProviderDocParams"})),(0,i.kt)("h3",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)(o.Z,{mdxType:"MaybeEmptyCode"},(0,i.kt)(l.vy.Provider,{value:["IllustrationProps"]},(0,i.kt)(l.ZP,{annotation:{type:"union",types:[{type:"keyword",value:"string"},{type:"keyword",value:"undefined"}]},mdxType:"GeneralType"})))),(0,i.kt)("h2",{id:"type-references"},"Type references"),(0,i.kt)(u.Z,{types:[{type:"interface",name:"IllustrationProps",body:[{type:"propertySignature",key:{type:"identifier",name:"name"},annotation:{type:"keyword",value:"string"},computed:!1},{type:"propertySignature",key:{type:"identifier",name:"category"},annotation:{type:"keyword",value:"string"},optional:!0,computed:!1},{type:"propertySignature",key:{type:"identifier",name:"theme"},annotation:{type:"reference",typeName:{type:"identifier",name:"SiteTheme"}},optional:!0,computed:!1}]}],mdxType:"BrickDocTypes"}))}v.isMDXComponent=!0}}]);